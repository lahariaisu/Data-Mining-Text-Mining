*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:14:22
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:14:12
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.TreeMETA;
15227  run;
 
NOTE: There were 79 observations read from the data set EMWS3.TREE_VARIABLESET.
NOTE: The data set WORK.TREEMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.TreeMETA label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREEMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster4_TRAIN EMWS3.TextCluster4_TRAIN
EMWS3.TextCluster4_TRAIN EMWS3.TextCluster4_TRAIN EMWS3 TextCluster4_TRAIN
EMWS3.TextCluster4_TRAIN EMWS3.TextCluster4_TRAIN
EMWS3.TextCluster4_TRAIN EMWS3.TextCluster4_TRAIN EMWS3 TextCluster4_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15969  *------------------------------------------------------------*;
15970  * Tree: Generation of macros and macro variables;
15971  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15972  *------------------------------------------------------------*;
 
15973  %let EMEXCEPTIONSTRING=;
15974  *------------------------------------------------------------*;
15975  * TRAIN: Tree;
15976  *------------------------------------------------------------*;
15977  %let EM_ACTION = TRAIN;
15978  %let syscc = 0;
15979  %macro main;
15980
15981    %if %upcase(&EM_ACTION) = CREATE %then %do;
15982      filename temp catalog 'sashelp.emmodl.tree_create.source';
15983      %include temp;
15984      filename temp;
15985
15986      %em_tree_create;
15987    %end;
15988
15989     %else
15990     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15991
15992         filename temp catalog 'sashelp.emmodl.tree_train.source';
15993         %include temp;
15994         filename temp;
15995         %em_tree_train;
15996     %end;
15997
15998    %else
15999    %if %upcase(&EM_ACTION) = SCORE %then %do;
16000      filename temp catalog 'sashelp.emmodl.tree_score.source';
16001      %include temp;
16002      filename temp;
16003
16004      %em_tree_score;
16005
16006    %end;
16007
16008    %else
16009    %if %upcase(&EM_ACTION) = REPORT %then %do;
16010
16011         filename temp catalog 'sashelp.emmodl.tree_report.source';
16012         %include temp;
16013         filename temp;
16014
16015         %em_tree_report;
16016     %end;
16017
16018    %else
16019    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16020
16021         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16022         %include temp;
16023         filename temp;
16024         %EM_TREE_OPENTREEVIEWER;
16025
16026     %end;
16027
16028    %else
16029    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16030
16031         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16032         %include temp;
16033         filename temp;
16034         %EM_TREE_CLOSETREEVIEWER;
16035
16036     %end;
16037
16038
16039     %doendm:
16040  %mend main;
16041
16042  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16044 +%macro em_tree_train;
16046 +   %if &EM_IMPORT_DATA eq %then %do;
16047 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16048 +       %put &em_codebar;
16049 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16050 +       %put &errormsg;
16051 +       %put &em_codebar;
16052 +       %goto doendm;
16053 +   %end;
16054 +   %else
16055 +       %let EMEXCEPTIONSTRING =;
16057 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16058 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16059 +        %put &em_codebar;
16060 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16061 +        %put &errormsg;
16062 +        %put &em_codebar;
16063 +        %goto doendm;
16064 +   %end;
16066 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16067 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16068 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16069 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16070 +        %put &em_codebar;
16071 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16072 +        %put &errormsg;
16073 +        %put &em_codebar;
16074 +        %goto doendm;
16075 +   %end;
16077 +   /* Initialize property macro variables */
16078 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16079 +   %include temp;
16080 +   filename temp;
16082 +   %EM_SetProperties;
16084 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16085 +   %EM_GETNAME(key=EMTREE, type=DATA);
16086 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16087 +     /* if import eq Y and no importtable defined, throw an exception */
16088 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16089 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16090 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16091 +         %put &em_codebar;
16092 +         %put &errmsg;
16093 +         %put &em_codebar;
16094 +         %goto doendm;
16095 +      %end;
16096 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16097 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16098 +         %put &em_codebar;
16099 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16100 +         %put &errormsg;
16101 +         %put &em_codebar;
16102 +         %goto doendm;
16103 +      %end;
16104 +      %else %do;
16105 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16106 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16107 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16108 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16109 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16110 +         %let dsid = %sysfunc(close(&dsid));
16111 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16112 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16113 +            %put &em_codebar;
16114 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16115 +            %put &errormsg;
16116 +            %put &em_codebar;
16117 +            %goto doendm;
16118 +         %end;
16119 +      %end;
16120 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16121 +         proc delete data=&EM_USER_EMTREE;
16122 +         run;
16123 +      %end;
16124 +   %end;
16125 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16126 +      proc delete data=&EM_USER_EMTREE;
16127 +      run;
16128 +   %end;
16130 +   /* load tree macros */
16131 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16132 +   %include temp;
16133 +   filename temp;
16135 +   /* data sets */
16136 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16137 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16138 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16140 +   /* files */
16141 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16143 +   /* check actual num of target levels */
16144 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16145 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16146 +                              nLevel=_nTargetLevel );
16147 +      %if &_nTargetLevel  > 2 %then %do;
16148 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16149 +        %put &em_codebar;
16150 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16151 +        %put &errormsg;
16152 +        %put &em_codebar;
16153 +        %goto doendm;
16154 +      %end;
16155 +   %end;
16157 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16158 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16159 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16160 +        %let costflag=0;
16161 +        data _null_;
16162 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16163 +          if eof then call symput("costflag", _N_);
16164 +        run;
16165 +        %if &costflag gt 0 %then %do;
16166 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16167 +          %put &em_codebar;
16168 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16169 +          %put &errormsg;
16170 +          %put &em_codebar;
16171 +          %goto doendm;
16172 +       %end;
16173 +     %end;
16174 +   %end;
16176 +   /* determine if multiple targets will be processed */
16177 +   %let em_tree_multipleTargets=N;
16178 +   %let em_tree_numTarget = 1;
16179 +   %let em_tree_targetVars=;
16181 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16182 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16183 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16184 +         %let em_tree_multipleTargets=N;
16185 +      %end;
16186 +      %else %do;
16187 +         /* create macro array of targets  */
16188 +         data _null_;
16189 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16190 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16191 +           if eof then
16192 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16193 +        run;
16195 +        %if &em_tree_numTarget gt 1 %then %do;
16196 +           %let em_tree_multipleTargets=Y;
16197 +        %end;
16198 +      %end;
16199 +   %end;
16201 +   /* create view of only necessary variable for performance reasons */
16202 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16203 +   data &tempData / view=&tempData;
16204 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16205 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16206 +       %EM_TARGET
16207 +     %end;
16208 +     %else %do;
16209 +       %if &em_tree_numTarget ne 0 %then %do;
16210 +         %do i=1 %to &em_tree_numTarget;
16211 +            &&em_tree_targetVars&i
16212 +         %end;
16213 +       %end;
16214 +     %end;
16215 +     );
16216 +   run;
16218 +   /* run Tree procedure */
16219 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16221 +   /* Check return code and throw exception if error is detected */
16222 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16223 +   %if &syserr %then %do;
16224 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16225 +     %goto doendm;
16226 +   %end;
16228 +   /* add decision score code if multiple targets are processed */
16229 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16230 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16231 +   %end;
16233 +   /* create outfit dataset if multiple score statements have been executed */
16234 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16236 +   /* create English Rules */
16237 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16238 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16239 +       %em_tree_makeEnglishRules;
16241 +       /* English Rules */
16242 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16244 +     %end;
16245 +   filename x;
16247 +   %doendm:
16248 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16249 +%macro EM_SetProperties;
16251 +   /* train properties */
16252 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16253 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16254 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16255 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16260 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16261 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16262 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16266 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16267 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16268 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16269 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16270 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16274 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16275 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16276 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16281 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16282 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16283 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16289 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16290 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16294 +   /* properties for interactive sample */
16295 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16296 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16297 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16298 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16300 +   /* report properties */
16301 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16302 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16303 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16304 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16309 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16310 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16311 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16313 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16315 +   /* score properties */
16316 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16317 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16319 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16321 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16322 +  %global &nLevel;
16323 +  proc dmdb batch data=&indata
16324 +    classout=_tmp_dmdbout;
16325 +    class &target;
16326 +  run;
16327 +  data _tmp_dmdbout;
16328 +    set _tmp_dmdbout;
16329 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16330 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16331 +  run;
16332 +  data _null_;
16333 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16334 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16335 +    %let dsid = %sysfunc(close(&dsid));
16336 +     call symput("&nLevel", put(&_obs, Best12.));
16337 +  run;
16339 +  proc datasets lib=work nolist;
16340 +     delete _tmp_dmdbout;
16341 +  run;
16342 +  quit;
16343 +%Mend EM_CheckBinaryTargetLevel;
16346 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16348 +  /* determine the number of obs in training data */
16349 +  proc sql;
16350 +    reset noprint;
16351 +    select count(*) into :em_nobs from &indata;
16352 +  quit;
16354 +  /* determine the number of input variables */
16355 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16356 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16358 +  /* retrieve targetEvent from decmeta */
16359 +  %let targetEvent=;
16360 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16361 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16362 +      data _null_;
16363 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16364 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16365 +      run;
16366 +    %end;
16367 +  %end;
16369 +  /* create targetTable if multipleTar eq Y */
16370 +  data temptarget;
16371 +    set &EM_DATA_VARIABLESET;
16372 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16373 +  run;
16375 + /* data sets */
16376 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16377 + %EM_GETNAME(key=EMTREE,        type=DATA);
16378 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16379 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16380 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16381 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16382 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16383 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16384 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16385 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16387 + /* files */
16388 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16389 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16391 + /* turn on pmml if requested */
16392 + %let nnpmml=0;
16393 + %if %symexist(EM_PMML) %then %do;
16394 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16395 +       %let nnpmml=1;
16397 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16398 +   %end;
16399 +%end;
16401 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16403 +%if &nnpmml or &numClassTarget %then %do;
16405 +    /* create dmdb needed for pmml generation */
16406 +    %let tree_maxlevel = 512;
16407 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16408 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16409 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16410 +      %end;
16411 +    %end;
16412 +    %if &tree_maxlevel gt 0 %then %do;
16413 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16414 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16415 +    %end;
16417 +    %let targetOrderString =;
16418 +    %let targetString = ;
16419 +    data _null_;
16420 +       length orderString nameString $10000;
16421 +       retain orderString nameString;
16422 +       set &em_data_variableset end=eof;
16423 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16424 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16425 +       %end;
16426 +       %else %do;
16427 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16428 +       %end;          select(order);
16429 +         when('')        order ='DESC';
16430 +         when('FMTASC')  order='ASCFMT';
16431 +         when('FMTDESC') order='DESFMT';
16432 +         otherwise;
16433 +       end;
16434 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16435 +       nameString = trim(nameString)!!' '!!trim(NAME);
16437 +       if eof then do;
16438 +          call symput('targetOrderString', trim(orderString));
16439 +          call symput('targetString', trim(nameString));
16440 +       end;
16441 +    run;
16443 +    %let arborkluge= "work._treeDMDB";
16445 +    proc dmdb batch data=&indata
16446 +    %if &nnpmml %then %do;
16447 +        PMML
16448 +    %end;
16449 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16451 +      %if &nnpmml %then %do;
16452 +           %if "%EM_ID" ne "" %then %do;
16453 +             id %EM_ID;
16454 +           %end;
16455 +           %if &EM_NUM_CLASS gt 0 %then %do;
16456 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16457 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16458 +                  &targetOrderString;
16459 +           %end;
16460 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16461 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16462 +           %end;
16463 +           target &targetString %EM_INTERVAL_TARGET;
16464 +           %if "%EM_FREQ" ne "" %then %do;
16465 +             freq %EM_FREQ;
16466 +           %end;
16467 +      %end;
16468 +      %else %do;
16469 +         class  &targetOrderString;
16470 +         target &targetString %EM_INTERVAL_TARGET;
16471 +      %end;
16472 +    run;
16473 +    quit;
16475 +    proc datasets lib=work nolist;
16476 +       delete classout varout;
16477 +    run;
16478 +    quit;
16480 + %end;
16483 + /* run Arbor procedure */
16484 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16485 +  proc arbor data=&INDATA
16487 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16488 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16489 +  %end;
16491 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16492 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16493 +  %end;
16495 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16496 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16497 +  %end;
16499 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16500 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16501 +  %end;
16503 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16504 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16505 +  %end;
16507 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16508 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16509 +  %end;
16510 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16511 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16512 +  %end;
16513 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16514 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16515 +  %end;
16517 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16518 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16519 +      alpha = &EM_PROPERTY_SIGLEVEL
16520 +    %end;
16521 +  %end;
16523 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16524 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16525 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16526 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16527 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16529 +        padjust =
16530 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16531 +          &chaid
16532 +        %end;
16533 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16534 +          DEPTH
16535 +        %end;
16536 +      %end;
16537 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16538 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16539 +         pvars = &num_inputs
16540 +      %end;
16541 +    %end;
16542 +  %end;
16543 +  %else %do;
16544 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16545 +         padjust = NONE
16546 +      %end;
16547 +  %end;
16549 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16550 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16551 +    Maxrules = &num_nrules
16552 +  %end;
16554 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16555 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16556 +    Maxsurrs = &num_nsurrs
16557 +  %end;
16559 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16560 +     Missing=&EM_PROPERTY_MISSINGVALUE
16561 +  %end;
16563 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16564 +     USEVARONCE
16565 +  %end;
16567 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16568 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16569 +  %end;
16572 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16573 +    event = "&targetEvent"
16574 +  %end;
16576 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16577 +     DECSEARCH
16578 +  %end;
16580 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16581 +     PRIORSSEARCH
16582 +  %end;
16584 +  %if &arbor_1 ne %then %do;
16585 +    &arbor_1
16586 +  %end;
16588 +  %if &em_arbor ne %then %do;
16589 +     &em_arbor
16590 +  %end;
16591 +  ;
16592 + %end;
16593 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16594 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16595 +       Performance &EM_PROPERTY_PERFORMANCE
16596 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16597 +         nodesize=&EM_PROPERTY_NODESAMPLE
16598 +       %end;
16599 +       ;
16600 +       interact;
16601 + %end;
16602 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16603 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16604 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16605 +    %put &em_codebar;
16606 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16607 +    %put &errormsg;
16608 +    %put &em_codebar;
16609 +    %goto doendm;
16610 +   %end;
16611 +   %else %do;
16612 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16613 +       Performance &EM_PROPERTY_PERFORMANCE
16614 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16615 +         nodesize=&EM_PROPERTY_NODESAMPLE
16616 +       %end;
16617 +       ;
16618 +       interact;
16619 +   %end;
16620 + %end;
16622 + %else %do;
16623 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16624 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16625 +    %put &em_codebar;
16626 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16627 +    %put &errormsg;
16628 +    %put &em_codebar;
16629 +    %goto doendm;
16630 +   %end;
16631 +   %else %do;
16632 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16633 +       Performance &EM_PROPERTY_PERFORMANCE
16634 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16635 +         nodesize=&EM_PROPERTY_NODESAMPLE
16636 +       %end;
16637 +       ;
16638 +        interact;
16639 +   %end;
16640 + %end;
16642 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16643 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16644 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16645 +    %end;
16647 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16648 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16649 +    %end;
16651 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16652 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16653 +    %end;
16655 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16656 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16657 +    %end;
16659 +    %if "%EM_FREQ" ne "" %then %do;
16660 +       freq %EM_FREQ;
16661 +    %end;
16663 +    %if "&multipleTar" eq "Y" %then %do;
16664 +       /* cycle through all target vars in variableset */
16665 +       %let tdsid = %sysfunc(open(temptarget));
16666 +       %if &tdsid %then %do;
16667 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16668 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16669 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16670 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16671 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16672 +             target &var / level = &lvl
16673 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16674 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16675 +             %end;
16676 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16677 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16678 +             %end;
16679 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16680 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16681 +             %end;
16682 +          %end;
16683 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16684 +       %end;
16685 +       useTarget variable = %EM_TARGET;
16686 +    %end;
16687 +    %else %do;
16688 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16689 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16690 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16691 +      %end;
16692 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16693 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16694 +      %end;
16695 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16696 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16697 +      %end;
16698 +    %end;
16700 +    %if "&multipleTar" eq "N" %then %do;
16701 +      &EM_DEC_STATEMENT;
16702 +    %end;
16704 +    Performance &EM_PROPERTY_PERFORMANCE
16705 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16706 +      nodesize=&EM_PROPERTY_NODESAMPLE
16707 +    %end;
16708 +    ;
16710 +    %if "&intFlag" eq "Y" %then %do;
16711 +       INTERACT Largest;
16712 +       Train maxnewdepth=0;
16713 +    %end;
16715 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16716 +         Assess
16717 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16718 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16719 +              %put &em_codebar;
16720 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16721 +              %put &errormsg;
16722 +              %put &em_codebar;
16723 +            %end;
16724 +            %else %do;
16725 +               Validata=&EM_IMPORT_VALIDATE
16726 +            %end;
16727 +         %end;
16728 +         %else %do;
16729 +           NoValidata
16730 +         %end;
16731 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16732 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16733 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16734 +               %if &dsid %then %do;
16735 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16736 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16737 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16738 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16739 +                   %else %do;
16740 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16741 +                      %else %let measure= MISC;
16742 +                   %end;
16743 +                 %end;
16744 +               %end;
16745 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16746 +            %end;
16747 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16748 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16749 +                 %let measure=ASE;
16750 +              %end;
16751 +              %else %do;
16752 +                 %let measure=MISC;
16753 +              %end;
16754 +            %end;
16755 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16756 +              %let measure=ASE;
16757 +            %end;
16758 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16759 +               %let measure = LIFT;
16760 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16761 +               %if &dsid %then %do;
16762 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16763 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16764 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16765 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16766 +                 %end;
16767 +               %end;
16768 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16769 +            %end;
16770 +            measure=&measure
16771 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16772 +               event = "&targetEvent"
16773 +            %end;
16774 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16775 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16776 +            %end;
16777 +         %end;
16778 +         %if "&multipleTar" eq "N" %then %do;
16779 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16780 +               CV
16781 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16782 +                 CVNITer = &EM_PROPERTY_CVNITER
16783 +               %end;
16784 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16785 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16786 +               %end;
16787 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16788 +                 CVSeed = &EM_PROPERTY_CVSEED
16789 +               %end;
16790 +            %end;
16791 +         %end;
16792 +       %end;
16793 +      ;
16795 +      %if "&intFlag" ne "Y" %then %do;
16796 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16797 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16798 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16799 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16801 +          SUBTREE &subtree
16802 +          %if "&subtree" eq "NLEAVES" %then %do;
16803 +            =&EM_PROPERTY_NSUBTREE
16804 +          %end;
16805 +          ;
16806 +        %end;
16808 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16809 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16810 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16811 +          %end;
16812 +       %end;
16813 +      %end;
16814 + %end;
16817 + MakeMacro nleaves = nleaves;
16818 + save
16819 + %if "&EM_USER_EMTREE" ne "" %then %do;
16820 +   MODEL=&EM_USER_EMTREE
16821 + %end;
16822 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16823 +   SEQUENCE=&EM_USER_OUTSEQ
16824 + %end;
16825 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16826 +   IMPORTANCE=&EM_USER_OUTIMPORT
16827 + %end;
16828 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16829 +   NODESTAT=&EM_USER_OUTNODES
16830 + %end;
16831 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16832 +   SUMMARY=&EM_USER_OUTSUMMARY
16833 + %end;
16834 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16835 +   STATSBYNODE=&EM_USER_OUTSTATS
16836 + %end;
16837 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16838 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16839 + %end;
16840 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16841 +   Pathlistnonmissing=&EM_USER_OUTPATH
16842 + %end;
16843 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16844 +   RULES = &EM_USER_OUTRULES
16845 + %end;
16846 + ;
16848 + %if "&intFlag" ne "Y" %then %do;
16850 +   %let lookupString = ;
16851 +   %if ^%symexist(EM_OPTION) %then
16852 +      %let EM_OPTION=;
16854 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16855 +      %let lookupString = LOOKUP=SELECT;
16856 +   %end;
16858 +   %let codetext=;
16859 +   %let norescodetxt=;
16861 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16862 +     %let codetext=&codetext DUMMY;
16863 +     %let norescodetxt=&norescodetxt DUMMY;
16864 +   %end;
16865 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16866 +     %let codetext=&codetext NOLEAFID;
16867 +     %let norescodetxt=&norescodetxt NOLEAFID;
16868 +   %end;
16869 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16870 +     %let norescodetxt=&norescodetxt NOPRED;
16871 +   %end;
16873 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16874 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16876 +   %if &nnpmml %then %do;
16877 +     code pmml;
16878 +   %end;
16880 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16881 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16882 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16883 +   %end;
16884 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16885 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16886 +   %end;
16887 + %end;
16889 + run;
16890 + quit;
16892 + /*%em_checkerror(); */
16893 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16894 +   /* Delete DMDB catalog */
16895 +   proc datasets lib=work nolist;
16896 +       delete _treeDMDB / mt=cat;
16897 +  run;
16898 +  %end;
16900 + %if &nnpmml %then %do;
16901 +    ods pmml close;
16902 + %end;
16904 +  %doendm:
16906 +%mend em_tree_runTreeProcedure;
16908 +%macro em_tree_createFitStats( multipleTar= );
16911 +  /* create targetTable is multipleTar eq Y */
16912 +  data temptarget;
16913 +    set &EM_DATA_VARIABLESET;
16914 +    where ROLE="TARGET";
16915 +  run;
16917 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16918 +   data &EM_USER_EMOUTFIT;
16919 +     length target $32;
16920 +     merge work.fit_train
16921 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16922 +       work.fit_valid
16923 +     %end;
16924 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16925 +       work.fit_test
16926 +     %end;
16927 +     ;
16928 +     %if "&multipleTar" eq "N" %then %do;
16929 +       target="%EM_TARGET";
16930 +     %end;
16931 +     %else %do;
16932 +       target = _TARGET_;
16933 +     %end;
16934 +     drop _NW_ _SUMW_
16935 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16936 +        _VSUMW_
16937 +     %end;
16938 +     ;
16939 +   run;
16941 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16942 +     proc datasets library=work nolist;
16943 +       delete fit_valid;
16944 +     run;
16945 +   %end;
16946 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16947 +     proc datasets library=work nolist;
16948 +       delete fit_test;
16949 +     run;
16950 +   %end;
16952 +%mend em_tree_createFitStats;
16955 +%macro em_tree_makeEnglishRules;
16957 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16958 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16960 +  /* verify that necessary tables exist and if not, skip processing */
16961 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16962 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16963 +    %goto doendm;
16964 +  %end;
16965 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16966 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16967 +    %goto doendm;
16968 +  %end;
16970 +  /* determine length of variable in outpath dataset */
16971 +  %let vlength= ;
16972 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16973 +  %if &dsid ne %then %do;
16974 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16975 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16976 +  %end;
16977 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16979 +  data tempoutpath;
16980 +    length varname $&vlength;
16981 +    retain varname;
16982 +    set &EM_USER_OUTPATH;
16984 +    if ^missing(variable) then varname=variable;
16985 +    else if ^missing(var_name) then varname=var_name;
16986 +    output;
16987 +  run;
16989 +  /* create an array of generated predicted variable names */
16990 +  %let tree_pred_vars = ;
16991 +  %let tree_pred_label = ;
16992 +  %let numpred= 0;
16993 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16995 +    data _null_;
16996 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16997 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16998 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
16999 +     if eof then
17000 +       call symput('numpred', strip(put(_N_, BEST.)));
17001 +    run;
17002 +  %end;
17004 +  /* determine if NPRIORS exists in outnodes  */
17005 +  %local nprior_flag;
17006 +  data _null_;
17007 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17008 +    if eof then do;
17009 +      call symput('nprior_flag', strip(put(npriors, best.)));
17010 +    end;
17011 +  run;
17013 +  proc sort data=tempoutpath; by node; run;
17014 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17016 +  data tempoutpath;
17017 +    merge tempoutpath(in=_a) outnodes(keep= node
17018 +    %if "&nprior_flag" ne "." %then %do;
17019 +      NPRIORS
17020 +    %end;
17021 +    %else %do;
17022 +      N
17023 +    %end;
17024 +    %if &numpred gt 0 %then %do;
17025 +      %do i=1 %to &numpred;
17026 +        &&tree_pred_vars&i
17027 +      %end;
17028 +    %end;
17029 +    );
17030 +    by node;
17031 +    if _a;
17032 +  run;
17034 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17036 +  data _null_;
17037 +    file x;
17038 +    set tempoutpath;
17039 +    by node descending varname;
17040 +    retain origvar oldnode string;
17041 +    length origvar $32 oldnode 8 string $5000;
17043 +    if _N_ = 1 then do;
17044 +      origvar = varname;
17045 +      oldnode = node;
17046 +    end;
17048 +    if first.node then do;
17049 +       put "&EM_CODEBAR";
17050 +       put " Node = " node;
17051 +       put "&EM_CODEBAR";
17052 +    end;
17054 +      if first.varname then do;
17055 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17056 +            if MISSING(CHARACTER_VALUE) then do;
17057 +             if NUMERIC_VALUE ne .  then do;
17058 +              if ^first.node then do;
17059 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17060 +              end;
17061 +              else do;
17062 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17063 +              end;
17064 +             end;
17065 +            end;
17066 +            else do;
17067 +              if ^first.node then do;
17068 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17069 +              end;
17070 +              else do;
17071 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17072 +              end;
17073 +             end;
17074 +         end;
17075 +         else if RELATION in ("=") then do;
17076 +            if ^first.node then do;
17077 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17078 +            end;
17079 +            else do;
17080 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17081 +            end;
17082 +         end;
17083 +         else if RELATION in ("ISMISSING") then do;
17084 +            if ^first.node then do;
17085 +              string = " AND "|| strip(varname) || " equals Missing";
17086 +            end;
17087 +            else do;
17088 +              string = "if "|| strip(varname) ||" equals Missing";
17089 +            end;
17090 +         end;
17091 +         else if RELATION in ("ISNOTMISSING") then do;
17092 +            if ^first.node then do;
17093 +              string = " AND "|| strip(varname) || " equals All Values";
17094 +            end;
17095 +            else do;
17096 +              string = "if "|| strip(varname) ||" equals All Values";
17097 +            end;
17098 +         end;
17099 +         if ^missing(varname) then origvar = varname;
17100 +         oldnode=node;
17102 +      end;
17103 +      else do;
17104 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17105 +          if MISSING(CHARACTER_VALUE) then do;
17106 +           if  NUMERIC_VALUE ne .  then do;
17107 +            if ^MISSING(string) then
17108 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17109 +            else
17110 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17111 +           end;
17112 +          end;
17113 +          else do;
17114 +            if ^MISSING(string) then
17115 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17116 +            else
17117 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17118 +          end;
17120 +         end;
17121 +         else if RELATION in ("=") then do;
17122 +           string = strip(string)||", "||strip(character_value);
17123 +         end;
17124 +         else if RELATION in ("ISMISSING") then do;
17126 +         end;
17127 +         if ^missing(varname) then origvar = varname;
17128 +         oldnode=node;
17129 +      end;
17130 +      if last.varname then do;
17131 +         if RELATION in ("ISMISSING") then do;
17132 +           if ^first.varname then do;
17133 +             string = strip(string) || " or MISSING";
17134 +           end;
17135 +         end;
17136 +         put string;
17137 +         if ^missing(varname) then origvar = varname;
17138 +         oldnode=node;
17139 +      end;
17141 +      if last.node then do;
17142 +         put "then ";
17143 +         put " Tree Node Identifier   = " node;
17145 +         %if "&nprior_flag" ne "." %then %do;
17146 +           put " Number of Observations = " NPRIORS;
17147 +         %end;
17148 +         %else %do;
17149 +           put " Number of Observations = " N;
17150 +         %end;
17152 +         %if &numpred gt 0 %then %do;
17153 +           %do i=1 %to &numpred;
17154 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17155 +           %end;
17156 +         %end;
17158 +         put " ";
17159 +         if ^missing(varname) then origvar = varname;
17160 +         oldnode=node;
17161 +      end;
17163 +  run;
17165 +  proc datasets lib=work nolist;
17166 +    delete tempoutpath outnodes;
17167 +  run;
17169 +  %doendm:
17170 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER4_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER4_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595436 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 651624448 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1260792 bytes of work memory.
NOTE: The subtree sequence contains 15 subtrees. The largest has 29 nodes and 15 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
NOTE: Created macro variable NLEAVES equal to 9.
NOTE: The data set EMWS3.TREE_OUTIMPORT has 68 observations and 6 variables.
NOTE: The data set EMWS3.TREE_EMTREE has 2169 observations and 4 variables.
NOTE: The data set EMWS3.TREE_OUTNODES has 17 observations and 54 variables.
NOTE: The data set EMWS3.TREE_OUTPATH has 95 observations and 7 variables.
NOTE: The data set EMWS3.TREE_OUTRULES has 273 observations and 6 variables.
NOTE: The data set EMWS3.TREE_OUTSEQ has 15 observations and 20 variables.
NOTE: The data set EMWS3.TREE_OUTSTATS has 459 observations and 5 variables.
NOTE: The data set EMWS3.TREE_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE_OUTTOPOLOGY has 17 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER4_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.15 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER4_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.41 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 95 observations read from the data set EMWS3.TREE_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 95 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 95 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE_OUTNODES.
NOTE: The data set WORK.OUTNODES has 17 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 17 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 95 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 95 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:14,
      Create Time=23Nov2023:22:14:14
 
NOTE: 206 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 95 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
17172
17173  *------------------------------------------------------------*;
17174  * End TRAIN: Tree;
17175  *------------------------------------------------------------*;
 
17176  *------------------------------------------------------------*;
17177  * Close any missing semi colons;
17178  *------------------------------------------------------------*;
17179  ;
17180  ;
17181  ;
17182  ;
17183  quit;
17184  *------------------------------------------------------------*;
17185  * Close any unbalanced quotes;
17186  *------------------------------------------------------------*;
17187  /*; *"; *'; */
17188  ;
17189  run;
17190  quit;
17191  /* Reset EM Options */
17192  options formchar="|----|+|---+=|-/\<>*";
17193  options nocenter ls=256 ps=10000;
17194  goptions reset=all device=GIF NODISPLAY;
 
17195  proc sort data=WORK.EM_USER_REPORT;
17196  by ID VIEW;
17197  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:14:15
*------------------------------------------------------------*
17299  %let EMEXCEPTIONSTRING=;
17300  *------------------------------------------------------------*;
17301  * SCORE: Tree;
17302  *------------------------------------------------------------*;
17303  %let EM_ACTION = SCORE;
17304  %let syscc = 0;
17305  %macro main;
17306
17307    %if %upcase(&EM_ACTION) = CREATE %then %do;
17308      filename temp catalog 'sashelp.emmodl.tree_create.source';
17309      %include temp;
17310      filename temp;
17311
17312      %em_tree_create;
17313    %end;
17314
17315     %else
17316     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17317
17318         filename temp catalog 'sashelp.emmodl.tree_train.source';
17319         %include temp;
17320         filename temp;
17321         %em_tree_train;
17322     %end;
17323
17324    %else
17325    %if %upcase(&EM_ACTION) = SCORE %then %do;
17326      filename temp catalog 'sashelp.emmodl.tree_score.source';
17327      %include temp;
17328      filename temp;
17329
17330      %em_tree_score;
17331
17332    %end;
17333
17334    %else
17335    %if %upcase(&EM_ACTION) = REPORT %then %do;
17336
17337         filename temp catalog 'sashelp.emmodl.tree_report.source';
17338         %include temp;
17339         filename temp;
17340
17341         %em_tree_report;
17342     %end;
17343
17344    %else
17345    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17346
17347         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17348         %include temp;
17349         filename temp;
17350         %EM_TREE_OPENTREEVIEWER;
17351
17352     %end;
17353
17354    %else
17355    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17356
17357         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17358         %include temp;
17359         filename temp;
17360         %EM_TREE_CLOSETREEVIEWER;
17361
17362     %end;
17363
17364
17365     %doendm:
17366  %mend main;
17367
17368  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17370 +%macro em_tree_score;
17372 +   /* determine if multiple targets will be processed */
17373 +   %let em_tree_multipleTargets=N;
17374 +   %let em_tree_numTarget=1;
17375 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17376 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17377 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17378 +         %let em_tree_multipleTargets=N;
17379 +      %end;
17380 +      %else %do;
17381 +         /* create macro array of targets  */
17382 +         data _null_;
17383 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17384 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17385 +           if eof then
17386 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17387 +        run;
17389 +        %if &em_tree_numTarget gt 1 %then %do;
17390 +           %let em_tree_multipleTargets=Y;
17391 +        %end;
17392 +      %end;
17393 +   %end;
17395 +   /* build flow and publish scoring code */
17396 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17397 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17399 +   filename treeflow "&EM_USER_TREEFLOW";
17400 +   filename treepub "&EM_USER_TREEPUBLISH";
17402 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17403 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17405 +   %em_copyfile(infref=treeflow, outfref=flowref);
17406 +   %em_copyfile(infref=treepub, outfref=pubref);
17408 +   filename treeflow;
17409 +   filename treepub;
17411 +   /* if priors are used, add code to generate unadjusted residuals in export */
17412 +   %let useAdjPriors = N;
17413 +   data _null_;
17414 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17415 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17416 +   run;
17417 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17418 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17419 +      %include temp;
17420 +      filename temp;
17422 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17423 +      filename adjref "&EM_USER_adjResidualCode";
17424 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17426 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17428 +      filename adjref;
17429 +   %end;
17431 +   /* LEAF */
17432 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17433 +      data _null_;
17434 +        file flowref mod;
17435 +        put 'drop _LEAF_;';
17436 +      run;
17438 +      data _null_;
17439 +        file pubref mod;
17440 +        put 'drop _LEAF_;';
17441 +      run;
17443 +   %end;
17445 +   filename flowref;
17446 +   filename pubref;
17448 +   /* em_metachange code */
17449 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17450 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17451 +   %end;
17453 +   /* variable selection based on importance stat    */
17454 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17455 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17456 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17457 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17458 +     %let obs = %sysfunc(fetch(&dsid));
17459 +     %do %while(&obs=0);
17460 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17461 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17462 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17463 +       %let obs = %sysfunc(fetch(&dsid));
17464 +     %end;
17465 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17466 +   %end;
17468 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17469 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17470 +    %let tree_pred_vars = ;
17471 +    %let tree_pred_lvl =;
17472 +    %let numpred= 0;
17474 +    data _null_;
17475 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17476 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17477 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17478 +     if eof then
17479 +       call symput('numpred', strip(put(_N_, BEST.)));
17480 +    run;
17481 +   %end;
17483 +   %if &numpred ne 0 %then %do;
17484 +    %do i=1 %to &numpred;
17485 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17486 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17487 +    %end;
17488 +   %end;
17490 +   /* determine if multiple targets will be processed */
17491 +   %let em_tree_multipleTargets=N;
17492 +   %let em_tree_numTarget=1;
17493 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17494 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17495 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17496 +         %let em_tree_multipleTargets=N;
17497 +      %end;
17498 +      %else %do;
17499 +        data _null_;
17500 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17501 +          if eof then
17502 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17503 +        run;
17505 +        %if &em_tree_numTarget gt 1 %then %do;
17506 +           %let em_tree_multipleTargets=Y;
17507 +        %end;
17508 +     %end;
17509 +   %end;
17511 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17512 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17514 +      /* variable importance */
17515 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17516 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17518 +         %let validexist=0;
17519 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17520 +           %let validexist=1;
17521 +         %end;
17523 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17524 +         /* and the columns may not be generated                                                                                 */
17525 +         %let em_tree_cvexists=;
17526 +         %let em_tree_surrexists=.;
17527 +         data _null_;
17528 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17529 +            if eof then do ;
17530 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17531 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17532 +            end;
17533 +         run;
17535 +         data &EM_USER_OUTIMPORT;
17536 +            set &EM_USER_OUTIMPORT;
17538 +            /* format columns based on Precison value specified */
17539 +            format importance 15.&EM_PROPERTY_PRECISION
17540 +                 %if &validexist %then %do;
17541 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17542 +                 %end;
17543 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17544 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17545 +                 %end;
17546 +            ;
17547 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17548 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17549 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17550 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17551 +                 %if "&em_tree_surrexists" ne "" %then %do;
17552 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17553 +                 %end;
17554 +                 %if &validexist %then %do;
17555 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17556 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17557 +                 %end;
17558 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17559 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17560 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17561 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17562 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17563 +                 %end;
17564 +            ;
17565 +         run;
17567 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17568 +      %end;
17569 +   %end;
17571 +   %doendm:
17572 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:15,
      Create Time=23Nov2023:22:14:15
 
NOTE: 550 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:15,
      Create Time=23Nov2023:22:14:15
 
NOTE: 470 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=27672,
      Last Modified=23Nov2023:22:14:15,
      Create Time=23Nov2023:22:14:15
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=24099,
      Last Modified=23Nov2023:22:14:15,
      Create Time=23Nov2023:22:14:15
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 69 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 70 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 71 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 71 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 72 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 73 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 73 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 74 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 68 observations read from the data set EMWS3.TREE_OUTIMPORT.
NOTE: The data set EMWS3.TREE_OUTIMPORT has 68 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
17573
17574  *------------------------------------------------------------*;
17575  * End SCORE: Tree;
17576  *------------------------------------------------------------*;
 
17577  proc sort data=WORK.EM_METACHANGE;
17578  by key uname;
17579  run;
 
NOTE: There were 75 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
17580  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\CDELTA_TRAIN.sas";
17581  data _null_;
17582  file x;
17583  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17584  put 'ROLE = "ASSESS";';
17585  put 'end;';
17586  put 'else ';
17587  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17588  put 'ROLE = "ASSESS";';
17589  put 'end;';
17590  put 'else ';
17591  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17592  put 'ROLE = "ASSESS";';
17593  put 'end;';
17594  put 'else ';
17595  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17596  put 'ROLE = "ASSESS";';
17597  put 'end;';
17598  put 'else ';
17599  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17600  put 'ROLE = "ASSESS";';
17601  put 'end;';
17602  put 'else ';
17603  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17604  put 'ROLE = "ASSESS";';
17605  put 'end;';
17606  put 'else ';
17607  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17608  put 'ROLE = "ASSESS";';
17609  put 'end;';
17610  put 'else ';
17611  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17612  put 'ROLE = "ASSESS";';
17613  put 'end;';
17614  put 'else ';
17615  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17616  put 'ROLE = "ASSESS";';
17617  put 'end;';
17618  put 'else ';
17619  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17620  put 'ROLE = "ASSESS";';
17621  put 'end;';
17622  put 'else ';
17623  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17624  put 'ROLE = "ASSESS";';
17625  put 'end;';
17626  put 'else ';
17627  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17628  put 'ROLE = "ASSESS";';
17629  put 'end;';
17630  put 'else ';
17631  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD1" then do;';
17632  put 'ROLE = "REJECTED";';
17633  put 'end;';
17634  put 'else ';
17635  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD11" then do;';
17636  put 'ROLE = "REJECTED";';
17637  put 'end;';
17638  put 'else ';
17639  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD13" then do;';
17640  put 'ROLE = "REJECTED";';
17641  put 'end;';
17642  put 'else ';
17643  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD14" then do;';
17644  put 'ROLE = "REJECTED";';
17645  put 'end;';
17646  put 'else ';
17647  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD15" then do;';
17648  put 'ROLE = "REJECTED";';
17649  put 'end;';
17650  put 'else ';
17651  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD16" then do;';
17652  put 'ROLE = "REJECTED";';
17653  put 'end;';
17654  put 'else ';
17655  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD17" then do;';
17656  put 'ROLE = "REJECTED";';
17657  put 'end;';
17658  put 'else ';
17659  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD18" then do;';
17660  put 'ROLE = "REJECTED";';
17661  put 'end;';
17662  put 'else ';
17663  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD19" then do;';
17664  put 'ROLE = "REJECTED";';
17665  put 'end;';
17666  put 'else ';
17667  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD20" then do;';
17668  put 'ROLE = "REJECTED";';
17669  put 'end;';
17670  put 'else ';
17671  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD21" then do;';
17672  put 'ROLE = "REJECTED";';
17673  put 'end;';
17674  put 'else ';
17675  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD22" then do;';
17676  put 'ROLE = "REJECTED";';
17677  put 'end;';
17678  put 'else ';
17679  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD23" then do;';
17680  put 'ROLE = "REJECTED";';
17681  put 'end;';
17682  put 'else ';
17683  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD24" then do;';
17684  put 'ROLE = "REJECTED";';
17685  put 'end;';
17686  put 'else ';
17687  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD25" then do;';
17688  put 'ROLE = "REJECTED";';
17689  put 'end;';
17690  put 'else ';
17691  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD26" then do;';
17692  put 'ROLE = "REJECTED";';
17693  put 'end;';
17694  put 'else ';
17695  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD27" then do;';
17696  put 'ROLE = "REJECTED";';
17697  put 'end;';
17698  put 'else ';
17699  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD28" then do;';
17700  put 'ROLE = "REJECTED";';
17701  put 'end;';
17702  put 'else ';
17703  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD29" then do;';
17704  put 'ROLE = "REJECTED";';
17705  put 'end;';
17706  put 'else ';
17707  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD3" then do;';
17708  put 'ROLE = "REJECTED";';
17709  put 'end;';
17710  put 'else ';
17711  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD30" then do;';
17712  put 'ROLE = "REJECTED";';
17713  put 'end;';
17714  put 'else ';
17715  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD31" then do;';
17716  put 'ROLE = "REJECTED";';
17717  put 'end;';
17718  put 'else ';
17719  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD32" then do;';
17720  put 'ROLE = "REJECTED";';
17721  put 'end;';
17722  put 'else ';
17723  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD33" then do;';
17724  put 'ROLE = "REJECTED";';
17725  put 'end;';
17726  put 'else ';
17727  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD34" then do;';
17728  put 'ROLE = "REJECTED";';
17729  put 'end;';
17730  put 'else ';
17731  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD35" then do;';
17732  put 'ROLE = "REJECTED";';
17733  put 'end;';
17734  put 'else ';
17735  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD36" then do;';
17736  put 'ROLE = "REJECTED";';
17737  put 'end;';
17738  put 'else ';
17739  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD37" then do;';
17740  put 'ROLE = "REJECTED";';
17741  put 'end;';
17742  put 'else ';
17743  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD38" then do;';
17744  put 'ROLE = "REJECTED";';
17745  put 'end;';
17746  put 'else ';
17747  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD39" then do;';
17748  put 'ROLE = "REJECTED";';
17749  put 'end;';
17750  put 'else ';
17751  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD40" then do;';
17752  put 'ROLE = "REJECTED";';
17753  put 'end;';
17754  put 'else ';
17755  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD41" then do;';
17756  put 'ROLE = "REJECTED";';
17757  put 'end;';
17758  put 'else ';
17759  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD42" then do;';
17760  put 'ROLE = "REJECTED";';
17761  put 'end;';
17762  put 'else ';
17763  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD43" then do;';
17764  put 'ROLE = "REJECTED";';
17765  put 'end;';
17766  put 'else ';
17767  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD44" then do;';
17768  put 'ROLE = "REJECTED";';
17769  put 'end;';
17770  put 'else ';
17771  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD45" then do;';
17772  put 'ROLE = "REJECTED";';
17773  put 'end;';
17774  put 'else ';
17775  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD46" then do;';
17776  put 'ROLE = "REJECTED";';
17777  put 'end;';
17778  put 'else ';
17779  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD47" then do;';
17780  put 'ROLE = "REJECTED";';
17781  put 'end;';
17782  put 'else ';
17783  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD48" then do;';
17784  put 'ROLE = "REJECTED";';
17785  put 'end;';
17786  put 'else ';
17787  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD49" then do;';
17788  put 'ROLE = "REJECTED";';
17789  put 'end;';
17790  put 'else ';
17791  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD50" then do;';
17792  put 'ROLE = "REJECTED";';
17793  put 'end;';
17794  put 'else ';
17795  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD51" then do;';
17796  put 'ROLE = "REJECTED";';
17797  put 'end;';
17798  put 'else ';
17799  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD52" then do;';
17800  put 'ROLE = "REJECTED";';
17801  put 'end;';
17802  put 'else ';
17803  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD53" then do;';
17804  put 'ROLE = "REJECTED";';
17805  put 'end;';
17806  put 'else ';
17807  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD54" then do;';
17808  put 'ROLE = "REJECTED";';
17809  put 'end;';
17810  put 'else ';
17811  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD55" then do;';
17812  put 'ROLE = "REJECTED";';
17813  put 'end;';
17814  put 'else ';
17815  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD56" then do;';
17816  put 'ROLE = "REJECTED";';
17817  put 'end;';
17818  put 'else ';
17819  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD57" then do;';
17820  put 'ROLE = "REJECTED";';
17821  put 'end;';
17822  put 'else ';
17823  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD58" then do;';
17824  put 'ROLE = "REJECTED";';
17825  put 'end;';
17826  put 'else ';
17827  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD59" then do;';
17828  put 'ROLE = "REJECTED";';
17829  put 'end;';
17830  put 'else ';
17831  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD60" then do;';
17832  put 'ROLE = "REJECTED";';
17833  put 'end;';
17834  put 'else ';
17835  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD61" then do;';
17836  put 'ROLE = "REJECTED";';
17837  put 'end;';
17838  put 'else ';
17839  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD62" then do;';
17840  put 'ROLE = "REJECTED";';
17841  put 'end;';
17842  put 'else ';
17843  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD63" then do;';
17844  put 'ROLE = "REJECTED";';
17845  put 'end;';
17846  put 'else ';
17847  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD64" then do;';
17848  put 'ROLE = "REJECTED";';
17849  put 'end;';
17850  put 'else ';
17851  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD65" then do;';
17852  put 'ROLE = "REJECTED";';
17853  put 'end;';
17854  put 'else ';
17855  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD66" then do;';
17856  put 'ROLE = "REJECTED";';
17857  put 'end;';
17858  put 'else ';
17859  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD67" then do;';
17860  put 'ROLE = "REJECTED";';
17861  put 'end;';
17862  put 'else ';
17863  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD68" then do;';
17864  put 'ROLE = "REJECTED";';
17865  put 'end;';
17866  put 'else ';
17867  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD7" then do;';
17868  put 'ROLE = "REJECTED";';
17869  put 'end;';
17870  put 'else ';
17871  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD8" then do;';
17872  put 'ROLE = "REJECTED";';
17873  put 'end;';
17874  put 'else ';
17875  put 'if upcase(NAME) = "TEXTCLUSTER4_SVD9" then do;';
17876  put 'ROLE = "REJECTED";';
17877  put 'end;';
17878  put 'else ';
17879  put 'if upcase(NAME) = "_NODE_" then do;';
17880  put 'ROLE = "SEGMENT";';
17881  put 'LEVEL = "NOMINAL";';
17882  put 'end;';
17883  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:17,
      Create Time=19Nov2023:18:20:33
 
NOTE: 300 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17884  filename x;
NOTE: Fileref X has been deassigned.
 
17885  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas";
17886  *------------------------------------------------------------*;
17887  * Tree: Scoring DATA data;
17888  *------------------------------------------------------------*;
17889  data EMWS3.Tree_TRAIN
17890  / view=EMWS3.Tree_TRAIN
17891  ;
17892  set EMWS3.TextCluster4_TRAIN
17893  ;
17894  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas.
17895 +****************************************************************;
17896 +******             DECISION TREE SCORING CODE             ******;
17897 +****************************************************************;
17898 +
17899 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17900 +LENGTH F_Category  $   22;
17901 +LENGTH I_Category  $   22;
17902 +LENGTH U_Category  $   22;
17903 +LENGTH _WARN_  $    4;
17904 +
17905 +******              LABELS FOR NEW VARIABLES              ******;
17906 +label _NODE_ = 'Node' ;
17907 +label _LEAF_ = 'Leaf' ;
17908 +label P_CategoryHR = 'Predicted: Category=HR' ;
17909 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17910 +label P_CategoryINFORMATION_TECHNOLOGY =
17911 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17912 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17913 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17914 +label P_CategoryBUSINESS_DEVELOPMENT =
17915 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17916 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17917 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17918 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17919 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17920 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17921 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17922 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17923 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17924 +label Q_CategoryINFORMATION_TECHNOLOGY =
17925 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17926 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17927 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17928 +label Q_CategoryBUSINESS_DEVELOPMENT =
17929 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17930 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17931 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17932 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17933 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17934 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17935 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17936 +label V_CategoryHR = 'Validated: Category=HR' ;
17937 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17938 +label V_CategoryINFORMATION_TECHNOLOGY =
17939 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17940 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17941 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17942 +label V_CategoryBUSINESS_DEVELOPMENT =
17943 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17944 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17945 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17946 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17947 +label V_CategorySALES = 'Validated: Category=SALES' ;
17948 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17949 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17950 +label R_CategoryHR = 'Residual: Category=HR' ;
17951 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17952 +label R_CategoryINFORMATION_TECHNOLOGY =
17953 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17954 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17955 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17956 +label R_CategoryBUSINESS_DEVELOPMENT =
17957 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17958 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17959 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17960 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17961 +label R_CategorySALES = 'Residual: Category=SALES' ;
17962 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17963 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17964 +label F_Category = 'From: Category' ;
17965 +label I_Category = 'Into: Category' ;
17966 +label U_Category = 'Unnormalized Into: Category' ;
17967 +label _WARN_ = 'Warnings' ;
17968 +
17969 +
17970 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17971 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17972 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17973 +
17974 +
17975 +_ARBFMT_22 = PUT( Category , $22.);
17976 + %DMNORMCP( _ARBFMT_22, F_Category );
17977 +
17978 +******             ASSIGN OBSERVATION TO NODE             ******;
17979 +IF  NOT MISSING(TextCluster4_SVD4 ) AND
17980 +  TextCluster4_SVD4  <    -0.22159654602699 THEN DO;
17981 +  _NODE_  =                    2;
17982 +  _LEAF_  =                    1;
17983 +  P_CategoryHR  =     0.80701754385964;
17984 +  P_CategoryDESIGNER  =                    0;
17985 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17986 +  P_CategoryTEACHER  =                    0;
17987 +  P_CategoryADVOCATE  =     0.05263157894736;
17988 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
17989 +  P_CategoryHEALTHCARE  =     0.05263157894736;
17990 +  P_CategoryFITNESS  =     0.01754385964912;
17991 +  P_CategoryOTHER  =     0.01754385964912;
17992 +  P_CategorySALES  =     0.01754385964912;
17993 +  P_CategoryCONSULTANT  =     0.01754385964912;
17994 +  P_CategoryDIGITAL_MEDIA  =                    0;
17995 +  Q_CategoryHR  =     0.80701754385964;
17996 +  Q_CategoryDESIGNER  =                    0;
17997 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17998 +  Q_CategoryTEACHER  =                    0;
17999 +  Q_CategoryADVOCATE  =     0.05263157894736;
18000 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18001 +  Q_CategoryHEALTHCARE  =     0.05263157894736;
18002 +  Q_CategoryFITNESS  =     0.01754385964912;
18003 +  Q_CategoryOTHER  =     0.01754385964912;
18004 +  Q_CategorySALES  =     0.01754385964912;
18005 +  Q_CategoryCONSULTANT  =     0.01754385964912;
18006 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18007 +  V_CategoryHR  =     0.71052631578947;
18008 +  V_CategoryDESIGNER  =                    0;
18009 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.05263157894736;
18010 +  V_CategoryTEACHER  =                    0;
18011 +  V_CategoryADVOCATE  =     0.02631578947368;
18012 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18013 +  V_CategoryHEALTHCARE  =     0.07894736842105;
18014 +  V_CategoryFITNESS  =     0.02631578947368;
18015 +  V_CategoryOTHER  =     0.02631578947368;
18016 +  V_CategorySALES  =                    0;
18017 +  V_CategoryCONSULTANT  =     0.05263157894736;
18018 +  V_CategoryDIGITAL_MEDIA  =                    0;
18019 +  I_Category  = 'HR' ;
18020 +  U_Category  = 'HR' ;
18021 +  END;
18022 +ELSE DO;
18023 +  IF  NOT MISSING(TextCluster4_SVD5 ) AND
18024 +    TextCluster4_SVD5  <    -0.25539876415752 THEN DO;
18025 +    _NODE_  =                    6;
18026 +    _LEAF_  =                    2;
18027 +    P_CategoryHR  =                    0;
18028 +    P_CategoryDESIGNER  =                 0.02;
18029 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18030 +    P_CategoryTEACHER  =                 0.74;
18031 +    P_CategoryADVOCATE  =                  0.1;
18032 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18033 +    P_CategoryHEALTHCARE  =                 0.02;
18034 +    P_CategoryFITNESS  =                 0.12;
18035 +    P_CategoryOTHER  =                    0;
18036 +    P_CategorySALES  =                    0;
18037 +    P_CategoryCONSULTANT  =                    0;
18038 +    P_CategoryDIGITAL_MEDIA  =                    0;
18039 +    Q_CategoryHR  =                    0;
18040 +    Q_CategoryDESIGNER  =                 0.02;
18041 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18042 +    Q_CategoryTEACHER  =                 0.74;
18043 +    Q_CategoryADVOCATE  =                  0.1;
18044 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18045 +    Q_CategoryHEALTHCARE  =                 0.02;
18046 +    Q_CategoryFITNESS  =                 0.12;
18047 +    Q_CategoryOTHER  =                    0;
18048 +    Q_CategorySALES  =                    0;
18049 +    Q_CategoryCONSULTANT  =                    0;
18050 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18051 +    V_CategoryHR  =     0.02272727272727;
18052 +    V_CategoryDESIGNER  =     0.04545454545454;
18053 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18054 +    V_CategoryTEACHER  =     0.52272727272727;
18055 +    V_CategoryADVOCATE  =     0.06818181818181;
18056 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18057 +    V_CategoryHEALTHCARE  =     0.04545454545454;
18058 +    V_CategoryFITNESS  =     0.09090909090909;
18059 +    V_CategoryOTHER  =     0.18181818181818;
18060 +    V_CategorySALES  =                    0;
18061 +    V_CategoryCONSULTANT  =     0.02272727272727;
18062 +    V_CategoryDIGITAL_MEDIA  =                    0;
18063 +    I_Category  = 'TEACHER' ;
18064 +    U_Category  = 'TEACHER' ;
18065 +    END;
18066 +  ELSE DO;
18067 +    IF  NOT MISSING(TextCluster4_SVD2 ) AND
18068 +          0.22199140753138 <= TextCluster4_SVD2  THEN DO;
18069 +      _NODE_  =                   13;
18070 +      _LEAF_  =                    9;
18071 +      P_CategoryHR  =                    0;
18072 +      P_CategoryDESIGNER  =              0.03125;
18073 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
18074 +      P_CategoryTEACHER  =                    0;
18075 +      P_CategoryADVOCATE  =     0.02083333333333;
18076 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18077 +      P_CategoryHEALTHCARE  =              0.03125;
18078 +      P_CategoryFITNESS  =                    0;
18079 +      P_CategoryOTHER  =     0.08333333333333;
18080 +      P_CategorySALES  =                    0;
18081 +      P_CategoryCONSULTANT  =              0.21875;
18082 +      P_CategoryDIGITAL_MEDIA  =     0.07291666666666;
18083 +      Q_CategoryHR  =                    0;
18084 +      Q_CategoryDESIGNER  =              0.03125;
18085 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
18086 +      Q_CategoryTEACHER  =                    0;
18087 +      Q_CategoryADVOCATE  =     0.02083333333333;
18088 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18089 +      Q_CategoryHEALTHCARE  =              0.03125;
18090 +      Q_CategoryFITNESS  =                    0;
18091 +      Q_CategoryOTHER  =     0.08333333333333;
18092 +      Q_CategorySALES  =                    0;
18093 +      Q_CategoryCONSULTANT  =              0.21875;
18094 +      Q_CategoryDIGITAL_MEDIA  =     0.07291666666666;
18095 +      V_CategoryHR  =                    0;
18096 +      V_CategoryDESIGNER  =     0.05357142857142;
18097 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.51785714285714;
18098 +      V_CategoryTEACHER  =                    0;
18099 +      V_CategoryADVOCATE  =     0.01785714285714;
18100 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.05357142857142;
18101 +      V_CategoryHEALTHCARE  =     0.01785714285714;
18102 +      V_CategoryFITNESS  =                    0;
18103 +      V_CategoryOTHER  =     0.05357142857142;
18104 +      V_CategorySALES  =     0.01785714285714;
18105 +      V_CategoryCONSULTANT  =     0.16071428571428;
18106 +      V_CategoryDIGITAL_MEDIA  =     0.10714285714285;
18107 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18108 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18109 +      END;
18110 +    ELSE DO;
18111 +      IF  NOT MISSING(TextCluster4_SVD6 ) AND
18112 +        TextCluster4_SVD6  <    -0.15676518608919 THEN DO;
18113 +        IF  NOT MISSING(TextCluster4_SVD4 ) AND
18114 +          TextCluster4_SVD4  <     0.03519855095692 THEN DO;
18115 +          _NODE_  =                   20;
18116 +          _LEAF_  =                    3;
18117 +          P_CategoryHR  =                  0.4;
18118 +          P_CategoryDESIGNER  =                    0;
18119 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18120 +          P_CategoryTEACHER  =                    0;
18121 +          P_CategoryADVOCATE  =                    0;
18122 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18123 +          P_CategoryHEALTHCARE  =                  0.2;
18124 +          P_CategoryFITNESS  =                    0;
18125 +          P_CategoryOTHER  =                    0;
18126 +          P_CategorySALES  =                    0;
18127 +          P_CategoryCONSULTANT  =                  0.2;
18128 +          P_CategoryDIGITAL_MEDIA  =                    0;
18129 +          Q_CategoryHR  =                  0.4;
18130 +          Q_CategoryDESIGNER  =                    0;
18131 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18132 +          Q_CategoryTEACHER  =                    0;
18133 +          Q_CategoryADVOCATE  =                    0;
18134 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18135 +          Q_CategoryHEALTHCARE  =                  0.2;
18136 +          Q_CategoryFITNESS  =                    0;
18137 +          Q_CategoryOTHER  =                    0;
18138 +          Q_CategorySALES  =                    0;
18139 +          Q_CategoryCONSULTANT  =                  0.2;
18140 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18141 +          V_CategoryHR  =                    0;
18142 +          V_CategoryDESIGNER  =                    1;
18143 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18144 +          V_CategoryTEACHER  =                    0;
18145 +          V_CategoryADVOCATE  =                    0;
18146 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18147 +          V_CategoryHEALTHCARE  =                    0;
18148 +          V_CategoryFITNESS  =                    0;
18149 +          V_CategoryOTHER  =                    0;
18150 +          V_CategorySALES  =                    0;
18151 +          V_CategoryCONSULTANT  =                    0;
18152 +          V_CategoryDIGITAL_MEDIA  =                    0;
18153 +          I_Category  = 'HR' ;
18154 +          U_Category  = 'HR' ;
18155 +          END;
18156 +        ELSE DO;
18157 +          IF  NOT MISSING(TextCluster4_SVD10 ) AND
18158 +            TextCluster4_SVD10  <      0.0253142255519 THEN DO;
18159 +            _NODE_  =                   24;
18160 +            _LEAF_  =                    4;
18161 +            P_CategoryHR  =                    0;
18162 +            P_CategoryDESIGNER  =                    0;
18163 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18164 +            P_CategoryTEACHER  =                    0;
18165 +            P_CategoryADVOCATE  =                    0;
18166 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18167 +            P_CategoryHEALTHCARE  =                    0;
18168 +            P_CategoryFITNESS  =                    0;
18169 +            P_CategoryOTHER  =                    0;
18170 +            P_CategorySALES  =                    0;
18171 +            P_CategoryCONSULTANT  =                    0;
18172 +            P_CategoryDIGITAL_MEDIA  =                    1;
18173 +            Q_CategoryHR  =                    0;
18174 +            Q_CategoryDESIGNER  =                    0;
18175 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18176 +            Q_CategoryTEACHER  =                    0;
18177 +            Q_CategoryADVOCATE  =                    0;
18178 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18179 +            Q_CategoryHEALTHCARE  =                    0;
18180 +            Q_CategoryFITNESS  =                    0;
18181 +            Q_CategoryOTHER  =                    0;
18182 +            Q_CategorySALES  =                    0;
18183 +            Q_CategoryCONSULTANT  =                    0;
18184 +            Q_CategoryDIGITAL_MEDIA  =                    1;
18185 +            V_CategoryHR  =     0.09090909090909;
18186 +            V_CategoryDESIGNER  =     0.09090909090909;
18187 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18188 +            V_CategoryTEACHER  =                    0;
18189 +            V_CategoryADVOCATE  =                    0;
18190 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18191 +            V_CategoryHEALTHCARE  =                    0;
18192 +            V_CategoryFITNESS  =     0.09090909090909;
18193 +            V_CategoryOTHER  =                    0;
18194 +            V_CategorySALES  =     0.09090909090909;
18195 +            V_CategoryCONSULTANT  =     0.09090909090909;
18196 +            V_CategoryDIGITAL_MEDIA  =     0.54545454545454;
18197 +            I_Category  = 'DIGITAL-MEDIA' ;
18198 +            U_Category  = 'DIGITAL-MEDIA' ;
18199 +            END;
18200 +          ELSE DO;
18201 +            _NODE_  =                   25;
18202 +            _LEAF_  =                    5;
18203 +            P_CategoryHR  =                    0;
18204 +            P_CategoryDESIGNER  =                  0.9;
18205 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18206 +            P_CategoryTEACHER  =                    0;
18207 +            P_CategoryADVOCATE  =                    0;
18208 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18209 +            P_CategoryHEALTHCARE  =                    0;
18210 +            P_CategoryFITNESS  =                    0;
18211 +            P_CategoryOTHER  =                    0;
18212 +            P_CategorySALES  =                 0.05;
18213 +            P_CategoryCONSULTANT  =                    0;
18214 +            P_CategoryDIGITAL_MEDIA  =                 0.05;
18215 +            Q_CategoryHR  =                    0;
18216 +            Q_CategoryDESIGNER  =                  0.9;
18217 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18218 +            Q_CategoryTEACHER  =                    0;
18219 +            Q_CategoryADVOCATE  =                    0;
18220 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18221 +            Q_CategoryHEALTHCARE  =                    0;
18222 +            Q_CategoryFITNESS  =                    0;
18223 +            Q_CategoryOTHER  =                    0;
18224 +            Q_CategorySALES  =                 0.05;
18225 +            Q_CategoryCONSULTANT  =                    0;
18226 +            Q_CategoryDIGITAL_MEDIA  =                 0.05;
18227 +            V_CategoryHR  =                    0;
18228 +            V_CategoryDESIGNER  =     0.78260869565217;
18229 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18230 +            V_CategoryTEACHER  =     0.04347826086956;
18231 +            V_CategoryADVOCATE  =                    0;
18232 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18233 +            V_CategoryHEALTHCARE  =                    0;
18234 +            V_CategoryFITNESS  =                    0;
18235 +            V_CategoryOTHER  =                    0;
18236 +            V_CategorySALES  =     0.08695652173913;
18237 +            V_CategoryCONSULTANT  =                    0;
18238 +            V_CategoryDIGITAL_MEDIA  =     0.08695652173913;
18239 +            I_Category  = 'DESIGNER' ;
18240 +            U_Category  = 'DESIGNER' ;
18241 +            END;
18242 +          END;
18243 +        END;
18244 +      ELSE DO;
18245 +        IF  NOT MISSING(TextCluster4_SVD12 ) AND
18246 +          TextCluster4_SVD12  <    -0.11300450651431 THEN DO;
18247 +          _NODE_  =                   22;
18248 +          _LEAF_  =                    6;
18249 +          P_CategoryHR  =                    0;
18250 +          P_CategoryDESIGNER  =      0.0392156862745;
18251 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18252 +          P_CategoryTEACHER  =                    0;
18253 +          P_CategoryADVOCATE  =     0.17647058823529;
18254 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
18255 +          P_CategoryHEALTHCARE  =     0.01960784313725;
18256 +          P_CategoryFITNESS  =     0.66666666666666;
18257 +          P_CategoryOTHER  =     0.05882352941176;
18258 +          P_CategorySALES  =                    0;
18259 +          P_CategoryCONSULTANT  =     0.01960784313725;
18260 +          P_CategoryDIGITAL_MEDIA  =                    0;
18261 +          Q_CategoryHR  =                    0;
18262 +          Q_CategoryDESIGNER  =      0.0392156862745;
18263 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18264 +          Q_CategoryTEACHER  =                    0;
18265 +          Q_CategoryADVOCATE  =     0.17647058823529;
18266 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
18267 +          Q_CategoryHEALTHCARE  =     0.01960784313725;
18268 +          Q_CategoryFITNESS  =     0.66666666666666;
18269 +          Q_CategoryOTHER  =     0.05882352941176;
18270 +          Q_CategorySALES  =                    0;
18271 +          Q_CategoryCONSULTANT  =     0.01960784313725;
18272 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18273 +          V_CategoryHR  =                    0;
18274 +          V_CategoryDESIGNER  =                 0.05;
18275 +          V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18276 +          V_CategoryTEACHER  =                    0;
18277 +          V_CategoryADVOCATE  =                    0;
18278 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18279 +          V_CategoryHEALTHCARE  =                 0.05;
18280 +          V_CategoryFITNESS  =                  0.8;
18281 +          V_CategoryOTHER  =                 0.05;
18282 +          V_CategorySALES  =                    0;
18283 +          V_CategoryCONSULTANT  =                    0;
18284 +          V_CategoryDIGITAL_MEDIA  =                    0;
18285 +          I_Category  = 'FITNESS' ;
18286 +          U_Category  = 'FITNESS' ;
18287 +          END;
18288 +        ELSE DO;
18289 +          IF  NOT MISSING(TextCluster4_SVD4 ) AND
18290 +                0.26328465066599 <= TextCluster4_SVD4  THEN DO;
18291 +            _NODE_  =                   29;
18292 +            _LEAF_  =                    8;
18293 +            P_CategoryHR  =                    0;
18294 +            P_CategoryDESIGNER  =     0.22222222222222;
18295 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18296 +            P_CategoryTEACHER  =     0.66666666666666;
18297 +            P_CategoryADVOCATE  =                    0;
18298 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18299 +            P_CategoryHEALTHCARE  =                    0;
18300 +            P_CategoryFITNESS  =                    0;
18301 +            P_CategoryOTHER  =                    0;
18302 +            P_CategorySALES  =                    0;
18303 +            P_CategoryCONSULTANT  =                    0;
18304 +            P_CategoryDIGITAL_MEDIA  =     0.11111111111111;
18305 +            Q_CategoryHR  =                    0;
18306 +            Q_CategoryDESIGNER  =     0.22222222222222;
18307 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18308 +            Q_CategoryTEACHER  =     0.66666666666666;
18309 +            Q_CategoryADVOCATE  =                    0;
18310 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18311 +            Q_CategoryHEALTHCARE  =                    0;
18312 +            Q_CategoryFITNESS  =                    0;
18313 +            Q_CategoryOTHER  =                    0;
18314 +            Q_CategorySALES  =                    0;
18315 +            Q_CategoryCONSULTANT  =                    0;
18316 +            Q_CategoryDIGITAL_MEDIA  =     0.11111111111111;
18317 +            V_CategoryHR  =                    0;
18318 +            V_CategoryDESIGNER  =                    0;
18319 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18320 +            V_CategoryTEACHER  =     0.28571428571428;
18321 +            V_CategoryADVOCATE  =     0.28571428571428;
18322 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18323 +            V_CategoryHEALTHCARE  =     0.14285714285714;
18324 +            V_CategoryFITNESS  =                    0;
18325 +            V_CategoryOTHER  =                    0;
18326 +            V_CategorySALES  =     0.14285714285714;
18327 +            V_CategoryCONSULTANT  =                    0;
18328 +            V_CategoryDIGITAL_MEDIA  =     0.14285714285714;
18329 +            I_Category  = 'TEACHER' ;
18330 +            U_Category  = 'TEACHER' ;
18331 +            END;
18332 +          ELSE DO;
18333 +            _NODE_  =                   28;
18334 +            _LEAF_  =                    7;
18335 +            P_CategoryHR  =     0.01994301994301;
18336 +            P_CategoryDESIGNER  =     0.02564102564102;
18337 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18338 +            P_CategoryTEACHER  =     0.01994301994301;
18339 +            P_CategoryADVOCATE  =      0.1082621082621;
18340 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
18341 +            P_CategoryHEALTHCARE  =     0.13675213675213;
18342 +            P_CategoryFITNESS  =     0.04843304843304;
18343 +            P_CategoryOTHER  =     0.14529914529914;
18344 +            P_CategorySALES  =     0.15669515669515;
18345 +            P_CategoryCONSULTANT  =     0.09401709401709;
18346 +            P_CategoryDIGITAL_MEDIA  =     0.06267806267806;
18347 +            Q_CategoryHR  =     0.01994301994301;
18348 +            Q_CategoryDESIGNER  =     0.02564102564102;
18349 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18350 +            Q_CategoryTEACHER  =     0.01994301994301;
18351 +            Q_CategoryADVOCATE  =      0.1082621082621;
18352 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
18353 +            Q_CategoryHEALTHCARE  =     0.13675213675213;
18354 +            Q_CategoryFITNESS  =     0.04843304843304;
18355 +            Q_CategoryOTHER  =     0.14529914529914;
18356 +            Q_CategorySALES  =     0.15669515669515;
18357 +            Q_CategoryCONSULTANT  =     0.09401709401709;
18358 +            Q_CategoryDIGITAL_MEDIA  =     0.06267806267806;
18359 +            V_CategoryHR  =     0.01463414634146;
18360 +            V_CategoryDESIGNER  =     0.02439024390243;
18361 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01951219512195;
18362 +            V_CategoryTEACHER  =     0.02439024390243;
18363 +            V_CategoryADVOCATE  =     0.13658536585365;
18364 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.1560975609756;
18365 +            V_CategoryHEALTHCARE  =     0.12195121951219;
18366 +            V_CategoryFITNESS  =     0.06341463414634;
18367 +            V_CategoryOTHER  =     0.12195121951219;
18368 +            V_CategorySALES  =     0.14146341463414;
18369 +            V_CategoryCONSULTANT  =     0.10731707317073;
18370 +            V_CategoryDIGITAL_MEDIA  =     0.06829268292682;
18371 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18372 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18373 +            END;
18374 +          END;
18375 +        END;
18376 +      END;
18377 +    END;
18378 +  END;
18379 +
18380 +*****  RESIDUALS R_ *************;
18381 +IF  F_Category  NE 'HR'
18382 +AND F_Category  NE 'DESIGNER'
18383 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18384 +AND F_Category  NE 'TEACHER'
18385 +AND F_Category  NE 'ADVOCATE'
18386 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18387 +AND F_Category  NE 'HEALTHCARE'
18388 +AND F_Category  NE 'FITNESS'
18389 +AND F_Category  NE 'OTHER'
18390 +AND F_Category  NE 'SALES'
18391 +AND F_Category  NE 'CONSULTANT'
18392 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18393 +        R_CategoryHR  = .;
18394 +        R_CategoryDESIGNER  = .;
18395 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18396 +        R_CategoryTEACHER  = .;
18397 +        R_CategoryADVOCATE  = .;
18398 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18399 +        R_CategoryHEALTHCARE  = .;
18400 +        R_CategoryFITNESS  = .;
18401 +        R_CategoryOTHER  = .;
18402 +        R_CategorySALES  = .;
18403 +        R_CategoryCONSULTANT  = .;
18404 +        R_CategoryDIGITAL_MEDIA  = .;
18405 + END;
18406 + ELSE DO;
18407 +       R_CategoryHR  =  -P_CategoryHR ;
18408 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18409 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18410 +         ;
18411 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18412 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18413 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18414 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18415 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18416 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18417 +       R_CategorySALES  =  -P_CategorySALES ;
18418 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18419 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18420 +       SELECT( F_Category  );
18421 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18422 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18423 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18424 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18425 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18426 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18427 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18428 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18429 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18430 +          +1;
18431 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18432 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18433 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18434 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18435 +          +1;
18436 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18437 +        R_CategoryDIGITAL_MEDIA  +1;
18438 +       END;
18439 + END;
18440 +
18441 +****************************************************************;
18442 +******          END OF DECISION TREE SCORING CODE         ******;
18443 +****************************************************************;
18444 +
18445 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18446  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18447  quit;
18448  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18449  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas";
18450  *------------------------------------------------------------*;
18451  * Tree: Scoring VALIDATE data;
18452  *------------------------------------------------------------*;
18453  data EMWS3.Tree_VALIDATE
18454  / view=EMWS3.Tree_VALIDATE
18455  ;
18456  set EMWS3.TextCluster4_VALIDATE
18457  ;
18458  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas.
18459 +****************************************************************;
18460 +******             DECISION TREE SCORING CODE             ******;
18461 +****************************************************************;
18462 +
18463 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18464 +LENGTH F_Category  $   22;
18465 +LENGTH I_Category  $   22;
18466 +LENGTH U_Category  $   22;
18467 +LENGTH _WARN_  $    4;
18468 +
18469 +******              LABELS FOR NEW VARIABLES              ******;
18470 +label _NODE_ = 'Node' ;
18471 +label _LEAF_ = 'Leaf' ;
18472 +label P_CategoryHR = 'Predicted: Category=HR' ;
18473 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18474 +label P_CategoryINFORMATION_TECHNOLOGY =
18475 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18476 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18477 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18478 +label P_CategoryBUSINESS_DEVELOPMENT =
18479 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18480 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18481 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18482 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18483 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18484 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18485 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18486 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18487 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18488 +label Q_CategoryINFORMATION_TECHNOLOGY =
18489 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18490 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18491 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18492 +label Q_CategoryBUSINESS_DEVELOPMENT =
18493 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18494 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18495 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18496 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18497 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18498 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18499 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18500 +label V_CategoryHR = 'Validated: Category=HR' ;
18501 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18502 +label V_CategoryINFORMATION_TECHNOLOGY =
18503 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18504 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18505 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18506 +label V_CategoryBUSINESS_DEVELOPMENT =
18507 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18508 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18509 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18510 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18511 +label V_CategorySALES = 'Validated: Category=SALES' ;
18512 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18513 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18514 +label R_CategoryHR = 'Residual: Category=HR' ;
18515 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18516 +label R_CategoryINFORMATION_TECHNOLOGY =
18517 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18518 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18519 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18520 +label R_CategoryBUSINESS_DEVELOPMENT =
18521 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18522 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18523 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18524 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18525 +label R_CategorySALES = 'Residual: Category=SALES' ;
18526 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18527 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18528 +label F_Category = 'From: Category' ;
18529 +label I_Category = 'Into: Category' ;
18530 +label U_Category = 'Unnormalized Into: Category' ;
18531 +label _WARN_ = 'Warnings' ;
18532 +
18533 +
18534 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18535 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18536 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18537 +
18538 +
18539 +_ARBFMT_22 = PUT( Category , $22.);
18540 + %DMNORMCP( _ARBFMT_22, F_Category );
18541 +
18542 +******             ASSIGN OBSERVATION TO NODE             ******;
18543 +IF  NOT MISSING(TextCluster4_SVD4 ) AND
18544 +  TextCluster4_SVD4  <    -0.22159654602699 THEN DO;
18545 +  _NODE_  =                    2;
18546 +  _LEAF_  =                    1;
18547 +  P_CategoryHR  =     0.80701754385964;
18548 +  P_CategoryDESIGNER  =                    0;
18549 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18550 +  P_CategoryTEACHER  =                    0;
18551 +  P_CategoryADVOCATE  =     0.05263157894736;
18552 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18553 +  P_CategoryHEALTHCARE  =     0.05263157894736;
18554 +  P_CategoryFITNESS  =     0.01754385964912;
18555 +  P_CategoryOTHER  =     0.01754385964912;
18556 +  P_CategorySALES  =     0.01754385964912;
18557 +  P_CategoryCONSULTANT  =     0.01754385964912;
18558 +  P_CategoryDIGITAL_MEDIA  =                    0;
18559 +  Q_CategoryHR  =     0.80701754385964;
18560 +  Q_CategoryDESIGNER  =                    0;
18561 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18562 +  Q_CategoryTEACHER  =                    0;
18563 +  Q_CategoryADVOCATE  =     0.05263157894736;
18564 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18565 +  Q_CategoryHEALTHCARE  =     0.05263157894736;
18566 +  Q_CategoryFITNESS  =     0.01754385964912;
18567 +  Q_CategoryOTHER  =     0.01754385964912;
18568 +  Q_CategorySALES  =     0.01754385964912;
18569 +  Q_CategoryCONSULTANT  =     0.01754385964912;
18570 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18571 +  V_CategoryHR  =     0.71052631578947;
18572 +  V_CategoryDESIGNER  =                    0;
18573 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.05263157894736;
18574 +  V_CategoryTEACHER  =                    0;
18575 +  V_CategoryADVOCATE  =     0.02631578947368;
18576 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18577 +  V_CategoryHEALTHCARE  =     0.07894736842105;
18578 +  V_CategoryFITNESS  =     0.02631578947368;
18579 +  V_CategoryOTHER  =     0.02631578947368;
18580 +  V_CategorySALES  =                    0;
18581 +  V_CategoryCONSULTANT  =     0.05263157894736;
18582 +  V_CategoryDIGITAL_MEDIA  =                    0;
18583 +  I_Category  = 'HR' ;
18584 +  U_Category  = 'HR' ;
18585 +  END;
18586 +ELSE DO;
18587 +  IF  NOT MISSING(TextCluster4_SVD5 ) AND
18588 +    TextCluster4_SVD5  <    -0.25539876415752 THEN DO;
18589 +    _NODE_  =                    6;
18590 +    _LEAF_  =                    2;
18591 +    P_CategoryHR  =                    0;
18592 +    P_CategoryDESIGNER  =                 0.02;
18593 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18594 +    P_CategoryTEACHER  =                 0.74;
18595 +    P_CategoryADVOCATE  =                  0.1;
18596 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18597 +    P_CategoryHEALTHCARE  =                 0.02;
18598 +    P_CategoryFITNESS  =                 0.12;
18599 +    P_CategoryOTHER  =                    0;
18600 +    P_CategorySALES  =                    0;
18601 +    P_CategoryCONSULTANT  =                    0;
18602 +    P_CategoryDIGITAL_MEDIA  =                    0;
18603 +    Q_CategoryHR  =                    0;
18604 +    Q_CategoryDESIGNER  =                 0.02;
18605 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18606 +    Q_CategoryTEACHER  =                 0.74;
18607 +    Q_CategoryADVOCATE  =                  0.1;
18608 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18609 +    Q_CategoryHEALTHCARE  =                 0.02;
18610 +    Q_CategoryFITNESS  =                 0.12;
18611 +    Q_CategoryOTHER  =                    0;
18612 +    Q_CategorySALES  =                    0;
18613 +    Q_CategoryCONSULTANT  =                    0;
18614 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18615 +    V_CategoryHR  =     0.02272727272727;
18616 +    V_CategoryDESIGNER  =     0.04545454545454;
18617 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18618 +    V_CategoryTEACHER  =     0.52272727272727;
18619 +    V_CategoryADVOCATE  =     0.06818181818181;
18620 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18621 +    V_CategoryHEALTHCARE  =     0.04545454545454;
18622 +    V_CategoryFITNESS  =     0.09090909090909;
18623 +    V_CategoryOTHER  =     0.18181818181818;
18624 +    V_CategorySALES  =                    0;
18625 +    V_CategoryCONSULTANT  =     0.02272727272727;
18626 +    V_CategoryDIGITAL_MEDIA  =                    0;
18627 +    I_Category  = 'TEACHER' ;
18628 +    U_Category  = 'TEACHER' ;
18629 +    END;
18630 +  ELSE DO;
18631 +    IF  NOT MISSING(TextCluster4_SVD2 ) AND
18632 +          0.22199140753138 <= TextCluster4_SVD2  THEN DO;
18633 +      _NODE_  =                   13;
18634 +      _LEAF_  =                    9;
18635 +      P_CategoryHR  =                    0;
18636 +      P_CategoryDESIGNER  =              0.03125;
18637 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
18638 +      P_CategoryTEACHER  =                    0;
18639 +      P_CategoryADVOCATE  =     0.02083333333333;
18640 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18641 +      P_CategoryHEALTHCARE  =              0.03125;
18642 +      P_CategoryFITNESS  =                    0;
18643 +      P_CategoryOTHER  =     0.08333333333333;
18644 +      P_CategorySALES  =                    0;
18645 +      P_CategoryCONSULTANT  =              0.21875;
18646 +      P_CategoryDIGITAL_MEDIA  =     0.07291666666666;
18647 +      Q_CategoryHR  =                    0;
18648 +      Q_CategoryDESIGNER  =              0.03125;
18649 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
18650 +      Q_CategoryTEACHER  =                    0;
18651 +      Q_CategoryADVOCATE  =     0.02083333333333;
18652 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18653 +      Q_CategoryHEALTHCARE  =              0.03125;
18654 +      Q_CategoryFITNESS  =                    0;
18655 +      Q_CategoryOTHER  =     0.08333333333333;
18656 +      Q_CategorySALES  =                    0;
18657 +      Q_CategoryCONSULTANT  =              0.21875;
18658 +      Q_CategoryDIGITAL_MEDIA  =     0.07291666666666;
18659 +      V_CategoryHR  =                    0;
18660 +      V_CategoryDESIGNER  =     0.05357142857142;
18661 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.51785714285714;
18662 +      V_CategoryTEACHER  =                    0;
18663 +      V_CategoryADVOCATE  =     0.01785714285714;
18664 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.05357142857142;
18665 +      V_CategoryHEALTHCARE  =     0.01785714285714;
18666 +      V_CategoryFITNESS  =                    0;
18667 +      V_CategoryOTHER  =     0.05357142857142;
18668 +      V_CategorySALES  =     0.01785714285714;
18669 +      V_CategoryCONSULTANT  =     0.16071428571428;
18670 +      V_CategoryDIGITAL_MEDIA  =     0.10714285714285;
18671 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18672 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18673 +      END;
18674 +    ELSE DO;
18675 +      IF  NOT MISSING(TextCluster4_SVD6 ) AND
18676 +        TextCluster4_SVD6  <    -0.15676518608919 THEN DO;
18677 +        IF  NOT MISSING(TextCluster4_SVD4 ) AND
18678 +          TextCluster4_SVD4  <     0.03519855095692 THEN DO;
18679 +          _NODE_  =                   20;
18680 +          _LEAF_  =                    3;
18681 +          P_CategoryHR  =                  0.4;
18682 +          P_CategoryDESIGNER  =                    0;
18683 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18684 +          P_CategoryTEACHER  =                    0;
18685 +          P_CategoryADVOCATE  =                    0;
18686 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18687 +          P_CategoryHEALTHCARE  =                  0.2;
18688 +          P_CategoryFITNESS  =                    0;
18689 +          P_CategoryOTHER  =                    0;
18690 +          P_CategorySALES  =                    0;
18691 +          P_CategoryCONSULTANT  =                  0.2;
18692 +          P_CategoryDIGITAL_MEDIA  =                    0;
18693 +          Q_CategoryHR  =                  0.4;
18694 +          Q_CategoryDESIGNER  =                    0;
18695 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18696 +          Q_CategoryTEACHER  =                    0;
18697 +          Q_CategoryADVOCATE  =                    0;
18698 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18699 +          Q_CategoryHEALTHCARE  =                  0.2;
18700 +          Q_CategoryFITNESS  =                    0;
18701 +          Q_CategoryOTHER  =                    0;
18702 +          Q_CategorySALES  =                    0;
18703 +          Q_CategoryCONSULTANT  =                  0.2;
18704 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18705 +          V_CategoryHR  =                    0;
18706 +          V_CategoryDESIGNER  =                    1;
18707 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18708 +          V_CategoryTEACHER  =                    0;
18709 +          V_CategoryADVOCATE  =                    0;
18710 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18711 +          V_CategoryHEALTHCARE  =                    0;
18712 +          V_CategoryFITNESS  =                    0;
18713 +          V_CategoryOTHER  =                    0;
18714 +          V_CategorySALES  =                    0;
18715 +          V_CategoryCONSULTANT  =                    0;
18716 +          V_CategoryDIGITAL_MEDIA  =                    0;
18717 +          I_Category  = 'HR' ;
18718 +          U_Category  = 'HR' ;
18719 +          END;
18720 +        ELSE DO;
18721 +          IF  NOT MISSING(TextCluster4_SVD10 ) AND
18722 +            TextCluster4_SVD10  <      0.0253142255519 THEN DO;
18723 +            _NODE_  =                   24;
18724 +            _LEAF_  =                    4;
18725 +            P_CategoryHR  =                    0;
18726 +            P_CategoryDESIGNER  =                    0;
18727 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18728 +            P_CategoryTEACHER  =                    0;
18729 +            P_CategoryADVOCATE  =                    0;
18730 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18731 +            P_CategoryHEALTHCARE  =                    0;
18732 +            P_CategoryFITNESS  =                    0;
18733 +            P_CategoryOTHER  =                    0;
18734 +            P_CategorySALES  =                    0;
18735 +            P_CategoryCONSULTANT  =                    0;
18736 +            P_CategoryDIGITAL_MEDIA  =                    1;
18737 +            Q_CategoryHR  =                    0;
18738 +            Q_CategoryDESIGNER  =                    0;
18739 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18740 +            Q_CategoryTEACHER  =                    0;
18741 +            Q_CategoryADVOCATE  =                    0;
18742 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18743 +            Q_CategoryHEALTHCARE  =                    0;
18744 +            Q_CategoryFITNESS  =                    0;
18745 +            Q_CategoryOTHER  =                    0;
18746 +            Q_CategorySALES  =                    0;
18747 +            Q_CategoryCONSULTANT  =                    0;
18748 +            Q_CategoryDIGITAL_MEDIA  =                    1;
18749 +            V_CategoryHR  =     0.09090909090909;
18750 +            V_CategoryDESIGNER  =     0.09090909090909;
18751 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18752 +            V_CategoryTEACHER  =                    0;
18753 +            V_CategoryADVOCATE  =                    0;
18754 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18755 +            V_CategoryHEALTHCARE  =                    0;
18756 +            V_CategoryFITNESS  =     0.09090909090909;
18757 +            V_CategoryOTHER  =                    0;
18758 +            V_CategorySALES  =     0.09090909090909;
18759 +            V_CategoryCONSULTANT  =     0.09090909090909;
18760 +            V_CategoryDIGITAL_MEDIA  =     0.54545454545454;
18761 +            I_Category  = 'DIGITAL-MEDIA' ;
18762 +            U_Category  = 'DIGITAL-MEDIA' ;
18763 +            END;
18764 +          ELSE DO;
18765 +            _NODE_  =                   25;
18766 +            _LEAF_  =                    5;
18767 +            P_CategoryHR  =                    0;
18768 +            P_CategoryDESIGNER  =                  0.9;
18769 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18770 +            P_CategoryTEACHER  =                    0;
18771 +            P_CategoryADVOCATE  =                    0;
18772 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18773 +            P_CategoryHEALTHCARE  =                    0;
18774 +            P_CategoryFITNESS  =                    0;
18775 +            P_CategoryOTHER  =                    0;
18776 +            P_CategorySALES  =                 0.05;
18777 +            P_CategoryCONSULTANT  =                    0;
18778 +            P_CategoryDIGITAL_MEDIA  =                 0.05;
18779 +            Q_CategoryHR  =                    0;
18780 +            Q_CategoryDESIGNER  =                  0.9;
18781 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18782 +            Q_CategoryTEACHER  =                    0;
18783 +            Q_CategoryADVOCATE  =                    0;
18784 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18785 +            Q_CategoryHEALTHCARE  =                    0;
18786 +            Q_CategoryFITNESS  =                    0;
18787 +            Q_CategoryOTHER  =                    0;
18788 +            Q_CategorySALES  =                 0.05;
18789 +            Q_CategoryCONSULTANT  =                    0;
18790 +            Q_CategoryDIGITAL_MEDIA  =                 0.05;
18791 +            V_CategoryHR  =                    0;
18792 +            V_CategoryDESIGNER  =     0.78260869565217;
18793 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18794 +            V_CategoryTEACHER  =     0.04347826086956;
18795 +            V_CategoryADVOCATE  =                    0;
18796 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18797 +            V_CategoryHEALTHCARE  =                    0;
18798 +            V_CategoryFITNESS  =                    0;
18799 +            V_CategoryOTHER  =                    0;
18800 +            V_CategorySALES  =     0.08695652173913;
18801 +            V_CategoryCONSULTANT  =                    0;
18802 +            V_CategoryDIGITAL_MEDIA  =     0.08695652173913;
18803 +            I_Category  = 'DESIGNER' ;
18804 +            U_Category  = 'DESIGNER' ;
18805 +            END;
18806 +          END;
18807 +        END;
18808 +      ELSE DO;
18809 +        IF  NOT MISSING(TextCluster4_SVD12 ) AND
18810 +          TextCluster4_SVD12  <    -0.11300450651431 THEN DO;
18811 +          _NODE_  =                   22;
18812 +          _LEAF_  =                    6;
18813 +          P_CategoryHR  =                    0;
18814 +          P_CategoryDESIGNER  =      0.0392156862745;
18815 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18816 +          P_CategoryTEACHER  =                    0;
18817 +          P_CategoryADVOCATE  =     0.17647058823529;
18818 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
18819 +          P_CategoryHEALTHCARE  =     0.01960784313725;
18820 +          P_CategoryFITNESS  =     0.66666666666666;
18821 +          P_CategoryOTHER  =     0.05882352941176;
18822 +          P_CategorySALES  =                    0;
18823 +          P_CategoryCONSULTANT  =     0.01960784313725;
18824 +          P_CategoryDIGITAL_MEDIA  =                    0;
18825 +          Q_CategoryHR  =                    0;
18826 +          Q_CategoryDESIGNER  =      0.0392156862745;
18827 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18828 +          Q_CategoryTEACHER  =                    0;
18829 +          Q_CategoryADVOCATE  =     0.17647058823529;
18830 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
18831 +          Q_CategoryHEALTHCARE  =     0.01960784313725;
18832 +          Q_CategoryFITNESS  =     0.66666666666666;
18833 +          Q_CategoryOTHER  =     0.05882352941176;
18834 +          Q_CategorySALES  =                    0;
18835 +          Q_CategoryCONSULTANT  =     0.01960784313725;
18836 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18837 +          V_CategoryHR  =                    0;
18838 +          V_CategoryDESIGNER  =                 0.05;
18839 +          V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18840 +          V_CategoryTEACHER  =                    0;
18841 +          V_CategoryADVOCATE  =                    0;
18842 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18843 +          V_CategoryHEALTHCARE  =                 0.05;
18844 +          V_CategoryFITNESS  =                  0.8;
18845 +          V_CategoryOTHER  =                 0.05;
18846 +          V_CategorySALES  =                    0;
18847 +          V_CategoryCONSULTANT  =                    0;
18848 +          V_CategoryDIGITAL_MEDIA  =                    0;
18849 +          I_Category  = 'FITNESS' ;
18850 +          U_Category  = 'FITNESS' ;
18851 +          END;
18852 +        ELSE DO;
18853 +          IF  NOT MISSING(TextCluster4_SVD4 ) AND
18854 +                0.26328465066599 <= TextCluster4_SVD4  THEN DO;
18855 +            _NODE_  =                   29;
18856 +            _LEAF_  =                    8;
18857 +            P_CategoryHR  =                    0;
18858 +            P_CategoryDESIGNER  =     0.22222222222222;
18859 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18860 +            P_CategoryTEACHER  =     0.66666666666666;
18861 +            P_CategoryADVOCATE  =                    0;
18862 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18863 +            P_CategoryHEALTHCARE  =                    0;
18864 +            P_CategoryFITNESS  =                    0;
18865 +            P_CategoryOTHER  =                    0;
18866 +            P_CategorySALES  =                    0;
18867 +            P_CategoryCONSULTANT  =                    0;
18868 +            P_CategoryDIGITAL_MEDIA  =     0.11111111111111;
18869 +            Q_CategoryHR  =                    0;
18870 +            Q_CategoryDESIGNER  =     0.22222222222222;
18871 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18872 +            Q_CategoryTEACHER  =     0.66666666666666;
18873 +            Q_CategoryADVOCATE  =                    0;
18874 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18875 +            Q_CategoryHEALTHCARE  =                    0;
18876 +            Q_CategoryFITNESS  =                    0;
18877 +            Q_CategoryOTHER  =                    0;
18878 +            Q_CategorySALES  =                    0;
18879 +            Q_CategoryCONSULTANT  =                    0;
18880 +            Q_CategoryDIGITAL_MEDIA  =     0.11111111111111;
18881 +            V_CategoryHR  =                    0;
18882 +            V_CategoryDESIGNER  =                    0;
18883 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18884 +            V_CategoryTEACHER  =     0.28571428571428;
18885 +            V_CategoryADVOCATE  =     0.28571428571428;
18886 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18887 +            V_CategoryHEALTHCARE  =     0.14285714285714;
18888 +            V_CategoryFITNESS  =                    0;
18889 +            V_CategoryOTHER  =                    0;
18890 +            V_CategorySALES  =     0.14285714285714;
18891 +            V_CategoryCONSULTANT  =                    0;
18892 +            V_CategoryDIGITAL_MEDIA  =     0.14285714285714;
18893 +            I_Category  = 'TEACHER' ;
18894 +            U_Category  = 'TEACHER' ;
18895 +            END;
18896 +          ELSE DO;
18897 +            _NODE_  =                   28;
18898 +            _LEAF_  =                    7;
18899 +            P_CategoryHR  =     0.01994301994301;
18900 +            P_CategoryDESIGNER  =     0.02564102564102;
18901 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18902 +            P_CategoryTEACHER  =     0.01994301994301;
18903 +            P_CategoryADVOCATE  =      0.1082621082621;
18904 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
18905 +            P_CategoryHEALTHCARE  =     0.13675213675213;
18906 +            P_CategoryFITNESS  =     0.04843304843304;
18907 +            P_CategoryOTHER  =     0.14529914529914;
18908 +            P_CategorySALES  =     0.15669515669515;
18909 +            P_CategoryCONSULTANT  =     0.09401709401709;
18910 +            P_CategoryDIGITAL_MEDIA  =     0.06267806267806;
18911 +            Q_CategoryHR  =     0.01994301994301;
18912 +            Q_CategoryDESIGNER  =     0.02564102564102;
18913 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18914 +            Q_CategoryTEACHER  =     0.01994301994301;
18915 +            Q_CategoryADVOCATE  =      0.1082621082621;
18916 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
18917 +            Q_CategoryHEALTHCARE  =     0.13675213675213;
18918 +            Q_CategoryFITNESS  =     0.04843304843304;
18919 +            Q_CategoryOTHER  =     0.14529914529914;
18920 +            Q_CategorySALES  =     0.15669515669515;
18921 +            Q_CategoryCONSULTANT  =     0.09401709401709;
18922 +            Q_CategoryDIGITAL_MEDIA  =     0.06267806267806;
18923 +            V_CategoryHR  =     0.01463414634146;
18924 +            V_CategoryDESIGNER  =     0.02439024390243;
18925 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01951219512195;
18926 +            V_CategoryTEACHER  =     0.02439024390243;
18927 +            V_CategoryADVOCATE  =     0.13658536585365;
18928 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.1560975609756;
18929 +            V_CategoryHEALTHCARE  =     0.12195121951219;
18930 +            V_CategoryFITNESS  =     0.06341463414634;
18931 +            V_CategoryOTHER  =     0.12195121951219;
18932 +            V_CategorySALES  =     0.14146341463414;
18933 +            V_CategoryCONSULTANT  =     0.10731707317073;
18934 +            V_CategoryDIGITAL_MEDIA  =     0.06829268292682;
18935 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18936 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18937 +            END;
18938 +          END;
18939 +        END;
18940 +      END;
18941 +    END;
18942 +  END;
18943 +
18944 +*****  RESIDUALS R_ *************;
18945 +IF  F_Category  NE 'HR'
18946 +AND F_Category  NE 'DESIGNER'
18947 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18948 +AND F_Category  NE 'TEACHER'
18949 +AND F_Category  NE 'ADVOCATE'
18950 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18951 +AND F_Category  NE 'HEALTHCARE'
18952 +AND F_Category  NE 'FITNESS'
18953 +AND F_Category  NE 'OTHER'
18954 +AND F_Category  NE 'SALES'
18955 +AND F_Category  NE 'CONSULTANT'
18956 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18957 +        R_CategoryHR  = .;
18958 +        R_CategoryDESIGNER  = .;
18959 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18960 +        R_CategoryTEACHER  = .;
18961 +        R_CategoryADVOCATE  = .;
18962 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18963 +        R_CategoryHEALTHCARE  = .;
18964 +        R_CategoryFITNESS  = .;
18965 +        R_CategoryOTHER  = .;
18966 +        R_CategorySALES  = .;
18967 +        R_CategoryCONSULTANT  = .;
18968 +        R_CategoryDIGITAL_MEDIA  = .;
18969 + END;
18970 + ELSE DO;
18971 +       R_CategoryHR  =  -P_CategoryHR ;
18972 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18973 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18974 +         ;
18975 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18976 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18977 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18978 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18979 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18980 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18981 +       R_CategorySALES  =  -P_CategorySALES ;
18982 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18983 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18984 +       SELECT( F_Category  );
18985 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18986 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18987 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18988 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18989 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18990 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18991 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18992 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18993 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18994 +          +1;
18995 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18996 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18997 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18998 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18999 +          +1;
19000 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19001 +        R_CategoryDIGITAL_MEDIA  +1;
19002 +       END;
19003 + END;
19004 +
19005 +****************************************************************;
19006 +******          END OF DECISION TREE SCORING CODE         ******;
19007 +****************************************************************;
19008 +
19009 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19010  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19011  quit;
19012  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
19013  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas";
19014  *------------------------------------------------------------*;
19015  * Tree: Scoring TEST data;
19016  *------------------------------------------------------------*;
19017  data EMWS3.Tree_TEST
19018  / view=EMWS3.Tree_TEST
19019  ;
19020  set EMWS3.TextCluster4_TEST
19021  ;
19022  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree\EMFLOWSCORE.sas.
19023 +****************************************************************;
19024 +******             DECISION TREE SCORING CODE             ******;
19025 +****************************************************************;
19026 +
19027 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
19028 +LENGTH F_Category  $   22;
19029 +LENGTH I_Category  $   22;
19030 +LENGTH U_Category  $   22;
19031 +LENGTH _WARN_  $    4;
19032 +
19033 +******              LABELS FOR NEW VARIABLES              ******;
19034 +label _NODE_ = 'Node' ;
19035 +label _LEAF_ = 'Leaf' ;
19036 +label P_CategoryHR = 'Predicted: Category=HR' ;
19037 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
19038 +label P_CategoryINFORMATION_TECHNOLOGY =
19039 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
19040 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
19041 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
19042 +label P_CategoryBUSINESS_DEVELOPMENT =
19043 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
19044 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
19045 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
19046 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
19047 +label P_CategorySALES = 'Predicted: Category=SALES' ;
19048 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
19049 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
19050 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
19051 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
19052 +label Q_CategoryINFORMATION_TECHNOLOGY =
19053 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
19054 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
19055 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
19056 +label Q_CategoryBUSINESS_DEVELOPMENT =
19057 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
19058 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
19059 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
19060 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
19061 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
19062 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
19063 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
19064 +label V_CategoryHR = 'Validated: Category=HR' ;
19065 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
19066 +label V_CategoryINFORMATION_TECHNOLOGY =
19067 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
19068 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
19069 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
19070 +label V_CategoryBUSINESS_DEVELOPMENT =
19071 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
19072 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
19073 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
19074 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
19075 +label V_CategorySALES = 'Validated: Category=SALES' ;
19076 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
19077 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
19078 +label R_CategoryHR = 'Residual: Category=HR' ;
19079 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
19080 +label R_CategoryINFORMATION_TECHNOLOGY =
19081 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
19082 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19083 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19084 +label R_CategoryBUSINESS_DEVELOPMENT =
19085 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19086 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19087 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19088 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19089 +label R_CategorySALES = 'Residual: Category=SALES' ;
19090 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19091 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19092 +label F_Category = 'From: Category' ;
19093 +label I_Category = 'Into: Category' ;
19094 +label U_Category = 'Unnormalized Into: Category' ;
19095 +label _WARN_ = 'Warnings' ;
19096 +
19097 +
19098 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19099 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19100 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19101 +
19102 +
19103 +_ARBFMT_22 = PUT( Category , $22.);
19104 + %DMNORMCP( _ARBFMT_22, F_Category );
19105 +
19106 +******             ASSIGN OBSERVATION TO NODE             ******;
19107 +IF  NOT MISSING(TextCluster4_SVD4 ) AND
19108 +  TextCluster4_SVD4  <    -0.22159654602699 THEN DO;
19109 +  _NODE_  =                    2;
19110 +  _LEAF_  =                    1;
19111 +  P_CategoryHR  =     0.80701754385964;
19112 +  P_CategoryDESIGNER  =                    0;
19113 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19114 +  P_CategoryTEACHER  =                    0;
19115 +  P_CategoryADVOCATE  =     0.05263157894736;
19116 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
19117 +  P_CategoryHEALTHCARE  =     0.05263157894736;
19118 +  P_CategoryFITNESS  =     0.01754385964912;
19119 +  P_CategoryOTHER  =     0.01754385964912;
19120 +  P_CategorySALES  =     0.01754385964912;
19121 +  P_CategoryCONSULTANT  =     0.01754385964912;
19122 +  P_CategoryDIGITAL_MEDIA  =                    0;
19123 +  Q_CategoryHR  =     0.80701754385964;
19124 +  Q_CategoryDESIGNER  =                    0;
19125 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19126 +  Q_CategoryTEACHER  =                    0;
19127 +  Q_CategoryADVOCATE  =     0.05263157894736;
19128 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
19129 +  Q_CategoryHEALTHCARE  =     0.05263157894736;
19130 +  Q_CategoryFITNESS  =     0.01754385964912;
19131 +  Q_CategoryOTHER  =     0.01754385964912;
19132 +  Q_CategorySALES  =     0.01754385964912;
19133 +  Q_CategoryCONSULTANT  =     0.01754385964912;
19134 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19135 +  V_CategoryHR  =     0.71052631578947;
19136 +  V_CategoryDESIGNER  =                    0;
19137 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.05263157894736;
19138 +  V_CategoryTEACHER  =                    0;
19139 +  V_CategoryADVOCATE  =     0.02631578947368;
19140 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
19141 +  V_CategoryHEALTHCARE  =     0.07894736842105;
19142 +  V_CategoryFITNESS  =     0.02631578947368;
19143 +  V_CategoryOTHER  =     0.02631578947368;
19144 +  V_CategorySALES  =                    0;
19145 +  V_CategoryCONSULTANT  =     0.05263157894736;
19146 +  V_CategoryDIGITAL_MEDIA  =                    0;
19147 +  I_Category  = 'HR' ;
19148 +  U_Category  = 'HR' ;
19149 +  END;
19150 +ELSE DO;
19151 +  IF  NOT MISSING(TextCluster4_SVD5 ) AND
19152 +    TextCluster4_SVD5  <    -0.25539876415752 THEN DO;
19153 +    _NODE_  =                    6;
19154 +    _LEAF_  =                    2;
19155 +    P_CategoryHR  =                    0;
19156 +    P_CategoryDESIGNER  =                 0.02;
19157 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19158 +    P_CategoryTEACHER  =                 0.74;
19159 +    P_CategoryADVOCATE  =                  0.1;
19160 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19161 +    P_CategoryHEALTHCARE  =                 0.02;
19162 +    P_CategoryFITNESS  =                 0.12;
19163 +    P_CategoryOTHER  =                    0;
19164 +    P_CategorySALES  =                    0;
19165 +    P_CategoryCONSULTANT  =                    0;
19166 +    P_CategoryDIGITAL_MEDIA  =                    0;
19167 +    Q_CategoryHR  =                    0;
19168 +    Q_CategoryDESIGNER  =                 0.02;
19169 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19170 +    Q_CategoryTEACHER  =                 0.74;
19171 +    Q_CategoryADVOCATE  =                  0.1;
19172 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19173 +    Q_CategoryHEALTHCARE  =                 0.02;
19174 +    Q_CategoryFITNESS  =                 0.12;
19175 +    Q_CategoryOTHER  =                    0;
19176 +    Q_CategorySALES  =                    0;
19177 +    Q_CategoryCONSULTANT  =                    0;
19178 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19179 +    V_CategoryHR  =     0.02272727272727;
19180 +    V_CategoryDESIGNER  =     0.04545454545454;
19181 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19182 +    V_CategoryTEACHER  =     0.52272727272727;
19183 +    V_CategoryADVOCATE  =     0.06818181818181;
19184 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19185 +    V_CategoryHEALTHCARE  =     0.04545454545454;
19186 +    V_CategoryFITNESS  =     0.09090909090909;
19187 +    V_CategoryOTHER  =     0.18181818181818;
19188 +    V_CategorySALES  =                    0;
19189 +    V_CategoryCONSULTANT  =     0.02272727272727;
19190 +    V_CategoryDIGITAL_MEDIA  =                    0;
19191 +    I_Category  = 'TEACHER' ;
19192 +    U_Category  = 'TEACHER' ;
19193 +    END;
19194 +  ELSE DO;
19195 +    IF  NOT MISSING(TextCluster4_SVD2 ) AND
19196 +          0.22199140753138 <= TextCluster4_SVD2  THEN DO;
19197 +      _NODE_  =                   13;
19198 +      _LEAF_  =                    9;
19199 +      P_CategoryHR  =                    0;
19200 +      P_CategoryDESIGNER  =              0.03125;
19201 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
19202 +      P_CategoryTEACHER  =                    0;
19203 +      P_CategoryADVOCATE  =     0.02083333333333;
19204 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
19205 +      P_CategoryHEALTHCARE  =              0.03125;
19206 +      P_CategoryFITNESS  =                    0;
19207 +      P_CategoryOTHER  =     0.08333333333333;
19208 +      P_CategorySALES  =                    0;
19209 +      P_CategoryCONSULTANT  =              0.21875;
19210 +      P_CategoryDIGITAL_MEDIA  =     0.07291666666666;
19211 +      Q_CategoryHR  =                    0;
19212 +      Q_CategoryDESIGNER  =              0.03125;
19213 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52083333333333;
19214 +      Q_CategoryTEACHER  =                    0;
19215 +      Q_CategoryADVOCATE  =     0.02083333333333;
19216 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
19217 +      Q_CategoryHEALTHCARE  =              0.03125;
19218 +      Q_CategoryFITNESS  =                    0;
19219 +      Q_CategoryOTHER  =     0.08333333333333;
19220 +      Q_CategorySALES  =                    0;
19221 +      Q_CategoryCONSULTANT  =              0.21875;
19222 +      Q_CategoryDIGITAL_MEDIA  =     0.07291666666666;
19223 +      V_CategoryHR  =                    0;
19224 +      V_CategoryDESIGNER  =     0.05357142857142;
19225 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.51785714285714;
19226 +      V_CategoryTEACHER  =                    0;
19227 +      V_CategoryADVOCATE  =     0.01785714285714;
19228 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.05357142857142;
19229 +      V_CategoryHEALTHCARE  =     0.01785714285714;
19230 +      V_CategoryFITNESS  =                    0;
19231 +      V_CategoryOTHER  =     0.05357142857142;
19232 +      V_CategorySALES  =     0.01785714285714;
19233 +      V_CategoryCONSULTANT  =     0.16071428571428;
19234 +      V_CategoryDIGITAL_MEDIA  =     0.10714285714285;
19235 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
19236 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
19237 +      END;
19238 +    ELSE DO;
19239 +      IF  NOT MISSING(TextCluster4_SVD6 ) AND
19240 +        TextCluster4_SVD6  <    -0.15676518608919 THEN DO;
19241 +        IF  NOT MISSING(TextCluster4_SVD4 ) AND
19242 +          TextCluster4_SVD4  <     0.03519855095692 THEN DO;
19243 +          _NODE_  =                   20;
19244 +          _LEAF_  =                    3;
19245 +          P_CategoryHR  =                  0.4;
19246 +          P_CategoryDESIGNER  =                    0;
19247 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19248 +          P_CategoryTEACHER  =                    0;
19249 +          P_CategoryADVOCATE  =                    0;
19250 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
19251 +          P_CategoryHEALTHCARE  =                  0.2;
19252 +          P_CategoryFITNESS  =                    0;
19253 +          P_CategoryOTHER  =                    0;
19254 +          P_CategorySALES  =                    0;
19255 +          P_CategoryCONSULTANT  =                  0.2;
19256 +          P_CategoryDIGITAL_MEDIA  =                    0;
19257 +          Q_CategoryHR  =                  0.4;
19258 +          Q_CategoryDESIGNER  =                    0;
19259 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19260 +          Q_CategoryTEACHER  =                    0;
19261 +          Q_CategoryADVOCATE  =                    0;
19262 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
19263 +          Q_CategoryHEALTHCARE  =                  0.2;
19264 +          Q_CategoryFITNESS  =                    0;
19265 +          Q_CategoryOTHER  =                    0;
19266 +          Q_CategorySALES  =                    0;
19267 +          Q_CategoryCONSULTANT  =                  0.2;
19268 +          Q_CategoryDIGITAL_MEDIA  =                    0;
19269 +          V_CategoryHR  =                    0;
19270 +          V_CategoryDESIGNER  =                    1;
19271 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19272 +          V_CategoryTEACHER  =                    0;
19273 +          V_CategoryADVOCATE  =                    0;
19274 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19275 +          V_CategoryHEALTHCARE  =                    0;
19276 +          V_CategoryFITNESS  =                    0;
19277 +          V_CategoryOTHER  =                    0;
19278 +          V_CategorySALES  =                    0;
19279 +          V_CategoryCONSULTANT  =                    0;
19280 +          V_CategoryDIGITAL_MEDIA  =                    0;
19281 +          I_Category  = 'HR' ;
19282 +          U_Category  = 'HR' ;
19283 +          END;
19284 +        ELSE DO;
19285 +          IF  NOT MISSING(TextCluster4_SVD10 ) AND
19286 +            TextCluster4_SVD10  <      0.0253142255519 THEN DO;
19287 +            _NODE_  =                   24;
19288 +            _LEAF_  =                    4;
19289 +            P_CategoryHR  =                    0;
19290 +            P_CategoryDESIGNER  =                    0;
19291 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19292 +            P_CategoryTEACHER  =                    0;
19293 +            P_CategoryADVOCATE  =                    0;
19294 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19295 +            P_CategoryHEALTHCARE  =                    0;
19296 +            P_CategoryFITNESS  =                    0;
19297 +            P_CategoryOTHER  =                    0;
19298 +            P_CategorySALES  =                    0;
19299 +            P_CategoryCONSULTANT  =                    0;
19300 +            P_CategoryDIGITAL_MEDIA  =                    1;
19301 +            Q_CategoryHR  =                    0;
19302 +            Q_CategoryDESIGNER  =                    0;
19303 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19304 +            Q_CategoryTEACHER  =                    0;
19305 +            Q_CategoryADVOCATE  =                    0;
19306 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19307 +            Q_CategoryHEALTHCARE  =                    0;
19308 +            Q_CategoryFITNESS  =                    0;
19309 +            Q_CategoryOTHER  =                    0;
19310 +            Q_CategorySALES  =                    0;
19311 +            Q_CategoryCONSULTANT  =                    0;
19312 +            Q_CategoryDIGITAL_MEDIA  =                    1;
19313 +            V_CategoryHR  =     0.09090909090909;
19314 +            V_CategoryDESIGNER  =     0.09090909090909;
19315 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19316 +            V_CategoryTEACHER  =                    0;
19317 +            V_CategoryADVOCATE  =                    0;
19318 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19319 +            V_CategoryHEALTHCARE  =                    0;
19320 +            V_CategoryFITNESS  =     0.09090909090909;
19321 +            V_CategoryOTHER  =                    0;
19322 +            V_CategorySALES  =     0.09090909090909;
19323 +            V_CategoryCONSULTANT  =     0.09090909090909;
19324 +            V_CategoryDIGITAL_MEDIA  =     0.54545454545454;
19325 +            I_Category  = 'DIGITAL-MEDIA' ;
19326 +            U_Category  = 'DIGITAL-MEDIA' ;
19327 +            END;
19328 +          ELSE DO;
19329 +            _NODE_  =                   25;
19330 +            _LEAF_  =                    5;
19331 +            P_CategoryHR  =                    0;
19332 +            P_CategoryDESIGNER  =                  0.9;
19333 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19334 +            P_CategoryTEACHER  =                    0;
19335 +            P_CategoryADVOCATE  =                    0;
19336 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19337 +            P_CategoryHEALTHCARE  =                    0;
19338 +            P_CategoryFITNESS  =                    0;
19339 +            P_CategoryOTHER  =                    0;
19340 +            P_CategorySALES  =                 0.05;
19341 +            P_CategoryCONSULTANT  =                    0;
19342 +            P_CategoryDIGITAL_MEDIA  =                 0.05;
19343 +            Q_CategoryHR  =                    0;
19344 +            Q_CategoryDESIGNER  =                  0.9;
19345 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19346 +            Q_CategoryTEACHER  =                    0;
19347 +            Q_CategoryADVOCATE  =                    0;
19348 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19349 +            Q_CategoryHEALTHCARE  =                    0;
19350 +            Q_CategoryFITNESS  =                    0;
19351 +            Q_CategoryOTHER  =                    0;
19352 +            Q_CategorySALES  =                 0.05;
19353 +            Q_CategoryCONSULTANT  =                    0;
19354 +            Q_CategoryDIGITAL_MEDIA  =                 0.05;
19355 +            V_CategoryHR  =                    0;
19356 +            V_CategoryDESIGNER  =     0.78260869565217;
19357 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19358 +            V_CategoryTEACHER  =     0.04347826086956;
19359 +            V_CategoryADVOCATE  =                    0;
19360 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19361 +            V_CategoryHEALTHCARE  =                    0;
19362 +            V_CategoryFITNESS  =                    0;
19363 +            V_CategoryOTHER  =                    0;
19364 +            V_CategorySALES  =     0.08695652173913;
19365 +            V_CategoryCONSULTANT  =                    0;
19366 +            V_CategoryDIGITAL_MEDIA  =     0.08695652173913;
19367 +            I_Category  = 'DESIGNER' ;
19368 +            U_Category  = 'DESIGNER' ;
19369 +            END;
19370 +          END;
19371 +        END;
19372 +      ELSE DO;
19373 +        IF  NOT MISSING(TextCluster4_SVD12 ) AND
19374 +          TextCluster4_SVD12  <    -0.11300450651431 THEN DO;
19375 +          _NODE_  =                   22;
19376 +          _LEAF_  =                    6;
19377 +          P_CategoryHR  =                    0;
19378 +          P_CategoryDESIGNER  =      0.0392156862745;
19379 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19380 +          P_CategoryTEACHER  =                    0;
19381 +          P_CategoryADVOCATE  =     0.17647058823529;
19382 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
19383 +          P_CategoryHEALTHCARE  =     0.01960784313725;
19384 +          P_CategoryFITNESS  =     0.66666666666666;
19385 +          P_CategoryOTHER  =     0.05882352941176;
19386 +          P_CategorySALES  =                    0;
19387 +          P_CategoryCONSULTANT  =     0.01960784313725;
19388 +          P_CategoryDIGITAL_MEDIA  =                    0;
19389 +          Q_CategoryHR  =                    0;
19390 +          Q_CategoryDESIGNER  =      0.0392156862745;
19391 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19392 +          Q_CategoryTEACHER  =                    0;
19393 +          Q_CategoryADVOCATE  =     0.17647058823529;
19394 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01960784313725;
19395 +          Q_CategoryHEALTHCARE  =     0.01960784313725;
19396 +          Q_CategoryFITNESS  =     0.66666666666666;
19397 +          Q_CategoryOTHER  =     0.05882352941176;
19398 +          Q_CategorySALES  =                    0;
19399 +          Q_CategoryCONSULTANT  =     0.01960784313725;
19400 +          Q_CategoryDIGITAL_MEDIA  =                    0;
19401 +          V_CategoryHR  =                    0;
19402 +          V_CategoryDESIGNER  =                 0.05;
19403 +          V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
19404 +          V_CategoryTEACHER  =                    0;
19405 +          V_CategoryADVOCATE  =                    0;
19406 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19407 +          V_CategoryHEALTHCARE  =                 0.05;
19408 +          V_CategoryFITNESS  =                  0.8;
19409 +          V_CategoryOTHER  =                 0.05;
19410 +          V_CategorySALES  =                    0;
19411 +          V_CategoryCONSULTANT  =                    0;
19412 +          V_CategoryDIGITAL_MEDIA  =                    0;
19413 +          I_Category  = 'FITNESS' ;
19414 +          U_Category  = 'FITNESS' ;
19415 +          END;
19416 +        ELSE DO;
19417 +          IF  NOT MISSING(TextCluster4_SVD4 ) AND
19418 +                0.26328465066599 <= TextCluster4_SVD4  THEN DO;
19419 +            _NODE_  =                   29;
19420 +            _LEAF_  =                    8;
19421 +            P_CategoryHR  =                    0;
19422 +            P_CategoryDESIGNER  =     0.22222222222222;
19423 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19424 +            P_CategoryTEACHER  =     0.66666666666666;
19425 +            P_CategoryADVOCATE  =                    0;
19426 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19427 +            P_CategoryHEALTHCARE  =                    0;
19428 +            P_CategoryFITNESS  =                    0;
19429 +            P_CategoryOTHER  =                    0;
19430 +            P_CategorySALES  =                    0;
19431 +            P_CategoryCONSULTANT  =                    0;
19432 +            P_CategoryDIGITAL_MEDIA  =     0.11111111111111;
19433 +            Q_CategoryHR  =                    0;
19434 +            Q_CategoryDESIGNER  =     0.22222222222222;
19435 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19436 +            Q_CategoryTEACHER  =     0.66666666666666;
19437 +            Q_CategoryADVOCATE  =                    0;
19438 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19439 +            Q_CategoryHEALTHCARE  =                    0;
19440 +            Q_CategoryFITNESS  =                    0;
19441 +            Q_CategoryOTHER  =                    0;
19442 +            Q_CategorySALES  =                    0;
19443 +            Q_CategoryCONSULTANT  =                    0;
19444 +            Q_CategoryDIGITAL_MEDIA  =     0.11111111111111;
19445 +            V_CategoryHR  =                    0;
19446 +            V_CategoryDESIGNER  =                    0;
19447 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19448 +            V_CategoryTEACHER  =     0.28571428571428;
19449 +            V_CategoryADVOCATE  =     0.28571428571428;
19450 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19451 +            V_CategoryHEALTHCARE  =     0.14285714285714;
19452 +            V_CategoryFITNESS  =                    0;
19453 +            V_CategoryOTHER  =                    0;
19454 +            V_CategorySALES  =     0.14285714285714;
19455 +            V_CategoryCONSULTANT  =                    0;
19456 +            V_CategoryDIGITAL_MEDIA  =     0.14285714285714;
19457 +            I_Category  = 'TEACHER' ;
19458 +            U_Category  = 'TEACHER' ;
19459 +            END;
19460 +          ELSE DO;
19461 +            _NODE_  =                   28;
19462 +            _LEAF_  =                    7;
19463 +            P_CategoryHR  =     0.01994301994301;
19464 +            P_CategoryDESIGNER  =     0.02564102564102;
19465 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
19466 +            P_CategoryTEACHER  =     0.01994301994301;
19467 +            P_CategoryADVOCATE  =      0.1082621082621;
19468 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
19469 +            P_CategoryHEALTHCARE  =     0.13675213675213;
19470 +            P_CategoryFITNESS  =     0.04843304843304;
19471 +            P_CategoryOTHER  =     0.14529914529914;
19472 +            P_CategorySALES  =     0.15669515669515;
19473 +            P_CategoryCONSULTANT  =     0.09401709401709;
19474 +            P_CategoryDIGITAL_MEDIA  =     0.06267806267806;
19475 +            Q_CategoryHR  =     0.01994301994301;
19476 +            Q_CategoryDESIGNER  =     0.02564102564102;
19477 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
19478 +            Q_CategoryTEACHER  =     0.01994301994301;
19479 +            Q_CategoryADVOCATE  =      0.1082621082621;
19480 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15669515669515;
19481 +            Q_CategoryHEALTHCARE  =     0.13675213675213;
19482 +            Q_CategoryFITNESS  =     0.04843304843304;
19483 +            Q_CategoryOTHER  =     0.14529914529914;
19484 +            Q_CategorySALES  =     0.15669515669515;
19485 +            Q_CategoryCONSULTANT  =     0.09401709401709;
19486 +            Q_CategoryDIGITAL_MEDIA  =     0.06267806267806;
19487 +            V_CategoryHR  =     0.01463414634146;
19488 +            V_CategoryDESIGNER  =     0.02439024390243;
19489 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01951219512195;
19490 +            V_CategoryTEACHER  =     0.02439024390243;
19491 +            V_CategoryADVOCATE  =     0.13658536585365;
19492 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.1560975609756;
19493 +            V_CategoryHEALTHCARE  =     0.12195121951219;
19494 +            V_CategoryFITNESS  =     0.06341463414634;
19495 +            V_CategoryOTHER  =     0.12195121951219;
19496 +            V_CategorySALES  =     0.14146341463414;
19497 +            V_CategoryCONSULTANT  =     0.10731707317073;
19498 +            V_CategoryDIGITAL_MEDIA  =     0.06829268292682;
19499 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
19500 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
19501 +            END;
19502 +          END;
19503 +        END;
19504 +      END;
19505 +    END;
19506 +  END;
19507 +
19508 +*****  RESIDUALS R_ *************;
19509 +IF  F_Category  NE 'HR'
19510 +AND F_Category  NE 'DESIGNER'
19511 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19512 +AND F_Category  NE 'TEACHER'
19513 +AND F_Category  NE 'ADVOCATE'
19514 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19515 +AND F_Category  NE 'HEALTHCARE'
19516 +AND F_Category  NE 'FITNESS'
19517 +AND F_Category  NE 'OTHER'
19518 +AND F_Category  NE 'SALES'
19519 +AND F_Category  NE 'CONSULTANT'
19520 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19521 +        R_CategoryHR  = .;
19522 +        R_CategoryDESIGNER  = .;
19523 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19524 +        R_CategoryTEACHER  = .;
19525 +        R_CategoryADVOCATE  = .;
19526 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19527 +        R_CategoryHEALTHCARE  = .;
19528 +        R_CategoryFITNESS  = .;
19529 +        R_CategoryOTHER  = .;
19530 +        R_CategorySALES  = .;
19531 +        R_CategoryCONSULTANT  = .;
19532 +        R_CategoryDIGITAL_MEDIA  = .;
19533 + END;
19534 + ELSE DO;
19535 +       R_CategoryHR  =  -P_CategoryHR ;
19536 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19537 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19538 +         ;
19539 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19540 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19541 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19542 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19543 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19544 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19545 +       R_CategorySALES  =  -P_CategorySALES ;
19546 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19547 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19548 +       SELECT( F_Category  );
19549 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19550 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19551 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19552 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19553 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19554 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19555 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19556 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19557 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19558 +          +1;
19559 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19560 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19561 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19562 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19563 +          +1;
19564 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19565 +        R_CategoryDIGITAL_MEDIA  +1;
19566 +       END;
19567 + END;
19568 +
19569 +****************************************************************;
19570 +******          END OF DECISION TREE SCORING CODE         ******;
19571 +****************************************************************;
19572 +
19573 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19574  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19575  quit;
19576  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
19578  proc sort data=WORK.EM_USER_REPORT;
19579  by ID VIEW;
19580  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19581  *------------------------------------------------------------*;
19582  * Tree: Computing metadata for TRAIN data;
19583  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
20241  data WORK.MODELTEMP_INFO;
20242  set EMWS3.Tree_EMINFO;
20243  where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20244  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20245  data EMWS3.Tree_EMINFO;
20246  length TARGET KEY $32 DATA $43;
20247  input TARGET KEY DATA $;
20248  cards;
 
NOTE: The data set EMWS3.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20252  run;
20253  data EMWS3.Tree_EMINFO;
20254  set EMWS3.Tree_EMINFO WORK.MODELTEMP_INFO;
20255  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20256  proc sort data = EMWS3.Tree_EMINFO NOTHREADS;
20257  by TARGET KEY;
20258  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE_EMINFO.
NOTE: The data set EMWS3.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20259  proc sort data = EMWS3.TextCluster4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20260  by TARGET KEY;
20261  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20262  proc sort data = EMWS3.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20263  by TARGET KEY;
20264  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20265  data EMWS3.Tree_EMINFO;
20266  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20267  by TARGET KEY;
20268  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20269  proc datasets lib=work nolist;
20270  delete TEMP_INFO SORTEDEMINFO;
20271  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20272  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS3.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: View EMWS3.TREE_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:14:18
*------------------------------------------------------------*
20296  data EMWS3.Tree_EMOUTFIT;
20297  set EMWS3.Tree_EMOUTFIT;
20298  length TargetLabel $200;
20299  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20300  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20301  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_EMOUTFIT.
NOTE: The data set EMWS3.TREE_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20302  proc sort data=EMWS3.Tree_EMREPORTFIT nothreads;
20303  by TARGET;
20304  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE_EMREPORTFIT.
NOTE: The data set EMWS3.TREE_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20305  %let _EMwarndup = 0;
20306  %let _EMtargetdup =;
20307  %let _EMASEtargetdup =;
20308  data _null_;
20309  set EMWS3.Tree_EMOUTFIT;
20310  if .<_ASE_<0.000001 then do;
20311  call symput('_EMwarndup', '1');
20312  call symput('_EMtargetdup', target);
20313  call symput('_EMASEtargetdup', put(_ASE_, best.));
20314  end;
20315  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20316  %let EMEXCEPTIONSTRING=;
20317  *------------------------------------------------------------*;
20318  * REPORT: Tree;
20319  *------------------------------------------------------------*;
20320  %let EM_ACTION = REPORT;
20321  %let syscc = 0;
20322  %macro main;
20323
20324    %if %upcase(&EM_ACTION) = CREATE %then %do;
20325      filename temp catalog 'sashelp.emmodl.tree_create.source';
20326      %include temp;
20327      filename temp;
20328
20329      %em_tree_create;
20330    %end;
20331
20332     %else
20333     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20334
20335         filename temp catalog 'sashelp.emmodl.tree_train.source';
20336         %include temp;
20337         filename temp;
20338         %em_tree_train;
20339     %end;
20340
20341    %else
20342    %if %upcase(&EM_ACTION) = SCORE %then %do;
20343      filename temp catalog 'sashelp.emmodl.tree_score.source';
20344      %include temp;
20345      filename temp;
20346
20347      %em_tree_score;
20348
20349    %end;
20350
20351    %else
20352    %if %upcase(&EM_ACTION) = REPORT %then %do;
20353
20354         filename temp catalog 'sashelp.emmodl.tree_report.source';
20355         %include temp;
20356         filename temp;
20357
20358         %em_tree_report;
20359     %end;
20360
20361    %else
20362    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20363
20364         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20365         %include temp;
20366         filename temp;
20367         %EM_TREE_OPENTREEVIEWER;
20368
20369     %end;
20370
20371    %else
20372    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20373
20374         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20375         %include temp;
20376         filename temp;
20377         %EM_TREE_CLOSETREEVIEWER;
20378
20379     %end;
20380
20381
20382     %doendm:
20383  %mend main;
20384
20385  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20387 +%macro em_tree_makePlotDs( multipleTar= );
20389 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20390 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20391 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20392 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20394 +  /* determine if validation statistics will be displayed */
20395 +  %let validflag=N;
20396 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20397 +    /* determine if validation data exists */
20398 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20399 +      %let validflag=Y;
20400 +    %end;
20401 +  %end;
20403 +   /* retrieve name of decmeta even in presence of multiple targets */
20404 +   %let decmeta = ;
20405 +   %if &EM_DEC_DECMETA eq %then %do;
20406 +     data _Target;
20407 +       set &em_data_variableset;
20408 +       where ROLE='TARGET' and USE in('D', 'Y');
20409 +       keep NAME;
20410 +     run;
20411 +     proc sort data=_Target;
20412 +       by NAME;
20413 +     run;
20414 +     proc sort data=EM_TARGETDECINFO;
20415 +       by TARGET;
20416 +     run;
20417 +     data _Target;
20418 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20419 +       by NAME;
20420 +       if _a then do;
20421 +         call symput('decmeta', trim(DECMETA));
20422 +       end;
20423 +     run;
20424 +     proc delete data=_Target;run;
20425 +   %end;
20426 +   %else %let decmeta = &EM_DEC_DECMETA;
20429 +  /* retrieve targetEvent from decmeta */
20430 +  %let targetEvent=;
20431 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20432 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20433 +      data _null_;
20434 +       set &DECMETA(where=(_TYPE_="TARGET"));
20435 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20436 +      run;
20437 +    %end;
20438 +  %end;
20440 +  /* retrieve predicted var for targetEvent from decmeta */
20441 +  %let predTarget=;
20442 +  %let predLvl=;
20443 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20444 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20445 +      data _null_;
20446 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20447 +       call symput('predTarget', strip(VARIABLE));
20448 +       call symput('predLvl', strip(LEVEL));
20449 +      run;
20450 +    %end;
20451 +  %end;
20452 +  %else %do;
20453 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20454 +      data _null_;
20455 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20456 +       call symput('predTarget', strip(VARIABLE));
20457 +      run;
20458 +    %end;
20459 +  %end;
20461 +  /* create BelowText value */
20462 +  data belowtext;
20463 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20464 +    keep node belowtext;
20465 +  run;
20467 +  /* replace belowtext with variable label if it exists */
20468 +  data belowtext2;
20469 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20470 +    keep node belowtextlbl;
20471 +  run;
20473 +  proc sort data=belowtext; by node; run;
20474 +  proc sort data=belowtext2; by node; run;
20476 +  data belowtext;
20477 +    merge belowtext belowtext2(in=_a);
20478 +    by node;
20479 +    if _a then belowtext=belowtextlbl;
20480 +    keep node belowtext;
20481 +  run;
20483 +  /* create AboveText value */
20484 +  data abovetext;
20485 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20486 +  run;
20487 +  proc sort data=abovetext; by node numeric_value; run;
20489 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20490 +  data abovetext;
20491 +    set abovetext(rename=(node=parent));
20492 +    by parent numeric_value;
20493 +    retain abovetext tempstring flag branch origval origchar ;
20494 +    length abovetext $256;
20495 +    length tempstring origchar $64;
20497 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20498 +      if first.parent then do;
20499 +        if missing(character_value) then do;
20500 +          numeric_value = round(numeric_value, &sp_precision);
20501 +          abovetext = "< "||strip(NUMERIC_VALUE);
20502 +          branch = 1;
20503 +          origval = numeric_value;
20504 +          output;
20505 +        end;
20506 +        else do;
20507 +          abovetext = "< "||strip(CHARACTER_VALUE);
20508 +          branch = 1;
20509 +          origchar = character_value;
20510 +          output;
20511 +        end;
20513 +        if first.parent AND last.parent then do;
20514 +          if missing(character_value) then do;
20515 +            numeric_value = round(numeric_value, &sp_precision);
20516 +            branch = branch + 1;
20517 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20518 +            output;
20519 +          end;
20520 +          else do;
20521 +            branch = branch + 1;
20522 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20523 +            output;
20524 +          end;
20525 +        end;
20526 +      end;
20527 +      else if last.parent then do;
20528 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20529 +          if missing(character_value) then do;
20530 +            numeric_value = round(numeric_value, &sp_precision);
20531 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20532 +          end;
20533 +          else do;
20534 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20535 +          end;
20536 +          branch = branch + 1;
20537 +          output;
20539 +          if missing(character_value) then do;
20540 +            numeric_value = round(numeric_value, &sp_precision);
20541 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20542 +          end;
20543 +          else do;
20544 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20545 +          end;
20546 +          branch = branch + 1;
20547 +          output;
20548 +        end;
20549 +        else do;
20550 +          if missing(character_value) then do;
20551 +            numeric_value = round(numeric_value, &sp_precision);
20552 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20553 +          end;
20554 +          else do;
20555 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20556 +          end;
20557 +          branch = branch + 1;
20558 +          output;
20559 +        end;
20560 +      end;
20561 +      else do;
20562 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20563 +          if missing(character_value) then do;
20564 +            numeric_value = round(numeric_value,&sp_precision);
20565 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20566 +            origval = numeric_value;
20567 +          end;
20568 +          else do;
20569 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20570 +            origchar = character_value;
20571 +          end;
20572 +          branch = branch + 1;
20573 +          output;
20575 +        end;
20576 +        else do;
20577 +          if missing(character_value) then do;
20578 +            numeric_value = round(numeric_value, &sp_precision);
20579 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20580 +            origval = numeric_value;
20581 +          end;
20582 +          else do;
20583 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20584 +            origval = character_value;
20585 +          end;
20586 +          branch = branch + 1;
20587 +          output;
20588 +        end;
20589 +      end;
20590 +    end;
20591 +    else do;
20592 +       if first.numeric_value then do;
20593 +         flag = 0;
20594 +         abovetext = strip(CHARACTER_VALUE);
20595 +         branch = numeric_value;
20596 +         if first.numeric_value AND last.numeric_value then do;
20597 +           output;
20598 +         end;
20599 +       end;
20600 +       else if last.numeric_value then do;
20601 +         if flag=0 then do;
20602 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20603 +           length = length(strip(tempstring));
20604 +           if length < 32 then do;
20605 +             abovetext = strip(tempstring);
20606 +           end;
20607 +           else do;
20608 +             abovetext = strip(abovetext)||", ...";
20609 +             flag = 1;
20610 +           end;
20611 +         end;
20612 +         branch = numeric_value;
20613 +         output;
20614 +       end;
20615 +       else do;
20616 +         if flag=0 then do;
20617 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20618 +           length = length(strip(tempstring));
20619 +           if length < 32 then do;
20620 +             abovetext = strip(tempstring);
20621 +           end;
20622 +           else do;
20623 +             abovetext = strip(abovetext)||", ...";
20624 +             flag=1;
20625 +           end;
20626 +         end;
20627 +         branch = numeric_value;
20628 +       end;
20629 +    end;
20630 +    keep parent branch abovetext;
20631 +  run;
20633 +  /* Missing value to abovetext */
20634 +  data tempmissing;
20635 +    set &EM_USER_OUTRULES;
20636 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20637 +    rename node=parent numeric_value=branch character_value=misschar;
20638 +  run;
20641 +  proc sort data=abovetext; by parent branch; run;
20642 +  proc sort data=tempmissing; by parent branch; run;
20643 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20645 +  data tempoutnodes;
20646 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20647 +    by parent branch;
20648 +    length traintotal validtotal 8;
20649 +    retain traintotal validtotal;
20651 +    if _a then do;
20652 +      if ^MISSING(abovetext) then do;
20653 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20654 +      end;
20655 +      else do;
20656 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20657 +      end;
20658 +    end;
20659 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20661 +    if node=1 then do;
20662 +      traintotal = N;
20663 +      validtotal=VN;
20664 +    end;
20666 +    drop role rank stat misschar belowtext;
20667 +  run;
20668 +  proc sort data=tempoutnodes; by node; run;
20669 +  proc sort data=belowtext; by node; run;
20671 +  data tempoutnodes;
20672 +    merge tempoutnodes belowtext;
20673 +    by node;
20675 +  run;
20677 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20678 +  %let adjusted = N;
20679 +  %let npriors = 0;
20680 +  data _null_ ;
20681 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20682 +    if eof then do ;
20683 +      call symput("npriors" , strip(put(_N_,best.))) ;
20684 +    end;
20685 +  run;
20686 +  %if &npriors gt 0 %then %let adjusted=Y;
20689 +  /* create a table with targetUsed and targetLevel columns for each node */
20690 +  data temptarmeta;
20691 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20692 +    %if &multipleTar eq N %then %do;
20693 +      AND USE in ('D', 'Y')
20694 +    %end;
20695 +    ));
20696 +    length TARGET $32;
20697 +    Target=name;
20698 +    keep target level;
20699 +  run;
20701 +  %if &multipleTar eq Y %then %do;
20702 +    data temptargetused;
20703 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20704 +      keep node target;
20705 +    run;
20706 +    proc sort data=temptargetused; by target; run;
20707 +    proc sort data=temptarmeta; by target; run;
20708 +    data temptargetused;
20709 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20710 +      by target;
20711 +      if _a and _b;
20712 +    run;
20713 +  %end;
20714 +  %else %do;
20715 +    data temptargetused;
20716 +      set &EM_USER_OUTSTATS;
20717 +      length target $32 tarlevel $10;
20718 +      target="%EM_TARGET";
20719 +      tarlevel="%EM_TARGET_LEVEL";
20720 +      keep node target tarlevel;
20721 +    run;
20722 +    proc sort data=temptargetused nodupkey; by node; run;
20723 +  %end;
20725 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20726 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20727 +  proc sort data=temptargetused; by node; run;
20730 +  /* create tables for all interval targets as well as all class targets */
20731 +  data tempinterval tempclass;
20732 +    merge tempoutstats temptargetused( rename=(target=targetused));
20733 +    by node;
20734 +    %if "&multipleTar" eq "Y" %then %do;
20735 +      if ((missing(Target)) OR (target=targetused ));
20736 +    %end;
20738 +    if tarlevel="INTERVAL" then output tempinterval;
20739 +    else output tempclass;
20740 +  run;
20742 +  /* initialize intTarget and classTarget flags */
20743 +  %let em_intNobs =0;
20744 +  %let em_classNobs = 0;
20745 +  %let em_intTarget= N;
20746 +  %let em_classTarget= N;
20748 +  proc sql;
20749 +    reset noprint;
20750 +    select count(*) into :em_intNobs from tempinterval;
20751 +  quit;
20752 +  proc sql;
20753 +    reset noprint;
20754 +    select count(*) into :em_classNobs from tempclass;
20755 +  quit;
20757 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20758 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20760 +  /* retrieve all information for interval targets */
20761 +  %if &em_intTarget eq Y %then %do;
20763 +    /* determine if leaf variable exists */
20764 +    %let dsid=%sysfunc(open(tempinterval,i));
20765 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20766 +    %let rc=%sysfunc(close(&dsid));
20768 +    proc transpose data=tempinterval
20769 +      %if &leafexists %then %do;
20770 +        (drop=leaf)
20771 +      %end;
20772 +      %if &validexist %then %do;
20773 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20774 +      %end;
20775 +      %else %do;
20776 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20777 +      %end;
20778 +      by node;
20779 +      id statname;
20780 +    run;
20781 +    data tempinterval;
20782 +      set tempinterval;
20783 +      if missing(N) then delete;
20784 +    run;
20785 +  %end;
20787 +  /* retrieve all information for class targets */
20788 +  %if &em_classTarget eq Y %then %do;
20789 +    proc sort data=tempclass; by node category; run;
20790 +    %if &validflag eq N %then %do;
20791 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20792 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20793 +    %end;
20794 +    %else %do;
20795 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20796 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20797 +    %end;
20798 +      set tempclass;
20800 +      %if &validflag eq N %then %do;
20801 +        %if "&adjusted" eq "N" %then %do;
20802 +          if statname="N" then output tempn;
20803 +        %end;
20804 +        %else %do;
20805 +          if statname="NPRIORS" then output tempn;
20806 +        %end;
20807 +        else if statname="PREDICTION" then output temppredict;
20808 +        else if statname="PROBABILITY" then output tempprob;
20809 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20810 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20811 +      %end;
20812 +      %else %do;
20813 +        %if "&adjusted" eq "N" %then %do;
20814 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20815 +        %end;
20816 +        %else %do;
20817 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20818 +        %end;
20819 +        else if statname="PREDICTION" then output temppredict;
20820 +        else if statname="PROBABILITY" then output tempprob;
20821 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20822 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20823 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20824 +      %end;
20825 +    run;
20828 +    /* determine if profit/loss exists in tempprofit */
20829 +    %let em_profitflag=0;
20830 +    %let em_lossflag=0;
20831 +    proc sql;
20832 +      reset noprint;
20833 +      select count(*) into :em_profitflag from tempprofit;
20834 +    quit;
20835 +    proc sql;
20836 +      reset noprint;
20837 +      select count(*) into :em_lossflag from temploss;
20838 +    quit;
20840 +    %if &validFlag eq Y %then %do;
20841 +      proc transpose data=tempn
20842 +        %if "&adjusted" eq "N" %then %do;
20843 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20844 +        %end;
20845 +        %else %do;
20846 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20847 +        %end;
20848 +        by node;
20849 +        id statname;
20850 +      run;
20851 +      %if &em_profitflag ne 0 %then %do;
20852 +        proc transpose data=tempprofit out=tempprofit;
20853 +          by node category;
20854 +          id statname ;
20855 +        run;
20856 +      %end;
20857 +      %if &em_lossflag ne 0 %then %do;
20858 +        proc transpose data=temploss out=temploss;
20859 +          by node category;
20860 +          id statname ;
20861 +        run;
20862 +      %end;
20863 +      data tempprob;
20864 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20865 +        by node
20866 +        %if &multipleTar eq Y %then %do;
20867 +          target
20868 +        %end;
20869 +        category;
20870 +      run;
20871 +    %end;
20873 +    /* store percentcorrect value */
20874 +    data temppredict;
20875 +      merge tempprob temppredict(in=_a);
20876 +      by node category;
20877 +      if _a then do;
20878 +        percentCorrect = statvalue;
20879 +        %if &validFlag eq Y %then %do;
20880 +          vpercentCorrect= vstatvalue;
20881 +        %end;
20882 +      end;
20883 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20884 +      %if &validFlag eq Y %then %do;
20885 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20886 +      %end;
20887 +      ;
20888 +      if missing(percentCorrect) then delete;
20889 +      drop target;
20890 +    run;
20892 +    /* build profittext */
20893 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20894 +      data tempprofittext(keep= node profittext profitloss);
20895 +        length profittext $800 profitloss 8.;
20896 +        retain profittext profitloss;
20898 +        merge tempprob
20899 +        %if &em_profitflag ne 0 %then %do;
20900 +          tempprofit
20901 +        %end;
20902 +        %else %if &em_lossflag ne 0 %then %do;
20903 +          temploss
20904 +        %end;
20905 +        ;
20906 +        by node category;
20908 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20909 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20910 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20911 +          %let profittype = ALL;
20912 +        %end;
20914 +        /* create the profitloss variable for nodecolor if selected */
20915 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20917 +        %if "&profittype" eq "ALL" %then %do;
20918 +          if strip(CATEGORY)="&targetEvent" then do;
20919 +            profitloss=statvalue;
20920 +          end;
20921 +          if first.node then do;
20922 +            %if &validFlag eq N %then %do;
20923 +             %if &em_profitflag ne 0 %then %do;
20924 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20925 +             %end;
20926 +             %if &em_lossflag ne 0 %then %do;
20927 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20928 +             %end;
20929 +            %end;
20930 +            %else %do;
20931 +             %if &em_profitflag ne 0 %then %do;
20932 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20932!+;
20933 +             %end;
20934 +             %if &em_lossflag ne 0 %then %do;
20935 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20936 +             %end;
20937 +            %end;
20938 +          end;
20939 +          else if last.node then do;
20940 +            %if &validFlag eq N %then %do;
20941 +             %if &em_profitflag ne 0 %then %do;
20942 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20943 +             %end;
20944 +             %if &em_lossflag ne 0 %then %do;
20945 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20946 +             %end;
20947 +             /*if CATEGORY="&targetEvent" then do;
20948 +               profitloss=statvalue;
20949 +             end;*/
20950 +            %end;
20951 +            %else %do;
20952 +             %if &em_profitflag ne 0 %then %do;
20953 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20953!+14.&EM_PROPERTY_SPLITPRECISION);
20954 +                if CATEGORY="&targetEvent" then do;
20955 +                 profitloss=ALTERNATIVE_PROFIT;
20956 +                end;
20957 +             %end;
20958 +             %if &em_lossflag ne 0 %then %do;
20959 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20959!+14.&EM_PROPERTY_SPLITPRECISION);
20960 +                if CATEGORY="&targetEvent" then do;
20961 +                  profitloss=ALTERNATIVE_LOSS;
20962 +                end;
20963 +             %end;
20964 +            %end;
20965 +            output;
20966 +          end;
20967 +          else do;
20968 +            %if &validFlag eq N %then %do;
20969 +             %if &em_profitflag ne 0 %then %do;
20970 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20971 +             %end;
20972 +             %if &em_lossflag ne 0 %then %do;
20973 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20974 +             %end;
20975 +            %end;
20976 +            %else %do;
20977 +             %if &em_profitflag ne 0 %then %do;
20978 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20978!+14.&EM_PROPERTY_SPLITPRECISION);
20979 +             %end;
20980 +             %if &em_lossflag ne 0 %then %do;
20981 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20981!+14.&EM_PROPERTY_SPLITPRECISION);
20982 +             %end;
20983 +            %end;
20984 +          end;
20985 +        %end;
20986 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20987 +          if strip(CATEGORY) = "&targetevent" then do;
20988 +            %if &validFlag eq N %then %do;
20989 +             %if &em_profitflag ne 0 %then %do;
20990 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20991 +             %end;
20992 +             %if &em_lossflag ne 0 %then %do;
20993 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20994 +             %end;
20995 +             profitloss=statvalue;
20996 +            %end;
20997 +            %else %do;
20998 +             %if &em_profitflag ne 0 %then %do;
20999 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20999!+;
21000 +                profitloss=ALTERNATIVE_PROFIT;
21001 +             %end;
21002 +             %if &em_lossflag ne 0 %then %do;
21003 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
21004 +                profitloss=ALTERNATIVE_LOSS;
21005 +             %end;
21006 +            %end;
21007 +            output;
21008 +          end;
21009 +        %end;
21010 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
21011 +          if strip(CATEGORY) = "&targetevent" then do;
21012 +            %if &validFlag eq N %then %do;
21013 +             profitloss=statvalue;
21014 +            %end;
21015 +            %else %do;
21016 +             %if &em_profitflag ne 0 %then %do;
21017 +                profitloss=ALTERNATIVE_PROFIT;
21018 +             %end;
21019 +             %if &em_lossflag ne 0 %then %do;
21020 +                profitloss=ALTERNATIVE_LOSS;
21021 +             %end;
21022 +            %end;
21023 +            output;
21024 +          end;
21025 +        %end;
21026 +      run;
21027 +    %end;
21029 +    data tempprob(keep= node probtext);
21030 +      length probtext $800;
21031 +      retain probtext;
21032 +      set tempprob ;
21033 +      by node;
21035 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
21036 +      %let probtype = &EM_PROPERTY_TARGET;
21037 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
21038 +        %let probtype = ALL;
21039 +      %end;
21041 +      %if "&probtype" eq "ALL" %then %do;
21042 +        if first.node then do;
21043 +          %if &validFlag eq N %then %do;
21044 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21045 +          %end;
21046 +          %else %do;
21047 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21048 +          %end;
21049 +        end;
21050 +        else if last.node then do;
21051 +          %if &validFlag eq N %then %do;
21052 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21053 +          %end;
21054 +          %else %do;
21055 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21056 +          %end;
21057 +          output;
21058 +        end;
21059 +        else do;
21060 +          %if &validFlag eq N %then %do;
21061 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21062 +          %end;
21063 +          %else %do;
21064 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21065 +          %end;
21066 +        end;
21067 +      %end;
21068 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21069 +        if strip(CATEGORY) = "&targetevent" then do;
21070 +          %if &validFlag eq N %then %do;
21071 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21072 +          %end;
21073 +          %else %do;
21074 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21075 +          %end;
21076 +          output;
21077 +        end;
21078 +      %end;
21079 +      %else %if "&probtype" eq "NONE" %then %do;
21080 +        if last.node then do;
21081 +          output;
21082 +        end;
21083 +      %end;
21084 +    run;
21085 +  %end;
21087 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
21089 +  %let oldexists=0;
21090 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
21091 +     data old_tree_plot;
21092 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
21093 +        rename nodecolor=oldnodecolor;
21094 +     run;
21096 +     proc sort data=old_tree_plot;
21097 +        by node;
21098 +     run;
21100 +     %let oldexists=1;
21101 +  %end;
21103 +  data &EM_USER_TREE_PLOT;
21104 +    length textall $800;
21105 +    merge tempoutnodes temptargetused
21107 +    %if &em_intTarget eq Y %then %do;
21108 +      tempinterval
21109 +    %end;
21111 +    %if &em_classTarget eq Y %then %do;
21113 +      %if &validFlag eq N %then %do;
21114 +        tempn(rename=(statvalue=N))
21115 +      %end;
21116 +      %else %do;
21117 +        tempn
21118 +      %end;
21120 +      temppredict tempprob
21122 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21123 +        tempprofittext
21124 +      %end;
21125 +    %end;
21126 +    ;
21127 +    by node;
21129 +    /* build nodetext based on user selection */
21130 +    textall="";
21132 +    %if &em_intTarget eq Y %then %do;
21133 +    if tarlevel="INTERVAL" then do;
21134 +      /* Nodeid */
21135 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21136 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21137 +      %end;
21139 +      /* Target identifier if multiple targets are used */
21140 +      %if "&multipleTar" eq "Y" %then %do;
21141 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21142 +      %end;
21144 +      %if &validFlag eq Y %then %do;
21145 +         /* Column labels displayed in validflag eq Y only */
21146 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21147 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21147!+noquote ))";
21148 +         %end;
21150 +         /* Average values */
21151 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21152 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21153 +         %end;
21155 +         /* RASE */
21156 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21157 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21158 +         %end;
21160 +         /* Count */
21161 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21162 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21163 +         %end;
21164 +      %end;
21165 +      %else %do;
21166 +         /* Average values */
21167 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21168 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21169 +         %end;
21171 +         /* RASE */
21172 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21173 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21174 +         %end;
21176 +         /* Count */
21177 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21178 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21179 +         %end;
21180 +      %end;
21182 +      /* nodecolor */
21183 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21184 +        nodecolor=PREDICTION;
21185 +      %end;
21186 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21187 +        nodecolor=RASE;
21188 +      %end;
21189 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21190 +        nodecolor=1;
21191 +      %end;
21193 +    end;
21194 +    %end;
21195 +    %if &em_classTarget eq Y %then %do;
21196 +    if tarlevel^="INTERVAL" then  do;
21198 +      /* Nodeid */
21199 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21200 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21201 +      %end;
21202 +      /* Target identifier if multiple targets are used */
21203 +      %if "&multipleTar" eq "Y" %then %do;
21204 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21205 +      %end;
21207 +      /* Predicted values */
21208 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21209 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21210 +      %end;
21212 +      /* Column labels displayed in validflag eq Y only */
21213 +      %if "&ValidFlag" eq "Y" %then %do;
21214 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21215 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21215!+noquote ))";
21216 +        %end;
21217 +      %end;
21219 +      /* Target Values */
21220 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21221 +        textall=strip(textall)||"0A"x||strip(probtext);
21222 +      %end;
21224 +      /* include profit or loss for all target levels */
21225 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21226 +        textall=strip(textall)||"0A"x||strip(profittext);
21227 +      %end;
21229 +      %if &validFlag eq N %then %do;
21230 +        /* Percent Correct */
21231 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21232 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21233 +        %end;
21235 +         /* Count */
21236 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21237 +          %if "&adjusted" eq "N" %then %do;
21238 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21239 +          %end;
21240 +          %else %do;
21241 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21242 +          %end;
21243 +         %end;
21244 +      %end;
21245 +      %else %do;
21246 +        /* Percent Correct */
21247 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21248 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21249 +        %end;
21251 +         /* Count */
21252 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21253 +          %if "&adjusted" eq "N" %then %do;
21254 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21255 +          %end;
21256 +          %else %do;
21257 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21258 +          %end;
21259 +         %end;
21260 +      %end;
21262 +      /* nodecolor */
21263 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21264 +       %if &multipleTar ne Y %then %do;
21265 +        nodecolor=&predTarget;
21266 +       %end;
21267 +       %else %do;
21268 +         nodecolor=percentcorrect;
21269 +       %end;
21270 +      %end;
21271 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21272 +        nodecolor=percentcorrect;
21273 +      %end;
21274 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21275 +        nodecolor=1;
21276 +      %end;
21277 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21278 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21279 +          nodecolor=percentcorrect;
21280 +        %end;
21281 +        %else %do;
21282 +          nodecolor=profitloss;
21283 +        %end;
21284 +      %end;
21286 +    end;
21287 +    %end;
21288 +    %if &em_intTarget eq Y %then %do;
21289 +     drop  PREDICTION  TARGET TARLEVEL
21290 +     %if &ValidFlag eq Y %then %do;
21291 +         VPREDICTION
21292 +     %end;
21293 +     ;
21294 +    %end;
21295 +    %if &em_classTarget eq Y %then %do;
21296 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21297 +     %if &ValidFlag eq Y %then %do;
21298 +         VSTATVALUE
21299 +     %end;
21300 +     ;
21301 +    %end;
21303 +  run;
21305 +  /* add leaf index information to plotds - based on primary target only*/
21306 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21307 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21308 +      set &EM_USER_OUTSTATS;
21309 +      if ((statname="PROBABILITY"
21310 +      %if &validexist %then %do;
21311 +       or statname="VALID: PROBABILITY"
21312 +      %end;
21313 +      ) AND (CATEGORY="&TARGETEVENT")
21314 +      %if "&multipleTar" eq "Y" %then %do;
21315 +        AND (Target="%EM_TARGET")
21316 +      %end;
21317 +      );
21318 +    run;
21320 +    %if &validexist %then %do;
21321 +      proc sort data=tempprob; by node; run;
21322 +      %let vpredTarget = V%substr(&predTarget, 2);
21323 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21324 +         by node;
21325 +         id statname;
21326 +      run;
21327 +    %end;
21328 +  %end;
21329 +  %else %do;
21330 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21331 +      set &EM_USER_OUTSTATS;
21332 +      if ((statname="PREDICTION"
21333 +      %if &validexist %then %do;
21334 +       or statname="VALID: PREDICTION"
21335 +      %end;
21336 +      )
21337 +      %if "&multipleTar" eq "Y" %then %do;
21338 +        AND (Target="%EM_TARGET")
21339 +      %end;
21340 +      );
21341 +    run;
21342 +    %if &validexist %then %do;
21343 +      proc sort data=tempprob; by node; run;
21344 +      %let vpredTarget = V%substr(&predTarget, 2);
21345 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21346 +         by node;
21347 +         id statname;
21348 +      run;
21349 +    %end;
21350 +  %end;
21352 +  proc sort data=tempprob; by node; run;
21353 +  data tempoutnodes;
21354 +    merge tempoutnodes tempprob;
21355 +    by node;
21356 +  run;
21358 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21359 +  data tempnodes;
21360 +    retain traintotal validtotal;
21361 +    set tempnodes(where=(leaf ne . ));
21362 +    tprob=round(&predTarget, .01);
21363 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21364 +      percevent_train=round(tprob*100, .01);
21365 +    %end;
21366 +    %else %do;
21367 +      percevent_train=tprob;
21368 +    %end;
21370 +    perc_train=round((n/traintotal)*100, 0.01);
21371 +    /* leafwidth already has a *10 multiplier */
21372 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21374 +    %if &validexist %then %do;
21375 +      %let vpredTarget = V%substr(&predTarget,2);
21376 +      vprob=round(&vpredTarget, .01);
21377 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21378 +        percevent_valid=round(vprob*100, .01);
21379 +      %end;
21380 +      %else %do;
21381 +        percevent_valid=vprob;
21382 +      %end;
21383 +      perc_valid=round((vn/validtotal)*100, .01);
21384 +    %end;
21386 +    index=_N_;
21387 +    keep node index tprob perc_train percevent_train
21388 +    %if &validexist %then %do;
21389 +        vprob percevent_valid perc_valid
21390 +    %end;
21391 +    ;
21392 +  run;
21393 +  proc sort data=tempnodes; by node; run;
21394 +  data &EM_USER_TREE_PLOT;
21395 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21396 +    by node;
21397 +    if missing(node) then delete;
21398 +    %if &oldexists %then %do;
21399 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21400 +      drop oldnodecolor;
21401 +    %end;
21402 +    abovetext = compbl(abovetext);
21404 +    /* add variable labels */
21405 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21406 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21407 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21408 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21409 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21410 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21412 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21413 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21414 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21415 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21416 +          %end;
21417 +          %else %do;
21418 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21419 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21420 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21421 +          %end;
21422 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21424 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21425 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21426 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21427 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21428 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21429 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21430 +          %end;
21431 +          %else %do;
21432 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21433 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21434 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21435 +          %end;
21436 +    ;
21437 +  run;
21439 +  /* delete temporary tables */
21440 +  proc datasets lib=work nolist;
21441 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21442 +  run;
21444 +%mend em_tree_makePlotDs;
21448 +%macro em_tree_report;
21450 +   /* report properties */
21451 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21452 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21453 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21454 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21455 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21456 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21457 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21458 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21459 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21460 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21461 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21462 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21463 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21465 +   %let validexist=0;
21466 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21467 +     %let validexist=1;
21468 +   %end;
21470 +   /* determine if multiple targets will be processed */
21471 +   %let em_tree_multipleTargets=N;
21472 +   %let em_tree_numTarget=1;
21473 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21474 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21475 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21476 +         %let em_tree_multipleTargets=N;
21477 +      %end;
21478 +      %else %do;
21479 +        data _null_;
21480 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21481 +          if eof then
21482 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21483 +        run;
21485 +        %if &em_tree_numTarget gt 1 %then %do;
21486 +           %let em_tree_multipleTargets=Y;
21487 +        %end;
21488 +     %end;
21489 +   %end;
21491 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21493 +   /* variable importance */
21494 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21495 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21497 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21498 +     /* and the columns may not be generated                                                                                 */
21499 +     %let em_tree_cvexists=;
21500 +     %let em_tree_surrexists=.;
21501 +     data _null_;
21502 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21503 +       if eof then do ;
21504 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21505 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21506 +       end;
21507 +     run;
21509 +     data &EM_USER_OUTIMPORT;
21510 +         set &EM_USER_OUTIMPORT;
21511 +         /* format columns based on Precison value specified */
21512 +         format importance 15.&EM_PROPERTY_PRECISION
21513 +              %if &validexist %then %do;
21514 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21515 +              %end;
21516 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21517 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21518 +              %end;
21519 +         ;
21520 +     run;
21522 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21523 +     proc print data=&EM_USER_OUTIMPORT
21524 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21525 +          (where=((nrules>0) OR (nsurrogates>0)))
21526 +        %end;
21527 +        %else %do;
21528 +           (where=(nrules>0))
21529 +        %end;
21530 +        label noobs
21531 +        ;
21532 +     run;
21533 +     title10;
21535 +   %end;
21537 +   /* Sequence */
21538 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21539 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21540 +   data _null_ ;
21541 +      set &EM_USER_outseq (obs=2) end=eof ;
21542 +      if eof then do ;
21543 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21544 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21545 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21546 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21547 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21548 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21549 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21550 +      end;
21551 +    run;
21553 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21554 +      data &EM_USER_OUTSEQ;
21555 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21556 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21557 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21558 +           _XMISC_=_VMISC_
21559 +        %end;
21560 +        %if "&em_tree_aprof" ne "."  %then %do;
21561 +           _XAPROF_=_VAPROF_
21562 +           _XPROF_ = _VPROF_
21563 +        %end;
21564 +        %if "&em_tree_aloss" ne "."  %then %do;
21565 +           _XALOSS_=_VALOSS_
21566 +        %end;
21567 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21568 +           _XPASE_ = _VPASE_
21569 +           _XPMISC_ = _VPMISC_
21570 +        %end;
21572 +        ));
21573 +     %end;
21574 +     %else %do;
21575 +        set &EM_USER_OUTSEQ;
21576 +     %end;
21578 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21579 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21580 +            _MISC_   15.&EM_PROPERTY_PRECISION
21581 +         %end;
21582 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21583 +            _PASE_  15.&EM_PROPERTY_PRECISION
21584 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21585 +         %end;
21586 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21587 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21588 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21589 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21590 +            %end;
21591 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21592 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21593 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21594 +            %end;
21595 +         %end;
21596 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21597 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21598 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21599 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21600 +            %end;
21601 +         %end;
21602 +         %if "&em_tree_seq" ne "." %then %do;
21603 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21604 +         %end;
21605 +         %if "&em_tree_vseq" ne "." %then %do;
21606 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21607 +         %end;
21608 +         %if "&em_tree_aprof" ne "." %then %do;
21609 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21610 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21611 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21612 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21613 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21614 +           %end;
21615 +         %end;
21616 +         %else %if "&em_tree_aloss" ne "." %then %do;
21617 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21618 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21619 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21620 +           %end;
21621 +         %end;
21622 +      ;
21623 +    run;
21624 +   %end;
21626 +   /* Observation Based Importance */
21627 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21629 +      /* need to check for 0 obs */
21630 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21631 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21632 +      %let rc=%sysfunc(close(&dsid));
21634 +      %if &onobs %then %do;
21635 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21636 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21638 +         data &EM_USER_OUTOBSIMP;
21639 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21640 +           if _a;
21641 +           by _INPUT1_;
21642 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21643 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21644 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21645 +                   %end;
21646 +                   ;
21647 +         run;
21648 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21649 +      %end;
21650 +   %end;
21652 +  %end;
21654 +  /* create dataset to support tree diagram and icicle plot */
21655 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21656 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21658 +  /* display tree diagram */
21659 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21660 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21662 +  /* display icicle diagram */
21663 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21664 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21666 +  /* Leaf Statistics Plot */
21667 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21669 +  /* print leaf information to output window */
21670 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21672 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21673 +       by descending N;
21674 +     run;
21676 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21677 +     %local vn;
21678 +     data _null_;
21679 +       set t (obs=2) end=eof;
21680 +       if eof then do;
21681 +         call symput("vn", strip(put(vn, best.)));
21682 +       end;
21683 +     run;
21685 +     data t;
21686 +       set t;
21687 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21688 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21689 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21690 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21691 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21692 +       %end;
21693 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21694 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21695 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21696 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21697 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21698 +          %end;
21699 +       %end;
21700 +       ;
21701 +     run;
21703 +     /* determine if rase is found in t */
21704 +    %let dsid=%sysfunc(open(t,i));
21705 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21706 +    %let rc=%sysfunc(close(&dsid));
21708 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21709 +     proc print data=t noobs label;
21710 +       where tprob ne .;
21711 +       var node depth N tprob
21712 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21713 +         %if "&vn" ne "." %then %do;
21714 +           VN
21715 +         %end;
21716 +         vprob
21717 +       %end;
21718 +       %if &raseexists %then %do;
21719 +            RASE
21720 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21721 +              VRASE
21722 +            %end;
21723 +       %end;
21724 +       ;
21725 +     run;
21726 +     title10;
21727 +  %end;
21729 +  /* create plots that are done during training of node */
21730 +  /* display iterative plot, including reference line */
21731 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21732 +   /* %if &nleaves eq  %then %do; */
21733 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21734 +      data _null_;
21735 +        set &EM_USER_OUTTOPOLOGY end=eof;
21736 +        if eof then do;
21737 +          call symput('nleaves', LEAF);
21738 +        end;
21739 +      run;
21740 +   /* %end; */
21742 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21743 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21744 +  %end;
21746 +  /* display leaf statistics */
21747 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21749 +  /* stats by node if multiple targets = Y */
21750 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21751 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21752 +    data &EM_USER_OUTSTATS;
21753 +      set &EM_USER_OUTSTATS;
21755 +     * if STATNAME="TARGET" then delete;
21756 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21757 +      drop leaf;
21758 +    run;
21759 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21761 +  %end;
21762 +  %else %do;
21763 +    /* add outstats and outdescribe to spk but not results */
21764 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21765 +  %end;
21767 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set EMWS3.TREE_OUTIMPORT.
NOTE: The data set EMWS3.TREE_OUTIMPORT has 68 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE_OUTSEQ.
NOTE: The data set EMWS3.TREE_OUTSEQ has 15 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set EMWS3.TREE_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set EMWS3.TREE_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 8 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 16 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 273 observations read from the data set EMWS3.TREE_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 16 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 8 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 459 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 442 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 459 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 17 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 459 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 459 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 459 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 34 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 17 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 204 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 204 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 17 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: There were 204 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 204 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: There were 17 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 17 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 17 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 17 observations read from the data set WORK.TEMPN.
NOTE: There were 17 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE_TREE_PLOT has 17 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 17 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE_TREE_PLOT.
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE_TREE_PLOT has 17 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE_TREE_PLOT.
NOTE: The data set WORK.T has 17 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 17 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 17 observations read from the data set EMWS3.TREE_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
21768
21769  *------------------------------------------------------------*;
21770  * End REPORT: Tree;
21771  *------------------------------------------------------------*;
 
21772  /* Reset EM Options */
21773  options formchar="|----|+|---+=|-/\<>*";
21774  options nocenter ls=256 ps=10000;
21775  goptions reset=all device=GIF NODISPLAY;
 
21776  proc sort data=WORK.EM_USER_REPORT;
21777  by ID VIEW;
21778  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21779  proc sort data=EMWS3.TextCluster4_CMeta_TRAIN out=WORK.SUBSETINMETA;
21780  by NAME;
21781  run;
 
NOTE: There were 79 observations read from the data set EMWS3.TEXTCLUSTER4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 79 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21782  proc sort data=EMWS3.Tree_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21783  by NAME;
21784  run;
 
NOTE: There were 79 observations read from the data set EMWS3.TREE_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 79 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21785  data WORK.ASSESS_META;
21786  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21787  by NAME;
21788  run;
 
NOTE: There were 79 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 79 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 79 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21789  data EM_temp_assessMeta;
21790  set EMWS3.Tree_CMeta_TRAIN;
21791  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21792  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21793  data EM_temp_assessdata;
21794  set EMWS3.Tree_TRAIN(keep=
21795  F_Category
21796  I_Category
21797  P_CategoryADVOCATE
21798  P_CategoryBUSINESS_DEVELOPMENT
21799  P_CategoryCONSULTANT
21800  P_CategoryDESIGNER
21801  P_CategoryDIGITAL_MEDIA
21802  P_CategoryFITNESS
21803  P_CategoryHEALTHCARE
21804  P_CategoryHR
21805  P_CategoryINFORMATION_TECHNOLOGY
21806  P_CategoryOTHER
21807  P_CategorySALES
21808  P_CategoryTEACHER
21809  Q_CategoryADVOCATE
21810  Q_CategoryBUSINESS_DEVELOPMENT
21811  Q_CategoryCONSULTANT
21812  Q_CategoryDESIGNER
21813  Q_CategoryDIGITAL_MEDIA
21814  Q_CategoryFITNESS
21815  Q_CategoryHEALTHCARE
21816  Q_CategoryHR
21817  Q_CategoryINFORMATION_TECHNOLOGY
21818  Q_CategoryOTHER
21819  Q_CategorySALES
21820  Q_CategoryTEACHER
21821  R_CategoryADVOCATE
21822  R_CategoryBUSINESS_DEVELOPMENT
21823  R_CategoryCONSULTANT
21824  R_CategoryDESIGNER
21825  R_CategoryDIGITAL_MEDIA
21826  R_CategoryFITNESS
21827  R_CategoryHEALTHCARE
21828  R_CategoryHR
21829  R_CategoryINFORMATION_TECHNOLOGY
21830  R_CategoryOTHER
21831  R_CategorySALES
21832  R_CategoryTEACHER
21833  U_Category
21834  V_CategoryADVOCATE
21835  V_CategoryBUSINESS_DEVELOPMENT
21836  V_CategoryCONSULTANT
21837  V_CategoryDESIGNER
21838  V_CategoryDIGITAL_MEDIA
21839  V_CategoryFITNESS
21840  V_CategoryHEALTHCARE
21841  V_CategoryHR
21842  V_CategoryINFORMATION_TECHNOLOGY
21843  V_CategoryOTHER
21844  V_CategorySALES
21845  V_CategoryTEACHER
21846  _WARN_
21847  Category
21848  );
21849  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER4_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26131   data EM_temp_assessMeta;
26132   set EMWS3.Tree_CMeta_TRAIN;
26133   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26134   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26135   data EM_temp_assessdata;
26136   set EMWS3.Tree_VALIDATE(keep=
26137   F_Category
26138   I_Category
26139   P_CategoryADVOCATE
26140   P_CategoryBUSINESS_DEVELOPMENT
26141   P_CategoryCONSULTANT
26142   P_CategoryDESIGNER
26143   P_CategoryDIGITAL_MEDIA
26144   P_CategoryFITNESS
26145   P_CategoryHEALTHCARE
26146   P_CategoryHR
26147   P_CategoryINFORMATION_TECHNOLOGY
26148   P_CategoryOTHER
26149   P_CategorySALES
26150   P_CategoryTEACHER
26151   Q_CategoryADVOCATE
26152   Q_CategoryBUSINESS_DEVELOPMENT
26153   Q_CategoryCONSULTANT
26154   Q_CategoryDESIGNER
26155   Q_CategoryDIGITAL_MEDIA
26156   Q_CategoryFITNESS
26157   Q_CategoryHEALTHCARE
26158   Q_CategoryHR
26159   Q_CategoryINFORMATION_TECHNOLOGY
26160   Q_CategoryOTHER
26161   Q_CategorySALES
26162   Q_CategoryTEACHER
26163   R_CategoryADVOCATE
26164   R_CategoryBUSINESS_DEVELOPMENT
26165   R_CategoryCONSULTANT
26166   R_CategoryDESIGNER
26167   R_CategoryDIGITAL_MEDIA
26168   R_CategoryFITNESS
26169   R_CategoryHEALTHCARE
26170   R_CategoryHR
26171   R_CategoryINFORMATION_TECHNOLOGY
26172   R_CategoryOTHER
26173   R_CategorySALES
26174   R_CategoryTEACHER
26175   U_Category
26176   V_CategoryADVOCATE
26177   V_CategoryBUSINESS_DEVELOPMENT
26178   V_CategoryCONSULTANT
26179   V_CategoryDESIGNER
26180   V_CategoryDIGITAL_MEDIA
26181   V_CategoryFITNESS
26182   V_CategoryHEALTHCARE
26183   V_CategoryHR
26184   V_CategoryINFORMATION_TECHNOLOGY
26185   V_CategoryOTHER
26186   V_CategorySALES
26187   V_CategoryTEACHER
26188   _WARN_
26189   Category
26190   );
26191   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER4_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30482   %let _cn = %sysfunc(getoption(CENTER));
30483   options nocenter;
30484   proc print data=EMWS3.Tree_EMREPORTFIT noobs label;
30485   var STAT LABEL TRAIN
30486   VALIDATE
30487   TEST
30488   ;
30489   by TARGET TARGETLABEL;
30490   title9 ' ';
30491   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30492   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30493   title10;
30494   options &_cn;
 
30495   proc sort data=EMWS3.Tree_EMCLASSIFICATION nothreads;
30496   by DATAROLE TARGET TARGETLABEL;
30497   run;
 
NOTE: There were 100 observations read from the data set EMWS3.TREE_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE_EMCLASSIFICATION has 100 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30498   %let _cn = %sysfunc(getoption(CENTER));
30499   options nocenter;
30500   proc print data=EMWS3.Tree_EMCLASSIFICATION noobs label;
30501   var from into pct_row pct_col count percent
30502   ;
30503   by DATAROLE TARGET TARGETLABEL;
30504   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30505   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30506   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30507   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30508   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30509   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30510   where _TYPE_='PREDICTION';
30511   title9 ' ';
30512   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30513   run;
 
NOTE: There were 100 observations read from the data set EMWS3.TREE_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30514   title9;
30515   title10;
30516   options &_cn;
 
30517   %let _cn = %sysfunc(getoption(CENTER));
30518   options nocenter;
30519   data EMWS3.Tree_EMEVENTREPORT;
30520   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30521   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30521 ! FALSEEVENT
30522   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30523      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30524   FALSEEVENT=0;
30525   FALSENEVENT=0;
30526   TRUEEVENT=0;
30527   TRUENEVENT=0;
30528   set EMWS3.Tree_EMEVENTREPORT;
30529   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30530   proc print data=EMWS3.Tree_EMEVENTREPORT noobs label;
30531   title9 ' ';
30532   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30533   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30534   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30535   title10;
30536   options &_cn;
 
30537   proc datasets library=EMWS3 nolist;
30538   modify Tree_EMRANK;
30539   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30540   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30541   run;
 
NOTE: MODIFY was successful for EMWS3.TREE_EMRANK.DATA.
30542   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
 
30543   %let _cn = %sysfunc(getoption(CENTER));
30544   options nocenter;
30545   proc print data=EMWS3.Tree_EMRANK label noobs;
30546   var
30547   decile gain lift liftc resp respc N _meanP_;
30548   by
30549   notsorted DATAROLE
30550   notsorted TARGET
30551   notsorted TARGETLABEL
30552   ;
30553   title9 ' ';
30554   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30555   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30556   title10;
30557   options &_cn;
 
30558   proc datasets library=EMWS3 nolist;
30559   modify Tree_EMSCOREDIST;
30560   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30561   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30562   run;
 
NOTE: MODIFY was successful for EMWS3.TREE_EMSCOREDIST.DATA.
30563   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
