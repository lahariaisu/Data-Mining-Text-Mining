*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:55
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:46
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree5_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree5META;
15227  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TREE5_VARIABLESET.
NOTE: The data set WORK.TREE5META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.Tree5META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE5META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster8_TRAIN EMWS3.TextCluster8_TRAIN
EMWS3.TextCluster8_TRAIN EMWS3.TextCluster8_TRAIN EMWS3 TextCluster8_TRAIN
EMWS3.TextCluster8_TRAIN EMWS3.TextCluster8_TRAIN
EMWS3.TextCluster8_TRAIN EMWS3.TextCluster8_TRAIN EMWS3 TextCluster8_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE5_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE5_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree5_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE5_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree5_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
16001  *------------------------------------------------------------*;
16002  * Tree5: Generation of macros and macro variables;
16003  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
16004  *------------------------------------------------------------*;
 
16005  %let EMEXCEPTIONSTRING=;
16006  *------------------------------------------------------------*;
16007  * TRAIN: Tree5;
16008  *------------------------------------------------------------*;
16009  %let EM_ACTION = TRAIN;
16010  %let syscc = 0;
16011  %macro main;
16012
16013    %if %upcase(&EM_ACTION) = CREATE %then %do;
16014      filename temp catalog 'sashelp.emmodl.tree_create.source';
16015      %include temp;
16016      filename temp;
16017
16018      %em_tree_create;
16019    %end;
16020
16021     %else
16022     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16023
16024         filename temp catalog 'sashelp.emmodl.tree_train.source';
16025         %include temp;
16026         filename temp;
16027         %em_tree_train;
16028     %end;
16029
16030    %else
16031    %if %upcase(&EM_ACTION) = SCORE %then %do;
16032      filename temp catalog 'sashelp.emmodl.tree_score.source';
16033      %include temp;
16034      filename temp;
16035
16036      %em_tree_score;
16037
16038    %end;
16039
16040    %else
16041    %if %upcase(&EM_ACTION) = REPORT %then %do;
16042
16043         filename temp catalog 'sashelp.emmodl.tree_report.source';
16044         %include temp;
16045         filename temp;
16046
16047         %em_tree_report;
16048     %end;
16049
16050    %else
16051    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16052
16053         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16054         %include temp;
16055         filename temp;
16056         %EM_TREE_OPENTREEVIEWER;
16057
16058     %end;
16059
16060    %else
16061    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16062
16063         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16064         %include temp;
16065         filename temp;
16066         %EM_TREE_CLOSETREEVIEWER;
16067
16068     %end;
16069
16070
16071     %doendm:
16072  %mend main;
16073
16074  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16076 +%macro em_tree_train;
16078 +   %if &EM_IMPORT_DATA eq %then %do;
16079 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16080 +       %put &em_codebar;
16081 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16082 +       %put &errormsg;
16083 +       %put &em_codebar;
16084 +       %goto doendm;
16085 +   %end;
16086 +   %else
16087 +       %let EMEXCEPTIONSTRING =;
16089 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16090 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16091 +        %put &em_codebar;
16092 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16093 +        %put &errormsg;
16094 +        %put &em_codebar;
16095 +        %goto doendm;
16096 +   %end;
16098 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16099 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16100 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16101 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16102 +        %put &em_codebar;
16103 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16104 +        %put &errormsg;
16105 +        %put &em_codebar;
16106 +        %goto doendm;
16107 +   %end;
16109 +   /* Initialize property macro variables */
16110 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16111 +   %include temp;
16112 +   filename temp;
16114 +   %EM_SetProperties;
16116 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16117 +   %EM_GETNAME(key=EMTREE, type=DATA);
16118 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16119 +     /* if import eq Y and no importtable defined, throw an exception */
16120 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16121 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16122 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16123 +         %put &em_codebar;
16124 +         %put &errmsg;
16125 +         %put &em_codebar;
16126 +         %goto doendm;
16127 +      %end;
16128 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16129 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16130 +         %put &em_codebar;
16131 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16132 +         %put &errormsg;
16133 +         %put &em_codebar;
16134 +         %goto doendm;
16135 +      %end;
16136 +      %else %do;
16137 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16138 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16139 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16140 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16141 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16142 +         %let dsid = %sysfunc(close(&dsid));
16143 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16144 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16145 +            %put &em_codebar;
16146 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16147 +            %put &errormsg;
16148 +            %put &em_codebar;
16149 +            %goto doendm;
16150 +         %end;
16151 +      %end;
16152 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16153 +         proc delete data=&EM_USER_EMTREE;
16154 +         run;
16155 +      %end;
16156 +   %end;
16157 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16158 +      proc delete data=&EM_USER_EMTREE;
16159 +      run;
16160 +   %end;
16162 +   /* load tree macros */
16163 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16164 +   %include temp;
16165 +   filename temp;
16167 +   /* data sets */
16168 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16169 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16170 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16172 +   /* files */
16173 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16175 +   /* check actual num of target levels */
16176 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16177 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16178 +                              nLevel=_nTargetLevel );
16179 +      %if &_nTargetLevel  > 2 %then %do;
16180 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16181 +        %put &em_codebar;
16182 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16183 +        %put &errormsg;
16184 +        %put &em_codebar;
16185 +        %goto doendm;
16186 +      %end;
16187 +   %end;
16189 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16190 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16191 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16192 +        %let costflag=0;
16193 +        data _null_;
16194 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16195 +          if eof then call symput("costflag", _N_);
16196 +        run;
16197 +        %if &costflag gt 0 %then %do;
16198 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16199 +          %put &em_codebar;
16200 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16201 +          %put &errormsg;
16202 +          %put &em_codebar;
16203 +          %goto doendm;
16204 +       %end;
16205 +     %end;
16206 +   %end;
16208 +   /* determine if multiple targets will be processed */
16209 +   %let em_tree_multipleTargets=N;
16210 +   %let em_tree_numTarget = 1;
16211 +   %let em_tree_targetVars=;
16213 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16214 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16215 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16216 +         %let em_tree_multipleTargets=N;
16217 +      %end;
16218 +      %else %do;
16219 +         /* create macro array of targets  */
16220 +         data _null_;
16221 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16222 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16223 +           if eof then
16224 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16225 +        run;
16227 +        %if &em_tree_numTarget gt 1 %then %do;
16228 +           %let em_tree_multipleTargets=Y;
16229 +        %end;
16230 +      %end;
16231 +   %end;
16233 +   /* create view of only necessary variable for performance reasons */
16234 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16235 +   data &tempData / view=&tempData;
16236 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16237 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16238 +       %EM_TARGET
16239 +     %end;
16240 +     %else %do;
16241 +       %if &em_tree_numTarget ne 0 %then %do;
16242 +         %do i=1 %to &em_tree_numTarget;
16243 +            &&em_tree_targetVars&i
16244 +         %end;
16245 +       %end;
16246 +     %end;
16247 +     );
16248 +   run;
16250 +   /* run Tree procedure */
16251 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16253 +   /* Check return code and throw exception if error is detected */
16254 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16255 +   %if &syserr %then %do;
16256 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16257 +     %goto doendm;
16258 +   %end;
16260 +   /* add decision score code if multiple targets are processed */
16261 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16262 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16263 +   %end;
16265 +   /* create outfit dataset if multiple score statements have been executed */
16266 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16268 +   /* create English Rules */
16269 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16270 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16271 +       %em_tree_makeEnglishRules;
16273 +       /* English Rules */
16274 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16276 +     %end;
16277 +   filename x;
16279 +   %doendm:
16280 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16281 +%macro EM_SetProperties;
16283 +   /* train properties */
16284 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16289 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16290 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16293 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16294 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16295 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16296 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16297 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16298 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16299 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16300 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16301 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16302 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16303 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16304 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16309 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16310 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16311 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16313 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16314 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16315 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16316 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16317 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16318 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16319 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16320 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16321 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16322 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16323 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16324 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16326 +   /* properties for interactive sample */
16327 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16328 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16329 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16330 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16332 +   /* report properties */
16333 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16334 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16335 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16336 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16337 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16338 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16339 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16340 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16341 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16342 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16343 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16344 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16345 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16347 +   /* score properties */
16348 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16349 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16351 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE5_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16353 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16354 +  %global &nLevel;
16355 +  proc dmdb batch data=&indata
16356 +    classout=_tmp_dmdbout;
16357 +    class &target;
16358 +  run;
16359 +  data _tmp_dmdbout;
16360 +    set _tmp_dmdbout;
16361 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16362 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16363 +  run;
16364 +  data _null_;
16365 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16366 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16367 +    %let dsid = %sysfunc(close(&dsid));
16368 +     call symput("&nLevel", put(&_obs, Best12.));
16369 +  run;
16371 +  proc datasets lib=work nolist;
16372 +     delete _tmp_dmdbout;
16373 +  run;
16374 +  quit;
16375 +%Mend EM_CheckBinaryTargetLevel;
16378 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16380 +  /* determine the number of obs in training data */
16381 +  proc sql;
16382 +    reset noprint;
16383 +    select count(*) into :em_nobs from &indata;
16384 +  quit;
16386 +  /* determine the number of input variables */
16387 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16388 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16390 +  /* retrieve targetEvent from decmeta */
16391 +  %let targetEvent=;
16392 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16393 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16394 +      data _null_;
16395 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16396 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16397 +      run;
16398 +    %end;
16399 +  %end;
16401 +  /* create targetTable if multipleTar eq Y */
16402 +  data temptarget;
16403 +    set &EM_DATA_VARIABLESET;
16404 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16405 +  run;
16407 + /* data sets */
16408 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16409 + %EM_GETNAME(key=EMTREE,        type=DATA);
16410 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16411 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16412 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16413 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16414 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16415 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16416 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16417 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16419 + /* files */
16420 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16421 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16423 + /* turn on pmml if requested */
16424 + %let nnpmml=0;
16425 + %if %symexist(EM_PMML) %then %do;
16426 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16427 +       %let nnpmml=1;
16429 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16430 +   %end;
16431 +%end;
16433 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16435 +%if &nnpmml or &numClassTarget %then %do;
16437 +    /* create dmdb needed for pmml generation */
16438 +    %let tree_maxlevel = 512;
16439 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16440 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16441 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16442 +      %end;
16443 +    %end;
16444 +    %if &tree_maxlevel gt 0 %then %do;
16445 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16446 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16447 +    %end;
16449 +    %let targetOrderString =;
16450 +    %let targetString = ;
16451 +    data _null_;
16452 +       length orderString nameString $10000;
16453 +       retain orderString nameString;
16454 +       set &em_data_variableset end=eof;
16455 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16456 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16457 +       %end;
16458 +       %else %do;
16459 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16460 +       %end;          select(order);
16461 +         when('')        order ='DESC';
16462 +         when('FMTASC')  order='ASCFMT';
16463 +         when('FMTDESC') order='DESFMT';
16464 +         otherwise;
16465 +       end;
16466 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16467 +       nameString = trim(nameString)!!' '!!trim(NAME);
16469 +       if eof then do;
16470 +          call symput('targetOrderString', trim(orderString));
16471 +          call symput('targetString', trim(nameString));
16472 +       end;
16473 +    run;
16475 +    %let arborkluge= "work._treeDMDB";
16477 +    proc dmdb batch data=&indata
16478 +    %if &nnpmml %then %do;
16479 +        PMML
16480 +    %end;
16481 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16483 +      %if &nnpmml %then %do;
16484 +           %if "%EM_ID" ne "" %then %do;
16485 +             id %EM_ID;
16486 +           %end;
16487 +           %if &EM_NUM_CLASS gt 0 %then %do;
16488 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16489 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16490 +                  &targetOrderString;
16491 +           %end;
16492 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16493 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16494 +           %end;
16495 +           target &targetString %EM_INTERVAL_TARGET;
16496 +           %if "%EM_FREQ" ne "" %then %do;
16497 +             freq %EM_FREQ;
16498 +           %end;
16499 +      %end;
16500 +      %else %do;
16501 +         class  &targetOrderString;
16502 +         target &targetString %EM_INTERVAL_TARGET;
16503 +      %end;
16504 +    run;
16505 +    quit;
16507 +    proc datasets lib=work nolist;
16508 +       delete classout varout;
16509 +    run;
16510 +    quit;
16512 + %end;
16515 + /* run Arbor procedure */
16516 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16517 +  proc arbor data=&INDATA
16519 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16520 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16521 +  %end;
16523 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16524 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16525 +  %end;
16527 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16528 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16529 +  %end;
16531 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16532 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16533 +  %end;
16535 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16536 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16537 +  %end;
16539 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16540 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16541 +  %end;
16542 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16543 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16544 +  %end;
16545 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16546 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16547 +  %end;
16549 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16550 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16551 +      alpha = &EM_PROPERTY_SIGLEVEL
16552 +    %end;
16553 +  %end;
16555 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16556 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16557 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16558 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16559 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16561 +        padjust =
16562 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16563 +          &chaid
16564 +        %end;
16565 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16566 +          DEPTH
16567 +        %end;
16568 +      %end;
16569 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16570 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16571 +         pvars = &num_inputs
16572 +      %end;
16573 +    %end;
16574 +  %end;
16575 +  %else %do;
16576 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16577 +         padjust = NONE
16578 +      %end;
16579 +  %end;
16581 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16582 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16583 +    Maxrules = &num_nrules
16584 +  %end;
16586 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16587 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16588 +    Maxsurrs = &num_nsurrs
16589 +  %end;
16591 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16592 +     Missing=&EM_PROPERTY_MISSINGVALUE
16593 +  %end;
16595 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16596 +     USEVARONCE
16597 +  %end;
16599 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16600 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16601 +  %end;
16604 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16605 +    event = "&targetEvent"
16606 +  %end;
16608 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16609 +     DECSEARCH
16610 +  %end;
16612 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16613 +     PRIORSSEARCH
16614 +  %end;
16616 +  %if &arbor_1 ne %then %do;
16617 +    &arbor_1
16618 +  %end;
16620 +  %if &em_arbor ne %then %do;
16621 +     &em_arbor
16622 +  %end;
16623 +  ;
16624 + %end;
16625 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16626 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16627 +       Performance &EM_PROPERTY_PERFORMANCE
16628 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16629 +         nodesize=&EM_PROPERTY_NODESAMPLE
16630 +       %end;
16631 +       ;
16632 +       interact;
16633 + %end;
16634 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16635 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16636 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16637 +    %put &em_codebar;
16638 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16639 +    %put &errormsg;
16640 +    %put &em_codebar;
16641 +    %goto doendm;
16642 +   %end;
16643 +   %else %do;
16644 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16645 +       Performance &EM_PROPERTY_PERFORMANCE
16646 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16647 +         nodesize=&EM_PROPERTY_NODESAMPLE
16648 +       %end;
16649 +       ;
16650 +       interact;
16651 +   %end;
16652 + %end;
16654 + %else %do;
16655 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16656 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16657 +    %put &em_codebar;
16658 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16659 +    %put &errormsg;
16660 +    %put &em_codebar;
16661 +    %goto doendm;
16662 +   %end;
16663 +   %else %do;
16664 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16665 +       Performance &EM_PROPERTY_PERFORMANCE
16666 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16667 +         nodesize=&EM_PROPERTY_NODESAMPLE
16668 +       %end;
16669 +       ;
16670 +        interact;
16671 +   %end;
16672 + %end;
16674 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16675 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16676 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16677 +    %end;
16679 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16680 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16681 +    %end;
16683 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16684 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16685 +    %end;
16687 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16688 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16689 +    %end;
16691 +    %if "%EM_FREQ" ne "" %then %do;
16692 +       freq %EM_FREQ;
16693 +    %end;
16695 +    %if "&multipleTar" eq "Y" %then %do;
16696 +       /* cycle through all target vars in variableset */
16697 +       %let tdsid = %sysfunc(open(temptarget));
16698 +       %if &tdsid %then %do;
16699 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16700 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16701 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16702 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16703 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16704 +             target &var / level = &lvl
16705 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16706 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16707 +             %end;
16708 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16709 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16710 +             %end;
16711 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16712 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16713 +             %end;
16714 +          %end;
16715 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16716 +       %end;
16717 +       useTarget variable = %EM_TARGET;
16718 +    %end;
16719 +    %else %do;
16720 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16721 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16722 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16723 +      %end;
16724 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16725 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16726 +      %end;
16727 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16728 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16729 +      %end;
16730 +    %end;
16732 +    %if "&multipleTar" eq "N" %then %do;
16733 +      &EM_DEC_STATEMENT;
16734 +    %end;
16736 +    Performance &EM_PROPERTY_PERFORMANCE
16737 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16738 +      nodesize=&EM_PROPERTY_NODESAMPLE
16739 +    %end;
16740 +    ;
16742 +    %if "&intFlag" eq "Y" %then %do;
16743 +       INTERACT Largest;
16744 +       Train maxnewdepth=0;
16745 +    %end;
16747 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16748 +         Assess
16749 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16750 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16751 +              %put &em_codebar;
16752 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16753 +              %put &errormsg;
16754 +              %put &em_codebar;
16755 +            %end;
16756 +            %else %do;
16757 +               Validata=&EM_IMPORT_VALIDATE
16758 +            %end;
16759 +         %end;
16760 +         %else %do;
16761 +           NoValidata
16762 +         %end;
16763 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16764 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16765 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16766 +               %if &dsid %then %do;
16767 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16768 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16769 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16770 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16771 +                   %else %do;
16772 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16773 +                      %else %let measure= MISC;
16774 +                   %end;
16775 +                 %end;
16776 +               %end;
16777 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16778 +            %end;
16779 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16780 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16781 +                 %let measure=ASE;
16782 +              %end;
16783 +              %else %do;
16784 +                 %let measure=MISC;
16785 +              %end;
16786 +            %end;
16787 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16788 +              %let measure=ASE;
16789 +            %end;
16790 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16791 +               %let measure = LIFT;
16792 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16793 +               %if &dsid %then %do;
16794 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16795 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16796 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16797 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16798 +                 %end;
16799 +               %end;
16800 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16801 +            %end;
16802 +            measure=&measure
16803 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16804 +               event = "&targetEvent"
16805 +            %end;
16806 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16807 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16808 +            %end;
16809 +         %end;
16810 +         %if "&multipleTar" eq "N" %then %do;
16811 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16812 +               CV
16813 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16814 +                 CVNITer = &EM_PROPERTY_CVNITER
16815 +               %end;
16816 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16817 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16818 +               %end;
16819 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16820 +                 CVSeed = &EM_PROPERTY_CVSEED
16821 +               %end;
16822 +            %end;
16823 +         %end;
16824 +       %end;
16825 +      ;
16827 +      %if "&intFlag" ne "Y" %then %do;
16828 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16829 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16830 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16831 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16833 +          SUBTREE &subtree
16834 +          %if "&subtree" eq "NLEAVES" %then %do;
16835 +            =&EM_PROPERTY_NSUBTREE
16836 +          %end;
16837 +          ;
16838 +        %end;
16840 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16841 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16842 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16843 +          %end;
16844 +       %end;
16845 +      %end;
16846 + %end;
16849 + MakeMacro nleaves = nleaves;
16850 + save
16851 + %if "&EM_USER_EMTREE" ne "" %then %do;
16852 +   MODEL=&EM_USER_EMTREE
16853 + %end;
16854 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16855 +   SEQUENCE=&EM_USER_OUTSEQ
16856 + %end;
16857 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16858 +   IMPORTANCE=&EM_USER_OUTIMPORT
16859 + %end;
16860 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16861 +   NODESTAT=&EM_USER_OUTNODES
16862 + %end;
16863 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16864 +   SUMMARY=&EM_USER_OUTSUMMARY
16865 + %end;
16866 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16867 +   STATSBYNODE=&EM_USER_OUTSTATS
16868 + %end;
16869 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16870 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16871 + %end;
16872 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16873 +   Pathlistnonmissing=&EM_USER_OUTPATH
16874 + %end;
16875 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16876 +   RULES = &EM_USER_OUTRULES
16877 + %end;
16878 + ;
16880 + %if "&intFlag" ne "Y" %then %do;
16882 +   %let lookupString = ;
16883 +   %if ^%symexist(EM_OPTION) %then
16884 +      %let EM_OPTION=;
16886 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16887 +      %let lookupString = LOOKUP=SELECT;
16888 +   %end;
16890 +   %let codetext=;
16891 +   %let norescodetxt=;
16893 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16894 +     %let codetext=&codetext DUMMY;
16895 +     %let norescodetxt=&norescodetxt DUMMY;
16896 +   %end;
16897 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16898 +     %let codetext=&codetext NOLEAFID;
16899 +     %let norescodetxt=&norescodetxt NOLEAFID;
16900 +   %end;
16901 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16902 +     %let norescodetxt=&norescodetxt NOPRED;
16903 +   %end;
16905 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16906 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16908 +   %if &nnpmml %then %do;
16909 +     code pmml;
16910 +   %end;
16912 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16913 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16914 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16915 +   %end;
16916 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16917 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16918 +   %end;
16919 + %end;
16921 + run;
16922 + quit;
16924 + /*%em_checkerror(); */
16925 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16926 +   /* Delete DMDB catalog */
16927 +   proc datasets lib=work nolist;
16928 +       delete _treeDMDB / mt=cat;
16929 +  run;
16930 +  %end;
16932 + %if &nnpmml %then %do;
16933 +    ods pmml close;
16934 + %end;
16936 +  %doendm:
16938 +%mend em_tree_runTreeProcedure;
16940 +%macro em_tree_createFitStats( multipleTar= );
16943 +  /* create targetTable is multipleTar eq Y */
16944 +  data temptarget;
16945 +    set &EM_DATA_VARIABLESET;
16946 +    where ROLE="TARGET";
16947 +  run;
16949 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16950 +   data &EM_USER_EMOUTFIT;
16951 +     length target $32;
16952 +     merge work.fit_train
16953 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16954 +       work.fit_valid
16955 +     %end;
16956 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16957 +       work.fit_test
16958 +     %end;
16959 +     ;
16960 +     %if "&multipleTar" eq "N" %then %do;
16961 +       target="%EM_TARGET";
16962 +     %end;
16963 +     %else %do;
16964 +       target = _TARGET_;
16965 +     %end;
16966 +     drop _NW_ _SUMW_
16967 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16968 +        _VSUMW_
16969 +     %end;
16970 +     ;
16971 +   run;
16973 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16974 +     proc datasets library=work nolist;
16975 +       delete fit_valid;
16976 +     run;
16977 +   %end;
16978 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16979 +     proc datasets library=work nolist;
16980 +       delete fit_test;
16981 +     run;
16982 +   %end;
16984 +%mend em_tree_createFitStats;
16987 +%macro em_tree_makeEnglishRules;
16989 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16990 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16992 +  /* verify that necessary tables exist and if not, skip processing */
16993 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16994 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16995 +    %goto doendm;
16996 +  %end;
16997 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16998 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16999 +    %goto doendm;
17000 +  %end;
17002 +  /* determine length of variable in outpath dataset */
17003 +  %let vlength= ;
17004 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
17005 +  %if &dsid ne %then %do;
17006 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
17007 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
17008 +  %end;
17009 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
17011 +  data tempoutpath;
17012 +    length varname $&vlength;
17013 +    retain varname;
17014 +    set &EM_USER_OUTPATH;
17016 +    if ^missing(variable) then varname=variable;
17017 +    else if ^missing(var_name) then varname=var_name;
17018 +    output;
17019 +  run;
17021 +  /* create an array of generated predicted variable names */
17022 +  %let tree_pred_vars = ;
17023 +  %let tree_pred_label = ;
17024 +  %let numpred= 0;
17025 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17027 +    data _null_;
17028 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17029 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17030 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
17031 +     if eof then
17032 +       call symput('numpred', strip(put(_N_, BEST.)));
17033 +    run;
17034 +  %end;
17036 +  /* determine if NPRIORS exists in outnodes  */
17037 +  %local nprior_flag;
17038 +  data _null_;
17039 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17040 +    if eof then do;
17041 +      call symput('nprior_flag', strip(put(npriors, best.)));
17042 +    end;
17043 +  run;
17045 +  proc sort data=tempoutpath; by node; run;
17046 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17048 +  data tempoutpath;
17049 +    merge tempoutpath(in=_a) outnodes(keep= node
17050 +    %if "&nprior_flag" ne "." %then %do;
17051 +      NPRIORS
17052 +    %end;
17053 +    %else %do;
17054 +      N
17055 +    %end;
17056 +    %if &numpred gt 0 %then %do;
17057 +      %do i=1 %to &numpred;
17058 +        &&tree_pred_vars&i
17059 +      %end;
17060 +    %end;
17061 +    );
17062 +    by node;
17063 +    if _a;
17064 +  run;
17066 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17068 +  data _null_;
17069 +    file x;
17070 +    set tempoutpath;
17071 +    by node descending varname;
17072 +    retain origvar oldnode string;
17073 +    length origvar $32 oldnode 8 string $5000;
17075 +    if _N_ = 1 then do;
17076 +      origvar = varname;
17077 +      oldnode = node;
17078 +    end;
17080 +    if first.node then do;
17081 +       put "&EM_CODEBAR";
17082 +       put " Node = " node;
17083 +       put "&EM_CODEBAR";
17084 +    end;
17086 +      if first.varname then do;
17087 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17088 +            if MISSING(CHARACTER_VALUE) then do;
17089 +             if NUMERIC_VALUE ne .  then do;
17090 +              if ^first.node then do;
17091 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17092 +              end;
17093 +              else do;
17094 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17095 +              end;
17096 +             end;
17097 +            end;
17098 +            else do;
17099 +              if ^first.node then do;
17100 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17101 +              end;
17102 +              else do;
17103 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17104 +              end;
17105 +             end;
17106 +         end;
17107 +         else if RELATION in ("=") then do;
17108 +            if ^first.node then do;
17109 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17110 +            end;
17111 +            else do;
17112 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17113 +            end;
17114 +         end;
17115 +         else if RELATION in ("ISMISSING") then do;
17116 +            if ^first.node then do;
17117 +              string = " AND "|| strip(varname) || " equals Missing";
17118 +            end;
17119 +            else do;
17120 +              string = "if "|| strip(varname) ||" equals Missing";
17121 +            end;
17122 +         end;
17123 +         else if RELATION in ("ISNOTMISSING") then do;
17124 +            if ^first.node then do;
17125 +              string = " AND "|| strip(varname) || " equals All Values";
17126 +            end;
17127 +            else do;
17128 +              string = "if "|| strip(varname) ||" equals All Values";
17129 +            end;
17130 +         end;
17131 +         if ^missing(varname) then origvar = varname;
17132 +         oldnode=node;
17134 +      end;
17135 +      else do;
17136 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17137 +          if MISSING(CHARACTER_VALUE) then do;
17138 +           if  NUMERIC_VALUE ne .  then do;
17139 +            if ^MISSING(string) then
17140 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17141 +            else
17142 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17143 +           end;
17144 +          end;
17145 +          else do;
17146 +            if ^MISSING(string) then
17147 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17148 +            else
17149 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17150 +          end;
17152 +         end;
17153 +         else if RELATION in ("=") then do;
17154 +           string = strip(string)||", "||strip(character_value);
17155 +         end;
17156 +         else if RELATION in ("ISMISSING") then do;
17158 +         end;
17159 +         if ^missing(varname) then origvar = varname;
17160 +         oldnode=node;
17161 +      end;
17162 +      if last.varname then do;
17163 +         if RELATION in ("ISMISSING") then do;
17164 +           if ^first.varname then do;
17165 +             string = strip(string) || " or MISSING";
17166 +           end;
17167 +         end;
17168 +         put string;
17169 +         if ^missing(varname) then origvar = varname;
17170 +         oldnode=node;
17171 +      end;
17173 +      if last.node then do;
17174 +         put "then ";
17175 +         put " Tree Node Identifier   = " node;
17177 +         %if "&nprior_flag" ne "." %then %do;
17178 +           put " Number of Observations = " NPRIORS;
17179 +         %end;
17180 +         %else %do;
17181 +           put " Number of Observations = " N;
17182 +         %end;
17184 +         %if &numpred gt 0 %then %do;
17185 +           %do i=1 %to &numpred;
17186 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17187 +           %end;
17188 +         %end;
17190 +         put " ";
17191 +         if ^missing(varname) then origvar = varname;
17192 +         oldnode=node;
17193 +      end;
17195 +  run;
17197 +  proc datasets lib=work nolist;
17198 +    delete tempoutpath outnodes;
17199 +  run;
17201 +  %doendm:
17202 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE5.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE5.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER8_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE5.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER8_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE5.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595084 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 95209472 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1826536 bytes of work memory.
NOTE: The subtree sequence contains 9 subtrees. The largest has 17 nodes and 9 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Created macro variable NLEAVES equal to 7.
NOTE: The data set EMWS3.TREE5_OUTIMPORT has 100 observations and 6 variables.
NOTE: The data set EMWS3.TREE5_EMTREE has 1852 observations and 4 variables.
NOTE: The data set EMWS3.TREE5_OUTNODES has 13 observations and 54 variables.
NOTE: The data set EMWS3.TREE5_OUTPATH has 68 observations and 7 variables.
NOTE: The data set EMWS3.TREE5_OUTRULES has 191 observations and 6 variables.
NOTE: The data set EMWS3.TREE5_OUTSEQ has 9 observations and 20 variables.
NOTE: The data set EMWS3.TREE5_OUTSTATS has 351 observations and 5 variables.
NOTE: The data set EMWS3.TREE5_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE5_OUTTOPOLOGY has 13 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE5.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER8_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE5.VIEW used (Total process time):
      real time           0.47 seconds
      cpu time            0.21 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER8_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE5.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.47 seconds
      cpu time            0.23 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE5_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set EMWS3.TREE5_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 68 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE5_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 68 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE5_OUTNODES.
NOTE: The data set WORK.OUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 13 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 68 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 68 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:48,
      Create Time=23Nov2023:22:13:48
 
NOTE: 158 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 68 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
17204
17205  *------------------------------------------------------------*;
17206  * End TRAIN: Tree5;
17207  *------------------------------------------------------------*;
 
17208  *------------------------------------------------------------*;
17209  * Close any missing semi colons;
17210  *------------------------------------------------------------*;
17211  ;
17212  ;
17213  ;
17214  ;
17215  quit;
17216  *------------------------------------------------------------*;
17217  * Close any unbalanced quotes;
17218  *------------------------------------------------------------*;
17219  /*; *"; *'; */
17220  ;
17221  run;
17222  quit;
17223  /* Reset EM Options */
17224  options formchar="|----|+|---+=|-/\<>*";
17225  options nocenter ls=256 ps=10000;
17226  goptions reset=all device=GIF NODISPLAY;
 
17227  proc sort data=WORK.EM_USER_REPORT;
17228  by ID VIEW;
17229  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:49
*------------------------------------------------------------*
17331  %let EMEXCEPTIONSTRING=;
17332  *------------------------------------------------------------*;
17333  * SCORE: Tree5;
17334  *------------------------------------------------------------*;
17335  %let EM_ACTION = SCORE;
17336  %let syscc = 0;
17337  %macro main;
17338
17339    %if %upcase(&EM_ACTION) = CREATE %then %do;
17340      filename temp catalog 'sashelp.emmodl.tree_create.source';
17341      %include temp;
17342      filename temp;
17343
17344      %em_tree_create;
17345    %end;
17346
17347     %else
17348     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17349
17350         filename temp catalog 'sashelp.emmodl.tree_train.source';
17351         %include temp;
17352         filename temp;
17353         %em_tree_train;
17354     %end;
17355
17356    %else
17357    %if %upcase(&EM_ACTION) = SCORE %then %do;
17358      filename temp catalog 'sashelp.emmodl.tree_score.source';
17359      %include temp;
17360      filename temp;
17361
17362      %em_tree_score;
17363
17364    %end;
17365
17366    %else
17367    %if %upcase(&EM_ACTION) = REPORT %then %do;
17368
17369         filename temp catalog 'sashelp.emmodl.tree_report.source';
17370         %include temp;
17371         filename temp;
17372
17373         %em_tree_report;
17374     %end;
17375
17376    %else
17377    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17378
17379         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17380         %include temp;
17381         filename temp;
17382         %EM_TREE_OPENTREEVIEWER;
17383
17384     %end;
17385
17386    %else
17387    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17388
17389         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17390         %include temp;
17391         filename temp;
17392         %EM_TREE_CLOSETREEVIEWER;
17393
17394     %end;
17395
17396
17397     %doendm:
17398  %mend main;
17399
17400  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17402 +%macro em_tree_score;
17404 +   /* determine if multiple targets will be processed */
17405 +   %let em_tree_multipleTargets=N;
17406 +   %let em_tree_numTarget=1;
17407 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17408 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17409 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17410 +         %let em_tree_multipleTargets=N;
17411 +      %end;
17412 +      %else %do;
17413 +         /* create macro array of targets  */
17414 +         data _null_;
17415 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17416 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17417 +           if eof then
17418 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17419 +        run;
17421 +        %if &em_tree_numTarget gt 1 %then %do;
17422 +           %let em_tree_multipleTargets=Y;
17423 +        %end;
17424 +      %end;
17425 +   %end;
17427 +   /* build flow and publish scoring code */
17428 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17429 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17431 +   filename treeflow "&EM_USER_TREEFLOW";
17432 +   filename treepub "&EM_USER_TREEPUBLISH";
17434 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17435 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17437 +   %em_copyfile(infref=treeflow, outfref=flowref);
17438 +   %em_copyfile(infref=treepub, outfref=pubref);
17440 +   filename treeflow;
17441 +   filename treepub;
17443 +   /* if priors are used, add code to generate unadjusted residuals in export */
17444 +   %let useAdjPriors = N;
17445 +   data _null_;
17446 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17447 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17448 +   run;
17449 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17450 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17451 +      %include temp;
17452 +      filename temp;
17454 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17455 +      filename adjref "&EM_USER_adjResidualCode";
17456 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17458 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17460 +      filename adjref;
17461 +   %end;
17463 +   /* LEAF */
17464 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17465 +      data _null_;
17466 +        file flowref mod;
17467 +        put 'drop _LEAF_;';
17468 +      run;
17470 +      data _null_;
17471 +        file pubref mod;
17472 +        put 'drop _LEAF_;';
17473 +      run;
17475 +   %end;
17477 +   filename flowref;
17478 +   filename pubref;
17480 +   /* em_metachange code */
17481 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17482 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17483 +   %end;
17485 +   /* variable selection based on importance stat    */
17486 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17487 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17488 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17489 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17490 +     %let obs = %sysfunc(fetch(&dsid));
17491 +     %do %while(&obs=0);
17492 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17493 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17494 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17495 +       %let obs = %sysfunc(fetch(&dsid));
17496 +     %end;
17497 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17498 +   %end;
17500 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17501 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17502 +    %let tree_pred_vars = ;
17503 +    %let tree_pred_lvl =;
17504 +    %let numpred= 0;
17506 +    data _null_;
17507 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17508 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17509 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17510 +     if eof then
17511 +       call symput('numpred', strip(put(_N_, BEST.)));
17512 +    run;
17513 +   %end;
17515 +   %if &numpred ne 0 %then %do;
17516 +    %do i=1 %to &numpred;
17517 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17518 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17519 +    %end;
17520 +   %end;
17522 +   /* determine if multiple targets will be processed */
17523 +   %let em_tree_multipleTargets=N;
17524 +   %let em_tree_numTarget=1;
17525 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17526 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17527 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17528 +         %let em_tree_multipleTargets=N;
17529 +      %end;
17530 +      %else %do;
17531 +        data _null_;
17532 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17533 +          if eof then
17534 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17535 +        run;
17537 +        %if &em_tree_numTarget gt 1 %then %do;
17538 +           %let em_tree_multipleTargets=Y;
17539 +        %end;
17540 +     %end;
17541 +   %end;
17543 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17544 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17546 +      /* variable importance */
17547 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17548 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17550 +         %let validexist=0;
17551 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17552 +           %let validexist=1;
17553 +         %end;
17555 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17556 +         /* and the columns may not be generated                                                                                 */
17557 +         %let em_tree_cvexists=;
17558 +         %let em_tree_surrexists=.;
17559 +         data _null_;
17560 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17561 +            if eof then do ;
17562 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17563 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17564 +            end;
17565 +         run;
17567 +         data &EM_USER_OUTIMPORT;
17568 +            set &EM_USER_OUTIMPORT;
17570 +            /* format columns based on Precison value specified */
17571 +            format importance 15.&EM_PROPERTY_PRECISION
17572 +                 %if &validexist %then %do;
17573 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17574 +                 %end;
17575 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17576 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17577 +                 %end;
17578 +            ;
17579 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17580 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17581 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17582 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17583 +                 %if "&em_tree_surrexists" ne "" %then %do;
17584 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17585 +                 %end;
17586 +                 %if &validexist %then %do;
17587 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17588 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17589 +                 %end;
17590 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17591 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17592 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17593 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17594 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17595 +                 %end;
17596 +            ;
17597 +         run;
17599 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17600 +      %end;
17601 +   %end;
17603 +   %doendm:
17604 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:49,
      Create Time=23Nov2023:22:13:49
 
NOTE: 460 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:49,
      Create Time=23Nov2023:22:13:49
 
NOTE: 380 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=22687,
      Last Modified=23Nov2023:22:13:49,
      Create Time=23Nov2023:22:13:49
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19114,
      Last Modified=23Nov2023:22:13:49,
      Create Time=23Nov2023:22:13:49
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 69 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 70 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 71 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 71 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 72 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 73 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 73 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 74 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 75 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 76 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 76 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 77 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 77 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 78 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 78 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 79 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 79 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 80 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 80 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 81 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 81 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 82 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 82 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 83 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 83 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 84 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 84 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 85 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 85 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 86 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 86 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 87 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 87 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 88 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 89 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 90 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 90 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 91 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 91 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 92 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 92 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 93 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 93 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 94 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 94 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 95 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 96 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 96 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 97 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 97 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 98 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 99 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 99 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 100 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 100 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 101 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 101 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 102 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 102 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 103 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 103 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 104 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 104 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 105 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 105 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 106 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 106 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 107 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 107 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 108 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE5_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 100 observations read from the data set EMWS3.TREE5_OUTIMPORT.
NOTE: The data set EMWS3.TREE5_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
17605
17606  *------------------------------------------------------------*;
17607  * End SCORE: Tree5;
17608  *------------------------------------------------------------*;
 
17609  proc sort data=WORK.EM_METACHANGE;
17610  by key uname;
17611  run;
 
NOTE: There were 108 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 108 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17612  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\CDELTA_TRAIN.sas";
17613  data _null_;
17614  file x;
17615  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17616  put 'ROLE = "ASSESS";';
17617  put 'end;';
17618  put 'else ';
17619  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17620  put 'ROLE = "ASSESS";';
17621  put 'end;';
17622  put 'else ';
17623  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17624  put 'ROLE = "ASSESS";';
17625  put 'end;';
17626  put 'else ';
17627  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17628  put 'ROLE = "ASSESS";';
17629  put 'end;';
17630  put 'else ';
17631  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17632  put 'ROLE = "ASSESS";';
17633  put 'end;';
17634  put 'else ';
17635  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17636  put 'ROLE = "ASSESS";';
17637  put 'end;';
17638  put 'else ';
17639  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17640  put 'ROLE = "ASSESS";';
17641  put 'end;';
17642  put 'else ';
17643  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17644  put 'ROLE = "ASSESS";';
17645  put 'end;';
17646  put 'else ';
17647  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17648  put 'ROLE = "ASSESS";';
17649  put 'end;';
17650  put 'else ';
17651  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17652  put 'ROLE = "ASSESS";';
17653  put 'end;';
17654  put 'else ';
17655  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17656  put 'ROLE = "ASSESS";';
17657  put 'end;';
17658  put 'else ';
17659  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17660  put 'ROLE = "ASSESS";';
17661  put 'end;';
17662  put 'else ';
17663  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD1" then do;';
17664  put 'ROLE = "REJECTED";';
17665  put 'end;';
17666  put 'else ';
17667  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD10" then do;';
17668  put 'ROLE = "REJECTED";';
17669  put 'end;';
17670  put 'else ';
17671  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD100" then do;';
17672  put 'ROLE = "REJECTED";';
17673  put 'end;';
17674  put 'else ';
17675  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD12" then do;';
17676  put 'ROLE = "REJECTED";';
17677  put 'end;';
17678  put 'else ';
17679  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD13" then do;';
17680  put 'ROLE = "REJECTED";';
17681  put 'end;';
17682  put 'else ';
17683  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD14" then do;';
17684  put 'ROLE = "REJECTED";';
17685  put 'end;';
17686  put 'else ';
17687  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD15" then do;';
17688  put 'ROLE = "REJECTED";';
17689  put 'end;';
17690  put 'else ';
17691  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD16" then do;';
17692  put 'ROLE = "REJECTED";';
17693  put 'end;';
17694  put 'else ';
17695  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD17" then do;';
17696  put 'ROLE = "REJECTED";';
17697  put 'end;';
17698  put 'else ';
17699  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD18" then do;';
17700  put 'ROLE = "REJECTED";';
17701  put 'end;';
17702  put 'else ';
17703  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD19" then do;';
17704  put 'ROLE = "REJECTED";';
17705  put 'end;';
17706  put 'else ';
17707  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD20" then do;';
17708  put 'ROLE = "REJECTED";';
17709  put 'end;';
17710  put 'else ';
17711  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD21" then do;';
17712  put 'ROLE = "REJECTED";';
17713  put 'end;';
17714  put 'else ';
17715  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD22" then do;';
17716  put 'ROLE = "REJECTED";';
17717  put 'end;';
17718  put 'else ';
17719  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD23" then do;';
17720  put 'ROLE = "REJECTED";';
17721  put 'end;';
17722  put 'else ';
17723  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD24" then do;';
17724  put 'ROLE = "REJECTED";';
17725  put 'end;';
17726  put 'else ';
17727  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD25" then do;';
17728  put 'ROLE = "REJECTED";';
17729  put 'end;';
17730  put 'else ';
17731  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD26" then do;';
17732  put 'ROLE = "REJECTED";';
17733  put 'end;';
17734  put 'else ';
17735  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD27" then do;';
17736  put 'ROLE = "REJECTED";';
17737  put 'end;';
17738  put 'else ';
17739  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD28" then do;';
17740  put 'ROLE = "REJECTED";';
17741  put 'end;';
17742  put 'else ';
17743  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD29" then do;';
17744  put 'ROLE = "REJECTED";';
17745  put 'end;';
17746  put 'else ';
17747  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD3" then do;';
17748  put 'ROLE = "REJECTED";';
17749  put 'end;';
17750  put 'else ';
17751  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD30" then do;';
17752  put 'ROLE = "REJECTED";';
17753  put 'end;';
17754  put 'else ';
17755  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD31" then do;';
17756  put 'ROLE = "REJECTED";';
17757  put 'end;';
17758  put 'else ';
17759  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD32" then do;';
17760  put 'ROLE = "REJECTED";';
17761  put 'end;';
17762  put 'else ';
17763  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD33" then do;';
17764  put 'ROLE = "REJECTED";';
17765  put 'end;';
17766  put 'else ';
17767  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD34" then do;';
17768  put 'ROLE = "REJECTED";';
17769  put 'end;';
17770  put 'else ';
17771  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD35" then do;';
17772  put 'ROLE = "REJECTED";';
17773  put 'end;';
17774  put 'else ';
17775  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD36" then do;';
17776  put 'ROLE = "REJECTED";';
17777  put 'end;';
17778  put 'else ';
17779  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD37" then do;';
17780  put 'ROLE = "REJECTED";';
17781  put 'end;';
17782  put 'else ';
17783  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD38" then do;';
17784  put 'ROLE = "REJECTED";';
17785  put 'end;';
17786  put 'else ';
17787  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD39" then do;';
17788  put 'ROLE = "REJECTED";';
17789  put 'end;';
17790  put 'else ';
17791  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD40" then do;';
17792  put 'ROLE = "REJECTED";';
17793  put 'end;';
17794  put 'else ';
17795  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD41" then do;';
17796  put 'ROLE = "REJECTED";';
17797  put 'end;';
17798  put 'else ';
17799  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD42" then do;';
17800  put 'ROLE = "REJECTED";';
17801  put 'end;';
17802  put 'else ';
17803  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD43" then do;';
17804  put 'ROLE = "REJECTED";';
17805  put 'end;';
17806  put 'else ';
17807  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD44" then do;';
17808  put 'ROLE = "REJECTED";';
17809  put 'end;';
17810  put 'else ';
17811  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD45" then do;';
17812  put 'ROLE = "REJECTED";';
17813  put 'end;';
17814  put 'else ';
17815  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD46" then do;';
17816  put 'ROLE = "REJECTED";';
17817  put 'end;';
17818  put 'else ';
17819  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD47" then do;';
17820  put 'ROLE = "REJECTED";';
17821  put 'end;';
17822  put 'else ';
17823  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD48" then do;';
17824  put 'ROLE = "REJECTED";';
17825  put 'end;';
17826  put 'else ';
17827  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD49" then do;';
17828  put 'ROLE = "REJECTED";';
17829  put 'end;';
17830  put 'else ';
17831  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD50" then do;';
17832  put 'ROLE = "REJECTED";';
17833  put 'end;';
17834  put 'else ';
17835  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD51" then do;';
17836  put 'ROLE = "REJECTED";';
17837  put 'end;';
17838  put 'else ';
17839  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD52" then do;';
17840  put 'ROLE = "REJECTED";';
17841  put 'end;';
17842  put 'else ';
17843  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD53" then do;';
17844  put 'ROLE = "REJECTED";';
17845  put 'end;';
17846  put 'else ';
17847  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD54" then do;';
17848  put 'ROLE = "REJECTED";';
17849  put 'end;';
17850  put 'else ';
17851  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD55" then do;';
17852  put 'ROLE = "REJECTED";';
17853  put 'end;';
17854  put 'else ';
17855  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD56" then do;';
17856  put 'ROLE = "REJECTED";';
17857  put 'end;';
17858  put 'else ';
17859  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD57" then do;';
17860  put 'ROLE = "REJECTED";';
17861  put 'end;';
17862  put 'else ';
17863  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD58" then do;';
17864  put 'ROLE = "REJECTED";';
17865  put 'end;';
17866  put 'else ';
17867  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD59" then do;';
17868  put 'ROLE = "REJECTED";';
17869  put 'end;';
17870  put 'else ';
17871  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD6" then do;';
17872  put 'ROLE = "REJECTED";';
17873  put 'end;';
17874  put 'else ';
17875  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD60" then do;';
17876  put 'ROLE = "REJECTED";';
17877  put 'end;';
17878  put 'else ';
17879  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD61" then do;';
17880  put 'ROLE = "REJECTED";';
17881  put 'end;';
17882  put 'else ';
17883  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD62" then do;';
17884  put 'ROLE = "REJECTED";';
17885  put 'end;';
17886  put 'else ';
17887  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD63" then do;';
17888  put 'ROLE = "REJECTED";';
17889  put 'end;';
17890  put 'else ';
17891  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD64" then do;';
17892  put 'ROLE = "REJECTED";';
17893  put 'end;';
17894  put 'else ';
17895  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD65" then do;';
17896  put 'ROLE = "REJECTED";';
17897  put 'end;';
17898  put 'else ';
17899  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD66" then do;';
17900  put 'ROLE = "REJECTED";';
17901  put 'end;';
17902  put 'else ';
17903  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD67" then do;';
17904  put 'ROLE = "REJECTED";';
17905  put 'end;';
17906  put 'else ';
17907  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD68" then do;';
17908  put 'ROLE = "REJECTED";';
17909  put 'end;';
17910  put 'else ';
17911  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD69" then do;';
17912  put 'ROLE = "REJECTED";';
17913  put 'end;';
17914  put 'else ';
17915  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD70" then do;';
17916  put 'ROLE = "REJECTED";';
17917  put 'end;';
17918  put 'else ';
17919  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD71" then do;';
17920  put 'ROLE = "REJECTED";';
17921  put 'end;';
17922  put 'else ';
17923  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD72" then do;';
17924  put 'ROLE = "REJECTED";';
17925  put 'end;';
17926  put 'else ';
17927  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD73" then do;';
17928  put 'ROLE = "REJECTED";';
17929  put 'end;';
17930  put 'else ';
17931  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD74" then do;';
17932  put 'ROLE = "REJECTED";';
17933  put 'end;';
17934  put 'else ';
17935  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD75" then do;';
17936  put 'ROLE = "REJECTED";';
17937  put 'end;';
17938  put 'else ';
17939  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD76" then do;';
17940  put 'ROLE = "REJECTED";';
17941  put 'end;';
17942  put 'else ';
17943  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD77" then do;';
17944  put 'ROLE = "REJECTED";';
17945  put 'end;';
17946  put 'else ';
17947  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD78" then do;';
17948  put 'ROLE = "REJECTED";';
17949  put 'end;';
17950  put 'else ';
17951  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD79" then do;';
17952  put 'ROLE = "REJECTED";';
17953  put 'end;';
17954  put 'else ';
17955  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD8" then do;';
17956  put 'ROLE = "REJECTED";';
17957  put 'end;';
17958  put 'else ';
17959  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD80" then do;';
17960  put 'ROLE = "REJECTED";';
17961  put 'end;';
17962  put 'else ';
17963  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD81" then do;';
17964  put 'ROLE = "REJECTED";';
17965  put 'end;';
17966  put 'else ';
17967  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD82" then do;';
17968  put 'ROLE = "REJECTED";';
17969  put 'end;';
17970  put 'else ';
17971  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD83" then do;';
17972  put 'ROLE = "REJECTED";';
17973  put 'end;';
17974  put 'else ';
17975  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD84" then do;';
17976  put 'ROLE = "REJECTED";';
17977  put 'end;';
17978  put 'else ';
17979  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD85" then do;';
17980  put 'ROLE = "REJECTED";';
17981  put 'end;';
17982  put 'else ';
17983  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD86" then do;';
17984  put 'ROLE = "REJECTED";';
17985  put 'end;';
17986  put 'else ';
17987  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD87" then do;';
17988  put 'ROLE = "REJECTED";';
17989  put 'end;';
17990  put 'else ';
17991  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD88" then do;';
17992  put 'ROLE = "REJECTED";';
17993  put 'end;';
17994  put 'else ';
17995  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD89" then do;';
17996  put 'ROLE = "REJECTED";';
17997  put 'end;';
17998  put 'else ';
17999  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD9" then do;';
18000  put 'ROLE = "REJECTED";';
18001  put 'end;';
18002  put 'else ';
18003  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD90" then do;';
18004  put 'ROLE = "REJECTED";';
18005  put 'end;';
18006  put 'else ';
18007  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD91" then do;';
18008  put 'ROLE = "REJECTED";';
18009  put 'end;';
18010  put 'else ';
18011  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD92" then do;';
18012  put 'ROLE = "REJECTED";';
18013  put 'end;';
18014  put 'else ';
18015  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD93" then do;';
18016  put 'ROLE = "REJECTED";';
18017  put 'end;';
18018  put 'else ';
18019  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD94" then do;';
18020  put 'ROLE = "REJECTED";';
18021  put 'end;';
18022  put 'else ';
18023  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD95" then do;';
18024  put 'ROLE = "REJECTED";';
18025  put 'end;';
18026  put 'else ';
18027  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD96" then do;';
18028  put 'ROLE = "REJECTED";';
18029  put 'end;';
18030  put 'else ';
18031  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD97" then do;';
18032  put 'ROLE = "REJECTED";';
18033  put 'end;';
18034  put 'else ';
18035  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD98" then do;';
18036  put 'ROLE = "REJECTED";';
18037  put 'end;';
18038  put 'else ';
18039  put 'if upcase(NAME) = "TEXTCLUSTER8_SVD99" then do;';
18040  put 'ROLE = "REJECTED";';
18041  put 'end;';
18042  put 'else ';
18043  put 'if upcase(NAME) = "_NODE_" then do;';
18044  put 'ROLE = "SEGMENT";';
18045  put 'LEVEL = "NOMINAL";';
18046  put 'end;';
18047  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:50,
      Create Time=19Nov2023:18:23:28
 
NOTE: 432 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18048  filename x;
NOTE: Fileref X has been deassigned.
 
18049  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas";
18050  *------------------------------------------------------------*;
18051  * Tree5: Scoring DATA data;
18052  *------------------------------------------------------------*;
18053  data EMWS3.Tree5_TRAIN
18054  / view=EMWS3.Tree5_TRAIN
18055  ;
18056  set EMWS3.TextCluster8_TRAIN
18057  ;
18058  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas.
18059 +****************************************************************;
18060 +******             DECISION TREE SCORING CODE             ******;
18061 +****************************************************************;
18062 +
18063 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18064 +LENGTH F_Category  $   22;
18065 +LENGTH I_Category  $   22;
18066 +LENGTH U_Category  $   22;
18067 +LENGTH _WARN_  $    4;
18068 +
18069 +******              LABELS FOR NEW VARIABLES              ******;
18070 +label _NODE_ = 'Node' ;
18071 +label _LEAF_ = 'Leaf' ;
18072 +label P_CategoryHR = 'Predicted: Category=HR' ;
18073 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18074 +label P_CategoryINFORMATION_TECHNOLOGY =
18075 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18076 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18077 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18078 +label P_CategoryBUSINESS_DEVELOPMENT =
18079 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18080 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18081 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18082 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18083 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18084 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18085 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18086 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18087 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18088 +label Q_CategoryINFORMATION_TECHNOLOGY =
18089 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18090 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18091 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18092 +label Q_CategoryBUSINESS_DEVELOPMENT =
18093 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18094 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18095 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18096 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18097 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18098 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18099 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18100 +label V_CategoryHR = 'Validated: Category=HR' ;
18101 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18102 +label V_CategoryINFORMATION_TECHNOLOGY =
18103 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18104 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18105 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18106 +label V_CategoryBUSINESS_DEVELOPMENT =
18107 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18108 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18109 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18110 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18111 +label V_CategorySALES = 'Validated: Category=SALES' ;
18112 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18113 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18114 +label R_CategoryHR = 'Residual: Category=HR' ;
18115 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18116 +label R_CategoryINFORMATION_TECHNOLOGY =
18117 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18118 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18119 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18120 +label R_CategoryBUSINESS_DEVELOPMENT =
18121 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18122 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18123 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18124 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18125 +label R_CategorySALES = 'Residual: Category=SALES' ;
18126 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18127 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18128 +label F_Category = 'From: Category' ;
18129 +label I_Category = 'Into: Category' ;
18130 +label U_Category = 'Unnormalized Into: Category' ;
18131 +label _WARN_ = 'Warnings' ;
18132 +
18133 +
18134 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18135 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18136 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18137 +
18138 +
18139 +_ARBFMT_22 = PUT( Category , $22.);
18140 + %DMNORMCP( _ARBFMT_22, F_Category );
18141 +
18142 +******             ASSIGN OBSERVATION TO NODE             ******;
18143 +IF  NOT MISSING(TextCluster8_SVD4 ) AND
18144 +  TextCluster8_SVD4  <    -0.26869605659394 THEN DO;
18145 +  _NODE_  =                    2;
18146 +  _LEAF_  =                    1;
18147 +  P_CategoryHR  =     0.88888888888888;
18148 +  P_CategoryDESIGNER  =                    0;
18149 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18150 +  P_CategoryTEACHER  =                    0;
18151 +  P_CategoryADVOCATE  =     0.04444444444444;
18152 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18153 +  P_CategoryHEALTHCARE  =     0.02222222222222;
18154 +  P_CategoryFITNESS  =     0.02222222222222;
18155 +  P_CategoryOTHER  =                    0;
18156 +  P_CategorySALES  =                    0;
18157 +  P_CategoryCONSULTANT  =                    0;
18158 +  P_CategoryDIGITAL_MEDIA  =                    0;
18159 +  Q_CategoryHR  =     0.88888888888888;
18160 +  Q_CategoryDESIGNER  =                    0;
18161 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18162 +  Q_CategoryTEACHER  =                    0;
18163 +  Q_CategoryADVOCATE  =     0.04444444444444;
18164 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18165 +  Q_CategoryHEALTHCARE  =     0.02222222222222;
18166 +  Q_CategoryFITNESS  =     0.02222222222222;
18167 +  Q_CategoryOTHER  =                    0;
18168 +  Q_CategorySALES  =                    0;
18169 +  Q_CategoryCONSULTANT  =                    0;
18170 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18171 +  V_CategoryHR  =     0.77142857142857;
18172 +  V_CategoryDESIGNER  =                    0;
18173 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
18174 +  V_CategoryTEACHER  =                    0;
18175 +  V_CategoryADVOCATE  =                    0;
18176 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02857142857142;
18177 +  V_CategoryHEALTHCARE  =     0.08571428571428;
18178 +  V_CategoryFITNESS  =     0.02857142857142;
18179 +  V_CategoryOTHER  =                    0;
18180 +  V_CategorySALES  =                    0;
18181 +  V_CategoryCONSULTANT  =     0.05714285714285;
18182 +  V_CategoryDIGITAL_MEDIA  =                    0;
18183 +  I_Category  = 'HR' ;
18184 +  U_Category  = 'HR' ;
18185 +  END;
18186 +ELSE DO;
18187 +  IF  NOT MISSING(TextCluster8_SVD5 ) AND
18188 +    TextCluster8_SVD5  <    -0.22874475504238 THEN DO;
18189 +    _NODE_  =                    6;
18190 +    _LEAF_  =                    2;
18191 +    P_CategoryHR  =                    0;
18192 +    P_CategoryDESIGNER  =     0.02380952380952;
18193 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18194 +    P_CategoryTEACHER  =      0.8095238095238;
18195 +    P_CategoryADVOCATE  =     0.07142857142857;
18196 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18197 +    P_CategoryHEALTHCARE  =                    0;
18198 +    P_CategoryFITNESS  =     0.09523809523809;
18199 +    P_CategoryOTHER  =                    0;
18200 +    P_CategorySALES  =                    0;
18201 +    P_CategoryCONSULTANT  =                    0;
18202 +    P_CategoryDIGITAL_MEDIA  =                    0;
18203 +    Q_CategoryHR  =                    0;
18204 +    Q_CategoryDESIGNER  =     0.02380952380952;
18205 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18206 +    Q_CategoryTEACHER  =      0.8095238095238;
18207 +    Q_CategoryADVOCATE  =     0.07142857142857;
18208 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18209 +    Q_CategoryHEALTHCARE  =                    0;
18210 +    Q_CategoryFITNESS  =     0.09523809523809;
18211 +    Q_CategoryOTHER  =                    0;
18212 +    Q_CategorySALES  =                    0;
18213 +    Q_CategoryCONSULTANT  =                    0;
18214 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18215 +    V_CategoryHR  =     0.02380952380952;
18216 +    V_CategoryDESIGNER  =     0.04761904761904;
18217 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18218 +    V_CategoryTEACHER  =     0.54761904761904;
18219 +    V_CategoryADVOCATE  =     0.07142857142857;
18220 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18221 +    V_CategoryHEALTHCARE  =     0.04761904761904;
18222 +    V_CategoryFITNESS  =     0.09523809523809;
18223 +    V_CategoryOTHER  =     0.14285714285714;
18224 +    V_CategorySALES  =                    0;
18225 +    V_CategoryCONSULTANT  =     0.02380952380952;
18226 +    V_CategoryDIGITAL_MEDIA  =                    0;
18227 +    I_Category  = 'TEACHER' ;
18228 +    U_Category  = 'TEACHER' ;
18229 +    END;
18230 +  ELSE DO;
18231 +    IF  NOT MISSING(TextCluster8_SVD2 ) AND
18232 +           0.1881459674488 <= TextCluster8_SVD2  THEN DO;
18233 +      _NODE_  =                    9;
18234 +      _LEAF_  =                    7;
18235 +      P_CategoryHR  =                    0;
18236 +      P_CategoryDESIGNER  =     0.03157894736842;
18237 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
18238 +      P_CategoryTEACHER  =                    0;
18239 +      P_CategoryADVOCATE  =     0.02105263157894;
18240 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
18241 +      P_CategoryHEALTHCARE  =     0.03157894736842;
18242 +      P_CategoryFITNESS  =                    0;
18243 +      P_CategoryOTHER  =     0.08421052631578;
18244 +      P_CategorySALES  =                    0;
18245 +      P_CategoryCONSULTANT  =     0.22105263157894;
18246 +      P_CategoryDIGITAL_MEDIA  =     0.06315789473684;
18247 +      Q_CategoryHR  =                    0;
18248 +      Q_CategoryDESIGNER  =     0.03157894736842;
18249 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
18250 +      Q_CategoryTEACHER  =                    0;
18251 +      Q_CategoryADVOCATE  =     0.02105263157894;
18252 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
18253 +      Q_CategoryHEALTHCARE  =     0.03157894736842;
18254 +      Q_CategoryFITNESS  =                    0;
18255 +      Q_CategoryOTHER  =     0.08421052631578;
18256 +      Q_CategorySALES  =                    0;
18257 +      Q_CategoryCONSULTANT  =     0.22105263157894;
18258 +      Q_CategoryDIGITAL_MEDIA  =     0.06315789473684;
18259 +      V_CategoryHR  =                    0;
18260 +      V_CategoryDESIGNER  =     0.08196721311475;
18261 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.50819672131147;
18262 +      V_CategoryTEACHER  =                    0;
18263 +      V_CategoryADVOCATE  =     0.01639344262295;
18264 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.04918032786885;
18265 +      V_CategoryHEALTHCARE  =     0.01639344262295;
18266 +      V_CategoryFITNESS  =                    0;
18267 +      V_CategoryOTHER  =      0.0655737704918;
18268 +      V_CategorySALES  =     0.01639344262295;
18269 +      V_CategoryCONSULTANT  =     0.14754098360655;
18270 +      V_CategoryDIGITAL_MEDIA  =      0.0983606557377;
18271 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18272 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18273 +      END;
18274 +    ELSE DO;
18275 +      IF  NOT MISSING(TextCluster8_SVD11 ) AND
18276 +            0.16417253912574 <= TextCluster8_SVD11  THEN DO;
18277 +        _NODE_  =                   11;
18278 +        _LEAF_  =                    6;
18279 +        P_CategoryHR  =                    0;
18280 +        P_CategoryDESIGNER  =                    0;
18281 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18282 +        P_CategoryTEACHER  =                    0;
18283 +        P_CategoryADVOCATE  =     0.07894736842105;
18284 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18285 +        P_CategoryHEALTHCARE  =                    0;
18286 +        P_CategoryFITNESS  =     0.84210526315789;
18287 +        P_CategoryOTHER  =                    0;
18288 +        P_CategorySALES  =     0.02631578947368;
18289 +        P_CategoryCONSULTANT  =                    0;
18290 +        P_CategoryDIGITAL_MEDIA  =     0.02631578947368;
18291 +        Q_CategoryHR  =                    0;
18292 +        Q_CategoryDESIGNER  =                    0;
18293 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18294 +        Q_CategoryTEACHER  =                    0;
18295 +        Q_CategoryADVOCATE  =     0.07894736842105;
18296 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18297 +        Q_CategoryHEALTHCARE  =                    0;
18298 +        Q_CategoryFITNESS  =     0.84210526315789;
18299 +        Q_CategoryOTHER  =                    0;
18300 +        Q_CategorySALES  =     0.02631578947368;
18301 +        Q_CategoryCONSULTANT  =                    0;
18302 +        Q_CategoryDIGITAL_MEDIA  =     0.02631578947368;
18303 +        V_CategoryHR  =                    0;
18304 +        V_CategoryDESIGNER  =                    0;
18305 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18306 +        V_CategoryTEACHER  =                    0;
18307 +        V_CategoryADVOCATE  =                  0.1;
18308 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18309 +        V_CategoryHEALTHCARE  =                 0.05;
18310 +        V_CategoryFITNESS  =                 0.75;
18311 +        V_CategoryOTHER  =                 0.05;
18312 +        V_CategorySALES  =                    0;
18313 +        V_CategoryCONSULTANT  =                    0;
18314 +        V_CategoryDIGITAL_MEDIA  =                    0;
18315 +        I_Category  = 'FITNESS' ;
18316 +        U_Category  = 'FITNESS' ;
18317 +        END;
18318 +      ELSE DO;
18319 +        IF  NOT MISSING(TextCluster8_SVD7 ) AND
18320 +              0.04573920241908 <= TextCluster8_SVD7  THEN DO;
18321 +          IF  NOT MISSING(TextCluster8_SVD2 ) AND
18322 +            TextCluster8_SVD2  <    -0.14325655376115 THEN DO;
18323 +            _NODE_  =                   16;
18324 +            _LEAF_  =                    4;
18325 +            P_CategoryHR  =     0.09210526315789;
18326 +            P_CategoryDESIGNER  =     0.01315789473684;
18327 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18328 +            P_CategoryTEACHER  =     0.17105263157894;
18329 +            P_CategoryADVOCATE  =     0.07894736842105;
18330 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
18331 +            P_CategoryHEALTHCARE  =     0.02631578947368;
18332 +            P_CategoryFITNESS  =     0.07894736842105;
18333 +            P_CategoryOTHER  =     0.03947368421052;
18334 +            P_CategorySALES  =     0.38157894736842;
18335 +            P_CategoryCONSULTANT  =     0.03947368421052;
18336 +            P_CategoryDIGITAL_MEDIA  =     0.01315789473684;
18337 +            Q_CategoryHR  =     0.09210526315789;
18338 +            Q_CategoryDESIGNER  =     0.01315789473684;
18339 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18340 +            Q_CategoryTEACHER  =     0.17105263157894;
18341 +            Q_CategoryADVOCATE  =     0.07894736842105;
18342 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
18343 +            Q_CategoryHEALTHCARE  =     0.02631578947368;
18344 +            Q_CategoryFITNESS  =     0.07894736842105;
18345 +            Q_CategoryOTHER  =     0.03947368421052;
18346 +            Q_CategorySALES  =     0.38157894736842;
18347 +            Q_CategoryCONSULTANT  =     0.03947368421052;
18348 +            Q_CategoryDIGITAL_MEDIA  =     0.01315789473684;
18349 +            V_CategoryHR  =     0.06521739130434;
18350 +            V_CategoryDESIGNER  =     0.08695652173913;
18351 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18352 +            V_CategoryTEACHER  =     0.10869565217391;
18353 +            V_CategoryADVOCATE  =     0.15217391304347;
18354 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18355 +            V_CategoryHEALTHCARE  =     0.02173913043478;
18356 +            V_CategoryFITNESS  =     0.08695652173913;
18357 +            V_CategoryOTHER  =     0.04347826086956;
18358 +            V_CategorySALES  =     0.34782608695652;
18359 +            V_CategoryCONSULTANT  =     0.02173913043478;
18360 +            V_CategoryDIGITAL_MEDIA  =     0.04347826086956;
18361 +            I_Category  = 'SALES' ;
18362 +            U_Category  = 'SALES' ;
18363 +            END;
18364 +          ELSE DO;
18365 +            _NODE_  =                   17;
18366 +            _LEAF_  =                    5;
18367 +            P_CategoryHR  =              0.03125;
18368 +            P_CategoryDESIGNER  =     0.44791666666666;
18369 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
18370 +            P_CategoryTEACHER  =     0.01041666666666;
18371 +            P_CategoryADVOCATE  =     0.01041666666666;
18372 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18373 +            P_CategoryHEALTHCARE  =              0.03125;
18374 +            P_CategoryFITNESS  =                    0;
18375 +            P_CategoryOTHER  =              0.03125;
18376 +            P_CategorySALES  =     0.05208333333333;
18377 +            P_CategoryCONSULTANT  =     0.02083333333333;
18378 +            P_CategoryDIGITAL_MEDIA  =     0.30208333333333;
18379 +            Q_CategoryHR  =              0.03125;
18380 +            Q_CategoryDESIGNER  =     0.44791666666666;
18381 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
18382 +            Q_CategoryTEACHER  =     0.01041666666666;
18383 +            Q_CategoryADVOCATE  =     0.01041666666666;
18384 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18385 +            Q_CategoryHEALTHCARE  =              0.03125;
18386 +            Q_CategoryFITNESS  =                    0;
18387 +            Q_CategoryOTHER  =              0.03125;
18388 +            Q_CategorySALES  =     0.05208333333333;
18389 +            Q_CategoryCONSULTANT  =     0.02083333333333;
18390 +            Q_CategoryDIGITAL_MEDIA  =     0.30208333333333;
18391 +            V_CategoryHR  =     0.02127659574468;
18392 +            V_CategoryDESIGNER  =     0.38297872340425;
18393 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18394 +            V_CategoryTEACHER  =     0.02127659574468;
18395 +            V_CategoryADVOCATE  =                    0;
18396 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06382978723404;
18397 +            V_CategoryHEALTHCARE  =     0.02127659574468;
18398 +            V_CategoryFITNESS  =                    0;
18399 +            V_CategoryOTHER  =     0.04255319148936;
18400 +            V_CategorySALES  =     0.08510638297872;
18401 +            V_CategoryCONSULTANT  =     0.02127659574468;
18402 +            V_CategoryDIGITAL_MEDIA  =     0.34042553191489;
18403 +            I_Category  = 'DESIGNER' ;
18404 +            U_Category  = 'DESIGNER' ;
18405 +            END;
18406 +          END;
18407 +        ELSE DO;
18408 +          _NODE_  =                   12;
18409 +          _LEAF_  =                    3;
18410 +          P_CategoryHR  =      0.0177304964539;
18411 +          P_CategoryDESIGNER  =      0.0177304964539;
18412 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
18413 +          P_CategoryTEACHER  =     0.00709219858156;
18414 +          P_CategoryADVOCATE  =      0.1418439716312;
18415 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
18416 +          P_CategoryHEALTHCARE  =     0.17021276595744;
18417 +          P_CategoryFITNESS  =      0.0531914893617;
18418 +          P_CategoryOTHER  =     0.17375886524822;
18419 +          P_CategorySALES  =     0.08156028368794;
18420 +          P_CategoryCONSULTANT  =     0.10992907801418;
18421 +          P_CategoryDIGITAL_MEDIA  =      0.0354609929078;
18422 +          Q_CategoryHR  =      0.0177304964539;
18423 +          Q_CategoryDESIGNER  =      0.0177304964539;
18424 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
18425 +          Q_CategoryTEACHER  =     0.00709219858156;
18426 +          Q_CategoryADVOCATE  =      0.1418439716312;
18427 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
18428 +          Q_CategoryHEALTHCARE  =     0.17021276595744;
18429 +          Q_CategoryFITNESS  =      0.0531914893617;
18430 +          Q_CategoryOTHER  =     0.17375886524822;
18431 +          Q_CategorySALES  =     0.08156028368794;
18432 +          Q_CategoryCONSULTANT  =     0.10992907801418;
18433 +          Q_CategoryDIGITAL_MEDIA  =      0.0354609929078;
18434 +          V_CategoryHR  =                    0;
18435 +          V_CategoryDESIGNER  =     0.01298701298701;
18436 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.01948051948051;
18437 +          V_CategoryTEACHER  =     0.01298701298701;
18438 +          V_CategoryADVOCATE  =     0.14285714285714;
18439 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.18181818181818;
18440 +          V_CategoryHEALTHCARE  =     0.15584415584415;
18441 +          V_CategoryFITNESS  =     0.07142857142857;
18442 +          V_CategoryOTHER  =     0.14935064935064;
18443 +          V_CategorySALES  =     0.08441558441558;
18444 +          V_CategoryCONSULTANT  =     0.13636363636363;
18445 +          V_CategoryDIGITAL_MEDIA  =     0.03246753246753;
18446 +          I_Category  = 'BUSINESS-DEVELOPMENT' ;
18447 +          U_Category  = 'BUSINESS-DEVELOPMENT' ;
18448 +          END;
18449 +        END;
18450 +      END;
18451 +    END;
18452 +  END;
18453 +
18454 +*****  RESIDUALS R_ *************;
18455 +IF  F_Category  NE 'HR'
18456 +AND F_Category  NE 'DESIGNER'
18457 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18458 +AND F_Category  NE 'TEACHER'
18459 +AND F_Category  NE 'ADVOCATE'
18460 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18461 +AND F_Category  NE 'HEALTHCARE'
18462 +AND F_Category  NE 'FITNESS'
18463 +AND F_Category  NE 'OTHER'
18464 +AND F_Category  NE 'SALES'
18465 +AND F_Category  NE 'CONSULTANT'
18466 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18467 +        R_CategoryHR  = .;
18468 +        R_CategoryDESIGNER  = .;
18469 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18470 +        R_CategoryTEACHER  = .;
18471 +        R_CategoryADVOCATE  = .;
18472 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18473 +        R_CategoryHEALTHCARE  = .;
18474 +        R_CategoryFITNESS  = .;
18475 +        R_CategoryOTHER  = .;
18476 +        R_CategorySALES  = .;
18477 +        R_CategoryCONSULTANT  = .;
18478 +        R_CategoryDIGITAL_MEDIA  = .;
18479 + END;
18480 + ELSE DO;
18481 +       R_CategoryHR  =  -P_CategoryHR ;
18482 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18483 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18484 +         ;
18485 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18486 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18487 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18488 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18489 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18490 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18491 +       R_CategorySALES  =  -P_CategorySALES ;
18492 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18493 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18494 +       SELECT( F_Category  );
18495 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18496 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18497 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18498 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18499 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18500 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18501 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18502 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18503 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18504 +          +1;
18505 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18506 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18507 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18508 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18509 +          +1;
18510 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18511 +        R_CategoryDIGITAL_MEDIA  +1;
18512 +       END;
18513 + END;
18514 +
18515 +****************************************************************;
18516 +******          END OF DECISION TREE SCORING CODE         ******;
18517 +****************************************************************;
18518 +
18519 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18520  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18521  quit;
18522  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18523  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas";
18524  *------------------------------------------------------------*;
18525  * Tree5: Scoring VALIDATE data;
18526  *------------------------------------------------------------*;
18527  data EMWS3.Tree5_VALIDATE
18528  / view=EMWS3.Tree5_VALIDATE
18529  ;
18530  set EMWS3.TextCluster8_VALIDATE
18531  ;
18532  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas.
18533 +****************************************************************;
18534 +******             DECISION TREE SCORING CODE             ******;
18535 +****************************************************************;
18536 +
18537 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18538 +LENGTH F_Category  $   22;
18539 +LENGTH I_Category  $   22;
18540 +LENGTH U_Category  $   22;
18541 +LENGTH _WARN_  $    4;
18542 +
18543 +******              LABELS FOR NEW VARIABLES              ******;
18544 +label _NODE_ = 'Node' ;
18545 +label _LEAF_ = 'Leaf' ;
18546 +label P_CategoryHR = 'Predicted: Category=HR' ;
18547 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18548 +label P_CategoryINFORMATION_TECHNOLOGY =
18549 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18550 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18551 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18552 +label P_CategoryBUSINESS_DEVELOPMENT =
18553 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18554 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18555 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18556 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18557 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18558 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18559 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18560 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18561 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18562 +label Q_CategoryINFORMATION_TECHNOLOGY =
18563 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18564 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18565 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18566 +label Q_CategoryBUSINESS_DEVELOPMENT =
18567 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18568 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18569 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18570 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18571 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18572 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18573 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18574 +label V_CategoryHR = 'Validated: Category=HR' ;
18575 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18576 +label V_CategoryINFORMATION_TECHNOLOGY =
18577 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18578 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18579 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18580 +label V_CategoryBUSINESS_DEVELOPMENT =
18581 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18582 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18583 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18584 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18585 +label V_CategorySALES = 'Validated: Category=SALES' ;
18586 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18587 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18588 +label R_CategoryHR = 'Residual: Category=HR' ;
18589 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18590 +label R_CategoryINFORMATION_TECHNOLOGY =
18591 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18592 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18593 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18594 +label R_CategoryBUSINESS_DEVELOPMENT =
18595 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18596 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18597 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18598 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18599 +label R_CategorySALES = 'Residual: Category=SALES' ;
18600 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18601 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18602 +label F_Category = 'From: Category' ;
18603 +label I_Category = 'Into: Category' ;
18604 +label U_Category = 'Unnormalized Into: Category' ;
18605 +label _WARN_ = 'Warnings' ;
18606 +
18607 +
18608 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18609 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18610 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18611 +
18612 +
18613 +_ARBFMT_22 = PUT( Category , $22.);
18614 + %DMNORMCP( _ARBFMT_22, F_Category );
18615 +
18616 +******             ASSIGN OBSERVATION TO NODE             ******;
18617 +IF  NOT MISSING(TextCluster8_SVD4 ) AND
18618 +  TextCluster8_SVD4  <    -0.26869605659394 THEN DO;
18619 +  _NODE_  =                    2;
18620 +  _LEAF_  =                    1;
18621 +  P_CategoryHR  =     0.88888888888888;
18622 +  P_CategoryDESIGNER  =                    0;
18623 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18624 +  P_CategoryTEACHER  =                    0;
18625 +  P_CategoryADVOCATE  =     0.04444444444444;
18626 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18627 +  P_CategoryHEALTHCARE  =     0.02222222222222;
18628 +  P_CategoryFITNESS  =     0.02222222222222;
18629 +  P_CategoryOTHER  =                    0;
18630 +  P_CategorySALES  =                    0;
18631 +  P_CategoryCONSULTANT  =                    0;
18632 +  P_CategoryDIGITAL_MEDIA  =                    0;
18633 +  Q_CategoryHR  =     0.88888888888888;
18634 +  Q_CategoryDESIGNER  =                    0;
18635 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18636 +  Q_CategoryTEACHER  =                    0;
18637 +  Q_CategoryADVOCATE  =     0.04444444444444;
18638 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18639 +  Q_CategoryHEALTHCARE  =     0.02222222222222;
18640 +  Q_CategoryFITNESS  =     0.02222222222222;
18641 +  Q_CategoryOTHER  =                    0;
18642 +  Q_CategorySALES  =                    0;
18643 +  Q_CategoryCONSULTANT  =                    0;
18644 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18645 +  V_CategoryHR  =     0.77142857142857;
18646 +  V_CategoryDESIGNER  =                    0;
18647 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
18648 +  V_CategoryTEACHER  =                    0;
18649 +  V_CategoryADVOCATE  =                    0;
18650 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02857142857142;
18651 +  V_CategoryHEALTHCARE  =     0.08571428571428;
18652 +  V_CategoryFITNESS  =     0.02857142857142;
18653 +  V_CategoryOTHER  =                    0;
18654 +  V_CategorySALES  =                    0;
18655 +  V_CategoryCONSULTANT  =     0.05714285714285;
18656 +  V_CategoryDIGITAL_MEDIA  =                    0;
18657 +  I_Category  = 'HR' ;
18658 +  U_Category  = 'HR' ;
18659 +  END;
18660 +ELSE DO;
18661 +  IF  NOT MISSING(TextCluster8_SVD5 ) AND
18662 +    TextCluster8_SVD5  <    -0.22874475504238 THEN DO;
18663 +    _NODE_  =                    6;
18664 +    _LEAF_  =                    2;
18665 +    P_CategoryHR  =                    0;
18666 +    P_CategoryDESIGNER  =     0.02380952380952;
18667 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18668 +    P_CategoryTEACHER  =      0.8095238095238;
18669 +    P_CategoryADVOCATE  =     0.07142857142857;
18670 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18671 +    P_CategoryHEALTHCARE  =                    0;
18672 +    P_CategoryFITNESS  =     0.09523809523809;
18673 +    P_CategoryOTHER  =                    0;
18674 +    P_CategorySALES  =                    0;
18675 +    P_CategoryCONSULTANT  =                    0;
18676 +    P_CategoryDIGITAL_MEDIA  =                    0;
18677 +    Q_CategoryHR  =                    0;
18678 +    Q_CategoryDESIGNER  =     0.02380952380952;
18679 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18680 +    Q_CategoryTEACHER  =      0.8095238095238;
18681 +    Q_CategoryADVOCATE  =     0.07142857142857;
18682 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18683 +    Q_CategoryHEALTHCARE  =                    0;
18684 +    Q_CategoryFITNESS  =     0.09523809523809;
18685 +    Q_CategoryOTHER  =                    0;
18686 +    Q_CategorySALES  =                    0;
18687 +    Q_CategoryCONSULTANT  =                    0;
18688 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18689 +    V_CategoryHR  =     0.02380952380952;
18690 +    V_CategoryDESIGNER  =     0.04761904761904;
18691 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18692 +    V_CategoryTEACHER  =     0.54761904761904;
18693 +    V_CategoryADVOCATE  =     0.07142857142857;
18694 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18695 +    V_CategoryHEALTHCARE  =     0.04761904761904;
18696 +    V_CategoryFITNESS  =     0.09523809523809;
18697 +    V_CategoryOTHER  =     0.14285714285714;
18698 +    V_CategorySALES  =                    0;
18699 +    V_CategoryCONSULTANT  =     0.02380952380952;
18700 +    V_CategoryDIGITAL_MEDIA  =                    0;
18701 +    I_Category  = 'TEACHER' ;
18702 +    U_Category  = 'TEACHER' ;
18703 +    END;
18704 +  ELSE DO;
18705 +    IF  NOT MISSING(TextCluster8_SVD2 ) AND
18706 +           0.1881459674488 <= TextCluster8_SVD2  THEN DO;
18707 +      _NODE_  =                    9;
18708 +      _LEAF_  =                    7;
18709 +      P_CategoryHR  =                    0;
18710 +      P_CategoryDESIGNER  =     0.03157894736842;
18711 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
18712 +      P_CategoryTEACHER  =                    0;
18713 +      P_CategoryADVOCATE  =     0.02105263157894;
18714 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
18715 +      P_CategoryHEALTHCARE  =     0.03157894736842;
18716 +      P_CategoryFITNESS  =                    0;
18717 +      P_CategoryOTHER  =     0.08421052631578;
18718 +      P_CategorySALES  =                    0;
18719 +      P_CategoryCONSULTANT  =     0.22105263157894;
18720 +      P_CategoryDIGITAL_MEDIA  =     0.06315789473684;
18721 +      Q_CategoryHR  =                    0;
18722 +      Q_CategoryDESIGNER  =     0.03157894736842;
18723 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
18724 +      Q_CategoryTEACHER  =                    0;
18725 +      Q_CategoryADVOCATE  =     0.02105263157894;
18726 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
18727 +      Q_CategoryHEALTHCARE  =     0.03157894736842;
18728 +      Q_CategoryFITNESS  =                    0;
18729 +      Q_CategoryOTHER  =     0.08421052631578;
18730 +      Q_CategorySALES  =                    0;
18731 +      Q_CategoryCONSULTANT  =     0.22105263157894;
18732 +      Q_CategoryDIGITAL_MEDIA  =     0.06315789473684;
18733 +      V_CategoryHR  =                    0;
18734 +      V_CategoryDESIGNER  =     0.08196721311475;
18735 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.50819672131147;
18736 +      V_CategoryTEACHER  =                    0;
18737 +      V_CategoryADVOCATE  =     0.01639344262295;
18738 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.04918032786885;
18739 +      V_CategoryHEALTHCARE  =     0.01639344262295;
18740 +      V_CategoryFITNESS  =                    0;
18741 +      V_CategoryOTHER  =      0.0655737704918;
18742 +      V_CategorySALES  =     0.01639344262295;
18743 +      V_CategoryCONSULTANT  =     0.14754098360655;
18744 +      V_CategoryDIGITAL_MEDIA  =      0.0983606557377;
18745 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18746 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18747 +      END;
18748 +    ELSE DO;
18749 +      IF  NOT MISSING(TextCluster8_SVD11 ) AND
18750 +            0.16417253912574 <= TextCluster8_SVD11  THEN DO;
18751 +        _NODE_  =                   11;
18752 +        _LEAF_  =                    6;
18753 +        P_CategoryHR  =                    0;
18754 +        P_CategoryDESIGNER  =                    0;
18755 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18756 +        P_CategoryTEACHER  =                    0;
18757 +        P_CategoryADVOCATE  =     0.07894736842105;
18758 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18759 +        P_CategoryHEALTHCARE  =                    0;
18760 +        P_CategoryFITNESS  =     0.84210526315789;
18761 +        P_CategoryOTHER  =                    0;
18762 +        P_CategorySALES  =     0.02631578947368;
18763 +        P_CategoryCONSULTANT  =                    0;
18764 +        P_CategoryDIGITAL_MEDIA  =     0.02631578947368;
18765 +        Q_CategoryHR  =                    0;
18766 +        Q_CategoryDESIGNER  =                    0;
18767 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18768 +        Q_CategoryTEACHER  =                    0;
18769 +        Q_CategoryADVOCATE  =     0.07894736842105;
18770 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18771 +        Q_CategoryHEALTHCARE  =                    0;
18772 +        Q_CategoryFITNESS  =     0.84210526315789;
18773 +        Q_CategoryOTHER  =                    0;
18774 +        Q_CategorySALES  =     0.02631578947368;
18775 +        Q_CategoryCONSULTANT  =                    0;
18776 +        Q_CategoryDIGITAL_MEDIA  =     0.02631578947368;
18777 +        V_CategoryHR  =                    0;
18778 +        V_CategoryDESIGNER  =                    0;
18779 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18780 +        V_CategoryTEACHER  =                    0;
18781 +        V_CategoryADVOCATE  =                  0.1;
18782 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18783 +        V_CategoryHEALTHCARE  =                 0.05;
18784 +        V_CategoryFITNESS  =                 0.75;
18785 +        V_CategoryOTHER  =                 0.05;
18786 +        V_CategorySALES  =                    0;
18787 +        V_CategoryCONSULTANT  =                    0;
18788 +        V_CategoryDIGITAL_MEDIA  =                    0;
18789 +        I_Category  = 'FITNESS' ;
18790 +        U_Category  = 'FITNESS' ;
18791 +        END;
18792 +      ELSE DO;
18793 +        IF  NOT MISSING(TextCluster8_SVD7 ) AND
18794 +              0.04573920241908 <= TextCluster8_SVD7  THEN DO;
18795 +          IF  NOT MISSING(TextCluster8_SVD2 ) AND
18796 +            TextCluster8_SVD2  <    -0.14325655376115 THEN DO;
18797 +            _NODE_  =                   16;
18798 +            _LEAF_  =                    4;
18799 +            P_CategoryHR  =     0.09210526315789;
18800 +            P_CategoryDESIGNER  =     0.01315789473684;
18801 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18802 +            P_CategoryTEACHER  =     0.17105263157894;
18803 +            P_CategoryADVOCATE  =     0.07894736842105;
18804 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
18805 +            P_CategoryHEALTHCARE  =     0.02631578947368;
18806 +            P_CategoryFITNESS  =     0.07894736842105;
18807 +            P_CategoryOTHER  =     0.03947368421052;
18808 +            P_CategorySALES  =     0.38157894736842;
18809 +            P_CategoryCONSULTANT  =     0.03947368421052;
18810 +            P_CategoryDIGITAL_MEDIA  =     0.01315789473684;
18811 +            Q_CategoryHR  =     0.09210526315789;
18812 +            Q_CategoryDESIGNER  =     0.01315789473684;
18813 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18814 +            Q_CategoryTEACHER  =     0.17105263157894;
18815 +            Q_CategoryADVOCATE  =     0.07894736842105;
18816 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
18817 +            Q_CategoryHEALTHCARE  =     0.02631578947368;
18818 +            Q_CategoryFITNESS  =     0.07894736842105;
18819 +            Q_CategoryOTHER  =     0.03947368421052;
18820 +            Q_CategorySALES  =     0.38157894736842;
18821 +            Q_CategoryCONSULTANT  =     0.03947368421052;
18822 +            Q_CategoryDIGITAL_MEDIA  =     0.01315789473684;
18823 +            V_CategoryHR  =     0.06521739130434;
18824 +            V_CategoryDESIGNER  =     0.08695652173913;
18825 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18826 +            V_CategoryTEACHER  =     0.10869565217391;
18827 +            V_CategoryADVOCATE  =     0.15217391304347;
18828 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18829 +            V_CategoryHEALTHCARE  =     0.02173913043478;
18830 +            V_CategoryFITNESS  =     0.08695652173913;
18831 +            V_CategoryOTHER  =     0.04347826086956;
18832 +            V_CategorySALES  =     0.34782608695652;
18833 +            V_CategoryCONSULTANT  =     0.02173913043478;
18834 +            V_CategoryDIGITAL_MEDIA  =     0.04347826086956;
18835 +            I_Category  = 'SALES' ;
18836 +            U_Category  = 'SALES' ;
18837 +            END;
18838 +          ELSE DO;
18839 +            _NODE_  =                   17;
18840 +            _LEAF_  =                    5;
18841 +            P_CategoryHR  =              0.03125;
18842 +            P_CategoryDESIGNER  =     0.44791666666666;
18843 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
18844 +            P_CategoryTEACHER  =     0.01041666666666;
18845 +            P_CategoryADVOCATE  =     0.01041666666666;
18846 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18847 +            P_CategoryHEALTHCARE  =              0.03125;
18848 +            P_CategoryFITNESS  =                    0;
18849 +            P_CategoryOTHER  =              0.03125;
18850 +            P_CategorySALES  =     0.05208333333333;
18851 +            P_CategoryCONSULTANT  =     0.02083333333333;
18852 +            P_CategoryDIGITAL_MEDIA  =     0.30208333333333;
18853 +            Q_CategoryHR  =              0.03125;
18854 +            Q_CategoryDESIGNER  =     0.44791666666666;
18855 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
18856 +            Q_CategoryTEACHER  =     0.01041666666666;
18857 +            Q_CategoryADVOCATE  =     0.01041666666666;
18858 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
18859 +            Q_CategoryHEALTHCARE  =              0.03125;
18860 +            Q_CategoryFITNESS  =                    0;
18861 +            Q_CategoryOTHER  =              0.03125;
18862 +            Q_CategorySALES  =     0.05208333333333;
18863 +            Q_CategoryCONSULTANT  =     0.02083333333333;
18864 +            Q_CategoryDIGITAL_MEDIA  =     0.30208333333333;
18865 +            V_CategoryHR  =     0.02127659574468;
18866 +            V_CategoryDESIGNER  =     0.38297872340425;
18867 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18868 +            V_CategoryTEACHER  =     0.02127659574468;
18869 +            V_CategoryADVOCATE  =                    0;
18870 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06382978723404;
18871 +            V_CategoryHEALTHCARE  =     0.02127659574468;
18872 +            V_CategoryFITNESS  =                    0;
18873 +            V_CategoryOTHER  =     0.04255319148936;
18874 +            V_CategorySALES  =     0.08510638297872;
18875 +            V_CategoryCONSULTANT  =     0.02127659574468;
18876 +            V_CategoryDIGITAL_MEDIA  =     0.34042553191489;
18877 +            I_Category  = 'DESIGNER' ;
18878 +            U_Category  = 'DESIGNER' ;
18879 +            END;
18880 +          END;
18881 +        ELSE DO;
18882 +          _NODE_  =                   12;
18883 +          _LEAF_  =                    3;
18884 +          P_CategoryHR  =      0.0177304964539;
18885 +          P_CategoryDESIGNER  =      0.0177304964539;
18886 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
18887 +          P_CategoryTEACHER  =     0.00709219858156;
18888 +          P_CategoryADVOCATE  =      0.1418439716312;
18889 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
18890 +          P_CategoryHEALTHCARE  =     0.17021276595744;
18891 +          P_CategoryFITNESS  =      0.0531914893617;
18892 +          P_CategoryOTHER  =     0.17375886524822;
18893 +          P_CategorySALES  =     0.08156028368794;
18894 +          P_CategoryCONSULTANT  =     0.10992907801418;
18895 +          P_CategoryDIGITAL_MEDIA  =      0.0354609929078;
18896 +          Q_CategoryHR  =      0.0177304964539;
18897 +          Q_CategoryDESIGNER  =      0.0177304964539;
18898 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
18899 +          Q_CategoryTEACHER  =     0.00709219858156;
18900 +          Q_CategoryADVOCATE  =      0.1418439716312;
18901 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
18902 +          Q_CategoryHEALTHCARE  =     0.17021276595744;
18903 +          Q_CategoryFITNESS  =      0.0531914893617;
18904 +          Q_CategoryOTHER  =     0.17375886524822;
18905 +          Q_CategorySALES  =     0.08156028368794;
18906 +          Q_CategoryCONSULTANT  =     0.10992907801418;
18907 +          Q_CategoryDIGITAL_MEDIA  =      0.0354609929078;
18908 +          V_CategoryHR  =                    0;
18909 +          V_CategoryDESIGNER  =     0.01298701298701;
18910 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.01948051948051;
18911 +          V_CategoryTEACHER  =     0.01298701298701;
18912 +          V_CategoryADVOCATE  =     0.14285714285714;
18913 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.18181818181818;
18914 +          V_CategoryHEALTHCARE  =     0.15584415584415;
18915 +          V_CategoryFITNESS  =     0.07142857142857;
18916 +          V_CategoryOTHER  =     0.14935064935064;
18917 +          V_CategorySALES  =     0.08441558441558;
18918 +          V_CategoryCONSULTANT  =     0.13636363636363;
18919 +          V_CategoryDIGITAL_MEDIA  =     0.03246753246753;
18920 +          I_Category  = 'BUSINESS-DEVELOPMENT' ;
18921 +          U_Category  = 'BUSINESS-DEVELOPMENT' ;
18922 +          END;
18923 +        END;
18924 +      END;
18925 +    END;
18926 +  END;
18927 +
18928 +*****  RESIDUALS R_ *************;
18929 +IF  F_Category  NE 'HR'
18930 +AND F_Category  NE 'DESIGNER'
18931 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18932 +AND F_Category  NE 'TEACHER'
18933 +AND F_Category  NE 'ADVOCATE'
18934 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18935 +AND F_Category  NE 'HEALTHCARE'
18936 +AND F_Category  NE 'FITNESS'
18937 +AND F_Category  NE 'OTHER'
18938 +AND F_Category  NE 'SALES'
18939 +AND F_Category  NE 'CONSULTANT'
18940 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18941 +        R_CategoryHR  = .;
18942 +        R_CategoryDESIGNER  = .;
18943 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18944 +        R_CategoryTEACHER  = .;
18945 +        R_CategoryADVOCATE  = .;
18946 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18947 +        R_CategoryHEALTHCARE  = .;
18948 +        R_CategoryFITNESS  = .;
18949 +        R_CategoryOTHER  = .;
18950 +        R_CategorySALES  = .;
18951 +        R_CategoryCONSULTANT  = .;
18952 +        R_CategoryDIGITAL_MEDIA  = .;
18953 + END;
18954 + ELSE DO;
18955 +       R_CategoryHR  =  -P_CategoryHR ;
18956 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18957 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18958 +         ;
18959 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18960 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18961 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18962 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18963 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18964 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18965 +       R_CategorySALES  =  -P_CategorySALES ;
18966 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18967 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18968 +       SELECT( F_Category  );
18969 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18970 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18971 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18972 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18973 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18974 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18975 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18976 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18977 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18978 +          +1;
18979 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18980 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18981 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18982 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18983 +          +1;
18984 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18985 +        R_CategoryDIGITAL_MEDIA  +1;
18986 +       END;
18987 + END;
18988 +
18989 +****************************************************************;
18990 +******          END OF DECISION TREE SCORING CODE         ******;
18991 +****************************************************************;
18992 +
18993 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18994  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18995  quit;
18996  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18997  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas";
18998  *------------------------------------------------------------*;
18999  * Tree5: Scoring TEST data;
19000  *------------------------------------------------------------*;
19001  data EMWS3.Tree5_TEST
19002  / view=EMWS3.Tree5_TEST
19003  ;
19004  set EMWS3.TextCluster8_TEST
19005  ;
19006  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree5\EMFLOWSCORE.sas.
19007 +****************************************************************;
19008 +******             DECISION TREE SCORING CODE             ******;
19009 +****************************************************************;
19010 +
19011 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
19012 +LENGTH F_Category  $   22;
19013 +LENGTH I_Category  $   22;
19014 +LENGTH U_Category  $   22;
19015 +LENGTH _WARN_  $    4;
19016 +
19017 +******              LABELS FOR NEW VARIABLES              ******;
19018 +label _NODE_ = 'Node' ;
19019 +label _LEAF_ = 'Leaf' ;
19020 +label P_CategoryHR = 'Predicted: Category=HR' ;
19021 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
19022 +label P_CategoryINFORMATION_TECHNOLOGY =
19023 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
19024 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
19025 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
19026 +label P_CategoryBUSINESS_DEVELOPMENT =
19027 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
19028 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
19029 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
19030 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
19031 +label P_CategorySALES = 'Predicted: Category=SALES' ;
19032 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
19033 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
19034 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
19035 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
19036 +label Q_CategoryINFORMATION_TECHNOLOGY =
19037 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
19038 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
19039 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
19040 +label Q_CategoryBUSINESS_DEVELOPMENT =
19041 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
19042 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
19043 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
19044 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
19045 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
19046 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
19047 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
19048 +label V_CategoryHR = 'Validated: Category=HR' ;
19049 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
19050 +label V_CategoryINFORMATION_TECHNOLOGY =
19051 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
19052 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
19053 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
19054 +label V_CategoryBUSINESS_DEVELOPMENT =
19055 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
19056 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
19057 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
19058 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
19059 +label V_CategorySALES = 'Validated: Category=SALES' ;
19060 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
19061 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
19062 +label R_CategoryHR = 'Residual: Category=HR' ;
19063 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
19064 +label R_CategoryINFORMATION_TECHNOLOGY =
19065 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
19066 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19067 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19068 +label R_CategoryBUSINESS_DEVELOPMENT =
19069 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19070 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19071 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19072 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19073 +label R_CategorySALES = 'Residual: Category=SALES' ;
19074 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19075 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19076 +label F_Category = 'From: Category' ;
19077 +label I_Category = 'Into: Category' ;
19078 +label U_Category = 'Unnormalized Into: Category' ;
19079 +label _WARN_ = 'Warnings' ;
19080 +
19081 +
19082 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19083 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19084 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19085 +
19086 +
19087 +_ARBFMT_22 = PUT( Category , $22.);
19088 + %DMNORMCP( _ARBFMT_22, F_Category );
19089 +
19090 +******             ASSIGN OBSERVATION TO NODE             ******;
19091 +IF  NOT MISSING(TextCluster8_SVD4 ) AND
19092 +  TextCluster8_SVD4  <    -0.26869605659394 THEN DO;
19093 +  _NODE_  =                    2;
19094 +  _LEAF_  =                    1;
19095 +  P_CategoryHR  =     0.88888888888888;
19096 +  P_CategoryDESIGNER  =                    0;
19097 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19098 +  P_CategoryTEACHER  =                    0;
19099 +  P_CategoryADVOCATE  =     0.04444444444444;
19100 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19101 +  P_CategoryHEALTHCARE  =     0.02222222222222;
19102 +  P_CategoryFITNESS  =     0.02222222222222;
19103 +  P_CategoryOTHER  =                    0;
19104 +  P_CategorySALES  =                    0;
19105 +  P_CategoryCONSULTANT  =                    0;
19106 +  P_CategoryDIGITAL_MEDIA  =                    0;
19107 +  Q_CategoryHR  =     0.88888888888888;
19108 +  Q_CategoryDESIGNER  =                    0;
19109 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19110 +  Q_CategoryTEACHER  =                    0;
19111 +  Q_CategoryADVOCATE  =     0.04444444444444;
19112 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19113 +  Q_CategoryHEALTHCARE  =     0.02222222222222;
19114 +  Q_CategoryFITNESS  =     0.02222222222222;
19115 +  Q_CategoryOTHER  =                    0;
19116 +  Q_CategorySALES  =                    0;
19117 +  Q_CategoryCONSULTANT  =                    0;
19118 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19119 +  V_CategoryHR  =     0.77142857142857;
19120 +  V_CategoryDESIGNER  =                    0;
19121 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
19122 +  V_CategoryTEACHER  =                    0;
19123 +  V_CategoryADVOCATE  =                    0;
19124 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02857142857142;
19125 +  V_CategoryHEALTHCARE  =     0.08571428571428;
19126 +  V_CategoryFITNESS  =     0.02857142857142;
19127 +  V_CategoryOTHER  =                    0;
19128 +  V_CategorySALES  =                    0;
19129 +  V_CategoryCONSULTANT  =     0.05714285714285;
19130 +  V_CategoryDIGITAL_MEDIA  =                    0;
19131 +  I_Category  = 'HR' ;
19132 +  U_Category  = 'HR' ;
19133 +  END;
19134 +ELSE DO;
19135 +  IF  NOT MISSING(TextCluster8_SVD5 ) AND
19136 +    TextCluster8_SVD5  <    -0.22874475504238 THEN DO;
19137 +    _NODE_  =                    6;
19138 +    _LEAF_  =                    2;
19139 +    P_CategoryHR  =                    0;
19140 +    P_CategoryDESIGNER  =     0.02380952380952;
19141 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19142 +    P_CategoryTEACHER  =      0.8095238095238;
19143 +    P_CategoryADVOCATE  =     0.07142857142857;
19144 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19145 +    P_CategoryHEALTHCARE  =                    0;
19146 +    P_CategoryFITNESS  =     0.09523809523809;
19147 +    P_CategoryOTHER  =                    0;
19148 +    P_CategorySALES  =                    0;
19149 +    P_CategoryCONSULTANT  =                    0;
19150 +    P_CategoryDIGITAL_MEDIA  =                    0;
19151 +    Q_CategoryHR  =                    0;
19152 +    Q_CategoryDESIGNER  =     0.02380952380952;
19153 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19154 +    Q_CategoryTEACHER  =      0.8095238095238;
19155 +    Q_CategoryADVOCATE  =     0.07142857142857;
19156 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19157 +    Q_CategoryHEALTHCARE  =                    0;
19158 +    Q_CategoryFITNESS  =     0.09523809523809;
19159 +    Q_CategoryOTHER  =                    0;
19160 +    Q_CategorySALES  =                    0;
19161 +    Q_CategoryCONSULTANT  =                    0;
19162 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19163 +    V_CategoryHR  =     0.02380952380952;
19164 +    V_CategoryDESIGNER  =     0.04761904761904;
19165 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19166 +    V_CategoryTEACHER  =     0.54761904761904;
19167 +    V_CategoryADVOCATE  =     0.07142857142857;
19168 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19169 +    V_CategoryHEALTHCARE  =     0.04761904761904;
19170 +    V_CategoryFITNESS  =     0.09523809523809;
19171 +    V_CategoryOTHER  =     0.14285714285714;
19172 +    V_CategorySALES  =                    0;
19173 +    V_CategoryCONSULTANT  =     0.02380952380952;
19174 +    V_CategoryDIGITAL_MEDIA  =                    0;
19175 +    I_Category  = 'TEACHER' ;
19176 +    U_Category  = 'TEACHER' ;
19177 +    END;
19178 +  ELSE DO;
19179 +    IF  NOT MISSING(TextCluster8_SVD2 ) AND
19180 +           0.1881459674488 <= TextCluster8_SVD2  THEN DO;
19181 +      _NODE_  =                    9;
19182 +      _LEAF_  =                    7;
19183 +      P_CategoryHR  =                    0;
19184 +      P_CategoryDESIGNER  =     0.03157894736842;
19185 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
19186 +      P_CategoryTEACHER  =                    0;
19187 +      P_CategoryADVOCATE  =     0.02105263157894;
19188 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
19189 +      P_CategoryHEALTHCARE  =     0.03157894736842;
19190 +      P_CategoryFITNESS  =                    0;
19191 +      P_CategoryOTHER  =     0.08421052631578;
19192 +      P_CategorySALES  =                    0;
19193 +      P_CategoryCONSULTANT  =     0.22105263157894;
19194 +      P_CategoryDIGITAL_MEDIA  =     0.06315789473684;
19195 +      Q_CategoryHR  =                    0;
19196 +      Q_CategoryDESIGNER  =     0.03157894736842;
19197 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.52631578947368;
19198 +      Q_CategoryTEACHER  =                    0;
19199 +      Q_CategoryADVOCATE  =     0.02105263157894;
19200 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02105263157894;
19201 +      Q_CategoryHEALTHCARE  =     0.03157894736842;
19202 +      Q_CategoryFITNESS  =                    0;
19203 +      Q_CategoryOTHER  =     0.08421052631578;
19204 +      Q_CategorySALES  =                    0;
19205 +      Q_CategoryCONSULTANT  =     0.22105263157894;
19206 +      Q_CategoryDIGITAL_MEDIA  =     0.06315789473684;
19207 +      V_CategoryHR  =                    0;
19208 +      V_CategoryDESIGNER  =     0.08196721311475;
19209 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.50819672131147;
19210 +      V_CategoryTEACHER  =                    0;
19211 +      V_CategoryADVOCATE  =     0.01639344262295;
19212 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.04918032786885;
19213 +      V_CategoryHEALTHCARE  =     0.01639344262295;
19214 +      V_CategoryFITNESS  =                    0;
19215 +      V_CategoryOTHER  =      0.0655737704918;
19216 +      V_CategorySALES  =     0.01639344262295;
19217 +      V_CategoryCONSULTANT  =     0.14754098360655;
19218 +      V_CategoryDIGITAL_MEDIA  =      0.0983606557377;
19219 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
19220 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
19221 +      END;
19222 +    ELSE DO;
19223 +      IF  NOT MISSING(TextCluster8_SVD11 ) AND
19224 +            0.16417253912574 <= TextCluster8_SVD11  THEN DO;
19225 +        _NODE_  =                   11;
19226 +        _LEAF_  =                    6;
19227 +        P_CategoryHR  =                    0;
19228 +        P_CategoryDESIGNER  =                    0;
19229 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19230 +        P_CategoryTEACHER  =                    0;
19231 +        P_CategoryADVOCATE  =     0.07894736842105;
19232 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
19233 +        P_CategoryHEALTHCARE  =                    0;
19234 +        P_CategoryFITNESS  =     0.84210526315789;
19235 +        P_CategoryOTHER  =                    0;
19236 +        P_CategorySALES  =     0.02631578947368;
19237 +        P_CategoryCONSULTANT  =                    0;
19238 +        P_CategoryDIGITAL_MEDIA  =     0.02631578947368;
19239 +        Q_CategoryHR  =                    0;
19240 +        Q_CategoryDESIGNER  =                    0;
19241 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19242 +        Q_CategoryTEACHER  =                    0;
19243 +        Q_CategoryADVOCATE  =     0.07894736842105;
19244 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
19245 +        Q_CategoryHEALTHCARE  =                    0;
19246 +        Q_CategoryFITNESS  =     0.84210526315789;
19247 +        Q_CategoryOTHER  =                    0;
19248 +        Q_CategorySALES  =     0.02631578947368;
19249 +        Q_CategoryCONSULTANT  =                    0;
19250 +        Q_CategoryDIGITAL_MEDIA  =     0.02631578947368;
19251 +        V_CategoryHR  =                    0;
19252 +        V_CategoryDESIGNER  =                    0;
19253 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
19254 +        V_CategoryTEACHER  =                    0;
19255 +        V_CategoryADVOCATE  =                  0.1;
19256 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19257 +        V_CategoryHEALTHCARE  =                 0.05;
19258 +        V_CategoryFITNESS  =                 0.75;
19259 +        V_CategoryOTHER  =                 0.05;
19260 +        V_CategorySALES  =                    0;
19261 +        V_CategoryCONSULTANT  =                    0;
19262 +        V_CategoryDIGITAL_MEDIA  =                    0;
19263 +        I_Category  = 'FITNESS' ;
19264 +        U_Category  = 'FITNESS' ;
19265 +        END;
19266 +      ELSE DO;
19267 +        IF  NOT MISSING(TextCluster8_SVD7 ) AND
19268 +              0.04573920241908 <= TextCluster8_SVD7  THEN DO;
19269 +          IF  NOT MISSING(TextCluster8_SVD2 ) AND
19270 +            TextCluster8_SVD2  <    -0.14325655376115 THEN DO;
19271 +            _NODE_  =                   16;
19272 +            _LEAF_  =                    4;
19273 +            P_CategoryHR  =     0.09210526315789;
19274 +            P_CategoryDESIGNER  =     0.01315789473684;
19275 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19276 +            P_CategoryTEACHER  =     0.17105263157894;
19277 +            P_CategoryADVOCATE  =     0.07894736842105;
19278 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
19279 +            P_CategoryHEALTHCARE  =     0.02631578947368;
19280 +            P_CategoryFITNESS  =     0.07894736842105;
19281 +            P_CategoryOTHER  =     0.03947368421052;
19282 +            P_CategorySALES  =     0.38157894736842;
19283 +            P_CategoryCONSULTANT  =     0.03947368421052;
19284 +            P_CategoryDIGITAL_MEDIA  =     0.01315789473684;
19285 +            Q_CategoryHR  =     0.09210526315789;
19286 +            Q_CategoryDESIGNER  =     0.01315789473684;
19287 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19288 +            Q_CategoryTEACHER  =     0.17105263157894;
19289 +            Q_CategoryADVOCATE  =     0.07894736842105;
19290 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06578947368421;
19291 +            Q_CategoryHEALTHCARE  =     0.02631578947368;
19292 +            Q_CategoryFITNESS  =     0.07894736842105;
19293 +            Q_CategoryOTHER  =     0.03947368421052;
19294 +            Q_CategorySALES  =     0.38157894736842;
19295 +            Q_CategoryCONSULTANT  =     0.03947368421052;
19296 +            Q_CategoryDIGITAL_MEDIA  =     0.01315789473684;
19297 +            V_CategoryHR  =     0.06521739130434;
19298 +            V_CategoryDESIGNER  =     0.08695652173913;
19299 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19300 +            V_CategoryTEACHER  =     0.10869565217391;
19301 +            V_CategoryADVOCATE  =     0.15217391304347;
19302 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19303 +            V_CategoryHEALTHCARE  =     0.02173913043478;
19304 +            V_CategoryFITNESS  =     0.08695652173913;
19305 +            V_CategoryOTHER  =     0.04347826086956;
19306 +            V_CategorySALES  =     0.34782608695652;
19307 +            V_CategoryCONSULTANT  =     0.02173913043478;
19308 +            V_CategoryDIGITAL_MEDIA  =     0.04347826086956;
19309 +            I_Category  = 'SALES' ;
19310 +            U_Category  = 'SALES' ;
19311 +            END;
19312 +          ELSE DO;
19313 +            _NODE_  =                   17;
19314 +            _LEAF_  =                    5;
19315 +            P_CategoryHR  =              0.03125;
19316 +            P_CategoryDESIGNER  =     0.44791666666666;
19317 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
19318 +            P_CategoryTEACHER  =     0.01041666666666;
19319 +            P_CategoryADVOCATE  =     0.01041666666666;
19320 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
19321 +            P_CategoryHEALTHCARE  =              0.03125;
19322 +            P_CategoryFITNESS  =                    0;
19323 +            P_CategoryOTHER  =              0.03125;
19324 +            P_CategorySALES  =     0.05208333333333;
19325 +            P_CategoryCONSULTANT  =     0.02083333333333;
19326 +            P_CategoryDIGITAL_MEDIA  =     0.30208333333333;
19327 +            Q_CategoryHR  =              0.03125;
19328 +            Q_CategoryDESIGNER  =     0.44791666666666;
19329 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04166666666666;
19330 +            Q_CategoryTEACHER  =     0.01041666666666;
19331 +            Q_CategoryADVOCATE  =     0.01041666666666;
19332 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02083333333333;
19333 +            Q_CategoryHEALTHCARE  =              0.03125;
19334 +            Q_CategoryFITNESS  =                    0;
19335 +            Q_CategoryOTHER  =              0.03125;
19336 +            Q_CategorySALES  =     0.05208333333333;
19337 +            Q_CategoryCONSULTANT  =     0.02083333333333;
19338 +            Q_CategoryDIGITAL_MEDIA  =     0.30208333333333;
19339 +            V_CategoryHR  =     0.02127659574468;
19340 +            V_CategoryDESIGNER  =     0.38297872340425;
19341 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19342 +            V_CategoryTEACHER  =     0.02127659574468;
19343 +            V_CategoryADVOCATE  =                    0;
19344 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06382978723404;
19345 +            V_CategoryHEALTHCARE  =     0.02127659574468;
19346 +            V_CategoryFITNESS  =                    0;
19347 +            V_CategoryOTHER  =     0.04255319148936;
19348 +            V_CategorySALES  =     0.08510638297872;
19349 +            V_CategoryCONSULTANT  =     0.02127659574468;
19350 +            V_CategoryDIGITAL_MEDIA  =     0.34042553191489;
19351 +            I_Category  = 'DESIGNER' ;
19352 +            U_Category  = 'DESIGNER' ;
19353 +            END;
19354 +          END;
19355 +        ELSE DO;
19356 +          _NODE_  =                   12;
19357 +          _LEAF_  =                    3;
19358 +          P_CategoryHR  =      0.0177304964539;
19359 +          P_CategoryDESIGNER  =      0.0177304964539;
19360 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
19361 +          P_CategoryTEACHER  =     0.00709219858156;
19362 +          P_CategoryADVOCATE  =      0.1418439716312;
19363 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
19364 +          P_CategoryHEALTHCARE  =     0.17021276595744;
19365 +          P_CategoryFITNESS  =      0.0531914893617;
19366 +          P_CategoryOTHER  =     0.17375886524822;
19367 +          P_CategorySALES  =     0.08156028368794;
19368 +          P_CategoryCONSULTANT  =     0.10992907801418;
19369 +          P_CategoryDIGITAL_MEDIA  =      0.0354609929078;
19370 +          Q_CategoryHR  =      0.0177304964539;
19371 +          Q_CategoryDESIGNER  =      0.0177304964539;
19372 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.0177304964539;
19373 +          Q_CategoryTEACHER  =     0.00709219858156;
19374 +          Q_CategoryADVOCATE  =      0.1418439716312;
19375 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.17375886524822;
19376 +          Q_CategoryHEALTHCARE  =     0.17021276595744;
19377 +          Q_CategoryFITNESS  =      0.0531914893617;
19378 +          Q_CategoryOTHER  =     0.17375886524822;
19379 +          Q_CategorySALES  =     0.08156028368794;
19380 +          Q_CategoryCONSULTANT  =     0.10992907801418;
19381 +          Q_CategoryDIGITAL_MEDIA  =      0.0354609929078;
19382 +          V_CategoryHR  =                    0;
19383 +          V_CategoryDESIGNER  =     0.01298701298701;
19384 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.01948051948051;
19385 +          V_CategoryTEACHER  =     0.01298701298701;
19386 +          V_CategoryADVOCATE  =     0.14285714285714;
19387 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.18181818181818;
19388 +          V_CategoryHEALTHCARE  =     0.15584415584415;
19389 +          V_CategoryFITNESS  =     0.07142857142857;
19390 +          V_CategoryOTHER  =     0.14935064935064;
19391 +          V_CategorySALES  =     0.08441558441558;
19392 +          V_CategoryCONSULTANT  =     0.13636363636363;
19393 +          V_CategoryDIGITAL_MEDIA  =     0.03246753246753;
19394 +          I_Category  = 'BUSINESS-DEVELOPMENT' ;
19395 +          U_Category  = 'BUSINESS-DEVELOPMENT' ;
19396 +          END;
19397 +        END;
19398 +      END;
19399 +    END;
19400 +  END;
19401 +
19402 +*****  RESIDUALS R_ *************;
19403 +IF  F_Category  NE 'HR'
19404 +AND F_Category  NE 'DESIGNER'
19405 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19406 +AND F_Category  NE 'TEACHER'
19407 +AND F_Category  NE 'ADVOCATE'
19408 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19409 +AND F_Category  NE 'HEALTHCARE'
19410 +AND F_Category  NE 'FITNESS'
19411 +AND F_Category  NE 'OTHER'
19412 +AND F_Category  NE 'SALES'
19413 +AND F_Category  NE 'CONSULTANT'
19414 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19415 +        R_CategoryHR  = .;
19416 +        R_CategoryDESIGNER  = .;
19417 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19418 +        R_CategoryTEACHER  = .;
19419 +        R_CategoryADVOCATE  = .;
19420 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19421 +        R_CategoryHEALTHCARE  = .;
19422 +        R_CategoryFITNESS  = .;
19423 +        R_CategoryOTHER  = .;
19424 +        R_CategorySALES  = .;
19425 +        R_CategoryCONSULTANT  = .;
19426 +        R_CategoryDIGITAL_MEDIA  = .;
19427 + END;
19428 + ELSE DO;
19429 +       R_CategoryHR  =  -P_CategoryHR ;
19430 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19431 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19432 +         ;
19433 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19434 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19435 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19436 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19437 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19438 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19439 +       R_CategorySALES  =  -P_CategorySALES ;
19440 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19441 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19442 +       SELECT( F_Category  );
19443 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19444 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19445 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19446 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19447 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19448 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19449 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19450 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19451 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19452 +          +1;
19453 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19454 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19455 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19456 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19457 +          +1;
19458 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19459 +        R_CategoryDIGITAL_MEDIA  +1;
19460 +       END;
19461 + END;
19462 +
19463 +****************************************************************;
19464 +******          END OF DECISION TREE SCORING CODE         ******;
19465 +****************************************************************;
19466 +
19467 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19468  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE5_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19469  quit;
19470  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
19472  proc sort data=WORK.EM_USER_REPORT;
19473  by ID VIEW;
19474  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19475  *------------------------------------------------------------*;
19476  * Tree5: Computing metadata for TRAIN data;
19477  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE5_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
20267  data WORK.MODELTEMP_INFO;
20268  set EMWS3.Tree5_EMINFO;
20269  where DATA='Tree5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20270  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE5_EMINFO.
      WHERE (DATA='Tree5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20271  data EMWS3.Tree5_EMINFO;
20272  length TARGET KEY $32 DATA $43;
20273  input TARGET KEY DATA $;
20274  cards;
 
NOTE: The data set EMWS3.TREE5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20278  run;
20279  data EMWS3.Tree5_EMINFO;
20280  set EMWS3.Tree5_EMINFO WORK.MODELTEMP_INFO;
20281  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20282  proc sort data = EMWS3.Tree5_EMINFO NOTHREADS;
20283  by TARGET KEY;
20284  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE5_EMINFO.
NOTE: The data set EMWS3.TREE5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20285  proc sort data = EMWS3.TextCluster8_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20286  by TARGET KEY;
20287  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER8_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20288  proc sort data = EMWS3.Tree5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20289  by TARGET KEY;
20290  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20291  data EMWS3.Tree5_EMINFO;
20292  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20293  by TARGET KEY;
20294  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE5_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20295  proc datasets lib=work nolist;
20296  delete TEMP_INFO SORTEDEMINFO;
20297  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20298  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE5_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE5_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
NOTE: View EMWS3.TREE5_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:52
*------------------------------------------------------------*
20322  data EMWS3.Tree5_EMOUTFIT;
20323  set EMWS3.Tree5_EMOUTFIT;
20324  length TargetLabel $200;
20325  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20326  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20327  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_EMOUTFIT.
NOTE: The data set EMWS3.TREE5_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20328  proc sort data=EMWS3.Tree5_EMREPORTFIT nothreads;
20329  by TARGET;
20330  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE5_EMREPORTFIT.
NOTE: The data set EMWS3.TREE5_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20331  %let _EMwarndup = 0;
20332  %let _EMtargetdup =;
20333  %let _EMASEtargetdup =;
20334  data _null_;
20335  set EMWS3.Tree5_EMOUTFIT;
20336  if .<_ASE_<0.000001 then do;
20337  call symput('_EMwarndup', '1');
20338  call symput('_EMtargetdup', target);
20339  call symput('_EMASEtargetdup', put(_ASE_, best.));
20340  end;
20341  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20342  %let EMEXCEPTIONSTRING=;
20343  *------------------------------------------------------------*;
20344  * REPORT: Tree5;
20345  *------------------------------------------------------------*;
20346  %let EM_ACTION = REPORT;
20347  %let syscc = 0;
20348  %macro main;
20349
20350    %if %upcase(&EM_ACTION) = CREATE %then %do;
20351      filename temp catalog 'sashelp.emmodl.tree_create.source';
20352      %include temp;
20353      filename temp;
20354
20355      %em_tree_create;
20356    %end;
20357
20358     %else
20359     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20360
20361         filename temp catalog 'sashelp.emmodl.tree_train.source';
20362         %include temp;
20363         filename temp;
20364         %em_tree_train;
20365     %end;
20366
20367    %else
20368    %if %upcase(&EM_ACTION) = SCORE %then %do;
20369      filename temp catalog 'sashelp.emmodl.tree_score.source';
20370      %include temp;
20371      filename temp;
20372
20373      %em_tree_score;
20374
20375    %end;
20376
20377    %else
20378    %if %upcase(&EM_ACTION) = REPORT %then %do;
20379
20380         filename temp catalog 'sashelp.emmodl.tree_report.source';
20381         %include temp;
20382         filename temp;
20383
20384         %em_tree_report;
20385     %end;
20386
20387    %else
20388    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20389
20390         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20391         %include temp;
20392         filename temp;
20393         %EM_TREE_OPENTREEVIEWER;
20394
20395     %end;
20396
20397    %else
20398    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20399
20400         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20401         %include temp;
20402         filename temp;
20403         %EM_TREE_CLOSETREEVIEWER;
20404
20405     %end;
20406
20407
20408     %doendm:
20409  %mend main;
20410
20411  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20413 +%macro em_tree_makePlotDs( multipleTar= );
20415 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20416 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20417 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20418 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20420 +  /* determine if validation statistics will be displayed */
20421 +  %let validflag=N;
20422 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20423 +    /* determine if validation data exists */
20424 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20425 +      %let validflag=Y;
20426 +    %end;
20427 +  %end;
20429 +   /* retrieve name of decmeta even in presence of multiple targets */
20430 +   %let decmeta = ;
20431 +   %if &EM_DEC_DECMETA eq %then %do;
20432 +     data _Target;
20433 +       set &em_data_variableset;
20434 +       where ROLE='TARGET' and USE in('D', 'Y');
20435 +       keep NAME;
20436 +     run;
20437 +     proc sort data=_Target;
20438 +       by NAME;
20439 +     run;
20440 +     proc sort data=EM_TARGETDECINFO;
20441 +       by TARGET;
20442 +     run;
20443 +     data _Target;
20444 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20445 +       by NAME;
20446 +       if _a then do;
20447 +         call symput('decmeta', trim(DECMETA));
20448 +       end;
20449 +     run;
20450 +     proc delete data=_Target;run;
20451 +   %end;
20452 +   %else %let decmeta = &EM_DEC_DECMETA;
20455 +  /* retrieve targetEvent from decmeta */
20456 +  %let targetEvent=;
20457 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20458 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20459 +      data _null_;
20460 +       set &DECMETA(where=(_TYPE_="TARGET"));
20461 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20462 +      run;
20463 +    %end;
20464 +  %end;
20466 +  /* retrieve predicted var for targetEvent from decmeta */
20467 +  %let predTarget=;
20468 +  %let predLvl=;
20469 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20470 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20471 +      data _null_;
20472 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20473 +       call symput('predTarget', strip(VARIABLE));
20474 +       call symput('predLvl', strip(LEVEL));
20475 +      run;
20476 +    %end;
20477 +  %end;
20478 +  %else %do;
20479 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20480 +      data _null_;
20481 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20482 +       call symput('predTarget', strip(VARIABLE));
20483 +      run;
20484 +    %end;
20485 +  %end;
20487 +  /* create BelowText value */
20488 +  data belowtext;
20489 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20490 +    keep node belowtext;
20491 +  run;
20493 +  /* replace belowtext with variable label if it exists */
20494 +  data belowtext2;
20495 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20496 +    keep node belowtextlbl;
20497 +  run;
20499 +  proc sort data=belowtext; by node; run;
20500 +  proc sort data=belowtext2; by node; run;
20502 +  data belowtext;
20503 +    merge belowtext belowtext2(in=_a);
20504 +    by node;
20505 +    if _a then belowtext=belowtextlbl;
20506 +    keep node belowtext;
20507 +  run;
20509 +  /* create AboveText value */
20510 +  data abovetext;
20511 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20512 +  run;
20513 +  proc sort data=abovetext; by node numeric_value; run;
20515 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20516 +  data abovetext;
20517 +    set abovetext(rename=(node=parent));
20518 +    by parent numeric_value;
20519 +    retain abovetext tempstring flag branch origval origchar ;
20520 +    length abovetext $256;
20521 +    length tempstring origchar $64;
20523 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20524 +      if first.parent then do;
20525 +        if missing(character_value) then do;
20526 +          numeric_value = round(numeric_value, &sp_precision);
20527 +          abovetext = "< "||strip(NUMERIC_VALUE);
20528 +          branch = 1;
20529 +          origval = numeric_value;
20530 +          output;
20531 +        end;
20532 +        else do;
20533 +          abovetext = "< "||strip(CHARACTER_VALUE);
20534 +          branch = 1;
20535 +          origchar = character_value;
20536 +          output;
20537 +        end;
20539 +        if first.parent AND last.parent then do;
20540 +          if missing(character_value) then do;
20541 +            numeric_value = round(numeric_value, &sp_precision);
20542 +            branch = branch + 1;
20543 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20544 +            output;
20545 +          end;
20546 +          else do;
20547 +            branch = branch + 1;
20548 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20549 +            output;
20550 +          end;
20551 +        end;
20552 +      end;
20553 +      else if last.parent then do;
20554 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20555 +          if missing(character_value) then do;
20556 +            numeric_value = round(numeric_value, &sp_precision);
20557 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20558 +          end;
20559 +          else do;
20560 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20561 +          end;
20562 +          branch = branch + 1;
20563 +          output;
20565 +          if missing(character_value) then do;
20566 +            numeric_value = round(numeric_value, &sp_precision);
20567 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20568 +          end;
20569 +          else do;
20570 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20571 +          end;
20572 +          branch = branch + 1;
20573 +          output;
20574 +        end;
20575 +        else do;
20576 +          if missing(character_value) then do;
20577 +            numeric_value = round(numeric_value, &sp_precision);
20578 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20579 +          end;
20580 +          else do;
20581 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20582 +          end;
20583 +          branch = branch + 1;
20584 +          output;
20585 +        end;
20586 +      end;
20587 +      else do;
20588 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20589 +          if missing(character_value) then do;
20590 +            numeric_value = round(numeric_value,&sp_precision);
20591 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20592 +            origval = numeric_value;
20593 +          end;
20594 +          else do;
20595 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20596 +            origchar = character_value;
20597 +          end;
20598 +          branch = branch + 1;
20599 +          output;
20601 +        end;
20602 +        else do;
20603 +          if missing(character_value) then do;
20604 +            numeric_value = round(numeric_value, &sp_precision);
20605 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20606 +            origval = numeric_value;
20607 +          end;
20608 +          else do;
20609 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20610 +            origval = character_value;
20611 +          end;
20612 +          branch = branch + 1;
20613 +          output;
20614 +        end;
20615 +      end;
20616 +    end;
20617 +    else do;
20618 +       if first.numeric_value then do;
20619 +         flag = 0;
20620 +         abovetext = strip(CHARACTER_VALUE);
20621 +         branch = numeric_value;
20622 +         if first.numeric_value AND last.numeric_value then do;
20623 +           output;
20624 +         end;
20625 +       end;
20626 +       else if last.numeric_value then do;
20627 +         if flag=0 then do;
20628 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20629 +           length = length(strip(tempstring));
20630 +           if length < 32 then do;
20631 +             abovetext = strip(tempstring);
20632 +           end;
20633 +           else do;
20634 +             abovetext = strip(abovetext)||", ...";
20635 +             flag = 1;
20636 +           end;
20637 +         end;
20638 +         branch = numeric_value;
20639 +         output;
20640 +       end;
20641 +       else do;
20642 +         if flag=0 then do;
20643 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20644 +           length = length(strip(tempstring));
20645 +           if length < 32 then do;
20646 +             abovetext = strip(tempstring);
20647 +           end;
20648 +           else do;
20649 +             abovetext = strip(abovetext)||", ...";
20650 +             flag=1;
20651 +           end;
20652 +         end;
20653 +         branch = numeric_value;
20654 +       end;
20655 +    end;
20656 +    keep parent branch abovetext;
20657 +  run;
20659 +  /* Missing value to abovetext */
20660 +  data tempmissing;
20661 +    set &EM_USER_OUTRULES;
20662 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20663 +    rename node=parent numeric_value=branch character_value=misschar;
20664 +  run;
20667 +  proc sort data=abovetext; by parent branch; run;
20668 +  proc sort data=tempmissing; by parent branch; run;
20669 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20671 +  data tempoutnodes;
20672 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20673 +    by parent branch;
20674 +    length traintotal validtotal 8;
20675 +    retain traintotal validtotal;
20677 +    if _a then do;
20678 +      if ^MISSING(abovetext) then do;
20679 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20680 +      end;
20681 +      else do;
20682 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20683 +      end;
20684 +    end;
20685 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20687 +    if node=1 then do;
20688 +      traintotal = N;
20689 +      validtotal=VN;
20690 +    end;
20692 +    drop role rank stat misschar belowtext;
20693 +  run;
20694 +  proc sort data=tempoutnodes; by node; run;
20695 +  proc sort data=belowtext; by node; run;
20697 +  data tempoutnodes;
20698 +    merge tempoutnodes belowtext;
20699 +    by node;
20701 +  run;
20703 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20704 +  %let adjusted = N;
20705 +  %let npriors = 0;
20706 +  data _null_ ;
20707 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20708 +    if eof then do ;
20709 +      call symput("npriors" , strip(put(_N_,best.))) ;
20710 +    end;
20711 +  run;
20712 +  %if &npriors gt 0 %then %let adjusted=Y;
20715 +  /* create a table with targetUsed and targetLevel columns for each node */
20716 +  data temptarmeta;
20717 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20718 +    %if &multipleTar eq N %then %do;
20719 +      AND USE in ('D', 'Y')
20720 +    %end;
20721 +    ));
20722 +    length TARGET $32;
20723 +    Target=name;
20724 +    keep target level;
20725 +  run;
20727 +  %if &multipleTar eq Y %then %do;
20728 +    data temptargetused;
20729 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20730 +      keep node target;
20731 +    run;
20732 +    proc sort data=temptargetused; by target; run;
20733 +    proc sort data=temptarmeta; by target; run;
20734 +    data temptargetused;
20735 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20736 +      by target;
20737 +      if _a and _b;
20738 +    run;
20739 +  %end;
20740 +  %else %do;
20741 +    data temptargetused;
20742 +      set &EM_USER_OUTSTATS;
20743 +      length target $32 tarlevel $10;
20744 +      target="%EM_TARGET";
20745 +      tarlevel="%EM_TARGET_LEVEL";
20746 +      keep node target tarlevel;
20747 +    run;
20748 +    proc sort data=temptargetused nodupkey; by node; run;
20749 +  %end;
20751 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20752 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20753 +  proc sort data=temptargetused; by node; run;
20756 +  /* create tables for all interval targets as well as all class targets */
20757 +  data tempinterval tempclass;
20758 +    merge tempoutstats temptargetused( rename=(target=targetused));
20759 +    by node;
20760 +    %if "&multipleTar" eq "Y" %then %do;
20761 +      if ((missing(Target)) OR (target=targetused ));
20762 +    %end;
20764 +    if tarlevel="INTERVAL" then output tempinterval;
20765 +    else output tempclass;
20766 +  run;
20768 +  /* initialize intTarget and classTarget flags */
20769 +  %let em_intNobs =0;
20770 +  %let em_classNobs = 0;
20771 +  %let em_intTarget= N;
20772 +  %let em_classTarget= N;
20774 +  proc sql;
20775 +    reset noprint;
20776 +    select count(*) into :em_intNobs from tempinterval;
20777 +  quit;
20778 +  proc sql;
20779 +    reset noprint;
20780 +    select count(*) into :em_classNobs from tempclass;
20781 +  quit;
20783 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20784 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20786 +  /* retrieve all information for interval targets */
20787 +  %if &em_intTarget eq Y %then %do;
20789 +    /* determine if leaf variable exists */
20790 +    %let dsid=%sysfunc(open(tempinterval,i));
20791 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20792 +    %let rc=%sysfunc(close(&dsid));
20794 +    proc transpose data=tempinterval
20795 +      %if &leafexists %then %do;
20796 +        (drop=leaf)
20797 +      %end;
20798 +      %if &validexist %then %do;
20799 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20800 +      %end;
20801 +      %else %do;
20802 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20803 +      %end;
20804 +      by node;
20805 +      id statname;
20806 +    run;
20807 +    data tempinterval;
20808 +      set tempinterval;
20809 +      if missing(N) then delete;
20810 +    run;
20811 +  %end;
20813 +  /* retrieve all information for class targets */
20814 +  %if &em_classTarget eq Y %then %do;
20815 +    proc sort data=tempclass; by node category; run;
20816 +    %if &validflag eq N %then %do;
20817 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20818 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20819 +    %end;
20820 +    %else %do;
20821 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20822 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20823 +    %end;
20824 +      set tempclass;
20826 +      %if &validflag eq N %then %do;
20827 +        %if "&adjusted" eq "N" %then %do;
20828 +          if statname="N" then output tempn;
20829 +        %end;
20830 +        %else %do;
20831 +          if statname="NPRIORS" then output tempn;
20832 +        %end;
20833 +        else if statname="PREDICTION" then output temppredict;
20834 +        else if statname="PROBABILITY" then output tempprob;
20835 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20836 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20837 +      %end;
20838 +      %else %do;
20839 +        %if "&adjusted" eq "N" %then %do;
20840 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20841 +        %end;
20842 +        %else %do;
20843 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20844 +        %end;
20845 +        else if statname="PREDICTION" then output temppredict;
20846 +        else if statname="PROBABILITY" then output tempprob;
20847 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20848 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20849 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20850 +      %end;
20851 +    run;
20854 +    /* determine if profit/loss exists in tempprofit */
20855 +    %let em_profitflag=0;
20856 +    %let em_lossflag=0;
20857 +    proc sql;
20858 +      reset noprint;
20859 +      select count(*) into :em_profitflag from tempprofit;
20860 +    quit;
20861 +    proc sql;
20862 +      reset noprint;
20863 +      select count(*) into :em_lossflag from temploss;
20864 +    quit;
20866 +    %if &validFlag eq Y %then %do;
20867 +      proc transpose data=tempn
20868 +        %if "&adjusted" eq "N" %then %do;
20869 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20870 +        %end;
20871 +        %else %do;
20872 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20873 +        %end;
20874 +        by node;
20875 +        id statname;
20876 +      run;
20877 +      %if &em_profitflag ne 0 %then %do;
20878 +        proc transpose data=tempprofit out=tempprofit;
20879 +          by node category;
20880 +          id statname ;
20881 +        run;
20882 +      %end;
20883 +      %if &em_lossflag ne 0 %then %do;
20884 +        proc transpose data=temploss out=temploss;
20885 +          by node category;
20886 +          id statname ;
20887 +        run;
20888 +      %end;
20889 +      data tempprob;
20890 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20891 +        by node
20892 +        %if &multipleTar eq Y %then %do;
20893 +          target
20894 +        %end;
20895 +        category;
20896 +      run;
20897 +    %end;
20899 +    /* store percentcorrect value */
20900 +    data temppredict;
20901 +      merge tempprob temppredict(in=_a);
20902 +      by node category;
20903 +      if _a then do;
20904 +        percentCorrect = statvalue;
20905 +        %if &validFlag eq Y %then %do;
20906 +          vpercentCorrect= vstatvalue;
20907 +        %end;
20908 +      end;
20909 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20910 +      %if &validFlag eq Y %then %do;
20911 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20912 +      %end;
20913 +      ;
20914 +      if missing(percentCorrect) then delete;
20915 +      drop target;
20916 +    run;
20918 +    /* build profittext */
20919 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20920 +      data tempprofittext(keep= node profittext profitloss);
20921 +        length profittext $800 profitloss 8.;
20922 +        retain profittext profitloss;
20924 +        merge tempprob
20925 +        %if &em_profitflag ne 0 %then %do;
20926 +          tempprofit
20927 +        %end;
20928 +        %else %if &em_lossflag ne 0 %then %do;
20929 +          temploss
20930 +        %end;
20931 +        ;
20932 +        by node category;
20934 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20935 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20936 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20937 +          %let profittype = ALL;
20938 +        %end;
20940 +        /* create the profitloss variable for nodecolor if selected */
20941 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20943 +        %if "&profittype" eq "ALL" %then %do;
20944 +          if strip(CATEGORY)="&targetEvent" then do;
20945 +            profitloss=statvalue;
20946 +          end;
20947 +          if first.node then do;
20948 +            %if &validFlag eq N %then %do;
20949 +             %if &em_profitflag ne 0 %then %do;
20950 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20951 +             %end;
20952 +             %if &em_lossflag ne 0 %then %do;
20953 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20954 +             %end;
20955 +            %end;
20956 +            %else %do;
20957 +             %if &em_profitflag ne 0 %then %do;
20958 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20958!+;
20959 +             %end;
20960 +             %if &em_lossflag ne 0 %then %do;
20961 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20962 +             %end;
20963 +            %end;
20964 +          end;
20965 +          else if last.node then do;
20966 +            %if &validFlag eq N %then %do;
20967 +             %if &em_profitflag ne 0 %then %do;
20968 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20969 +             %end;
20970 +             %if &em_lossflag ne 0 %then %do;
20971 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20972 +             %end;
20973 +             /*if CATEGORY="&targetEvent" then do;
20974 +               profitloss=statvalue;
20975 +             end;*/
20976 +            %end;
20977 +            %else %do;
20978 +             %if &em_profitflag ne 0 %then %do;
20979 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20979!+14.&EM_PROPERTY_SPLITPRECISION);
20980 +                if CATEGORY="&targetEvent" then do;
20981 +                 profitloss=ALTERNATIVE_PROFIT;
20982 +                end;
20983 +             %end;
20984 +             %if &em_lossflag ne 0 %then %do;
20985 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20985!+14.&EM_PROPERTY_SPLITPRECISION);
20986 +                if CATEGORY="&targetEvent" then do;
20987 +                  profitloss=ALTERNATIVE_LOSS;
20988 +                end;
20989 +             %end;
20990 +            %end;
20991 +            output;
20992 +          end;
20993 +          else do;
20994 +            %if &validFlag eq N %then %do;
20995 +             %if &em_profitflag ne 0 %then %do;
20996 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20997 +             %end;
20998 +             %if &em_lossflag ne 0 %then %do;
20999 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21000 +             %end;
21001 +            %end;
21002 +            %else %do;
21003 +             %if &em_profitflag ne 0 %then %do;
21004 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
21004!+14.&EM_PROPERTY_SPLITPRECISION);
21005 +             %end;
21006 +             %if &em_lossflag ne 0 %then %do;
21007 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
21007!+14.&EM_PROPERTY_SPLITPRECISION);
21008 +             %end;
21009 +            %end;
21010 +          end;
21011 +        %end;
21012 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21013 +          if strip(CATEGORY) = "&targetevent" then do;
21014 +            %if &validFlag eq N %then %do;
21015 +             %if &em_profitflag ne 0 %then %do;
21016 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21017 +             %end;
21018 +             %if &em_lossflag ne 0 %then %do;
21019 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21020 +             %end;
21021 +             profitloss=statvalue;
21022 +            %end;
21023 +            %else %do;
21024 +             %if &em_profitflag ne 0 %then %do;
21025 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
21025!+;
21026 +                profitloss=ALTERNATIVE_PROFIT;
21027 +             %end;
21028 +             %if &em_lossflag ne 0 %then %do;
21029 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
21030 +                profitloss=ALTERNATIVE_LOSS;
21031 +             %end;
21032 +            %end;
21033 +            output;
21034 +          end;
21035 +        %end;
21036 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
21037 +          if strip(CATEGORY) = "&targetevent" then do;
21038 +            %if &validFlag eq N %then %do;
21039 +             profitloss=statvalue;
21040 +            %end;
21041 +            %else %do;
21042 +             %if &em_profitflag ne 0 %then %do;
21043 +                profitloss=ALTERNATIVE_PROFIT;
21044 +             %end;
21045 +             %if &em_lossflag ne 0 %then %do;
21046 +                profitloss=ALTERNATIVE_LOSS;
21047 +             %end;
21048 +            %end;
21049 +            output;
21050 +          end;
21051 +        %end;
21052 +      run;
21053 +    %end;
21055 +    data tempprob(keep= node probtext);
21056 +      length probtext $800;
21057 +      retain probtext;
21058 +      set tempprob ;
21059 +      by node;
21061 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
21062 +      %let probtype = &EM_PROPERTY_TARGET;
21063 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
21064 +        %let probtype = ALL;
21065 +      %end;
21067 +      %if "&probtype" eq "ALL" %then %do;
21068 +        if first.node then do;
21069 +          %if &validFlag eq N %then %do;
21070 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21071 +          %end;
21072 +          %else %do;
21073 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21074 +          %end;
21075 +        end;
21076 +        else if last.node then do;
21077 +          %if &validFlag eq N %then %do;
21078 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21079 +          %end;
21080 +          %else %do;
21081 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21082 +          %end;
21083 +          output;
21084 +        end;
21085 +        else do;
21086 +          %if &validFlag eq N %then %do;
21087 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21088 +          %end;
21089 +          %else %do;
21090 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21091 +          %end;
21092 +        end;
21093 +      %end;
21094 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21095 +        if strip(CATEGORY) = "&targetevent" then do;
21096 +          %if &validFlag eq N %then %do;
21097 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21098 +          %end;
21099 +          %else %do;
21100 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21101 +          %end;
21102 +          output;
21103 +        end;
21104 +      %end;
21105 +      %else %if "&probtype" eq "NONE" %then %do;
21106 +        if last.node then do;
21107 +          output;
21108 +        end;
21109 +      %end;
21110 +    run;
21111 +  %end;
21113 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
21115 +  %let oldexists=0;
21116 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
21117 +     data old_tree_plot;
21118 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
21119 +        rename nodecolor=oldnodecolor;
21120 +     run;
21122 +     proc sort data=old_tree_plot;
21123 +        by node;
21124 +     run;
21126 +     %let oldexists=1;
21127 +  %end;
21129 +  data &EM_USER_TREE_PLOT;
21130 +    length textall $800;
21131 +    merge tempoutnodes temptargetused
21133 +    %if &em_intTarget eq Y %then %do;
21134 +      tempinterval
21135 +    %end;
21137 +    %if &em_classTarget eq Y %then %do;
21139 +      %if &validFlag eq N %then %do;
21140 +        tempn(rename=(statvalue=N))
21141 +      %end;
21142 +      %else %do;
21143 +        tempn
21144 +      %end;
21146 +      temppredict tempprob
21148 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21149 +        tempprofittext
21150 +      %end;
21151 +    %end;
21152 +    ;
21153 +    by node;
21155 +    /* build nodetext based on user selection */
21156 +    textall="";
21158 +    %if &em_intTarget eq Y %then %do;
21159 +    if tarlevel="INTERVAL" then do;
21160 +      /* Nodeid */
21161 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21162 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21163 +      %end;
21165 +      /* Target identifier if multiple targets are used */
21166 +      %if "&multipleTar" eq "Y" %then %do;
21167 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21168 +      %end;
21170 +      %if &validFlag eq Y %then %do;
21171 +         /* Column labels displayed in validflag eq Y only */
21172 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21173 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21173!+noquote ))";
21174 +         %end;
21176 +         /* Average values */
21177 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21178 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21179 +         %end;
21181 +         /* RASE */
21182 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21183 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21184 +         %end;
21186 +         /* Count */
21187 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21188 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21189 +         %end;
21190 +      %end;
21191 +      %else %do;
21192 +         /* Average values */
21193 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21194 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21195 +         %end;
21197 +         /* RASE */
21198 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21199 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21200 +         %end;
21202 +         /* Count */
21203 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21204 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21205 +         %end;
21206 +      %end;
21208 +      /* nodecolor */
21209 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21210 +        nodecolor=PREDICTION;
21211 +      %end;
21212 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21213 +        nodecolor=RASE;
21214 +      %end;
21215 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21216 +        nodecolor=1;
21217 +      %end;
21219 +    end;
21220 +    %end;
21221 +    %if &em_classTarget eq Y %then %do;
21222 +    if tarlevel^="INTERVAL" then  do;
21224 +      /* Nodeid */
21225 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21226 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21227 +      %end;
21228 +      /* Target identifier if multiple targets are used */
21229 +      %if "&multipleTar" eq "Y" %then %do;
21230 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21231 +      %end;
21233 +      /* Predicted values */
21234 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21235 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21236 +      %end;
21238 +      /* Column labels displayed in validflag eq Y only */
21239 +      %if "&ValidFlag" eq "Y" %then %do;
21240 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21241 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21241!+noquote ))";
21242 +        %end;
21243 +      %end;
21245 +      /* Target Values */
21246 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21247 +        textall=strip(textall)||"0A"x||strip(probtext);
21248 +      %end;
21250 +      /* include profit or loss for all target levels */
21251 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21252 +        textall=strip(textall)||"0A"x||strip(profittext);
21253 +      %end;
21255 +      %if &validFlag eq N %then %do;
21256 +        /* Percent Correct */
21257 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21258 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21259 +        %end;
21261 +         /* Count */
21262 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21263 +          %if "&adjusted" eq "N" %then %do;
21264 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21265 +          %end;
21266 +          %else %do;
21267 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21268 +          %end;
21269 +         %end;
21270 +      %end;
21271 +      %else %do;
21272 +        /* Percent Correct */
21273 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21274 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21275 +        %end;
21277 +         /* Count */
21278 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21279 +          %if "&adjusted" eq "N" %then %do;
21280 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21281 +          %end;
21282 +          %else %do;
21283 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21284 +          %end;
21285 +         %end;
21286 +      %end;
21288 +      /* nodecolor */
21289 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21290 +       %if &multipleTar ne Y %then %do;
21291 +        nodecolor=&predTarget;
21292 +       %end;
21293 +       %else %do;
21294 +         nodecolor=percentcorrect;
21295 +       %end;
21296 +      %end;
21297 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21298 +        nodecolor=percentcorrect;
21299 +      %end;
21300 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21301 +        nodecolor=1;
21302 +      %end;
21303 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21304 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21305 +          nodecolor=percentcorrect;
21306 +        %end;
21307 +        %else %do;
21308 +          nodecolor=profitloss;
21309 +        %end;
21310 +      %end;
21312 +    end;
21313 +    %end;
21314 +    %if &em_intTarget eq Y %then %do;
21315 +     drop  PREDICTION  TARGET TARLEVEL
21316 +     %if &ValidFlag eq Y %then %do;
21317 +         VPREDICTION
21318 +     %end;
21319 +     ;
21320 +    %end;
21321 +    %if &em_classTarget eq Y %then %do;
21322 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21323 +     %if &ValidFlag eq Y %then %do;
21324 +         VSTATVALUE
21325 +     %end;
21326 +     ;
21327 +    %end;
21329 +  run;
21331 +  /* add leaf index information to plotds - based on primary target only*/
21332 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21333 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21334 +      set &EM_USER_OUTSTATS;
21335 +      if ((statname="PROBABILITY"
21336 +      %if &validexist %then %do;
21337 +       or statname="VALID: PROBABILITY"
21338 +      %end;
21339 +      ) AND (CATEGORY="&TARGETEVENT")
21340 +      %if "&multipleTar" eq "Y" %then %do;
21341 +        AND (Target="%EM_TARGET")
21342 +      %end;
21343 +      );
21344 +    run;
21346 +    %if &validexist %then %do;
21347 +      proc sort data=tempprob; by node; run;
21348 +      %let vpredTarget = V%substr(&predTarget, 2);
21349 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21350 +         by node;
21351 +         id statname;
21352 +      run;
21353 +    %end;
21354 +  %end;
21355 +  %else %do;
21356 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21357 +      set &EM_USER_OUTSTATS;
21358 +      if ((statname="PREDICTION"
21359 +      %if &validexist %then %do;
21360 +       or statname="VALID: PREDICTION"
21361 +      %end;
21362 +      )
21363 +      %if "&multipleTar" eq "Y" %then %do;
21364 +        AND (Target="%EM_TARGET")
21365 +      %end;
21366 +      );
21367 +    run;
21368 +    %if &validexist %then %do;
21369 +      proc sort data=tempprob; by node; run;
21370 +      %let vpredTarget = V%substr(&predTarget, 2);
21371 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21372 +         by node;
21373 +         id statname;
21374 +      run;
21375 +    %end;
21376 +  %end;
21378 +  proc sort data=tempprob; by node; run;
21379 +  data tempoutnodes;
21380 +    merge tempoutnodes tempprob;
21381 +    by node;
21382 +  run;
21384 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21385 +  data tempnodes;
21386 +    retain traintotal validtotal;
21387 +    set tempnodes(where=(leaf ne . ));
21388 +    tprob=round(&predTarget, .01);
21389 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21390 +      percevent_train=round(tprob*100, .01);
21391 +    %end;
21392 +    %else %do;
21393 +      percevent_train=tprob;
21394 +    %end;
21396 +    perc_train=round((n/traintotal)*100, 0.01);
21397 +    /* leafwidth already has a *10 multiplier */
21398 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21400 +    %if &validexist %then %do;
21401 +      %let vpredTarget = V%substr(&predTarget,2);
21402 +      vprob=round(&vpredTarget, .01);
21403 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21404 +        percevent_valid=round(vprob*100, .01);
21405 +      %end;
21406 +      %else %do;
21407 +        percevent_valid=vprob;
21408 +      %end;
21409 +      perc_valid=round((vn/validtotal)*100, .01);
21410 +    %end;
21412 +    index=_N_;
21413 +    keep node index tprob perc_train percevent_train
21414 +    %if &validexist %then %do;
21415 +        vprob percevent_valid perc_valid
21416 +    %end;
21417 +    ;
21418 +  run;
21419 +  proc sort data=tempnodes; by node; run;
21420 +  data &EM_USER_TREE_PLOT;
21421 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21422 +    by node;
21423 +    if missing(node) then delete;
21424 +    %if &oldexists %then %do;
21425 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21426 +      drop oldnodecolor;
21427 +    %end;
21428 +    abovetext = compbl(abovetext);
21430 +    /* add variable labels */
21431 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21432 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21433 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21434 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21435 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21436 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21438 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21439 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21440 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21441 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21442 +          %end;
21443 +          %else %do;
21444 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21445 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21446 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21447 +          %end;
21448 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21450 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21451 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21452 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21453 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21454 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21455 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21456 +          %end;
21457 +          %else %do;
21458 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21459 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21460 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21461 +          %end;
21462 +    ;
21463 +  run;
21465 +  /* delete temporary tables */
21466 +  proc datasets lib=work nolist;
21467 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21468 +  run;
21470 +%mend em_tree_makePlotDs;
21474 +%macro em_tree_report;
21476 +   /* report properties */
21477 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21478 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21479 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21480 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21481 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21482 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21483 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21484 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21485 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21486 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21487 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21488 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21489 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21491 +   %let validexist=0;
21492 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21493 +     %let validexist=1;
21494 +   %end;
21496 +   /* determine if multiple targets will be processed */
21497 +   %let em_tree_multipleTargets=N;
21498 +   %let em_tree_numTarget=1;
21499 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21500 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21501 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21502 +         %let em_tree_multipleTargets=N;
21503 +      %end;
21504 +      %else %do;
21505 +        data _null_;
21506 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21507 +          if eof then
21508 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21509 +        run;
21511 +        %if &em_tree_numTarget gt 1 %then %do;
21512 +           %let em_tree_multipleTargets=Y;
21513 +        %end;
21514 +     %end;
21515 +   %end;
21517 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21519 +   /* variable importance */
21520 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21521 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21523 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21524 +     /* and the columns may not be generated                                                                                 */
21525 +     %let em_tree_cvexists=;
21526 +     %let em_tree_surrexists=.;
21527 +     data _null_;
21528 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21529 +       if eof then do ;
21530 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21531 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21532 +       end;
21533 +     run;
21535 +     data &EM_USER_OUTIMPORT;
21536 +         set &EM_USER_OUTIMPORT;
21537 +         /* format columns based on Precison value specified */
21538 +         format importance 15.&EM_PROPERTY_PRECISION
21539 +              %if &validexist %then %do;
21540 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21541 +              %end;
21542 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21543 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21544 +              %end;
21545 +         ;
21546 +     run;
21548 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21549 +     proc print data=&EM_USER_OUTIMPORT
21550 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21551 +          (where=((nrules>0) OR (nsurrogates>0)))
21552 +        %end;
21553 +        %else %do;
21554 +           (where=(nrules>0))
21555 +        %end;
21556 +        label noobs
21557 +        ;
21558 +     run;
21559 +     title10;
21561 +   %end;
21563 +   /* Sequence */
21564 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21565 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21566 +   data _null_ ;
21567 +      set &EM_USER_outseq (obs=2) end=eof ;
21568 +      if eof then do ;
21569 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21570 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21571 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21572 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21573 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21574 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21575 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21576 +      end;
21577 +    run;
21579 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21580 +      data &EM_USER_OUTSEQ;
21581 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21582 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21583 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21584 +           _XMISC_=_VMISC_
21585 +        %end;
21586 +        %if "&em_tree_aprof" ne "."  %then %do;
21587 +           _XAPROF_=_VAPROF_
21588 +           _XPROF_ = _VPROF_
21589 +        %end;
21590 +        %if "&em_tree_aloss" ne "."  %then %do;
21591 +           _XALOSS_=_VALOSS_
21592 +        %end;
21593 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21594 +           _XPASE_ = _VPASE_
21595 +           _XPMISC_ = _VPMISC_
21596 +        %end;
21598 +        ));
21599 +     %end;
21600 +     %else %do;
21601 +        set &EM_USER_OUTSEQ;
21602 +     %end;
21604 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21605 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21606 +            _MISC_   15.&EM_PROPERTY_PRECISION
21607 +         %end;
21608 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21609 +            _PASE_  15.&EM_PROPERTY_PRECISION
21610 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21611 +         %end;
21612 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21613 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21614 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21615 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21616 +            %end;
21617 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21618 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21619 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21620 +            %end;
21621 +         %end;
21622 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21623 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21624 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21625 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21626 +            %end;
21627 +         %end;
21628 +         %if "&em_tree_seq" ne "." %then %do;
21629 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21630 +         %end;
21631 +         %if "&em_tree_vseq" ne "." %then %do;
21632 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21633 +         %end;
21634 +         %if "&em_tree_aprof" ne "." %then %do;
21635 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21636 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21637 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21638 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21639 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21640 +           %end;
21641 +         %end;
21642 +         %else %if "&em_tree_aloss" ne "." %then %do;
21643 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21644 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21645 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21646 +           %end;
21647 +         %end;
21648 +      ;
21649 +    run;
21650 +   %end;
21652 +   /* Observation Based Importance */
21653 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21655 +      /* need to check for 0 obs */
21656 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21657 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21658 +      %let rc=%sysfunc(close(&dsid));
21660 +      %if &onobs %then %do;
21661 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21662 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21664 +         data &EM_USER_OUTOBSIMP;
21665 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21666 +           if _a;
21667 +           by _INPUT1_;
21668 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21669 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21670 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21671 +                   %end;
21672 +                   ;
21673 +         run;
21674 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21675 +      %end;
21676 +   %end;
21678 +  %end;
21680 +  /* create dataset to support tree diagram and icicle plot */
21681 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21682 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21684 +  /* display tree diagram */
21685 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21686 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21688 +  /* display icicle diagram */
21689 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21690 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21692 +  /* Leaf Statistics Plot */
21693 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21695 +  /* print leaf information to output window */
21696 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21698 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21699 +       by descending N;
21700 +     run;
21702 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21703 +     %local vn;
21704 +     data _null_;
21705 +       set t (obs=2) end=eof;
21706 +       if eof then do;
21707 +         call symput("vn", strip(put(vn, best.)));
21708 +       end;
21709 +     run;
21711 +     data t;
21712 +       set t;
21713 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21714 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21715 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21716 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21717 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21718 +       %end;
21719 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21720 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21721 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21722 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21723 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21724 +          %end;
21725 +       %end;
21726 +       ;
21727 +     run;
21729 +     /* determine if rase is found in t */
21730 +    %let dsid=%sysfunc(open(t,i));
21731 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21732 +    %let rc=%sysfunc(close(&dsid));
21734 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21735 +     proc print data=t noobs label;
21736 +       where tprob ne .;
21737 +       var node depth N tprob
21738 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21739 +         %if "&vn" ne "." %then %do;
21740 +           VN
21741 +         %end;
21742 +         vprob
21743 +       %end;
21744 +       %if &raseexists %then %do;
21745 +            RASE
21746 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21747 +              VRASE
21748 +            %end;
21749 +       %end;
21750 +       ;
21751 +     run;
21752 +     title10;
21753 +  %end;
21755 +  /* create plots that are done during training of node */
21756 +  /* display iterative plot, including reference line */
21757 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21758 +   /* %if &nleaves eq  %then %do; */
21759 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21760 +      data _null_;
21761 +        set &EM_USER_OUTTOPOLOGY end=eof;
21762 +        if eof then do;
21763 +          call symput('nleaves', LEAF);
21764 +        end;
21765 +      run;
21766 +   /* %end; */
21768 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21769 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21770 +  %end;
21772 +  /* display leaf statistics */
21773 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21775 +  /* stats by node if multiple targets = Y */
21776 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21777 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21778 +    data &EM_USER_OUTSTATS;
21779 +      set &EM_USER_OUTSTATS;
21781 +     * if STATNAME="TARGET" then delete;
21782 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21783 +      drop leaf;
21784 +    run;
21785 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21787 +  %end;
21788 +  %else %do;
21789 +    /* add outstats and outdescribe to spk but not results */
21790 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21791 +  %end;
21793 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE5_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 100 observations read from the data set EMWS3.TREE5_OUTIMPORT.
NOTE: The data set EMWS3.TREE5_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set EMWS3.TREE5_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE5_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set EMWS3.TREE5_OUTSEQ.
NOTE: The data set EMWS3.TREE5_OUTSEQ has 9 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE5_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE5_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE5_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 191 observations read from the data set EMWS3.TREE5_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE5_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE5_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE5_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE5_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 351 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 338 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE5_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 351 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 26 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 156 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 156 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 13 observations read from the data set WORK.TEMPN.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE5_TREE_PLOT has 13 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE5_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE5_TREE_PLOT.
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE5_TREE_PLOT has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE5_TREE_PLOT.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 13 observations read from the data set EMWS3.TREE5_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21794
21795  *------------------------------------------------------------*;
21796  * End REPORT: Tree5;
21797  *------------------------------------------------------------*;
 
21798  /* Reset EM Options */
21799  options formchar="|----|+|---+=|-/\<>*";
21800  options nocenter ls=256 ps=10000;
21801  goptions reset=all device=GIF NODISPLAY;
 
21802  proc sort data=WORK.EM_USER_REPORT;
21803  by ID VIEW;
21804  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21805  proc sort data=EMWS3.TextCluster8_CMeta_TRAIN out=WORK.SUBSETINMETA;
21806  by NAME;
21807  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TEXTCLUSTER8_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 112 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21808  proc sort data=EMWS3.Tree5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21809  by NAME;
21810  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TREE5_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 112 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21811  data WORK.ASSESS_META;
21812  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21813  by NAME;
21814  run;
 
NOTE: There were 112 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 112 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 112 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21815  data EM_temp_assessMeta;
21816  set EMWS3.Tree5_CMeta_TRAIN;
21817  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21818  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21819  data EM_temp_assessdata;
21820  set EMWS3.Tree5_TRAIN(keep=
21821  F_Category
21822  I_Category
21823  P_CategoryADVOCATE
21824  P_CategoryBUSINESS_DEVELOPMENT
21825  P_CategoryCONSULTANT
21826  P_CategoryDESIGNER
21827  P_CategoryDIGITAL_MEDIA
21828  P_CategoryFITNESS
21829  P_CategoryHEALTHCARE
21830  P_CategoryHR
21831  P_CategoryINFORMATION_TECHNOLOGY
21832  P_CategoryOTHER
21833  P_CategorySALES
21834  P_CategoryTEACHER
21835  Q_CategoryADVOCATE
21836  Q_CategoryBUSINESS_DEVELOPMENT
21837  Q_CategoryCONSULTANT
21838  Q_CategoryDESIGNER
21839  Q_CategoryDIGITAL_MEDIA
21840  Q_CategoryFITNESS
21841  Q_CategoryHEALTHCARE
21842  Q_CategoryHR
21843  Q_CategoryINFORMATION_TECHNOLOGY
21844  Q_CategoryOTHER
21845  Q_CategorySALES
21846  Q_CategoryTEACHER
21847  R_CategoryADVOCATE
21848  R_CategoryBUSINESS_DEVELOPMENT
21849  R_CategoryCONSULTANT
21850  R_CategoryDESIGNER
21851  R_CategoryDIGITAL_MEDIA
21852  R_CategoryFITNESS
21853  R_CategoryHEALTHCARE
21854  R_CategoryHR
21855  R_CategoryINFORMATION_TECHNOLOGY
21856  R_CategoryOTHER
21857  R_CategorySALES
21858  R_CategoryTEACHER
21859  U_Category
21860  V_CategoryADVOCATE
21861  V_CategoryBUSINESS_DEVELOPMENT
21862  V_CategoryCONSULTANT
21863  V_CategoryDESIGNER
21864  V_CategoryDIGITAL_MEDIA
21865  V_CategoryFITNESS
21866  V_CategoryHEALTHCARE
21867  V_CategoryHR
21868  V_CategoryINFORMATION_TECHNOLOGY
21869  V_CategoryOTHER
21870  V_CategorySALES
21871  V_CategoryTEACHER
21872  _WARN_
21873  Category
21874  );
21875  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE5_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER8_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE5_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26157   data EM_temp_assessMeta;
26158   set EMWS3.Tree5_CMeta_TRAIN;
26159   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26160   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26161   data EM_temp_assessdata;
26162   set EMWS3.Tree5_VALIDATE(keep=
26163   F_Category
26164   I_Category
26165   P_CategoryADVOCATE
26166   P_CategoryBUSINESS_DEVELOPMENT
26167   P_CategoryCONSULTANT
26168   P_CategoryDESIGNER
26169   P_CategoryDIGITAL_MEDIA
26170   P_CategoryFITNESS
26171   P_CategoryHEALTHCARE
26172   P_CategoryHR
26173   P_CategoryINFORMATION_TECHNOLOGY
26174   P_CategoryOTHER
26175   P_CategorySALES
26176   P_CategoryTEACHER
26177   Q_CategoryADVOCATE
26178   Q_CategoryBUSINESS_DEVELOPMENT
26179   Q_CategoryCONSULTANT
26180   Q_CategoryDESIGNER
26181   Q_CategoryDIGITAL_MEDIA
26182   Q_CategoryFITNESS
26183   Q_CategoryHEALTHCARE
26184   Q_CategoryHR
26185   Q_CategoryINFORMATION_TECHNOLOGY
26186   Q_CategoryOTHER
26187   Q_CategorySALES
26188   Q_CategoryTEACHER
26189   R_CategoryADVOCATE
26190   R_CategoryBUSINESS_DEVELOPMENT
26191   R_CategoryCONSULTANT
26192   R_CategoryDESIGNER
26193   R_CategoryDIGITAL_MEDIA
26194   R_CategoryFITNESS
26195   R_CategoryHEALTHCARE
26196   R_CategoryHR
26197   R_CategoryINFORMATION_TECHNOLOGY
26198   R_CategoryOTHER
26199   R_CategorySALES
26200   R_CategoryTEACHER
26201   U_Category
26202   V_CategoryADVOCATE
26203   V_CategoryBUSINESS_DEVELOPMENT
26204   V_CategoryCONSULTANT
26205   V_CategoryDESIGNER
26206   V_CategoryDIGITAL_MEDIA
26207   V_CategoryFITNESS
26208   V_CategoryHEALTHCARE
26209   V_CategoryHR
26210   V_CategoryINFORMATION_TECHNOLOGY
26211   V_CategoryOTHER
26212   V_CategorySALES
26213   V_CategoryTEACHER
26214   _WARN_
26215   Category
26216   );
26217   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE5_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER8_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE5_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30508   %let _cn = %sysfunc(getoption(CENTER));
30509   options nocenter;
30510   proc print data=EMWS3.Tree5_EMREPORTFIT noobs label;
30511   var STAT LABEL TRAIN
30512   VALIDATE
30513   TEST
30514   ;
30515   by TARGET TARGETLABEL;
30516   title9 ' ';
30517   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30518   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE5_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30519   title10;
30520   options &_cn;
 
30521   proc sort data=EMWS3.Tree5_EMCLASSIFICATION nothreads;
30522   by DATAROLE TARGET TARGETLABEL;
30523   run;
 
NOTE: There were 115 observations read from the data set EMWS3.TREE5_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE5_EMCLASSIFICATION has 115 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30524   %let _cn = %sysfunc(getoption(CENTER));
30525   options nocenter;
30526   proc print data=EMWS3.Tree5_EMCLASSIFICATION noobs label;
30527   var from into pct_row pct_col count percent
30528   ;
30529   by DATAROLE TARGET TARGETLABEL;
30530   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30531   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30532   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30533   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30534   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30535   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30536   where _TYPE_='PREDICTION';
30537   title9 ' ';
30538   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30539   run;
 
NOTE: There were 115 observations read from the data set EMWS3.TREE5_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30540   title9;
30541   title10;
30542   options &_cn;
 
30543   %let _cn = %sysfunc(getoption(CENTER));
30544   options nocenter;
30545   data EMWS3.Tree5_EMEVENTREPORT;
30546   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30547   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30547 ! FALSEEVENT
30548   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30549      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30550   FALSEEVENT=0;
30551   FALSENEVENT=0;
30552   TRUEEVENT=0;
30553   TRUENEVENT=0;
30554   set EMWS3.Tree5_EMEVENTREPORT;
30555   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE5_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE5_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30556   proc print data=EMWS3.Tree5_EMEVENTREPORT noobs label;
30557   title9 ' ';
30558   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30559   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30560   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE5_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30561   title10;
30562   options &_cn;
 
30563   proc datasets library=EMWS3 nolist;
30564   modify Tree5_EMRANK;
30565   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30566   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30567   run;
 
NOTE: MODIFY was successful for EMWS3.TREE5_EMRANK.DATA.
30568   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
 
 
30569   %let _cn = %sysfunc(getoption(CENTER));
30570   options nocenter;
30571   proc print data=EMWS3.Tree5_EMRANK label noobs;
30572   var
30573   decile gain lift liftc resp respc N _meanP_;
30574   by
30575   notsorted DATAROLE
30576   notsorted TARGET
30577   notsorted TARGETLABEL
30578   ;
30579   title9 ' ';
30580   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30581   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE5_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30582   title10;
30583   options &_cn;
 
30584   proc datasets library=EMWS3 nolist;
30585   modify Tree5_EMSCOREDIST;
30586   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30587   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30588   run;
 
NOTE: MODIFY was successful for EMWS3.TREE5_EMSCOREDIST.DATA.
30589   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
 
 
