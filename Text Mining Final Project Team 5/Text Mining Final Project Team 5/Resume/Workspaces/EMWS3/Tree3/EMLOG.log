*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:14:08
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:14:00
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree3_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree3META;
15227  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TREE3_VARIABLESET.
NOTE: The data set WORK.TREE3META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.Tree3META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster10_TRAIN EMWS3.TextCluster10_TRAIN
EMWS3.TextCluster10_TRAIN EMWS3.TextCluster10_TRAIN EMWS3 TextCluster10_TRAIN
EMWS3.TextCluster10_TRAIN EMWS3.TextCluster10_TRAIN
EMWS3.TextCluster10_TRAIN EMWS3.TextCluster10_TRAIN EMWS3 TextCluster10_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE3_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree3_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE3_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree3_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15944  *------------------------------------------------------------*;
15945  * Tree3: Generation of macros and macro variables;
15946  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15947  *------------------------------------------------------------*;
 
15948  %let EMEXCEPTIONSTRING=;
15949  *------------------------------------------------------------*;
15950  * TRAIN: Tree3;
15951  *------------------------------------------------------------*;
15952  %let EM_ACTION = TRAIN;
15953  %let syscc = 0;
15954  %macro main;
15955
15956    %if %upcase(&EM_ACTION) = CREATE %then %do;
15957      filename temp catalog 'sashelp.emmodl.tree_create.source';
15958      %include temp;
15959      filename temp;
15960
15961      %em_tree_create;
15962    %end;
15963
15964     %else
15965     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15966
15967         filename temp catalog 'sashelp.emmodl.tree_train.source';
15968         %include temp;
15969         filename temp;
15970         %em_tree_train;
15971     %end;
15972
15973    %else
15974    %if %upcase(&EM_ACTION) = SCORE %then %do;
15975      filename temp catalog 'sashelp.emmodl.tree_score.source';
15976      %include temp;
15977      filename temp;
15978
15979      %em_tree_score;
15980
15981    %end;
15982
15983    %else
15984    %if %upcase(&EM_ACTION) = REPORT %then %do;
15985
15986         filename temp catalog 'sashelp.emmodl.tree_report.source';
15987         %include temp;
15988         filename temp;
15989
15990         %em_tree_report;
15991     %end;
15992
15993    %else
15994    %if %upcase(&EM_ACTION) = OPENINT %then %do;
15995
15996         filename temp catalog 'sashelp.emmodl.tree_actions.source';
15997         %include temp;
15998         filename temp;
15999         %EM_TREE_OPENTREEVIEWER;
16000
16001     %end;
16002
16003    %else
16004    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16005
16006         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16007         %include temp;
16008         filename temp;
16009         %EM_TREE_CLOSETREEVIEWER;
16010
16011     %end;
16012
16013
16014     %doendm:
16015  %mend main;
16016
16017  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16019 +%macro em_tree_train;
16021 +   %if &EM_IMPORT_DATA eq %then %do;
16022 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16023 +       %put &em_codebar;
16024 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16025 +       %put &errormsg;
16026 +       %put &em_codebar;
16027 +       %goto doendm;
16028 +   %end;
16029 +   %else
16030 +       %let EMEXCEPTIONSTRING =;
16032 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16033 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16034 +        %put &em_codebar;
16035 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16036 +        %put &errormsg;
16037 +        %put &em_codebar;
16038 +        %goto doendm;
16039 +   %end;
16041 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16042 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16043 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16044 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16045 +        %put &em_codebar;
16046 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16047 +        %put &errormsg;
16048 +        %put &em_codebar;
16049 +        %goto doendm;
16050 +   %end;
16052 +   /* Initialize property macro variables */
16053 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16054 +   %include temp;
16055 +   filename temp;
16057 +   %EM_SetProperties;
16059 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16060 +   %EM_GETNAME(key=EMTREE, type=DATA);
16061 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16062 +     /* if import eq Y and no importtable defined, throw an exception */
16063 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16064 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16065 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16066 +         %put &em_codebar;
16067 +         %put &errmsg;
16068 +         %put &em_codebar;
16069 +         %goto doendm;
16070 +      %end;
16071 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16072 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16073 +         %put &em_codebar;
16074 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16075 +         %put &errormsg;
16076 +         %put &em_codebar;
16077 +         %goto doendm;
16078 +      %end;
16079 +      %else %do;
16080 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16081 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16082 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16083 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16084 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16085 +         %let dsid = %sysfunc(close(&dsid));
16086 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16087 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16088 +            %put &em_codebar;
16089 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16090 +            %put &errormsg;
16091 +            %put &em_codebar;
16092 +            %goto doendm;
16093 +         %end;
16094 +      %end;
16095 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16096 +         proc delete data=&EM_USER_EMTREE;
16097 +         run;
16098 +      %end;
16099 +   %end;
16100 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16101 +      proc delete data=&EM_USER_EMTREE;
16102 +      run;
16103 +   %end;
16105 +   /* load tree macros */
16106 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16107 +   %include temp;
16108 +   filename temp;
16110 +   /* data sets */
16111 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16112 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16113 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16115 +   /* files */
16116 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16118 +   /* check actual num of target levels */
16119 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16120 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16121 +                              nLevel=_nTargetLevel );
16122 +      %if &_nTargetLevel  > 2 %then %do;
16123 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16124 +        %put &em_codebar;
16125 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16126 +        %put &errormsg;
16127 +        %put &em_codebar;
16128 +        %goto doendm;
16129 +      %end;
16130 +   %end;
16132 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16133 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16134 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16135 +        %let costflag=0;
16136 +        data _null_;
16137 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16138 +          if eof then call symput("costflag", _N_);
16139 +        run;
16140 +        %if &costflag gt 0 %then %do;
16141 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16142 +          %put &em_codebar;
16143 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16144 +          %put &errormsg;
16145 +          %put &em_codebar;
16146 +          %goto doendm;
16147 +       %end;
16148 +     %end;
16149 +   %end;
16151 +   /* determine if multiple targets will be processed */
16152 +   %let em_tree_multipleTargets=N;
16153 +   %let em_tree_numTarget = 1;
16154 +   %let em_tree_targetVars=;
16156 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16157 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16158 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16159 +         %let em_tree_multipleTargets=N;
16160 +      %end;
16161 +      %else %do;
16162 +         /* create macro array of targets  */
16163 +         data _null_;
16164 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16165 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16166 +           if eof then
16167 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16168 +        run;
16170 +        %if &em_tree_numTarget gt 1 %then %do;
16171 +           %let em_tree_multipleTargets=Y;
16172 +        %end;
16173 +      %end;
16174 +   %end;
16176 +   /* create view of only necessary variable for performance reasons */
16177 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16178 +   data &tempData / view=&tempData;
16179 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16180 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16181 +       %EM_TARGET
16182 +     %end;
16183 +     %else %do;
16184 +       %if &em_tree_numTarget ne 0 %then %do;
16185 +         %do i=1 %to &em_tree_numTarget;
16186 +            &&em_tree_targetVars&i
16187 +         %end;
16188 +       %end;
16189 +     %end;
16190 +     );
16191 +   run;
16193 +   /* run Tree procedure */
16194 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16196 +   /* Check return code and throw exception if error is detected */
16197 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16198 +   %if &syserr %then %do;
16199 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16200 +     %goto doendm;
16201 +   %end;
16203 +   /* add decision score code if multiple targets are processed */
16204 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16205 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16206 +   %end;
16208 +   /* create outfit dataset if multiple score statements have been executed */
16209 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16211 +   /* create English Rules */
16212 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16213 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16214 +       %em_tree_makeEnglishRules;
16216 +       /* English Rules */
16217 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16219 +     %end;
16220 +   filename x;
16222 +   %doendm:
16223 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16224 +%macro EM_SetProperties;
16226 +   /* train properties */
16227 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16228 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16229 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16230 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16231 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16232 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16233 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16234 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16235 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16236 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16237 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16238 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16239 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16240 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16241 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16242 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16243 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16244 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16245 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16246 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16247 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16248 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16249 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16250 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16251 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16252 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16253 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16254 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16255 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16260 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16261 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16262 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16266 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16267 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16269 +   /* properties for interactive sample */
16270 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16275 +   /* report properties */
16276 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16281 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16282 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16283 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16290 +   /* score properties */
16291 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16294 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE3_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16296 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16297 +  %global &nLevel;
16298 +  proc dmdb batch data=&indata
16299 +    classout=_tmp_dmdbout;
16300 +    class &target;
16301 +  run;
16302 +  data _tmp_dmdbout;
16303 +    set _tmp_dmdbout;
16304 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16305 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16306 +  run;
16307 +  data _null_;
16308 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16309 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16310 +    %let dsid = %sysfunc(close(&dsid));
16311 +     call symput("&nLevel", put(&_obs, Best12.));
16312 +  run;
16314 +  proc datasets lib=work nolist;
16315 +     delete _tmp_dmdbout;
16316 +  run;
16317 +  quit;
16318 +%Mend EM_CheckBinaryTargetLevel;
16321 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16323 +  /* determine the number of obs in training data */
16324 +  proc sql;
16325 +    reset noprint;
16326 +    select count(*) into :em_nobs from &indata;
16327 +  quit;
16329 +  /* determine the number of input variables */
16330 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16331 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16333 +  /* retrieve targetEvent from decmeta */
16334 +  %let targetEvent=;
16335 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16336 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16337 +      data _null_;
16338 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16339 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16340 +      run;
16341 +    %end;
16342 +  %end;
16344 +  /* create targetTable if multipleTar eq Y */
16345 +  data temptarget;
16346 +    set &EM_DATA_VARIABLESET;
16347 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16348 +  run;
16350 + /* data sets */
16351 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16352 + %EM_GETNAME(key=EMTREE,        type=DATA);
16353 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16354 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16355 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16356 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16357 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16358 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16359 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16360 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16362 + /* files */
16363 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16364 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16366 + /* turn on pmml if requested */
16367 + %let nnpmml=0;
16368 + %if %symexist(EM_PMML) %then %do;
16369 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16370 +       %let nnpmml=1;
16372 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16373 +   %end;
16374 +%end;
16376 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16378 +%if &nnpmml or &numClassTarget %then %do;
16380 +    /* create dmdb needed for pmml generation */
16381 +    %let tree_maxlevel = 512;
16382 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16383 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16384 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16385 +      %end;
16386 +    %end;
16387 +    %if &tree_maxlevel gt 0 %then %do;
16388 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16389 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16390 +    %end;
16392 +    %let targetOrderString =;
16393 +    %let targetString = ;
16394 +    data _null_;
16395 +       length orderString nameString $10000;
16396 +       retain orderString nameString;
16397 +       set &em_data_variableset end=eof;
16398 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16399 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16400 +       %end;
16401 +       %else %do;
16402 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16403 +       %end;          select(order);
16404 +         when('')        order ='DESC';
16405 +         when('FMTASC')  order='ASCFMT';
16406 +         when('FMTDESC') order='DESFMT';
16407 +         otherwise;
16408 +       end;
16409 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16410 +       nameString = trim(nameString)!!' '!!trim(NAME);
16412 +       if eof then do;
16413 +          call symput('targetOrderString', trim(orderString));
16414 +          call symput('targetString', trim(nameString));
16415 +       end;
16416 +    run;
16418 +    %let arborkluge= "work._treeDMDB";
16420 +    proc dmdb batch data=&indata
16421 +    %if &nnpmml %then %do;
16422 +        PMML
16423 +    %end;
16424 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16426 +      %if &nnpmml %then %do;
16427 +           %if "%EM_ID" ne "" %then %do;
16428 +             id %EM_ID;
16429 +           %end;
16430 +           %if &EM_NUM_CLASS gt 0 %then %do;
16431 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16432 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16433 +                  &targetOrderString;
16434 +           %end;
16435 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16436 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16437 +           %end;
16438 +           target &targetString %EM_INTERVAL_TARGET;
16439 +           %if "%EM_FREQ" ne "" %then %do;
16440 +             freq %EM_FREQ;
16441 +           %end;
16442 +      %end;
16443 +      %else %do;
16444 +         class  &targetOrderString;
16445 +         target &targetString %EM_INTERVAL_TARGET;
16446 +      %end;
16447 +    run;
16448 +    quit;
16450 +    proc datasets lib=work nolist;
16451 +       delete classout varout;
16452 +    run;
16453 +    quit;
16455 + %end;
16458 + /* run Arbor procedure */
16459 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16460 +  proc arbor data=&INDATA
16462 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16463 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16464 +  %end;
16466 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16467 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16468 +  %end;
16470 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16471 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16472 +  %end;
16474 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16475 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16476 +  %end;
16478 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16479 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16480 +  %end;
16482 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16483 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16484 +  %end;
16485 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16486 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16487 +  %end;
16488 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16489 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16490 +  %end;
16492 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16493 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16494 +      alpha = &EM_PROPERTY_SIGLEVEL
16495 +    %end;
16496 +  %end;
16498 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16499 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16500 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16501 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16502 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16504 +        padjust =
16505 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16506 +          &chaid
16507 +        %end;
16508 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16509 +          DEPTH
16510 +        %end;
16511 +      %end;
16512 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16513 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16514 +         pvars = &num_inputs
16515 +      %end;
16516 +    %end;
16517 +  %end;
16518 +  %else %do;
16519 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16520 +         padjust = NONE
16521 +      %end;
16522 +  %end;
16524 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16525 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16526 +    Maxrules = &num_nrules
16527 +  %end;
16529 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16530 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16531 +    Maxsurrs = &num_nsurrs
16532 +  %end;
16534 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16535 +     Missing=&EM_PROPERTY_MISSINGVALUE
16536 +  %end;
16538 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16539 +     USEVARONCE
16540 +  %end;
16542 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16543 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16544 +  %end;
16547 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16548 +    event = "&targetEvent"
16549 +  %end;
16551 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16552 +     DECSEARCH
16553 +  %end;
16555 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16556 +     PRIORSSEARCH
16557 +  %end;
16559 +  %if &arbor_1 ne %then %do;
16560 +    &arbor_1
16561 +  %end;
16563 +  %if &em_arbor ne %then %do;
16564 +     &em_arbor
16565 +  %end;
16566 +  ;
16567 + %end;
16568 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16569 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16570 +       Performance &EM_PROPERTY_PERFORMANCE
16571 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16572 +         nodesize=&EM_PROPERTY_NODESAMPLE
16573 +       %end;
16574 +       ;
16575 +       interact;
16576 + %end;
16577 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16578 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16579 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16580 +    %put &em_codebar;
16581 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16582 +    %put &errormsg;
16583 +    %put &em_codebar;
16584 +    %goto doendm;
16585 +   %end;
16586 +   %else %do;
16587 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16588 +       Performance &EM_PROPERTY_PERFORMANCE
16589 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16590 +         nodesize=&EM_PROPERTY_NODESAMPLE
16591 +       %end;
16592 +       ;
16593 +       interact;
16594 +   %end;
16595 + %end;
16597 + %else %do;
16598 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16599 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16600 +    %put &em_codebar;
16601 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16602 +    %put &errormsg;
16603 +    %put &em_codebar;
16604 +    %goto doendm;
16605 +   %end;
16606 +   %else %do;
16607 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16608 +       Performance &EM_PROPERTY_PERFORMANCE
16609 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16610 +         nodesize=&EM_PROPERTY_NODESAMPLE
16611 +       %end;
16612 +       ;
16613 +        interact;
16614 +   %end;
16615 + %end;
16617 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16618 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16619 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16620 +    %end;
16622 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16623 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16624 +    %end;
16626 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16627 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16628 +    %end;
16630 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16631 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16632 +    %end;
16634 +    %if "%EM_FREQ" ne "" %then %do;
16635 +       freq %EM_FREQ;
16636 +    %end;
16638 +    %if "&multipleTar" eq "Y" %then %do;
16639 +       /* cycle through all target vars in variableset */
16640 +       %let tdsid = %sysfunc(open(temptarget));
16641 +       %if &tdsid %then %do;
16642 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16643 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16644 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16645 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16646 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16647 +             target &var / level = &lvl
16648 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16649 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16650 +             %end;
16651 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16652 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16653 +             %end;
16654 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16655 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16656 +             %end;
16657 +          %end;
16658 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16659 +       %end;
16660 +       useTarget variable = %EM_TARGET;
16661 +    %end;
16662 +    %else %do;
16663 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16664 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16665 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16666 +      %end;
16667 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16668 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16669 +      %end;
16670 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16671 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16672 +      %end;
16673 +    %end;
16675 +    %if "&multipleTar" eq "N" %then %do;
16676 +      &EM_DEC_STATEMENT;
16677 +    %end;
16679 +    Performance &EM_PROPERTY_PERFORMANCE
16680 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16681 +      nodesize=&EM_PROPERTY_NODESAMPLE
16682 +    %end;
16683 +    ;
16685 +    %if "&intFlag" eq "Y" %then %do;
16686 +       INTERACT Largest;
16687 +       Train maxnewdepth=0;
16688 +    %end;
16690 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16691 +         Assess
16692 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16693 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16694 +              %put &em_codebar;
16695 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16696 +              %put &errormsg;
16697 +              %put &em_codebar;
16698 +            %end;
16699 +            %else %do;
16700 +               Validata=&EM_IMPORT_VALIDATE
16701 +            %end;
16702 +         %end;
16703 +         %else %do;
16704 +           NoValidata
16705 +         %end;
16706 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16707 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16708 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16709 +               %if &dsid %then %do;
16710 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16711 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16712 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16713 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16714 +                   %else %do;
16715 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16716 +                      %else %let measure= MISC;
16717 +                   %end;
16718 +                 %end;
16719 +               %end;
16720 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16721 +            %end;
16722 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16723 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16724 +                 %let measure=ASE;
16725 +              %end;
16726 +              %else %do;
16727 +                 %let measure=MISC;
16728 +              %end;
16729 +            %end;
16730 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16731 +              %let measure=ASE;
16732 +            %end;
16733 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16734 +               %let measure = LIFT;
16735 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16736 +               %if &dsid %then %do;
16737 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16738 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16739 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16740 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16741 +                 %end;
16742 +               %end;
16743 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16744 +            %end;
16745 +            measure=&measure
16746 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16747 +               event = "&targetEvent"
16748 +            %end;
16749 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16750 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16751 +            %end;
16752 +         %end;
16753 +         %if "&multipleTar" eq "N" %then %do;
16754 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16755 +               CV
16756 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16757 +                 CVNITer = &EM_PROPERTY_CVNITER
16758 +               %end;
16759 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16760 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16761 +               %end;
16762 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16763 +                 CVSeed = &EM_PROPERTY_CVSEED
16764 +               %end;
16765 +            %end;
16766 +         %end;
16767 +       %end;
16768 +      ;
16770 +      %if "&intFlag" ne "Y" %then %do;
16771 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16772 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16773 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16774 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16776 +          SUBTREE &subtree
16777 +          %if "&subtree" eq "NLEAVES" %then %do;
16778 +            =&EM_PROPERTY_NSUBTREE
16779 +          %end;
16780 +          ;
16781 +        %end;
16783 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16784 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16785 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16786 +          %end;
16787 +       %end;
16788 +      %end;
16789 + %end;
16792 + MakeMacro nleaves = nleaves;
16793 + save
16794 + %if "&EM_USER_EMTREE" ne "" %then %do;
16795 +   MODEL=&EM_USER_EMTREE
16796 + %end;
16797 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16798 +   SEQUENCE=&EM_USER_OUTSEQ
16799 + %end;
16800 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16801 +   IMPORTANCE=&EM_USER_OUTIMPORT
16802 + %end;
16803 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16804 +   NODESTAT=&EM_USER_OUTNODES
16805 + %end;
16806 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16807 +   SUMMARY=&EM_USER_OUTSUMMARY
16808 + %end;
16809 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16810 +   STATSBYNODE=&EM_USER_OUTSTATS
16811 + %end;
16812 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16813 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16814 + %end;
16815 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16816 +   Pathlistnonmissing=&EM_USER_OUTPATH
16817 + %end;
16818 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16819 +   RULES = &EM_USER_OUTRULES
16820 + %end;
16821 + ;
16823 + %if "&intFlag" ne "Y" %then %do;
16825 +   %let lookupString = ;
16826 +   %if ^%symexist(EM_OPTION) %then
16827 +      %let EM_OPTION=;
16829 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16830 +      %let lookupString = LOOKUP=SELECT;
16831 +   %end;
16833 +   %let codetext=;
16834 +   %let norescodetxt=;
16836 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16837 +     %let codetext=&codetext DUMMY;
16838 +     %let norescodetxt=&norescodetxt DUMMY;
16839 +   %end;
16840 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16841 +     %let codetext=&codetext NOLEAFID;
16842 +     %let norescodetxt=&norescodetxt NOLEAFID;
16843 +   %end;
16844 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16845 +     %let norescodetxt=&norescodetxt NOPRED;
16846 +   %end;
16848 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16849 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16851 +   %if &nnpmml %then %do;
16852 +     code pmml;
16853 +   %end;
16855 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16856 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16857 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16858 +   %end;
16859 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16860 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16861 +   %end;
16862 + %end;
16864 + run;
16865 + quit;
16867 + /*%em_checkerror(); */
16868 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16869 +   /* Delete DMDB catalog */
16870 +   proc datasets lib=work nolist;
16871 +       delete _treeDMDB / mt=cat;
16872 +  run;
16873 +  %end;
16875 + %if &nnpmml %then %do;
16876 +    ods pmml close;
16877 + %end;
16879 +  %doendm:
16881 +%mend em_tree_runTreeProcedure;
16883 +%macro em_tree_createFitStats( multipleTar= );
16886 +  /* create targetTable is multipleTar eq Y */
16887 +  data temptarget;
16888 +    set &EM_DATA_VARIABLESET;
16889 +    where ROLE="TARGET";
16890 +  run;
16892 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16893 +   data &EM_USER_EMOUTFIT;
16894 +     length target $32;
16895 +     merge work.fit_train
16896 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16897 +       work.fit_valid
16898 +     %end;
16899 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16900 +       work.fit_test
16901 +     %end;
16902 +     ;
16903 +     %if "&multipleTar" eq "N" %then %do;
16904 +       target="%EM_TARGET";
16905 +     %end;
16906 +     %else %do;
16907 +       target = _TARGET_;
16908 +     %end;
16909 +     drop _NW_ _SUMW_
16910 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16911 +        _VSUMW_
16912 +     %end;
16913 +     ;
16914 +   run;
16916 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16917 +     proc datasets library=work nolist;
16918 +       delete fit_valid;
16919 +     run;
16920 +   %end;
16921 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16922 +     proc datasets library=work nolist;
16923 +       delete fit_test;
16924 +     run;
16925 +   %end;
16927 +%mend em_tree_createFitStats;
16930 +%macro em_tree_makeEnglishRules;
16932 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16933 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16935 +  /* verify that necessary tables exist and if not, skip processing */
16936 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16937 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16938 +    %goto doendm;
16939 +  %end;
16940 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16941 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16942 +    %goto doendm;
16943 +  %end;
16945 +  /* determine length of variable in outpath dataset */
16946 +  %let vlength= ;
16947 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16948 +  %if &dsid ne %then %do;
16949 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16950 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16951 +  %end;
16952 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16954 +  data tempoutpath;
16955 +    length varname $&vlength;
16956 +    retain varname;
16957 +    set &EM_USER_OUTPATH;
16959 +    if ^missing(variable) then varname=variable;
16960 +    else if ^missing(var_name) then varname=var_name;
16961 +    output;
16962 +  run;
16964 +  /* create an array of generated predicted variable names */
16965 +  %let tree_pred_vars = ;
16966 +  %let tree_pred_label = ;
16967 +  %let numpred= 0;
16968 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16970 +    data _null_;
16971 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16972 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16973 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
16974 +     if eof then
16975 +       call symput('numpred', strip(put(_N_, BEST.)));
16976 +    run;
16977 +  %end;
16979 +  /* determine if NPRIORS exists in outnodes  */
16980 +  %local nprior_flag;
16981 +  data _null_;
16982 +    set &EM_USER_OUTNODES(obs=2) end=eof;
16983 +    if eof then do;
16984 +      call symput('nprior_flag', strip(put(npriors, best.)));
16985 +    end;
16986 +  run;
16988 +  proc sort data=tempoutpath; by node; run;
16989 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
16991 +  data tempoutpath;
16992 +    merge tempoutpath(in=_a) outnodes(keep= node
16993 +    %if "&nprior_flag" ne "." %then %do;
16994 +      NPRIORS
16995 +    %end;
16996 +    %else %do;
16997 +      N
16998 +    %end;
16999 +    %if &numpred gt 0 %then %do;
17000 +      %do i=1 %to &numpred;
17001 +        &&tree_pred_vars&i
17002 +      %end;
17003 +    %end;
17004 +    );
17005 +    by node;
17006 +    if _a;
17007 +  run;
17009 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17011 +  data _null_;
17012 +    file x;
17013 +    set tempoutpath;
17014 +    by node descending varname;
17015 +    retain origvar oldnode string;
17016 +    length origvar $32 oldnode 8 string $5000;
17018 +    if _N_ = 1 then do;
17019 +      origvar = varname;
17020 +      oldnode = node;
17021 +    end;
17023 +    if first.node then do;
17024 +       put "&EM_CODEBAR";
17025 +       put " Node = " node;
17026 +       put "&EM_CODEBAR";
17027 +    end;
17029 +      if first.varname then do;
17030 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17031 +            if MISSING(CHARACTER_VALUE) then do;
17032 +             if NUMERIC_VALUE ne .  then do;
17033 +              if ^first.node then do;
17034 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17035 +              end;
17036 +              else do;
17037 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17038 +              end;
17039 +             end;
17040 +            end;
17041 +            else do;
17042 +              if ^first.node then do;
17043 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17044 +              end;
17045 +              else do;
17046 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17047 +              end;
17048 +             end;
17049 +         end;
17050 +         else if RELATION in ("=") then do;
17051 +            if ^first.node then do;
17052 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17053 +            end;
17054 +            else do;
17055 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17056 +            end;
17057 +         end;
17058 +         else if RELATION in ("ISMISSING") then do;
17059 +            if ^first.node then do;
17060 +              string = " AND "|| strip(varname) || " equals Missing";
17061 +            end;
17062 +            else do;
17063 +              string = "if "|| strip(varname) ||" equals Missing";
17064 +            end;
17065 +         end;
17066 +         else if RELATION in ("ISNOTMISSING") then do;
17067 +            if ^first.node then do;
17068 +              string = " AND "|| strip(varname) || " equals All Values";
17069 +            end;
17070 +            else do;
17071 +              string = "if "|| strip(varname) ||" equals All Values";
17072 +            end;
17073 +         end;
17074 +         if ^missing(varname) then origvar = varname;
17075 +         oldnode=node;
17077 +      end;
17078 +      else do;
17079 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17080 +          if MISSING(CHARACTER_VALUE) then do;
17081 +           if  NUMERIC_VALUE ne .  then do;
17082 +            if ^MISSING(string) then
17083 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17084 +            else
17085 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17086 +           end;
17087 +          end;
17088 +          else do;
17089 +            if ^MISSING(string) then
17090 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17091 +            else
17092 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17093 +          end;
17095 +         end;
17096 +         else if RELATION in ("=") then do;
17097 +           string = strip(string)||", "||strip(character_value);
17098 +         end;
17099 +         else if RELATION in ("ISMISSING") then do;
17101 +         end;
17102 +         if ^missing(varname) then origvar = varname;
17103 +         oldnode=node;
17104 +      end;
17105 +      if last.varname then do;
17106 +         if RELATION in ("ISMISSING") then do;
17107 +           if ^first.varname then do;
17108 +             string = strip(string) || " or MISSING";
17109 +           end;
17110 +         end;
17111 +         put string;
17112 +         if ^missing(varname) then origvar = varname;
17113 +         oldnode=node;
17114 +      end;
17116 +      if last.node then do;
17117 +         put "then ";
17118 +         put " Tree Node Identifier   = " node;
17120 +         %if "&nprior_flag" ne "." %then %do;
17121 +           put " Number of Observations = " NPRIORS;
17122 +         %end;
17123 +         %else %do;
17124 +           put " Number of Observations = " N;
17125 +         %end;
17127 +         %if &numpred gt 0 %then %do;
17128 +           %do i=1 %to &numpred;
17129 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17130 +           %end;
17131 +         %end;
17133 +         put " ";
17134 +         if ^missing(varname) then origvar = varname;
17135 +         oldnode=node;
17136 +      end;
17138 +  run;
17140 +  proc datasets lib=work nolist;
17141 +    delete tempoutpath outnodes;
17142 +  run;
17144 +  %doendm:
17145 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE3.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER10_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE3.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER10_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE3.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595234 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 409719808 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 758064 bytes of work memory.
NOTE: The subtree sequence contains 12 subtrees. The largest has 23 nodes and 12 leaves.
NOTE: Using subtree with 19 nodes and 10 leaves.
NOTE: Using subtree with 19 nodes and 10 leaves.
NOTE: Created macro variable NLEAVES equal to 10.
NOTE: The data set EMWS3.TREE3_OUTIMPORT has 42 observations and 6 variables.
NOTE: The data set EMWS3.TREE3_EMTREE has 1666 observations and 4 variables.
NOTE: The data set EMWS3.TREE3_OUTNODES has 19 observations and 54 variables.
NOTE: The data set EMWS3.TREE3_OUTPATH has 108 observations and 7 variables.
NOTE: The data set EMWS3.TREE3_OUTRULES has 234 observations and 6 variables.
NOTE: The data set EMWS3.TREE3_OUTSEQ has 12 observations and 20 variables.
NOTE: The data set EMWS3.TREE3_OUTSTATS has 513 observations and 5 variables.
NOTE: The data set EMWS3.TREE3_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE3_OUTTOPOLOGY has 19 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE3.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER10_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE3.VIEW used (Total process time):
      real time           0.63 seconds
      cpu time            0.20 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER10_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE3.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.64 seconds
      cpu time            0.20 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE3_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 108 observations read from the data set EMWS3.TREE3_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 108 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE3_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 108 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 108 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set EMWS3.TREE3_OUTNODES.
NOTE: The data set WORK.OUTNODES has 19 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 108 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 19 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 108 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 108 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 108 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:03,
      Create Time=23Nov2023:22:14:03
 
NOTE: 230 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: There were 108 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
17147
17148  *------------------------------------------------------------*;
17149  * End TRAIN: Tree3;
17150  *------------------------------------------------------------*;
 
17151  *------------------------------------------------------------*;
17152  * Close any missing semi colons;
17153  *------------------------------------------------------------*;
17154  ;
17155  ;
17156  ;
17157  ;
17158  quit;
17159  *------------------------------------------------------------*;
17160  * Close any unbalanced quotes;
17161  *------------------------------------------------------------*;
17162  /*; *"; *'; */
17163  ;
17164  run;
17165  quit;
17166  /* Reset EM Options */
17167  options formchar="|----|+|---+=|-/\<>*";
17168  options nocenter ls=256 ps=10000;
17169  goptions reset=all device=GIF NODISPLAY;
 
17170  proc sort data=WORK.EM_USER_REPORT;
17171  by ID VIEW;
17172  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:14:03
*------------------------------------------------------------*
17274  %let EMEXCEPTIONSTRING=;
17275  *------------------------------------------------------------*;
17276  * SCORE: Tree3;
17277  *------------------------------------------------------------*;
17278  %let EM_ACTION = SCORE;
17279  %let syscc = 0;
17280  %macro main;
17281
17282    %if %upcase(&EM_ACTION) = CREATE %then %do;
17283      filename temp catalog 'sashelp.emmodl.tree_create.source';
17284      %include temp;
17285      filename temp;
17286
17287      %em_tree_create;
17288    %end;
17289
17290     %else
17291     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17292
17293         filename temp catalog 'sashelp.emmodl.tree_train.source';
17294         %include temp;
17295         filename temp;
17296         %em_tree_train;
17297     %end;
17298
17299    %else
17300    %if %upcase(&EM_ACTION) = SCORE %then %do;
17301      filename temp catalog 'sashelp.emmodl.tree_score.source';
17302      %include temp;
17303      filename temp;
17304
17305      %em_tree_score;
17306
17307    %end;
17308
17309    %else
17310    %if %upcase(&EM_ACTION) = REPORT %then %do;
17311
17312         filename temp catalog 'sashelp.emmodl.tree_report.source';
17313         %include temp;
17314         filename temp;
17315
17316         %em_tree_report;
17317     %end;
17318
17319    %else
17320    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17321
17322         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17323         %include temp;
17324         filename temp;
17325         %EM_TREE_OPENTREEVIEWER;
17326
17327     %end;
17328
17329    %else
17330    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17331
17332         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17333         %include temp;
17334         filename temp;
17335         %EM_TREE_CLOSETREEVIEWER;
17336
17337     %end;
17338
17339
17340     %doendm:
17341  %mend main;
17342
17343  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17345 +%macro em_tree_score;
17347 +   /* determine if multiple targets will be processed */
17348 +   %let em_tree_multipleTargets=N;
17349 +   %let em_tree_numTarget=1;
17350 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17351 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17352 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17353 +         %let em_tree_multipleTargets=N;
17354 +      %end;
17355 +      %else %do;
17356 +         /* create macro array of targets  */
17357 +         data _null_;
17358 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17359 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17360 +           if eof then
17361 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17362 +        run;
17364 +        %if &em_tree_numTarget gt 1 %then %do;
17365 +           %let em_tree_multipleTargets=Y;
17366 +        %end;
17367 +      %end;
17368 +   %end;
17370 +   /* build flow and publish scoring code */
17371 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17372 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17374 +   filename treeflow "&EM_USER_TREEFLOW";
17375 +   filename treepub "&EM_USER_TREEPUBLISH";
17377 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17378 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17380 +   %em_copyfile(infref=treeflow, outfref=flowref);
17381 +   %em_copyfile(infref=treepub, outfref=pubref);
17383 +   filename treeflow;
17384 +   filename treepub;
17386 +   /* if priors are used, add code to generate unadjusted residuals in export */
17387 +   %let useAdjPriors = N;
17388 +   data _null_;
17389 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17390 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17391 +   run;
17392 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17393 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17394 +      %include temp;
17395 +      filename temp;
17397 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17398 +      filename adjref "&EM_USER_adjResidualCode";
17399 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17401 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17403 +      filename adjref;
17404 +   %end;
17406 +   /* LEAF */
17407 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17408 +      data _null_;
17409 +        file flowref mod;
17410 +        put 'drop _LEAF_;';
17411 +      run;
17413 +      data _null_;
17414 +        file pubref mod;
17415 +        put 'drop _LEAF_;';
17416 +      run;
17418 +   %end;
17420 +   filename flowref;
17421 +   filename pubref;
17423 +   /* em_metachange code */
17424 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17425 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17426 +   %end;
17428 +   /* variable selection based on importance stat    */
17429 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17430 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17431 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17432 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17433 +     %let obs = %sysfunc(fetch(&dsid));
17434 +     %do %while(&obs=0);
17435 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17436 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17437 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17438 +       %let obs = %sysfunc(fetch(&dsid));
17439 +     %end;
17440 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17441 +   %end;
17443 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17444 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17445 +    %let tree_pred_vars = ;
17446 +    %let tree_pred_lvl =;
17447 +    %let numpred= 0;
17449 +    data _null_;
17450 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17451 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17452 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17453 +     if eof then
17454 +       call symput('numpred', strip(put(_N_, BEST.)));
17455 +    run;
17456 +   %end;
17458 +   %if &numpred ne 0 %then %do;
17459 +    %do i=1 %to &numpred;
17460 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17461 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17462 +    %end;
17463 +   %end;
17465 +   /* determine if multiple targets will be processed */
17466 +   %let em_tree_multipleTargets=N;
17467 +   %let em_tree_numTarget=1;
17468 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17469 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17470 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17471 +         %let em_tree_multipleTargets=N;
17472 +      %end;
17473 +      %else %do;
17474 +        data _null_;
17475 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17476 +          if eof then
17477 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17478 +        run;
17480 +        %if &em_tree_numTarget gt 1 %then %do;
17481 +           %let em_tree_multipleTargets=Y;
17482 +        %end;
17483 +     %end;
17484 +   %end;
17486 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17487 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17489 +      /* variable importance */
17490 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17491 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17493 +         %let validexist=0;
17494 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17495 +           %let validexist=1;
17496 +         %end;
17498 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17499 +         /* and the columns may not be generated                                                                                 */
17500 +         %let em_tree_cvexists=;
17501 +         %let em_tree_surrexists=.;
17502 +         data _null_;
17503 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17504 +            if eof then do ;
17505 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17506 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17507 +            end;
17508 +         run;
17510 +         data &EM_USER_OUTIMPORT;
17511 +            set &EM_USER_OUTIMPORT;
17513 +            /* format columns based on Precison value specified */
17514 +            format importance 15.&EM_PROPERTY_PRECISION
17515 +                 %if &validexist %then %do;
17516 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17517 +                 %end;
17518 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17519 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17520 +                 %end;
17521 +            ;
17522 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17523 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17524 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17525 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17526 +                 %if "&em_tree_surrexists" ne "" %then %do;
17527 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17528 +                 %end;
17529 +                 %if &validexist %then %do;
17530 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17531 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17532 +                 %end;
17533 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17534 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17535 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17536 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17537 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17538 +                 %end;
17539 +            ;
17540 +         run;
17542 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17543 +      %end;
17544 +   %end;
17546 +   %doendm:
17547 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:03,
      Create Time=23Nov2023:22:14:03
 
NOTE: 595 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:03,
      Create Time=23Nov2023:22:14:03
 
NOTE: 515 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=30226,
      Last Modified=23Nov2023:22:14:03,
      Create Time=23Nov2023:22:14:03
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26653,
      Last Modified=23Nov2023:22:14:03,
      Create Time=23Nov2023:22:14:03
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE3_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 42 observations read from the data set EMWS3.TREE3_OUTIMPORT.
NOTE: The data set EMWS3.TREE3_OUTIMPORT has 42 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
17548
17549  *------------------------------------------------------------*;
17550  * End SCORE: Tree3;
17551  *------------------------------------------------------------*;
 
17552  proc sort data=WORK.EM_METACHANGE;
17553  by key uname;
17554  run;
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17555  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\CDELTA_TRAIN.sas";
17556  data _null_;
17557  file x;
17558  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17559  put 'ROLE = "ASSESS";';
17560  put 'end;';
17561  put 'else ';
17562  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17563  put 'ROLE = "ASSESS";';
17564  put 'end;';
17565  put 'else ';
17566  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17567  put 'ROLE = "ASSESS";';
17568  put 'end;';
17569  put 'else ';
17570  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17571  put 'ROLE = "ASSESS";';
17572  put 'end;';
17573  put 'else ';
17574  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17575  put 'ROLE = "ASSESS";';
17576  put 'end;';
17577  put 'else ';
17578  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17579  put 'ROLE = "ASSESS";';
17580  put 'end;';
17581  put 'else ';
17582  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17583  put 'ROLE = "ASSESS";';
17584  put 'end;';
17585  put 'else ';
17586  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17587  put 'ROLE = "ASSESS";';
17588  put 'end;';
17589  put 'else ';
17590  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17591  put 'ROLE = "ASSESS";';
17592  put 'end;';
17593  put 'else ';
17594  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17595  put 'ROLE = "ASSESS";';
17596  put 'end;';
17597  put 'else ';
17598  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17599  put 'ROLE = "ASSESS";';
17600  put 'end;';
17601  put 'else ';
17602  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17603  put 'ROLE = "ASSESS";';
17604  put 'end;';
17605  put 'else ';
17606  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD1" then do;';
17607  put 'ROLE = "REJECTED";';
17608  put 'end;';
17609  put 'else ';
17610  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD11" then do;';
17611  put 'ROLE = "REJECTED";';
17612  put 'end;';
17613  put 'else ';
17614  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD13" then do;';
17615  put 'ROLE = "REJECTED";';
17616  put 'end;';
17617  put 'else ';
17618  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD14" then do;';
17619  put 'ROLE = "REJECTED";';
17620  put 'end;';
17621  put 'else ';
17622  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD15" then do;';
17623  put 'ROLE = "REJECTED";';
17624  put 'end;';
17625  put 'else ';
17626  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD16" then do;';
17627  put 'ROLE = "REJECTED";';
17628  put 'end;';
17629  put 'else ';
17630  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD17" then do;';
17631  put 'ROLE = "REJECTED";';
17632  put 'end;';
17633  put 'else ';
17634  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD18" then do;';
17635  put 'ROLE = "REJECTED";';
17636  put 'end;';
17637  put 'else ';
17638  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD19" then do;';
17639  put 'ROLE = "REJECTED";';
17640  put 'end;';
17641  put 'else ';
17642  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD20" then do;';
17643  put 'ROLE = "REJECTED";';
17644  put 'end;';
17645  put 'else ';
17646  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD21" then do;';
17647  put 'ROLE = "REJECTED";';
17648  put 'end;';
17649  put 'else ';
17650  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD22" then do;';
17651  put 'ROLE = "REJECTED";';
17652  put 'end;';
17653  put 'else ';
17654  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD23" then do;';
17655  put 'ROLE = "REJECTED";';
17656  put 'end;';
17657  put 'else ';
17658  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD24" then do;';
17659  put 'ROLE = "REJECTED";';
17660  put 'end;';
17661  put 'else ';
17662  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD25" then do;';
17663  put 'ROLE = "REJECTED";';
17664  put 'end;';
17665  put 'else ';
17666  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD26" then do;';
17667  put 'ROLE = "REJECTED";';
17668  put 'end;';
17669  put 'else ';
17670  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD27" then do;';
17671  put 'ROLE = "REJECTED";';
17672  put 'end;';
17673  put 'else ';
17674  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD28" then do;';
17675  put 'ROLE = "REJECTED";';
17676  put 'end;';
17677  put 'else ';
17678  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD29" then do;';
17679  put 'ROLE = "REJECTED";';
17680  put 'end;';
17681  put 'else ';
17682  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD3" then do;';
17683  put 'ROLE = "REJECTED";';
17684  put 'end;';
17685  put 'else ';
17686  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD30" then do;';
17687  put 'ROLE = "REJECTED";';
17688  put 'end;';
17689  put 'else ';
17690  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD31" then do;';
17691  put 'ROLE = "REJECTED";';
17692  put 'end;';
17693  put 'else ';
17694  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD32" then do;';
17695  put 'ROLE = "REJECTED";';
17696  put 'end;';
17697  put 'else ';
17698  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD33" then do;';
17699  put 'ROLE = "REJECTED";';
17700  put 'end;';
17701  put 'else ';
17702  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD34" then do;';
17703  put 'ROLE = "REJECTED";';
17704  put 'end;';
17705  put 'else ';
17706  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD35" then do;';
17707  put 'ROLE = "REJECTED";';
17708  put 'end;';
17709  put 'else ';
17710  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD36" then do;';
17711  put 'ROLE = "REJECTED";';
17712  put 'end;';
17713  put 'else ';
17714  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD37" then do;';
17715  put 'ROLE = "REJECTED";';
17716  put 'end;';
17717  put 'else ';
17718  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD38" then do;';
17719  put 'ROLE = "REJECTED";';
17720  put 'end;';
17721  put 'else ';
17722  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD39" then do;';
17723  put 'ROLE = "REJECTED";';
17724  put 'end;';
17725  put 'else ';
17726  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD40" then do;';
17727  put 'ROLE = "REJECTED";';
17728  put 'end;';
17729  put 'else ';
17730  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD41" then do;';
17731  put 'ROLE = "REJECTED";';
17732  put 'end;';
17733  put 'else ';
17734  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD42" then do;';
17735  put 'ROLE = "REJECTED";';
17736  put 'end;';
17737  put 'else ';
17738  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD7" then do;';
17739  put 'ROLE = "REJECTED";';
17740  put 'end;';
17741  put 'else ';
17742  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD8" then do;';
17743  put 'ROLE = "REJECTED";';
17744  put 'end;';
17745  put 'else ';
17746  put 'if upcase(NAME) = "TEXTCLUSTER10_SVD9" then do;';
17747  put 'ROLE = "REJECTED";';
17748  put 'end;';
17749  put 'else ';
17750  put 'if upcase(NAME) = "_NODE_" then do;';
17751  put 'ROLE = "SEGMENT";';
17752  put 'LEVEL = "NOMINAL";';
17753  put 'end;';
17754  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:04,
      Create Time=19Nov2023:17:39:51
 
NOTE: 196 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17755  filename x;
NOTE: Fileref X has been deassigned.
 
17756  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas";
17757  *------------------------------------------------------------*;
17758  * Tree3: Scoring DATA data;
17759  *------------------------------------------------------------*;
17760  data EMWS3.Tree3_TRAIN
17761  / view=EMWS3.Tree3_TRAIN
17762  ;
17763  set EMWS3.TextCluster10_TRAIN
17764  ;
17765  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas.
17766 +****************************************************************;
17767 +******             DECISION TREE SCORING CODE             ******;
17768 +****************************************************************;
17769 +
17770 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17771 +LENGTH F_Category  $   22;
17772 +LENGTH I_Category  $   22;
17773 +LENGTH U_Category  $   22;
17774 +LENGTH _WARN_  $    4;
17775 +
17776 +******              LABELS FOR NEW VARIABLES              ******;
17777 +label _NODE_ = 'Node' ;
17778 +label _LEAF_ = 'Leaf' ;
17779 +label P_CategoryHR = 'Predicted: Category=HR' ;
17780 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17781 +label P_CategoryINFORMATION_TECHNOLOGY =
17782 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17783 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17784 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17785 +label P_CategoryBUSINESS_DEVELOPMENT =
17786 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17787 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17788 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17789 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17790 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17791 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17792 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17793 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17794 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17795 +label Q_CategoryINFORMATION_TECHNOLOGY =
17796 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17797 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17798 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17799 +label Q_CategoryBUSINESS_DEVELOPMENT =
17800 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17801 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17802 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17803 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17804 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17805 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17806 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17807 +label V_CategoryHR = 'Validated: Category=HR' ;
17808 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17809 +label V_CategoryINFORMATION_TECHNOLOGY =
17810 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17811 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17812 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17813 +label V_CategoryBUSINESS_DEVELOPMENT =
17814 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17815 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17816 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17817 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17818 +label V_CategorySALES = 'Validated: Category=SALES' ;
17819 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17820 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17821 +label R_CategoryHR = 'Residual: Category=HR' ;
17822 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17823 +label R_CategoryINFORMATION_TECHNOLOGY =
17824 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17825 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17826 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17827 +label R_CategoryBUSINESS_DEVELOPMENT =
17828 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17829 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17830 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17831 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17832 +label R_CategorySALES = 'Residual: Category=SALES' ;
17833 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17834 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17835 +label F_Category = 'From: Category' ;
17836 +label I_Category = 'Into: Category' ;
17837 +label U_Category = 'Unnormalized Into: Category' ;
17838 +label _WARN_ = 'Warnings' ;
17839 +
17840 +
17841 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17842 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17843 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17844 +
17845 +
17846 +_ARBFMT_22 = PUT( Category , $22.);
17847 + %DMNORMCP( _ARBFMT_22, F_Category );
17848 +
17849 +******             ASSIGN OBSERVATION TO NODE             ******;
17850 +IF  NOT MISSING(TextCluster10_SVD4 ) AND
17851 +  TextCluster10_SVD4  <     -0.3566006636464 THEN DO;
17852 +  _NODE_  =                    2;
17853 +  _LEAF_  =                    1;
17854 +  P_CategoryHR  =      0.9090909090909;
17855 +  P_CategoryDESIGNER  =                    0;
17856 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17857 +  P_CategoryTEACHER  =                    0;
17858 +  P_CategoryADVOCATE  =     0.04545454545454;
17859 +  P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17860 +  P_CategoryHEALTHCARE  =     0.02272727272727;
17861 +  P_CategoryFITNESS  =     0.02272727272727;
17862 +  P_CategoryOTHER  =                    0;
17863 +  P_CategorySALES  =                    0;
17864 +  P_CategoryCONSULTANT  =                    0;
17865 +  P_CategoryDIGITAL_MEDIA  =                    0;
17866 +  Q_CategoryHR  =      0.9090909090909;
17867 +  Q_CategoryDESIGNER  =                    0;
17868 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17869 +  Q_CategoryTEACHER  =                    0;
17870 +  Q_CategoryADVOCATE  =     0.04545454545454;
17871 +  Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17872 +  Q_CategoryHEALTHCARE  =     0.02272727272727;
17873 +  Q_CategoryFITNESS  =     0.02272727272727;
17874 +  Q_CategoryOTHER  =                    0;
17875 +  Q_CategorySALES  =                    0;
17876 +  Q_CategoryCONSULTANT  =                    0;
17877 +  Q_CategoryDIGITAL_MEDIA  =                    0;
17878 +  V_CategoryHR  =                0.875;
17879 +  V_CategoryDESIGNER  =                    0;
17880 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17881 +  V_CategoryTEACHER  =                    0;
17882 +  V_CategoryADVOCATE  =                    0;
17883 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17884 +  V_CategoryHEALTHCARE  =     0.04166666666666;
17885 +  V_CategoryFITNESS  =                    0;
17886 +  V_CategoryOTHER  =                    0;
17887 +  V_CategorySALES  =                    0;
17888 +  V_CategoryCONSULTANT  =     0.08333333333333;
17889 +  V_CategoryDIGITAL_MEDIA  =                    0;
17890 +  I_Category  = 'HR' ;
17891 +  U_Category  = 'HR' ;
17892 +  END;
17893 +ELSE DO;
17894 +  IF  NOT MISSING(TextCluster10_SVD5 ) AND
17895 +    TextCluster10_SVD5  <    -0.30020685125388 THEN DO;
17896 +    _NODE_  =                    4;
17897 +    _LEAF_  =                    2;
17898 +    P_CategoryHR  =                    0;
17899 +    P_CategoryDESIGNER  =     0.02222222222222;
17900 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17901 +    P_CategoryTEACHER  =     0.77777777777777;
17902 +    P_CategoryADVOCATE  =     0.08888888888888;
17903 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17904 +    P_CategoryHEALTHCARE  =     0.02222222222222;
17905 +    P_CategoryFITNESS  =     0.08888888888888;
17906 +    P_CategoryOTHER  =                    0;
17907 +    P_CategorySALES  =                    0;
17908 +    P_CategoryCONSULTANT  =                    0;
17909 +    P_CategoryDIGITAL_MEDIA  =                    0;
17910 +    Q_CategoryHR  =                    0;
17911 +    Q_CategoryDESIGNER  =     0.02222222222222;
17912 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17913 +    Q_CategoryTEACHER  =     0.77777777777777;
17914 +    Q_CategoryADVOCATE  =     0.08888888888888;
17915 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17916 +    Q_CategoryHEALTHCARE  =     0.02222222222222;
17917 +    Q_CategoryFITNESS  =     0.08888888888888;
17918 +    Q_CategoryOTHER  =                    0;
17919 +    Q_CategorySALES  =                    0;
17920 +    Q_CategoryCONSULTANT  =                    0;
17921 +    Q_CategoryDIGITAL_MEDIA  =                    0;
17922 +    V_CategoryHR  =     0.02631578947368;
17923 +    V_CategoryDESIGNER  =     0.05263157894736;
17924 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17925 +    V_CategoryTEACHER  =     0.60526315789473;
17926 +    V_CategoryADVOCATE  =     0.07894736842105;
17927 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17928 +    V_CategoryHEALTHCARE  =                    0;
17929 +    V_CategoryFITNESS  =     0.07894736842105;
17930 +    V_CategoryOTHER  =      0.1578947368421;
17931 +    V_CategorySALES  =                    0;
17932 +    V_CategoryCONSULTANT  =                    0;
17933 +    V_CategoryDIGITAL_MEDIA  =                    0;
17934 +    I_Category  = 'TEACHER' ;
17935 +    U_Category  = 'TEACHER' ;
17936 +    END;
17937 +  ELSE DO;
17938 +    IF  NOT MISSING(TextCluster10_SVD2 ) AND
17939 +          0.28330980301825 <= TextCluster10_SVD2  THEN DO;
17940 +      _NODE_  =                    9;
17941 +      _LEAF_  =                   10;
17942 +      P_CategoryHR  =                    0;
17943 +      P_CategoryDESIGNER  =     0.02325581395348;
17944 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
17945 +      P_CategoryTEACHER  =                    0;
17946 +      P_CategoryADVOCATE  =     0.02325581395348;
17947 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17948 +      P_CategoryHEALTHCARE  =     0.03488372093023;
17949 +      P_CategoryFITNESS  =                    0;
17950 +      P_CategoryOTHER  =     0.05813953488372;
17951 +      P_CategorySALES  =                    0;
17952 +      P_CategoryCONSULTANT  =     0.24418604651162;
17953 +      P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
17954 +      Q_CategoryHR  =                    0;
17955 +      Q_CategoryDESIGNER  =     0.02325581395348;
17956 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
17957 +      Q_CategoryTEACHER  =                    0;
17958 +      Q_CategoryADVOCATE  =     0.02325581395348;
17959 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17960 +      Q_CategoryHEALTHCARE  =     0.03488372093023;
17961 +      Q_CategoryFITNESS  =                    0;
17962 +      Q_CategoryOTHER  =     0.05813953488372;
17963 +      Q_CategorySALES  =                    0;
17964 +      Q_CategoryCONSULTANT  =     0.24418604651162;
17965 +      Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
17966 +      V_CategoryHR  =                    0;
17967 +      V_CategoryDESIGNER  =     0.03846153846153;
17968 +      V_CategoryINFORMATION_TECHNOLOGY  =      0.5576923076923;
17969 +      V_CategoryTEACHER  =                    0;
17970 +      V_CategoryADVOCATE  =     0.01923076923076;
17971 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
17972 +      V_CategoryHEALTHCARE  =     0.01923076923076;
17973 +      V_CategoryFITNESS  =                    0;
17974 +      V_CategoryOTHER  =      0.0576923076923;
17975 +      V_CategorySALES  =     0.01923076923076;
17976 +      V_CategoryCONSULTANT  =     0.17307692307692;
17977 +      V_CategoryDIGITAL_MEDIA  =     0.09615384615384;
17978 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
17979 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
17980 +      END;
17981 +    ELSE DO;
17982 +      IF  NOT MISSING(TextCluster10_SVD6 ) AND
17983 +        TextCluster10_SVD6  <    -0.18416908989601 THEN DO;
17984 +        IF  NOT MISSING(TextCluster10_SVD4 ) AND
17985 +          TextCluster10_SVD4  <     0.03257710277888 THEN DO;
17986 +          _NODE_  =                   14;
17987 +          _LEAF_  =                    3;
17988 +          P_CategoryHR  =                  0.4;
17989 +          P_CategoryDESIGNER  =                    0;
17990 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17991 +          P_CategoryTEACHER  =                    0;
17992 +          P_CategoryADVOCATE  =                    0;
17993 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
17994 +          P_CategoryHEALTHCARE  =                  0.2;
17995 +          P_CategoryFITNESS  =                    0;
17996 +          P_CategoryOTHER  =                    0;
17997 +          P_CategorySALES  =                    0;
17998 +          P_CategoryCONSULTANT  =                  0.2;
17999 +          P_CategoryDIGITAL_MEDIA  =                    0;
18000 +          Q_CategoryHR  =                  0.4;
18001 +          Q_CategoryDESIGNER  =                    0;
18002 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18003 +          Q_CategoryTEACHER  =                    0;
18004 +          Q_CategoryADVOCATE  =                    0;
18005 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18006 +          Q_CategoryHEALTHCARE  =                  0.2;
18007 +          Q_CategoryFITNESS  =                    0;
18008 +          Q_CategoryOTHER  =                    0;
18009 +          Q_CategorySALES  =                    0;
18010 +          Q_CategoryCONSULTANT  =                  0.2;
18011 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18012 +          V_CategoryHR  =                    0;
18013 +          V_CategoryDESIGNER  =                    0;
18014 +          V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
18015 +          V_CategoryTEACHER  =                    0;
18016 +          V_CategoryADVOCATE  =                    0;
18017 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18018 +          V_CategoryHEALTHCARE  =                    0;
18019 +          V_CategoryFITNESS  =                    0;
18020 +          V_CategoryOTHER  =                  0.5;
18021 +          V_CategorySALES  =                    0;
18022 +          V_CategoryCONSULTANT  =                    0;
18023 +          V_CategoryDIGITAL_MEDIA  =                    0;
18024 +          I_Category  = 'HR' ;
18025 +          U_Category  = 'HR' ;
18026 +          END;
18027 +        ELSE DO;
18028 +          IF  NOT MISSING(TextCluster10_SVD10 ) AND
18029 +            TextCluster10_SVD10  <    -0.07870817493434 THEN DO;
18030 +            _NODE_  =                   18;
18031 +            _LEAF_  =                    4;
18032 +            P_CategoryHR  =                    0;
18033 +            P_CategoryDESIGNER  =                    0;
18034 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18035 +            P_CategoryTEACHER  =                    0;
18036 +            P_CategoryADVOCATE  =                    0;
18037 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18038 +            P_CategoryHEALTHCARE  =                    0;
18039 +            P_CategoryFITNESS  =                    0;
18040 +            P_CategoryOTHER  =                    0;
18041 +            P_CategorySALES  =                    0;
18042 +            P_CategoryCONSULTANT  =                    0;
18043 +            P_CategoryDIGITAL_MEDIA  =                    1;
18044 +            Q_CategoryHR  =                    0;
18045 +            Q_CategoryDESIGNER  =                    0;
18046 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18047 +            Q_CategoryTEACHER  =                    0;
18048 +            Q_CategoryADVOCATE  =                    0;
18049 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18050 +            Q_CategoryHEALTHCARE  =                    0;
18051 +            Q_CategoryFITNESS  =                    0;
18052 +            Q_CategoryOTHER  =                    0;
18053 +            Q_CategorySALES  =                    0;
18054 +            Q_CategoryCONSULTANT  =                    0;
18055 +            Q_CategoryDIGITAL_MEDIA  =                    1;
18056 +            V_CategoryHR  =                    0;
18057 +            V_CategoryDESIGNER  =                    0;
18058 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18059 +            V_CategoryTEACHER  =                    0;
18060 +            V_CategoryADVOCATE  =                    0;
18061 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18062 +            V_CategoryHEALTHCARE  =                    0;
18063 +            V_CategoryFITNESS  =                    0;
18064 +            V_CategoryOTHER  =                    0;
18065 +            V_CategorySALES  =                    0;
18066 +            V_CategoryCONSULTANT  =                    0;
18067 +            V_CategoryDIGITAL_MEDIA  =                    1;
18068 +            I_Category  = 'DIGITAL-MEDIA' ;
18069 +            U_Category  = 'DIGITAL-MEDIA' ;
18070 +            END;
18071 +          ELSE DO;
18072 +            _NODE_  =                   19;
18073 +            _LEAF_  =                    5;
18074 +            P_CategoryHR  =                    0;
18075 +            P_CategoryDESIGNER  =     0.86046511627906;
18076 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18077 +            P_CategoryTEACHER  =                    0;
18078 +            P_CategoryADVOCATE  =                    0;
18079 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18080 +            P_CategoryHEALTHCARE  =                    0;
18081 +            P_CategoryFITNESS  =                    0;
18082 +            P_CategoryOTHER  =     0.02325581395348;
18083 +            P_CategorySALES  =     0.04651162790697;
18084 +            P_CategoryCONSULTANT  =                    0;
18085 +            P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18086 +            Q_CategoryHR  =                    0;
18087 +            Q_CategoryDESIGNER  =     0.86046511627906;
18088 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18089 +            Q_CategoryTEACHER  =                    0;
18090 +            Q_CategoryADVOCATE  =                    0;
18091 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18092 +            Q_CategoryHEALTHCARE  =                    0;
18093 +            Q_CategoryFITNESS  =                    0;
18094 +            Q_CategoryOTHER  =     0.02325581395348;
18095 +            Q_CategorySALES  =     0.04651162790697;
18096 +            Q_CategoryCONSULTANT  =                    0;
18097 +            Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18098 +            V_CategoryHR  =     0.03333333333333;
18099 +            V_CategoryDESIGNER  =     0.66666666666666;
18100 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18101 +            V_CategoryTEACHER  =     0.03333333333333;
18102 +            V_CategoryADVOCATE  =                    0;
18103 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18104 +            V_CategoryHEALTHCARE  =                    0;
18105 +            V_CategoryFITNESS  =     0.03333333333333;
18106 +            V_CategoryOTHER  =                    0;
18107 +            V_CategorySALES  =     0.06666666666666;
18108 +            V_CategoryCONSULTANT  =                    0;
18109 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
18110 +            I_Category  = 'DESIGNER' ;
18111 +            U_Category  = 'DESIGNER' ;
18112 +            END;
18113 +          END;
18114 +        END;
18115 +      ELSE DO;
18116 +        IF  NOT MISSING(TextCluster10_SVD12 ) AND
18117 +          TextCluster10_SVD12  <    -0.12604842708992 THEN DO;
18118 +          IF  NOT MISSING(TextCluster10_SVD6 ) AND
18119 +            TextCluster10_SVD6  <    -0.02385570691405 THEN DO;
18120 +            _NODE_  =                   20;
18121 +            _LEAF_  =                    6;
18122 +            P_CategoryHR  =                    0;
18123 +            P_CategoryDESIGNER  =                 0.25;
18124 +            P_CategoryINFORMATION_TECHNOLOGY  =                0.125;
18125 +            P_CategoryTEACHER  =                    0;
18126 +            P_CategoryADVOCATE  =                0.125;
18127 +            P_CategoryBUSINESS_DEVELOPMENT  =                0.125;
18128 +            P_CategoryHEALTHCARE  =                0.125;
18129 +            P_CategoryFITNESS  =                0.125;
18130 +            P_CategoryOTHER  =                    0;
18131 +            P_CategorySALES  =                    0;
18132 +            P_CategoryCONSULTANT  =                0.125;
18133 +            P_CategoryDIGITAL_MEDIA  =                    0;
18134 +            Q_CategoryHR  =                    0;
18135 +            Q_CategoryDESIGNER  =                 0.25;
18136 +            Q_CategoryINFORMATION_TECHNOLOGY  =                0.125;
18137 +            Q_CategoryTEACHER  =                    0;
18138 +            Q_CategoryADVOCATE  =                0.125;
18139 +            Q_CategoryBUSINESS_DEVELOPMENT  =                0.125;
18140 +            Q_CategoryHEALTHCARE  =                0.125;
18141 +            Q_CategoryFITNESS  =                0.125;
18142 +            Q_CategoryOTHER  =                    0;
18143 +            Q_CategorySALES  =                    0;
18144 +            Q_CategoryCONSULTANT  =                0.125;
18145 +            Q_CategoryDIGITAL_MEDIA  =                    0;
18146 +            V_CategoryHR  =                    0;
18147 +            V_CategoryDESIGNER  =                  0.5;
18148 +            V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
18149 +            V_CategoryTEACHER  =                    0;
18150 +            V_CategoryADVOCATE  =                    0;
18151 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18152 +            V_CategoryHEALTHCARE  =                    0;
18153 +            V_CategoryFITNESS  =                    0;
18154 +            V_CategoryOTHER  =                    0;
18155 +            V_CategorySALES  =                    0;
18156 +            V_CategoryCONSULTANT  =                    0;
18157 +            V_CategoryDIGITAL_MEDIA  =                    0;
18158 +            I_Category  = 'DESIGNER' ;
18159 +            U_Category  = 'DESIGNER' ;
18160 +            END;
18161 +          ELSE DO;
18162 +            _NODE_  =                   21;
18163 +            _LEAF_  =                    7;
18164 +            P_CategoryHR  =                    0;
18165 +            P_CategoryDESIGNER  =                    0;
18166 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18167 +            P_CategoryTEACHER  =                    0;
18168 +            P_CategoryADVOCATE  =     0.19148936170212;
18169 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18170 +            P_CategoryHEALTHCARE  =                    0;
18171 +            P_CategoryFITNESS  =     0.74468085106382;
18172 +            P_CategoryOTHER  =     0.06382978723404;
18173 +            P_CategorySALES  =                    0;
18174 +            P_CategoryCONSULTANT  =                    0;
18175 +            P_CategoryDIGITAL_MEDIA  =                    0;
18176 +            Q_CategoryHR  =                    0;
18177 +            Q_CategoryDESIGNER  =                    0;
18178 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18179 +            Q_CategoryTEACHER  =                    0;
18180 +            Q_CategoryADVOCATE  =     0.19148936170212;
18181 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18182 +            Q_CategoryHEALTHCARE  =                    0;
18183 +            Q_CategoryFITNESS  =     0.74468085106382;
18184 +            Q_CategoryOTHER  =     0.06382978723404;
18185 +            Q_CategorySALES  =                    0;
18186 +            Q_CategoryCONSULTANT  =                    0;
18187 +            Q_CategoryDIGITAL_MEDIA  =                    0;
18188 +            V_CategoryHR  =                    0;
18189 +            V_CategoryDESIGNER  =                    0;
18190 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18191 +            V_CategoryTEACHER  =                    0;
18192 +            V_CategoryADVOCATE  =                    0;
18193 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18194 +            V_CategoryHEALTHCARE  =     0.05555555555555;
18195 +            V_CategoryFITNESS  =     0.88888888888888;
18196 +            V_CategoryOTHER  =     0.05555555555555;
18197 +            V_CategorySALES  =                    0;
18198 +            V_CategoryCONSULTANT  =                    0;
18199 +            V_CategoryDIGITAL_MEDIA  =                    0;
18200 +            I_Category  = 'FITNESS' ;
18201 +            U_Category  = 'FITNESS' ;
18202 +            END;
18203 +          END;
18204 +        ELSE DO;
18205 +          IF  NOT MISSING(TextCluster10_SVD4 ) AND
18206 +                0.28778989493305 <= TextCluster10_SVD4  THEN DO;
18207 +            _NODE_  =                   23;
18208 +            _LEAF_  =                    9;
18209 +            P_CategoryHR  =                    0;
18210 +            P_CategoryDESIGNER  =     0.16666666666666;
18211 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
18212 +            P_CategoryTEACHER  =     0.66666666666666;
18213 +            P_CategoryADVOCATE  =                    0;
18214 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18215 +            P_CategoryHEALTHCARE  =                    0;
18216 +            P_CategoryFITNESS  =                    0;
18217 +            P_CategoryOTHER  =                    0;
18218 +            P_CategorySALES  =                    0;
18219 +            P_CategoryCONSULTANT  =                    0;
18220 +            P_CategoryDIGITAL_MEDIA  =     0.08333333333333;
18221 +            Q_CategoryHR  =                    0;
18222 +            Q_CategoryDESIGNER  =     0.16666666666666;
18223 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
18224 +            Q_CategoryTEACHER  =     0.66666666666666;
18225 +            Q_CategoryADVOCATE  =                    0;
18226 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18227 +            Q_CategoryHEALTHCARE  =                    0;
18228 +            Q_CategoryFITNESS  =                    0;
18229 +            Q_CategoryOTHER  =                    0;
18230 +            Q_CategorySALES  =                    0;
18231 +            Q_CategoryCONSULTANT  =                    0;
18232 +            Q_CategoryDIGITAL_MEDIA  =     0.08333333333333;
18233 +            V_CategoryHR  =                    0;
18234 +            V_CategoryDESIGNER  =                    0;
18235 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18236 +            V_CategoryTEACHER  =                  0.5;
18237 +            V_CategoryADVOCATE  =                 0.25;
18238 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18239 +            V_CategoryHEALTHCARE  =                    0;
18240 +            V_CategoryFITNESS  =                    0;
18241 +            V_CategoryOTHER  =                 0.25;
18242 +            V_CategorySALES  =                    0;
18243 +            V_CategoryCONSULTANT  =                    0;
18244 +            V_CategoryDIGITAL_MEDIA  =                    0;
18245 +            I_Category  = 'TEACHER' ;
18246 +            U_Category  = 'TEACHER' ;
18247 +            END;
18248 +          ELSE DO;
18249 +            _NODE_  =                   22;
18250 +            _LEAF_  =                    8;
18251 +            P_CategoryHR  =     0.03475935828877;
18252 +            P_CategoryDESIGNER  =     0.02406417112299;
18253 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
18254 +            P_CategoryTEACHER  =      0.0187165775401;
18255 +            P_CategoryADVOCATE  =     0.10427807486631;
18256 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
18257 +            P_CategoryHEALTHCARE  =     0.13368983957219;
18258 +            P_CategoryFITNESS  =     0.04545454545454;
18259 +            P_CategoryOTHER  =     0.14438502673796;
18260 +            P_CategorySALES  =     0.14973262032085;
18261 +            P_CategoryCONSULTANT  =     0.09090909090909;
18262 +            P_CategoryDIGITAL_MEDIA  =     0.07219251336898;
18263 +            Q_CategoryHR  =     0.03475935828877;
18264 +            Q_CategoryDESIGNER  =     0.02406417112299;
18265 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
18266 +            Q_CategoryTEACHER  =      0.0187165775401;
18267 +            Q_CategoryADVOCATE  =     0.10427807486631;
18268 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
18269 +            Q_CategoryHEALTHCARE  =     0.13368983957219;
18270 +            Q_CategoryFITNESS  =     0.04545454545454;
18271 +            Q_CategoryOTHER  =     0.14438502673796;
18272 +            Q_CategorySALES  =     0.14973262032085;
18273 +            Q_CategoryCONSULTANT  =     0.09090909090909;
18274 +            Q_CategoryDIGITAL_MEDIA  =     0.07219251336898;
18275 +            V_CategoryHR  =     0.03896103896103;
18276 +            V_CategoryDESIGNER  =     0.02597402597402;
18277 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02164502164502;
18278 +            V_CategoryTEACHER  =     0.02164502164502;
18279 +            V_CategoryADVOCATE  =     0.12987012987012;
18280 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.15151515151515;
18281 +            V_CategoryHEALTHCARE  =     0.12987012987012;
18282 +            V_CategoryFITNESS  =     0.06493506493506;
18283 +            V_CategoryOTHER  =     0.11255411255411;
18284 +            V_CategorySALES  =     0.13419913419913;
18285 +            V_CategoryCONSULTANT  =      0.1038961038961;
18286 +            V_CategoryDIGITAL_MEDIA  =     0.06493506493506;
18287 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18288 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18289 +            END;
18290 +          END;
18291 +        END;
18292 +      END;
18293 +    END;
18294 +  END;
18295 +
18296 +*****  RESIDUALS R_ *************;
18297 +IF  F_Category  NE 'HR'
18298 +AND F_Category  NE 'DESIGNER'
18299 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18300 +AND F_Category  NE 'TEACHER'
18301 +AND F_Category  NE 'ADVOCATE'
18302 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18303 +AND F_Category  NE 'HEALTHCARE'
18304 +AND F_Category  NE 'FITNESS'
18305 +AND F_Category  NE 'OTHER'
18306 +AND F_Category  NE 'SALES'
18307 +AND F_Category  NE 'CONSULTANT'
18308 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18309 +        R_CategoryHR  = .;
18310 +        R_CategoryDESIGNER  = .;
18311 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18312 +        R_CategoryTEACHER  = .;
18313 +        R_CategoryADVOCATE  = .;
18314 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18315 +        R_CategoryHEALTHCARE  = .;
18316 +        R_CategoryFITNESS  = .;
18317 +        R_CategoryOTHER  = .;
18318 +        R_CategorySALES  = .;
18319 +        R_CategoryCONSULTANT  = .;
18320 +        R_CategoryDIGITAL_MEDIA  = .;
18321 + END;
18322 + ELSE DO;
18323 +       R_CategoryHR  =  -P_CategoryHR ;
18324 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18325 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18326 +         ;
18327 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18328 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18329 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18330 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18331 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18332 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18333 +       R_CategorySALES  =  -P_CategorySALES ;
18334 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18335 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18336 +       SELECT( F_Category  );
18337 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18338 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18339 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18340 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18341 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18342 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18343 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18344 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18345 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18346 +          +1;
18347 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18348 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18349 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18350 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18351 +          +1;
18352 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18353 +        R_CategoryDIGITAL_MEDIA  +1;
18354 +       END;
18355 + END;
18356 +
18357 +****************************************************************;
18358 +******          END OF DECISION TREE SCORING CODE         ******;
18359 +****************************************************************;
18360 +
18361 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18362  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18363  quit;
18364  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18365  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas";
18366  *------------------------------------------------------------*;
18367  * Tree3: Scoring VALIDATE data;
18368  *------------------------------------------------------------*;
18369  data EMWS3.Tree3_VALIDATE
18370  / view=EMWS3.Tree3_VALIDATE
18371  ;
18372  set EMWS3.TextCluster10_VALIDATE
18373  ;
18374  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas.
18375 +****************************************************************;
18376 +******             DECISION TREE SCORING CODE             ******;
18377 +****************************************************************;
18378 +
18379 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18380 +LENGTH F_Category  $   22;
18381 +LENGTH I_Category  $   22;
18382 +LENGTH U_Category  $   22;
18383 +LENGTH _WARN_  $    4;
18384 +
18385 +******              LABELS FOR NEW VARIABLES              ******;
18386 +label _NODE_ = 'Node' ;
18387 +label _LEAF_ = 'Leaf' ;
18388 +label P_CategoryHR = 'Predicted: Category=HR' ;
18389 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18390 +label P_CategoryINFORMATION_TECHNOLOGY =
18391 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18392 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18393 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18394 +label P_CategoryBUSINESS_DEVELOPMENT =
18395 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18396 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18397 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18398 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18399 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18400 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18401 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18402 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18403 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18404 +label Q_CategoryINFORMATION_TECHNOLOGY =
18405 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18406 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18407 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18408 +label Q_CategoryBUSINESS_DEVELOPMENT =
18409 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18410 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18411 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18412 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18413 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18414 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18415 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18416 +label V_CategoryHR = 'Validated: Category=HR' ;
18417 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18418 +label V_CategoryINFORMATION_TECHNOLOGY =
18419 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18420 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18421 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18422 +label V_CategoryBUSINESS_DEVELOPMENT =
18423 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18424 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18425 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18426 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18427 +label V_CategorySALES = 'Validated: Category=SALES' ;
18428 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18429 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18430 +label R_CategoryHR = 'Residual: Category=HR' ;
18431 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18432 +label R_CategoryINFORMATION_TECHNOLOGY =
18433 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18434 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18435 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18436 +label R_CategoryBUSINESS_DEVELOPMENT =
18437 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18438 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18439 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18440 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18441 +label R_CategorySALES = 'Residual: Category=SALES' ;
18442 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18443 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18444 +label F_Category = 'From: Category' ;
18445 +label I_Category = 'Into: Category' ;
18446 +label U_Category = 'Unnormalized Into: Category' ;
18447 +label _WARN_ = 'Warnings' ;
18448 +
18449 +
18450 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18451 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18452 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18453 +
18454 +
18455 +_ARBFMT_22 = PUT( Category , $22.);
18456 + %DMNORMCP( _ARBFMT_22, F_Category );
18457 +
18458 +******             ASSIGN OBSERVATION TO NODE             ******;
18459 +IF  NOT MISSING(TextCluster10_SVD4 ) AND
18460 +  TextCluster10_SVD4  <     -0.3566006636464 THEN DO;
18461 +  _NODE_  =                    2;
18462 +  _LEAF_  =                    1;
18463 +  P_CategoryHR  =      0.9090909090909;
18464 +  P_CategoryDESIGNER  =                    0;
18465 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18466 +  P_CategoryTEACHER  =                    0;
18467 +  P_CategoryADVOCATE  =     0.04545454545454;
18468 +  P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18469 +  P_CategoryHEALTHCARE  =     0.02272727272727;
18470 +  P_CategoryFITNESS  =     0.02272727272727;
18471 +  P_CategoryOTHER  =                    0;
18472 +  P_CategorySALES  =                    0;
18473 +  P_CategoryCONSULTANT  =                    0;
18474 +  P_CategoryDIGITAL_MEDIA  =                    0;
18475 +  Q_CategoryHR  =      0.9090909090909;
18476 +  Q_CategoryDESIGNER  =                    0;
18477 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18478 +  Q_CategoryTEACHER  =                    0;
18479 +  Q_CategoryADVOCATE  =     0.04545454545454;
18480 +  Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18481 +  Q_CategoryHEALTHCARE  =     0.02272727272727;
18482 +  Q_CategoryFITNESS  =     0.02272727272727;
18483 +  Q_CategoryOTHER  =                    0;
18484 +  Q_CategorySALES  =                    0;
18485 +  Q_CategoryCONSULTANT  =                    0;
18486 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18487 +  V_CategoryHR  =                0.875;
18488 +  V_CategoryDESIGNER  =                    0;
18489 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18490 +  V_CategoryTEACHER  =                    0;
18491 +  V_CategoryADVOCATE  =                    0;
18492 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18493 +  V_CategoryHEALTHCARE  =     0.04166666666666;
18494 +  V_CategoryFITNESS  =                    0;
18495 +  V_CategoryOTHER  =                    0;
18496 +  V_CategorySALES  =                    0;
18497 +  V_CategoryCONSULTANT  =     0.08333333333333;
18498 +  V_CategoryDIGITAL_MEDIA  =                    0;
18499 +  I_Category  = 'HR' ;
18500 +  U_Category  = 'HR' ;
18501 +  END;
18502 +ELSE DO;
18503 +  IF  NOT MISSING(TextCluster10_SVD5 ) AND
18504 +    TextCluster10_SVD5  <    -0.30020685125388 THEN DO;
18505 +    _NODE_  =                    4;
18506 +    _LEAF_  =                    2;
18507 +    P_CategoryHR  =                    0;
18508 +    P_CategoryDESIGNER  =     0.02222222222222;
18509 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18510 +    P_CategoryTEACHER  =     0.77777777777777;
18511 +    P_CategoryADVOCATE  =     0.08888888888888;
18512 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18513 +    P_CategoryHEALTHCARE  =     0.02222222222222;
18514 +    P_CategoryFITNESS  =     0.08888888888888;
18515 +    P_CategoryOTHER  =                    0;
18516 +    P_CategorySALES  =                    0;
18517 +    P_CategoryCONSULTANT  =                    0;
18518 +    P_CategoryDIGITAL_MEDIA  =                    0;
18519 +    Q_CategoryHR  =                    0;
18520 +    Q_CategoryDESIGNER  =     0.02222222222222;
18521 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18522 +    Q_CategoryTEACHER  =     0.77777777777777;
18523 +    Q_CategoryADVOCATE  =     0.08888888888888;
18524 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18525 +    Q_CategoryHEALTHCARE  =     0.02222222222222;
18526 +    Q_CategoryFITNESS  =     0.08888888888888;
18527 +    Q_CategoryOTHER  =                    0;
18528 +    Q_CategorySALES  =                    0;
18529 +    Q_CategoryCONSULTANT  =                    0;
18530 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18531 +    V_CategoryHR  =     0.02631578947368;
18532 +    V_CategoryDESIGNER  =     0.05263157894736;
18533 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18534 +    V_CategoryTEACHER  =     0.60526315789473;
18535 +    V_CategoryADVOCATE  =     0.07894736842105;
18536 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18537 +    V_CategoryHEALTHCARE  =                    0;
18538 +    V_CategoryFITNESS  =     0.07894736842105;
18539 +    V_CategoryOTHER  =      0.1578947368421;
18540 +    V_CategorySALES  =                    0;
18541 +    V_CategoryCONSULTANT  =                    0;
18542 +    V_CategoryDIGITAL_MEDIA  =                    0;
18543 +    I_Category  = 'TEACHER' ;
18544 +    U_Category  = 'TEACHER' ;
18545 +    END;
18546 +  ELSE DO;
18547 +    IF  NOT MISSING(TextCluster10_SVD2 ) AND
18548 +          0.28330980301825 <= TextCluster10_SVD2  THEN DO;
18549 +      _NODE_  =                    9;
18550 +      _LEAF_  =                   10;
18551 +      P_CategoryHR  =                    0;
18552 +      P_CategoryDESIGNER  =     0.02325581395348;
18553 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
18554 +      P_CategoryTEACHER  =                    0;
18555 +      P_CategoryADVOCATE  =     0.02325581395348;
18556 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18557 +      P_CategoryHEALTHCARE  =     0.03488372093023;
18558 +      P_CategoryFITNESS  =                    0;
18559 +      P_CategoryOTHER  =     0.05813953488372;
18560 +      P_CategorySALES  =                    0;
18561 +      P_CategoryCONSULTANT  =     0.24418604651162;
18562 +      P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18563 +      Q_CategoryHR  =                    0;
18564 +      Q_CategoryDESIGNER  =     0.02325581395348;
18565 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
18566 +      Q_CategoryTEACHER  =                    0;
18567 +      Q_CategoryADVOCATE  =     0.02325581395348;
18568 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18569 +      Q_CategoryHEALTHCARE  =     0.03488372093023;
18570 +      Q_CategoryFITNESS  =                    0;
18571 +      Q_CategoryOTHER  =     0.05813953488372;
18572 +      Q_CategorySALES  =                    0;
18573 +      Q_CategoryCONSULTANT  =     0.24418604651162;
18574 +      Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18575 +      V_CategoryHR  =                    0;
18576 +      V_CategoryDESIGNER  =     0.03846153846153;
18577 +      V_CategoryINFORMATION_TECHNOLOGY  =      0.5576923076923;
18578 +      V_CategoryTEACHER  =                    0;
18579 +      V_CategoryADVOCATE  =     0.01923076923076;
18580 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18581 +      V_CategoryHEALTHCARE  =     0.01923076923076;
18582 +      V_CategoryFITNESS  =                    0;
18583 +      V_CategoryOTHER  =      0.0576923076923;
18584 +      V_CategorySALES  =     0.01923076923076;
18585 +      V_CategoryCONSULTANT  =     0.17307692307692;
18586 +      V_CategoryDIGITAL_MEDIA  =     0.09615384615384;
18587 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18588 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18589 +      END;
18590 +    ELSE DO;
18591 +      IF  NOT MISSING(TextCluster10_SVD6 ) AND
18592 +        TextCluster10_SVD6  <    -0.18416908989601 THEN DO;
18593 +        IF  NOT MISSING(TextCluster10_SVD4 ) AND
18594 +          TextCluster10_SVD4  <     0.03257710277888 THEN DO;
18595 +          _NODE_  =                   14;
18596 +          _LEAF_  =                    3;
18597 +          P_CategoryHR  =                  0.4;
18598 +          P_CategoryDESIGNER  =                    0;
18599 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18600 +          P_CategoryTEACHER  =                    0;
18601 +          P_CategoryADVOCATE  =                    0;
18602 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18603 +          P_CategoryHEALTHCARE  =                  0.2;
18604 +          P_CategoryFITNESS  =                    0;
18605 +          P_CategoryOTHER  =                    0;
18606 +          P_CategorySALES  =                    0;
18607 +          P_CategoryCONSULTANT  =                  0.2;
18608 +          P_CategoryDIGITAL_MEDIA  =                    0;
18609 +          Q_CategoryHR  =                  0.4;
18610 +          Q_CategoryDESIGNER  =                    0;
18611 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18612 +          Q_CategoryTEACHER  =                    0;
18613 +          Q_CategoryADVOCATE  =                    0;
18614 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
18615 +          Q_CategoryHEALTHCARE  =                  0.2;
18616 +          Q_CategoryFITNESS  =                    0;
18617 +          Q_CategoryOTHER  =                    0;
18618 +          Q_CategorySALES  =                    0;
18619 +          Q_CategoryCONSULTANT  =                  0.2;
18620 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18621 +          V_CategoryHR  =                    0;
18622 +          V_CategoryDESIGNER  =                    0;
18623 +          V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
18624 +          V_CategoryTEACHER  =                    0;
18625 +          V_CategoryADVOCATE  =                    0;
18626 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18627 +          V_CategoryHEALTHCARE  =                    0;
18628 +          V_CategoryFITNESS  =                    0;
18629 +          V_CategoryOTHER  =                  0.5;
18630 +          V_CategorySALES  =                    0;
18631 +          V_CategoryCONSULTANT  =                    0;
18632 +          V_CategoryDIGITAL_MEDIA  =                    0;
18633 +          I_Category  = 'HR' ;
18634 +          U_Category  = 'HR' ;
18635 +          END;
18636 +        ELSE DO;
18637 +          IF  NOT MISSING(TextCluster10_SVD10 ) AND
18638 +            TextCluster10_SVD10  <    -0.07870817493434 THEN DO;
18639 +            _NODE_  =                   18;
18640 +            _LEAF_  =                    4;
18641 +            P_CategoryHR  =                    0;
18642 +            P_CategoryDESIGNER  =                    0;
18643 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18644 +            P_CategoryTEACHER  =                    0;
18645 +            P_CategoryADVOCATE  =                    0;
18646 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18647 +            P_CategoryHEALTHCARE  =                    0;
18648 +            P_CategoryFITNESS  =                    0;
18649 +            P_CategoryOTHER  =                    0;
18650 +            P_CategorySALES  =                    0;
18651 +            P_CategoryCONSULTANT  =                    0;
18652 +            P_CategoryDIGITAL_MEDIA  =                    1;
18653 +            Q_CategoryHR  =                    0;
18654 +            Q_CategoryDESIGNER  =                    0;
18655 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18656 +            Q_CategoryTEACHER  =                    0;
18657 +            Q_CategoryADVOCATE  =                    0;
18658 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18659 +            Q_CategoryHEALTHCARE  =                    0;
18660 +            Q_CategoryFITNESS  =                    0;
18661 +            Q_CategoryOTHER  =                    0;
18662 +            Q_CategorySALES  =                    0;
18663 +            Q_CategoryCONSULTANT  =                    0;
18664 +            Q_CategoryDIGITAL_MEDIA  =                    1;
18665 +            V_CategoryHR  =                    0;
18666 +            V_CategoryDESIGNER  =                    0;
18667 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18668 +            V_CategoryTEACHER  =                    0;
18669 +            V_CategoryADVOCATE  =                    0;
18670 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18671 +            V_CategoryHEALTHCARE  =                    0;
18672 +            V_CategoryFITNESS  =                    0;
18673 +            V_CategoryOTHER  =                    0;
18674 +            V_CategorySALES  =                    0;
18675 +            V_CategoryCONSULTANT  =                    0;
18676 +            V_CategoryDIGITAL_MEDIA  =                    1;
18677 +            I_Category  = 'DIGITAL-MEDIA' ;
18678 +            U_Category  = 'DIGITAL-MEDIA' ;
18679 +            END;
18680 +          ELSE DO;
18681 +            _NODE_  =                   19;
18682 +            _LEAF_  =                    5;
18683 +            P_CategoryHR  =                    0;
18684 +            P_CategoryDESIGNER  =     0.86046511627906;
18685 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18686 +            P_CategoryTEACHER  =                    0;
18687 +            P_CategoryADVOCATE  =                    0;
18688 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18689 +            P_CategoryHEALTHCARE  =                    0;
18690 +            P_CategoryFITNESS  =                    0;
18691 +            P_CategoryOTHER  =     0.02325581395348;
18692 +            P_CategorySALES  =     0.04651162790697;
18693 +            P_CategoryCONSULTANT  =                    0;
18694 +            P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18695 +            Q_CategoryHR  =                    0;
18696 +            Q_CategoryDESIGNER  =     0.86046511627906;
18697 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18698 +            Q_CategoryTEACHER  =                    0;
18699 +            Q_CategoryADVOCATE  =                    0;
18700 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18701 +            Q_CategoryHEALTHCARE  =                    0;
18702 +            Q_CategoryFITNESS  =                    0;
18703 +            Q_CategoryOTHER  =     0.02325581395348;
18704 +            Q_CategorySALES  =     0.04651162790697;
18705 +            Q_CategoryCONSULTANT  =                    0;
18706 +            Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
18707 +            V_CategoryHR  =     0.03333333333333;
18708 +            V_CategoryDESIGNER  =     0.66666666666666;
18709 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18710 +            V_CategoryTEACHER  =     0.03333333333333;
18711 +            V_CategoryADVOCATE  =                    0;
18712 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18713 +            V_CategoryHEALTHCARE  =                    0;
18714 +            V_CategoryFITNESS  =     0.03333333333333;
18715 +            V_CategoryOTHER  =                    0;
18716 +            V_CategorySALES  =     0.06666666666666;
18717 +            V_CategoryCONSULTANT  =                    0;
18718 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
18719 +            I_Category  = 'DESIGNER' ;
18720 +            U_Category  = 'DESIGNER' ;
18721 +            END;
18722 +          END;
18723 +        END;
18724 +      ELSE DO;
18725 +        IF  NOT MISSING(TextCluster10_SVD12 ) AND
18726 +          TextCluster10_SVD12  <    -0.12604842708992 THEN DO;
18727 +          IF  NOT MISSING(TextCluster10_SVD6 ) AND
18728 +            TextCluster10_SVD6  <    -0.02385570691405 THEN DO;
18729 +            _NODE_  =                   20;
18730 +            _LEAF_  =                    6;
18731 +            P_CategoryHR  =                    0;
18732 +            P_CategoryDESIGNER  =                 0.25;
18733 +            P_CategoryINFORMATION_TECHNOLOGY  =                0.125;
18734 +            P_CategoryTEACHER  =                    0;
18735 +            P_CategoryADVOCATE  =                0.125;
18736 +            P_CategoryBUSINESS_DEVELOPMENT  =                0.125;
18737 +            P_CategoryHEALTHCARE  =                0.125;
18738 +            P_CategoryFITNESS  =                0.125;
18739 +            P_CategoryOTHER  =                    0;
18740 +            P_CategorySALES  =                    0;
18741 +            P_CategoryCONSULTANT  =                0.125;
18742 +            P_CategoryDIGITAL_MEDIA  =                    0;
18743 +            Q_CategoryHR  =                    0;
18744 +            Q_CategoryDESIGNER  =                 0.25;
18745 +            Q_CategoryINFORMATION_TECHNOLOGY  =                0.125;
18746 +            Q_CategoryTEACHER  =                    0;
18747 +            Q_CategoryADVOCATE  =                0.125;
18748 +            Q_CategoryBUSINESS_DEVELOPMENT  =                0.125;
18749 +            Q_CategoryHEALTHCARE  =                0.125;
18750 +            Q_CategoryFITNESS  =                0.125;
18751 +            Q_CategoryOTHER  =                    0;
18752 +            Q_CategorySALES  =                    0;
18753 +            Q_CategoryCONSULTANT  =                0.125;
18754 +            Q_CategoryDIGITAL_MEDIA  =                    0;
18755 +            V_CategoryHR  =                    0;
18756 +            V_CategoryDESIGNER  =                  0.5;
18757 +            V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
18758 +            V_CategoryTEACHER  =                    0;
18759 +            V_CategoryADVOCATE  =                    0;
18760 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18761 +            V_CategoryHEALTHCARE  =                    0;
18762 +            V_CategoryFITNESS  =                    0;
18763 +            V_CategoryOTHER  =                    0;
18764 +            V_CategorySALES  =                    0;
18765 +            V_CategoryCONSULTANT  =                    0;
18766 +            V_CategoryDIGITAL_MEDIA  =                    0;
18767 +            I_Category  = 'DESIGNER' ;
18768 +            U_Category  = 'DESIGNER' ;
18769 +            END;
18770 +          ELSE DO;
18771 +            _NODE_  =                   21;
18772 +            _LEAF_  =                    7;
18773 +            P_CategoryHR  =                    0;
18774 +            P_CategoryDESIGNER  =                    0;
18775 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18776 +            P_CategoryTEACHER  =                    0;
18777 +            P_CategoryADVOCATE  =     0.19148936170212;
18778 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18779 +            P_CategoryHEALTHCARE  =                    0;
18780 +            P_CategoryFITNESS  =     0.74468085106382;
18781 +            P_CategoryOTHER  =     0.06382978723404;
18782 +            P_CategorySALES  =                    0;
18783 +            P_CategoryCONSULTANT  =                    0;
18784 +            P_CategoryDIGITAL_MEDIA  =                    0;
18785 +            Q_CategoryHR  =                    0;
18786 +            Q_CategoryDESIGNER  =                    0;
18787 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18788 +            Q_CategoryTEACHER  =                    0;
18789 +            Q_CategoryADVOCATE  =     0.19148936170212;
18790 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18791 +            Q_CategoryHEALTHCARE  =                    0;
18792 +            Q_CategoryFITNESS  =     0.74468085106382;
18793 +            Q_CategoryOTHER  =     0.06382978723404;
18794 +            Q_CategorySALES  =                    0;
18795 +            Q_CategoryCONSULTANT  =                    0;
18796 +            Q_CategoryDIGITAL_MEDIA  =                    0;
18797 +            V_CategoryHR  =                    0;
18798 +            V_CategoryDESIGNER  =                    0;
18799 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18800 +            V_CategoryTEACHER  =                    0;
18801 +            V_CategoryADVOCATE  =                    0;
18802 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18803 +            V_CategoryHEALTHCARE  =     0.05555555555555;
18804 +            V_CategoryFITNESS  =     0.88888888888888;
18805 +            V_CategoryOTHER  =     0.05555555555555;
18806 +            V_CategorySALES  =                    0;
18807 +            V_CategoryCONSULTANT  =                    0;
18808 +            V_CategoryDIGITAL_MEDIA  =                    0;
18809 +            I_Category  = 'FITNESS' ;
18810 +            U_Category  = 'FITNESS' ;
18811 +            END;
18812 +          END;
18813 +        ELSE DO;
18814 +          IF  NOT MISSING(TextCluster10_SVD4 ) AND
18815 +                0.28778989493305 <= TextCluster10_SVD4  THEN DO;
18816 +            _NODE_  =                   23;
18817 +            _LEAF_  =                    9;
18818 +            P_CategoryHR  =                    0;
18819 +            P_CategoryDESIGNER  =     0.16666666666666;
18820 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
18821 +            P_CategoryTEACHER  =     0.66666666666666;
18822 +            P_CategoryADVOCATE  =                    0;
18823 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18824 +            P_CategoryHEALTHCARE  =                    0;
18825 +            P_CategoryFITNESS  =                    0;
18826 +            P_CategoryOTHER  =                    0;
18827 +            P_CategorySALES  =                    0;
18828 +            P_CategoryCONSULTANT  =                    0;
18829 +            P_CategoryDIGITAL_MEDIA  =     0.08333333333333;
18830 +            Q_CategoryHR  =                    0;
18831 +            Q_CategoryDESIGNER  =     0.16666666666666;
18832 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
18833 +            Q_CategoryTEACHER  =     0.66666666666666;
18834 +            Q_CategoryADVOCATE  =                    0;
18835 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18836 +            Q_CategoryHEALTHCARE  =                    0;
18837 +            Q_CategoryFITNESS  =                    0;
18838 +            Q_CategoryOTHER  =                    0;
18839 +            Q_CategorySALES  =                    0;
18840 +            Q_CategoryCONSULTANT  =                    0;
18841 +            Q_CategoryDIGITAL_MEDIA  =     0.08333333333333;
18842 +            V_CategoryHR  =                    0;
18843 +            V_CategoryDESIGNER  =                    0;
18844 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18845 +            V_CategoryTEACHER  =                  0.5;
18846 +            V_CategoryADVOCATE  =                 0.25;
18847 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18848 +            V_CategoryHEALTHCARE  =                    0;
18849 +            V_CategoryFITNESS  =                    0;
18850 +            V_CategoryOTHER  =                 0.25;
18851 +            V_CategorySALES  =                    0;
18852 +            V_CategoryCONSULTANT  =                    0;
18853 +            V_CategoryDIGITAL_MEDIA  =                    0;
18854 +            I_Category  = 'TEACHER' ;
18855 +            U_Category  = 'TEACHER' ;
18856 +            END;
18857 +          ELSE DO;
18858 +            _NODE_  =                   22;
18859 +            _LEAF_  =                    8;
18860 +            P_CategoryHR  =     0.03475935828877;
18861 +            P_CategoryDESIGNER  =     0.02406417112299;
18862 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
18863 +            P_CategoryTEACHER  =      0.0187165775401;
18864 +            P_CategoryADVOCATE  =     0.10427807486631;
18865 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
18866 +            P_CategoryHEALTHCARE  =     0.13368983957219;
18867 +            P_CategoryFITNESS  =     0.04545454545454;
18868 +            P_CategoryOTHER  =     0.14438502673796;
18869 +            P_CategorySALES  =     0.14973262032085;
18870 +            P_CategoryCONSULTANT  =     0.09090909090909;
18871 +            P_CategoryDIGITAL_MEDIA  =     0.07219251336898;
18872 +            Q_CategoryHR  =     0.03475935828877;
18873 +            Q_CategoryDESIGNER  =     0.02406417112299;
18874 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
18875 +            Q_CategoryTEACHER  =      0.0187165775401;
18876 +            Q_CategoryADVOCATE  =     0.10427807486631;
18877 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
18878 +            Q_CategoryHEALTHCARE  =     0.13368983957219;
18879 +            Q_CategoryFITNESS  =     0.04545454545454;
18880 +            Q_CategoryOTHER  =     0.14438502673796;
18881 +            Q_CategorySALES  =     0.14973262032085;
18882 +            Q_CategoryCONSULTANT  =     0.09090909090909;
18883 +            Q_CategoryDIGITAL_MEDIA  =     0.07219251336898;
18884 +            V_CategoryHR  =     0.03896103896103;
18885 +            V_CategoryDESIGNER  =     0.02597402597402;
18886 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02164502164502;
18887 +            V_CategoryTEACHER  =     0.02164502164502;
18888 +            V_CategoryADVOCATE  =     0.12987012987012;
18889 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.15151515151515;
18890 +            V_CategoryHEALTHCARE  =     0.12987012987012;
18891 +            V_CategoryFITNESS  =     0.06493506493506;
18892 +            V_CategoryOTHER  =     0.11255411255411;
18893 +            V_CategorySALES  =     0.13419913419913;
18894 +            V_CategoryCONSULTANT  =      0.1038961038961;
18895 +            V_CategoryDIGITAL_MEDIA  =     0.06493506493506;
18896 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18897 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18898 +            END;
18899 +          END;
18900 +        END;
18901 +      END;
18902 +    END;
18903 +  END;
18904 +
18905 +*****  RESIDUALS R_ *************;
18906 +IF  F_Category  NE 'HR'
18907 +AND F_Category  NE 'DESIGNER'
18908 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18909 +AND F_Category  NE 'TEACHER'
18910 +AND F_Category  NE 'ADVOCATE'
18911 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18912 +AND F_Category  NE 'HEALTHCARE'
18913 +AND F_Category  NE 'FITNESS'
18914 +AND F_Category  NE 'OTHER'
18915 +AND F_Category  NE 'SALES'
18916 +AND F_Category  NE 'CONSULTANT'
18917 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18918 +        R_CategoryHR  = .;
18919 +        R_CategoryDESIGNER  = .;
18920 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18921 +        R_CategoryTEACHER  = .;
18922 +        R_CategoryADVOCATE  = .;
18923 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18924 +        R_CategoryHEALTHCARE  = .;
18925 +        R_CategoryFITNESS  = .;
18926 +        R_CategoryOTHER  = .;
18927 +        R_CategorySALES  = .;
18928 +        R_CategoryCONSULTANT  = .;
18929 +        R_CategoryDIGITAL_MEDIA  = .;
18930 + END;
18931 + ELSE DO;
18932 +       R_CategoryHR  =  -P_CategoryHR ;
18933 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18934 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18935 +         ;
18936 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18937 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18938 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18939 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18940 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18941 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18942 +       R_CategorySALES  =  -P_CategorySALES ;
18943 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18944 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18945 +       SELECT( F_Category  );
18946 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18947 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18948 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18949 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18950 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18951 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18952 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18953 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18954 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18955 +          +1;
18956 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18957 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18958 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18959 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18960 +          +1;
18961 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18962 +        R_CategoryDIGITAL_MEDIA  +1;
18963 +       END;
18964 + END;
18965 +
18966 +****************************************************************;
18967 +******          END OF DECISION TREE SCORING CODE         ******;
18968 +****************************************************************;
18969 +
18970 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18971  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18972  quit;
18973  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18974  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas";
18975  *------------------------------------------------------------*;
18976  * Tree3: Scoring TEST data;
18977  *------------------------------------------------------------*;
18978  data EMWS3.Tree3_TEST
18979  / view=EMWS3.Tree3_TEST
18980  ;
18981  set EMWS3.TextCluster10_TEST
18982  ;
18983  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree3\EMFLOWSCORE.sas.
18984 +****************************************************************;
18985 +******             DECISION TREE SCORING CODE             ******;
18986 +****************************************************************;
18987 +
18988 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18989 +LENGTH F_Category  $   22;
18990 +LENGTH I_Category  $   22;
18991 +LENGTH U_Category  $   22;
18992 +LENGTH _WARN_  $    4;
18993 +
18994 +******              LABELS FOR NEW VARIABLES              ******;
18995 +label _NODE_ = 'Node' ;
18996 +label _LEAF_ = 'Leaf' ;
18997 +label P_CategoryHR = 'Predicted: Category=HR' ;
18998 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18999 +label P_CategoryINFORMATION_TECHNOLOGY =
19000 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
19001 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
19002 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
19003 +label P_CategoryBUSINESS_DEVELOPMENT =
19004 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
19005 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
19006 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
19007 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
19008 +label P_CategorySALES = 'Predicted: Category=SALES' ;
19009 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
19010 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
19011 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
19012 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
19013 +label Q_CategoryINFORMATION_TECHNOLOGY =
19014 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
19015 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
19016 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
19017 +label Q_CategoryBUSINESS_DEVELOPMENT =
19018 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
19019 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
19020 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
19021 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
19022 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
19023 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
19024 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
19025 +label V_CategoryHR = 'Validated: Category=HR' ;
19026 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
19027 +label V_CategoryINFORMATION_TECHNOLOGY =
19028 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
19029 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
19030 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
19031 +label V_CategoryBUSINESS_DEVELOPMENT =
19032 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
19033 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
19034 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
19035 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
19036 +label V_CategorySALES = 'Validated: Category=SALES' ;
19037 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
19038 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
19039 +label R_CategoryHR = 'Residual: Category=HR' ;
19040 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
19041 +label R_CategoryINFORMATION_TECHNOLOGY =
19042 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
19043 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19044 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19045 +label R_CategoryBUSINESS_DEVELOPMENT =
19046 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19047 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19048 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19049 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19050 +label R_CategorySALES = 'Residual: Category=SALES' ;
19051 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19052 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19053 +label F_Category = 'From: Category' ;
19054 +label I_Category = 'Into: Category' ;
19055 +label U_Category = 'Unnormalized Into: Category' ;
19056 +label _WARN_ = 'Warnings' ;
19057 +
19058 +
19059 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19060 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19061 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19062 +
19063 +
19064 +_ARBFMT_22 = PUT( Category , $22.);
19065 + %DMNORMCP( _ARBFMT_22, F_Category );
19066 +
19067 +******             ASSIGN OBSERVATION TO NODE             ******;
19068 +IF  NOT MISSING(TextCluster10_SVD4 ) AND
19069 +  TextCluster10_SVD4  <     -0.3566006636464 THEN DO;
19070 +  _NODE_  =                    2;
19071 +  _LEAF_  =                    1;
19072 +  P_CategoryHR  =      0.9090909090909;
19073 +  P_CategoryDESIGNER  =                    0;
19074 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19075 +  P_CategoryTEACHER  =                    0;
19076 +  P_CategoryADVOCATE  =     0.04545454545454;
19077 +  P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19078 +  P_CategoryHEALTHCARE  =     0.02272727272727;
19079 +  P_CategoryFITNESS  =     0.02272727272727;
19080 +  P_CategoryOTHER  =                    0;
19081 +  P_CategorySALES  =                    0;
19082 +  P_CategoryCONSULTANT  =                    0;
19083 +  P_CategoryDIGITAL_MEDIA  =                    0;
19084 +  Q_CategoryHR  =      0.9090909090909;
19085 +  Q_CategoryDESIGNER  =                    0;
19086 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19087 +  Q_CategoryTEACHER  =                    0;
19088 +  Q_CategoryADVOCATE  =     0.04545454545454;
19089 +  Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19090 +  Q_CategoryHEALTHCARE  =     0.02272727272727;
19091 +  Q_CategoryFITNESS  =     0.02272727272727;
19092 +  Q_CategoryOTHER  =                    0;
19093 +  Q_CategorySALES  =                    0;
19094 +  Q_CategoryCONSULTANT  =                    0;
19095 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19096 +  V_CategoryHR  =                0.875;
19097 +  V_CategoryDESIGNER  =                    0;
19098 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19099 +  V_CategoryTEACHER  =                    0;
19100 +  V_CategoryADVOCATE  =                    0;
19101 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19102 +  V_CategoryHEALTHCARE  =     0.04166666666666;
19103 +  V_CategoryFITNESS  =                    0;
19104 +  V_CategoryOTHER  =                    0;
19105 +  V_CategorySALES  =                    0;
19106 +  V_CategoryCONSULTANT  =     0.08333333333333;
19107 +  V_CategoryDIGITAL_MEDIA  =                    0;
19108 +  I_Category  = 'HR' ;
19109 +  U_Category  = 'HR' ;
19110 +  END;
19111 +ELSE DO;
19112 +  IF  NOT MISSING(TextCluster10_SVD5 ) AND
19113 +    TextCluster10_SVD5  <    -0.30020685125388 THEN DO;
19114 +    _NODE_  =                    4;
19115 +    _LEAF_  =                    2;
19116 +    P_CategoryHR  =                    0;
19117 +    P_CategoryDESIGNER  =     0.02222222222222;
19118 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19119 +    P_CategoryTEACHER  =     0.77777777777777;
19120 +    P_CategoryADVOCATE  =     0.08888888888888;
19121 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19122 +    P_CategoryHEALTHCARE  =     0.02222222222222;
19123 +    P_CategoryFITNESS  =     0.08888888888888;
19124 +    P_CategoryOTHER  =                    0;
19125 +    P_CategorySALES  =                    0;
19126 +    P_CategoryCONSULTANT  =                    0;
19127 +    P_CategoryDIGITAL_MEDIA  =                    0;
19128 +    Q_CategoryHR  =                    0;
19129 +    Q_CategoryDESIGNER  =     0.02222222222222;
19130 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19131 +    Q_CategoryTEACHER  =     0.77777777777777;
19132 +    Q_CategoryADVOCATE  =     0.08888888888888;
19133 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19134 +    Q_CategoryHEALTHCARE  =     0.02222222222222;
19135 +    Q_CategoryFITNESS  =     0.08888888888888;
19136 +    Q_CategoryOTHER  =                    0;
19137 +    Q_CategorySALES  =                    0;
19138 +    Q_CategoryCONSULTANT  =                    0;
19139 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19140 +    V_CategoryHR  =     0.02631578947368;
19141 +    V_CategoryDESIGNER  =     0.05263157894736;
19142 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19143 +    V_CategoryTEACHER  =     0.60526315789473;
19144 +    V_CategoryADVOCATE  =     0.07894736842105;
19145 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19146 +    V_CategoryHEALTHCARE  =                    0;
19147 +    V_CategoryFITNESS  =     0.07894736842105;
19148 +    V_CategoryOTHER  =      0.1578947368421;
19149 +    V_CategorySALES  =                    0;
19150 +    V_CategoryCONSULTANT  =                    0;
19151 +    V_CategoryDIGITAL_MEDIA  =                    0;
19152 +    I_Category  = 'TEACHER' ;
19153 +    U_Category  = 'TEACHER' ;
19154 +    END;
19155 +  ELSE DO;
19156 +    IF  NOT MISSING(TextCluster10_SVD2 ) AND
19157 +          0.28330980301825 <= TextCluster10_SVD2  THEN DO;
19158 +      _NODE_  =                    9;
19159 +      _LEAF_  =                   10;
19160 +      P_CategoryHR  =                    0;
19161 +      P_CategoryDESIGNER  =     0.02325581395348;
19162 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
19163 +      P_CategoryTEACHER  =                    0;
19164 +      P_CategoryADVOCATE  =     0.02325581395348;
19165 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19166 +      P_CategoryHEALTHCARE  =     0.03488372093023;
19167 +      P_CategoryFITNESS  =                    0;
19168 +      P_CategoryOTHER  =     0.05813953488372;
19169 +      P_CategorySALES  =                    0;
19170 +      P_CategoryCONSULTANT  =     0.24418604651162;
19171 +      P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
19172 +      Q_CategoryHR  =                    0;
19173 +      Q_CategoryDESIGNER  =     0.02325581395348;
19174 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54651162790697;
19175 +      Q_CategoryTEACHER  =                    0;
19176 +      Q_CategoryADVOCATE  =     0.02325581395348;
19177 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19178 +      Q_CategoryHEALTHCARE  =     0.03488372093023;
19179 +      Q_CategoryFITNESS  =                    0;
19180 +      Q_CategoryOTHER  =     0.05813953488372;
19181 +      Q_CategorySALES  =                    0;
19182 +      Q_CategoryCONSULTANT  =     0.24418604651162;
19183 +      Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
19184 +      V_CategoryHR  =                    0;
19185 +      V_CategoryDESIGNER  =     0.03846153846153;
19186 +      V_CategoryINFORMATION_TECHNOLOGY  =      0.5576923076923;
19187 +      V_CategoryTEACHER  =                    0;
19188 +      V_CategoryADVOCATE  =     0.01923076923076;
19189 +      V_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
19190 +      V_CategoryHEALTHCARE  =     0.01923076923076;
19191 +      V_CategoryFITNESS  =                    0;
19192 +      V_CategoryOTHER  =      0.0576923076923;
19193 +      V_CategorySALES  =     0.01923076923076;
19194 +      V_CategoryCONSULTANT  =     0.17307692307692;
19195 +      V_CategoryDIGITAL_MEDIA  =     0.09615384615384;
19196 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
19197 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
19198 +      END;
19199 +    ELSE DO;
19200 +      IF  NOT MISSING(TextCluster10_SVD6 ) AND
19201 +        TextCluster10_SVD6  <    -0.18416908989601 THEN DO;
19202 +        IF  NOT MISSING(TextCluster10_SVD4 ) AND
19203 +          TextCluster10_SVD4  <     0.03257710277888 THEN DO;
19204 +          _NODE_  =                   14;
19205 +          _LEAF_  =                    3;
19206 +          P_CategoryHR  =                  0.4;
19207 +          P_CategoryDESIGNER  =                    0;
19208 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19209 +          P_CategoryTEACHER  =                    0;
19210 +          P_CategoryADVOCATE  =                    0;
19211 +          P_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
19212 +          P_CategoryHEALTHCARE  =                  0.2;
19213 +          P_CategoryFITNESS  =                    0;
19214 +          P_CategoryOTHER  =                    0;
19215 +          P_CategorySALES  =                    0;
19216 +          P_CategoryCONSULTANT  =                  0.2;
19217 +          P_CategoryDIGITAL_MEDIA  =                    0;
19218 +          Q_CategoryHR  =                  0.4;
19219 +          Q_CategoryDESIGNER  =                    0;
19220 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19221 +          Q_CategoryTEACHER  =                    0;
19222 +          Q_CategoryADVOCATE  =                    0;
19223 +          Q_CategoryBUSINESS_DEVELOPMENT  =                  0.2;
19224 +          Q_CategoryHEALTHCARE  =                  0.2;
19225 +          Q_CategoryFITNESS  =                    0;
19226 +          Q_CategoryOTHER  =                    0;
19227 +          Q_CategorySALES  =                    0;
19228 +          Q_CategoryCONSULTANT  =                  0.2;
19229 +          Q_CategoryDIGITAL_MEDIA  =                    0;
19230 +          V_CategoryHR  =                    0;
19231 +          V_CategoryDESIGNER  =                    0;
19232 +          V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
19233 +          V_CategoryTEACHER  =                    0;
19234 +          V_CategoryADVOCATE  =                    0;
19235 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19236 +          V_CategoryHEALTHCARE  =                    0;
19237 +          V_CategoryFITNESS  =                    0;
19238 +          V_CategoryOTHER  =                  0.5;
19239 +          V_CategorySALES  =                    0;
19240 +          V_CategoryCONSULTANT  =                    0;
19241 +          V_CategoryDIGITAL_MEDIA  =                    0;
19242 +          I_Category  = 'HR' ;
19243 +          U_Category  = 'HR' ;
19244 +          END;
19245 +        ELSE DO;
19246 +          IF  NOT MISSING(TextCluster10_SVD10 ) AND
19247 +            TextCluster10_SVD10  <    -0.07870817493434 THEN DO;
19248 +            _NODE_  =                   18;
19249 +            _LEAF_  =                    4;
19250 +            P_CategoryHR  =                    0;
19251 +            P_CategoryDESIGNER  =                    0;
19252 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19253 +            P_CategoryTEACHER  =                    0;
19254 +            P_CategoryADVOCATE  =                    0;
19255 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19256 +            P_CategoryHEALTHCARE  =                    0;
19257 +            P_CategoryFITNESS  =                    0;
19258 +            P_CategoryOTHER  =                    0;
19259 +            P_CategorySALES  =                    0;
19260 +            P_CategoryCONSULTANT  =                    0;
19261 +            P_CategoryDIGITAL_MEDIA  =                    1;
19262 +            Q_CategoryHR  =                    0;
19263 +            Q_CategoryDESIGNER  =                    0;
19264 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19265 +            Q_CategoryTEACHER  =                    0;
19266 +            Q_CategoryADVOCATE  =                    0;
19267 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19268 +            Q_CategoryHEALTHCARE  =                    0;
19269 +            Q_CategoryFITNESS  =                    0;
19270 +            Q_CategoryOTHER  =                    0;
19271 +            Q_CategorySALES  =                    0;
19272 +            Q_CategoryCONSULTANT  =                    0;
19273 +            Q_CategoryDIGITAL_MEDIA  =                    1;
19274 +            V_CategoryHR  =                    0;
19275 +            V_CategoryDESIGNER  =                    0;
19276 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19277 +            V_CategoryTEACHER  =                    0;
19278 +            V_CategoryADVOCATE  =                    0;
19279 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19280 +            V_CategoryHEALTHCARE  =                    0;
19281 +            V_CategoryFITNESS  =                    0;
19282 +            V_CategoryOTHER  =                    0;
19283 +            V_CategorySALES  =                    0;
19284 +            V_CategoryCONSULTANT  =                    0;
19285 +            V_CategoryDIGITAL_MEDIA  =                    1;
19286 +            I_Category  = 'DIGITAL-MEDIA' ;
19287 +            U_Category  = 'DIGITAL-MEDIA' ;
19288 +            END;
19289 +          ELSE DO;
19290 +            _NODE_  =                   19;
19291 +            _LEAF_  =                    5;
19292 +            P_CategoryHR  =                    0;
19293 +            P_CategoryDESIGNER  =     0.86046511627906;
19294 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19295 +            P_CategoryTEACHER  =                    0;
19296 +            P_CategoryADVOCATE  =                    0;
19297 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19298 +            P_CategoryHEALTHCARE  =                    0;
19299 +            P_CategoryFITNESS  =                    0;
19300 +            P_CategoryOTHER  =     0.02325581395348;
19301 +            P_CategorySALES  =     0.04651162790697;
19302 +            P_CategoryCONSULTANT  =                    0;
19303 +            P_CategoryDIGITAL_MEDIA  =     0.06976744186046;
19304 +            Q_CategoryHR  =                    0;
19305 +            Q_CategoryDESIGNER  =     0.86046511627906;
19306 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19307 +            Q_CategoryTEACHER  =                    0;
19308 +            Q_CategoryADVOCATE  =                    0;
19309 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19310 +            Q_CategoryHEALTHCARE  =                    0;
19311 +            Q_CategoryFITNESS  =                    0;
19312 +            Q_CategoryOTHER  =     0.02325581395348;
19313 +            Q_CategorySALES  =     0.04651162790697;
19314 +            Q_CategoryCONSULTANT  =                    0;
19315 +            Q_CategoryDIGITAL_MEDIA  =     0.06976744186046;
19316 +            V_CategoryHR  =     0.03333333333333;
19317 +            V_CategoryDESIGNER  =     0.66666666666666;
19318 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19319 +            V_CategoryTEACHER  =     0.03333333333333;
19320 +            V_CategoryADVOCATE  =                    0;
19321 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19322 +            V_CategoryHEALTHCARE  =                    0;
19323 +            V_CategoryFITNESS  =     0.03333333333333;
19324 +            V_CategoryOTHER  =                    0;
19325 +            V_CategorySALES  =     0.06666666666666;
19326 +            V_CategoryCONSULTANT  =                    0;
19327 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
19328 +            I_Category  = 'DESIGNER' ;
19329 +            U_Category  = 'DESIGNER' ;
19330 +            END;
19331 +          END;
19332 +        END;
19333 +      ELSE DO;
19334 +        IF  NOT MISSING(TextCluster10_SVD12 ) AND
19335 +          TextCluster10_SVD12  <    -0.12604842708992 THEN DO;
19336 +          IF  NOT MISSING(TextCluster10_SVD6 ) AND
19337 +            TextCluster10_SVD6  <    -0.02385570691405 THEN DO;
19338 +            _NODE_  =                   20;
19339 +            _LEAF_  =                    6;
19340 +            P_CategoryHR  =                    0;
19341 +            P_CategoryDESIGNER  =                 0.25;
19342 +            P_CategoryINFORMATION_TECHNOLOGY  =                0.125;
19343 +            P_CategoryTEACHER  =                    0;
19344 +            P_CategoryADVOCATE  =                0.125;
19345 +            P_CategoryBUSINESS_DEVELOPMENT  =                0.125;
19346 +            P_CategoryHEALTHCARE  =                0.125;
19347 +            P_CategoryFITNESS  =                0.125;
19348 +            P_CategoryOTHER  =                    0;
19349 +            P_CategorySALES  =                    0;
19350 +            P_CategoryCONSULTANT  =                0.125;
19351 +            P_CategoryDIGITAL_MEDIA  =                    0;
19352 +            Q_CategoryHR  =                    0;
19353 +            Q_CategoryDESIGNER  =                 0.25;
19354 +            Q_CategoryINFORMATION_TECHNOLOGY  =                0.125;
19355 +            Q_CategoryTEACHER  =                    0;
19356 +            Q_CategoryADVOCATE  =                0.125;
19357 +            Q_CategoryBUSINESS_DEVELOPMENT  =                0.125;
19358 +            Q_CategoryHEALTHCARE  =                0.125;
19359 +            Q_CategoryFITNESS  =                0.125;
19360 +            Q_CategoryOTHER  =                    0;
19361 +            Q_CategorySALES  =                    0;
19362 +            Q_CategoryCONSULTANT  =                0.125;
19363 +            Q_CategoryDIGITAL_MEDIA  =                    0;
19364 +            V_CategoryHR  =                    0;
19365 +            V_CategoryDESIGNER  =                  0.5;
19366 +            V_CategoryINFORMATION_TECHNOLOGY  =                  0.5;
19367 +            V_CategoryTEACHER  =                    0;
19368 +            V_CategoryADVOCATE  =                    0;
19369 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19370 +            V_CategoryHEALTHCARE  =                    0;
19371 +            V_CategoryFITNESS  =                    0;
19372 +            V_CategoryOTHER  =                    0;
19373 +            V_CategorySALES  =                    0;
19374 +            V_CategoryCONSULTANT  =                    0;
19375 +            V_CategoryDIGITAL_MEDIA  =                    0;
19376 +            I_Category  = 'DESIGNER' ;
19377 +            U_Category  = 'DESIGNER' ;
19378 +            END;
19379 +          ELSE DO;
19380 +            _NODE_  =                   21;
19381 +            _LEAF_  =                    7;
19382 +            P_CategoryHR  =                    0;
19383 +            P_CategoryDESIGNER  =                    0;
19384 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19385 +            P_CategoryTEACHER  =                    0;
19386 +            P_CategoryADVOCATE  =     0.19148936170212;
19387 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19388 +            P_CategoryHEALTHCARE  =                    0;
19389 +            P_CategoryFITNESS  =     0.74468085106382;
19390 +            P_CategoryOTHER  =     0.06382978723404;
19391 +            P_CategorySALES  =                    0;
19392 +            P_CategoryCONSULTANT  =                    0;
19393 +            P_CategoryDIGITAL_MEDIA  =                    0;
19394 +            Q_CategoryHR  =                    0;
19395 +            Q_CategoryDESIGNER  =                    0;
19396 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19397 +            Q_CategoryTEACHER  =                    0;
19398 +            Q_CategoryADVOCATE  =     0.19148936170212;
19399 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19400 +            Q_CategoryHEALTHCARE  =                    0;
19401 +            Q_CategoryFITNESS  =     0.74468085106382;
19402 +            Q_CategoryOTHER  =     0.06382978723404;
19403 +            Q_CategorySALES  =                    0;
19404 +            Q_CategoryCONSULTANT  =                    0;
19405 +            Q_CategoryDIGITAL_MEDIA  =                    0;
19406 +            V_CategoryHR  =                    0;
19407 +            V_CategoryDESIGNER  =                    0;
19408 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19409 +            V_CategoryTEACHER  =                    0;
19410 +            V_CategoryADVOCATE  =                    0;
19411 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19412 +            V_CategoryHEALTHCARE  =     0.05555555555555;
19413 +            V_CategoryFITNESS  =     0.88888888888888;
19414 +            V_CategoryOTHER  =     0.05555555555555;
19415 +            V_CategorySALES  =                    0;
19416 +            V_CategoryCONSULTANT  =                    0;
19417 +            V_CategoryDIGITAL_MEDIA  =                    0;
19418 +            I_Category  = 'FITNESS' ;
19419 +            U_Category  = 'FITNESS' ;
19420 +            END;
19421 +          END;
19422 +        ELSE DO;
19423 +          IF  NOT MISSING(TextCluster10_SVD4 ) AND
19424 +                0.28778989493305 <= TextCluster10_SVD4  THEN DO;
19425 +            _NODE_  =                   23;
19426 +            _LEAF_  =                    9;
19427 +            P_CategoryHR  =                    0;
19428 +            P_CategoryDESIGNER  =     0.16666666666666;
19429 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
19430 +            P_CategoryTEACHER  =     0.66666666666666;
19431 +            P_CategoryADVOCATE  =                    0;
19432 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19433 +            P_CategoryHEALTHCARE  =                    0;
19434 +            P_CategoryFITNESS  =                    0;
19435 +            P_CategoryOTHER  =                    0;
19436 +            P_CategorySALES  =                    0;
19437 +            P_CategoryCONSULTANT  =                    0;
19438 +            P_CategoryDIGITAL_MEDIA  =     0.08333333333333;
19439 +            Q_CategoryHR  =                    0;
19440 +            Q_CategoryDESIGNER  =     0.16666666666666;
19441 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
19442 +            Q_CategoryTEACHER  =     0.66666666666666;
19443 +            Q_CategoryADVOCATE  =                    0;
19444 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19445 +            Q_CategoryHEALTHCARE  =                    0;
19446 +            Q_CategoryFITNESS  =                    0;
19447 +            Q_CategoryOTHER  =                    0;
19448 +            Q_CategorySALES  =                    0;
19449 +            Q_CategoryCONSULTANT  =                    0;
19450 +            Q_CategoryDIGITAL_MEDIA  =     0.08333333333333;
19451 +            V_CategoryHR  =                    0;
19452 +            V_CategoryDESIGNER  =                    0;
19453 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19454 +            V_CategoryTEACHER  =                  0.5;
19455 +            V_CategoryADVOCATE  =                 0.25;
19456 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19457 +            V_CategoryHEALTHCARE  =                    0;
19458 +            V_CategoryFITNESS  =                    0;
19459 +            V_CategoryOTHER  =                 0.25;
19460 +            V_CategorySALES  =                    0;
19461 +            V_CategoryCONSULTANT  =                    0;
19462 +            V_CategoryDIGITAL_MEDIA  =                    0;
19463 +            I_Category  = 'TEACHER' ;
19464 +            U_Category  = 'TEACHER' ;
19465 +            END;
19466 +          ELSE DO;
19467 +            _NODE_  =                   22;
19468 +            _LEAF_  =                    8;
19469 +            P_CategoryHR  =     0.03475935828877;
19470 +            P_CategoryDESIGNER  =     0.02406417112299;
19471 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
19472 +            P_CategoryTEACHER  =      0.0187165775401;
19473 +            P_CategoryADVOCATE  =     0.10427807486631;
19474 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
19475 +            P_CategoryHEALTHCARE  =     0.13368983957219;
19476 +            P_CategoryFITNESS  =     0.04545454545454;
19477 +            P_CategoryOTHER  =     0.14438502673796;
19478 +            P_CategorySALES  =     0.14973262032085;
19479 +            P_CategoryCONSULTANT  =     0.09090909090909;
19480 +            P_CategoryDIGITAL_MEDIA  =     0.07219251336898;
19481 +            Q_CategoryHR  =     0.03475935828877;
19482 +            Q_CategoryDESIGNER  =     0.02406417112299;
19483 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02673796791443;
19484 +            Q_CategoryTEACHER  =      0.0187165775401;
19485 +            Q_CategoryADVOCATE  =     0.10427807486631;
19486 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15508021390374;
19487 +            Q_CategoryHEALTHCARE  =     0.13368983957219;
19488 +            Q_CategoryFITNESS  =     0.04545454545454;
19489 +            Q_CategoryOTHER  =     0.14438502673796;
19490 +            Q_CategorySALES  =     0.14973262032085;
19491 +            Q_CategoryCONSULTANT  =     0.09090909090909;
19492 +            Q_CategoryDIGITAL_MEDIA  =     0.07219251336898;
19493 +            V_CategoryHR  =     0.03896103896103;
19494 +            V_CategoryDESIGNER  =     0.02597402597402;
19495 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02164502164502;
19496 +            V_CategoryTEACHER  =     0.02164502164502;
19497 +            V_CategoryADVOCATE  =     0.12987012987012;
19498 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.15151515151515;
19499 +            V_CategoryHEALTHCARE  =     0.12987012987012;
19500 +            V_CategoryFITNESS  =     0.06493506493506;
19501 +            V_CategoryOTHER  =     0.11255411255411;
19502 +            V_CategorySALES  =     0.13419913419913;
19503 +            V_CategoryCONSULTANT  =      0.1038961038961;
19504 +            V_CategoryDIGITAL_MEDIA  =     0.06493506493506;
19505 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
19506 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
19507 +            END;
19508 +          END;
19509 +        END;
19510 +      END;
19511 +    END;
19512 +  END;
19513 +
19514 +*****  RESIDUALS R_ *************;
19515 +IF  F_Category  NE 'HR'
19516 +AND F_Category  NE 'DESIGNER'
19517 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19518 +AND F_Category  NE 'TEACHER'
19519 +AND F_Category  NE 'ADVOCATE'
19520 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19521 +AND F_Category  NE 'HEALTHCARE'
19522 +AND F_Category  NE 'FITNESS'
19523 +AND F_Category  NE 'OTHER'
19524 +AND F_Category  NE 'SALES'
19525 +AND F_Category  NE 'CONSULTANT'
19526 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19527 +        R_CategoryHR  = .;
19528 +        R_CategoryDESIGNER  = .;
19529 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19530 +        R_CategoryTEACHER  = .;
19531 +        R_CategoryADVOCATE  = .;
19532 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19533 +        R_CategoryHEALTHCARE  = .;
19534 +        R_CategoryFITNESS  = .;
19535 +        R_CategoryOTHER  = .;
19536 +        R_CategorySALES  = .;
19537 +        R_CategoryCONSULTANT  = .;
19538 +        R_CategoryDIGITAL_MEDIA  = .;
19539 + END;
19540 + ELSE DO;
19541 +       R_CategoryHR  =  -P_CategoryHR ;
19542 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19543 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19544 +         ;
19545 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19546 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19547 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19548 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19549 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19550 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19551 +       R_CategorySALES  =  -P_CategorySALES ;
19552 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19553 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19554 +       SELECT( F_Category  );
19555 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19556 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19557 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19558 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19559 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19560 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19561 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19562 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19563 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19564 +          +1;
19565 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19566 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19567 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19568 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19569 +          +1;
19570 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19571 +        R_CategoryDIGITAL_MEDIA  +1;
19572 +       END;
19573 + END;
19574 +
19575 +****************************************************************;
19576 +******          END OF DECISION TREE SCORING CODE         ******;
19577 +****************************************************************;
19578 +
19579 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19580  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE3_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19581  quit;
19582  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
19584  proc sort data=WORK.EM_USER_REPORT;
19585  by ID VIEW;
19586  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19587  *------------------------------------------------------------*;
19588  * Tree3: Computing metadata for TRAIN data;
19589  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
20143  data WORK.MODELTEMP_INFO;
20144  set EMWS3.Tree3_EMINFO;
20145  where DATA='Tree3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20146  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE3_EMINFO.
      WHERE (DATA='Tree3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20147  data EMWS3.Tree3_EMINFO;
20148  length TARGET KEY $32 DATA $43;
20149  input TARGET KEY DATA $;
20150  cards;
 
NOTE: The data set EMWS3.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20154  run;
20155  data EMWS3.Tree3_EMINFO;
20156  set EMWS3.Tree3_EMINFO WORK.MODELTEMP_INFO;
20157  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20158  proc sort data = EMWS3.Tree3_EMINFO NOTHREADS;
20159  by TARGET KEY;
20160  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE3_EMINFO.
NOTE: The data set EMWS3.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20161  proc sort data = EMWS3.TextCluster10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20162  by TARGET KEY;
20163  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20164  proc sort data = EMWS3.Tree3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20165  by TARGET KEY;
20166  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20167  data EMWS3.Tree3_EMINFO;
20168  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20169  by TARGET KEY;
20170  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE3_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20171  proc datasets lib=work nolist;
20172  delete TEMP_INFO SORTEDEMINFO;
20173  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20174  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE3_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS3.TREE3_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:14:05
*------------------------------------------------------------*
20198  data EMWS3.Tree3_EMOUTFIT;
20199  set EMWS3.Tree3_EMOUTFIT;
20200  length TargetLabel $200;
20201  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20202  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20203  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_EMOUTFIT.
NOTE: The data set EMWS3.TREE3_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20204  proc sort data=EMWS3.Tree3_EMREPORTFIT nothreads;
20205  by TARGET;
20206  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE3_EMREPORTFIT.
NOTE: The data set EMWS3.TREE3_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20207  %let _EMwarndup = 0;
20208  %let _EMtargetdup =;
20209  %let _EMASEtargetdup =;
20210  data _null_;
20211  set EMWS3.Tree3_EMOUTFIT;
20212  if .<_ASE_<0.000001 then do;
20213  call symput('_EMwarndup', '1');
20214  call symput('_EMtargetdup', target);
20215  call symput('_EMASEtargetdup', put(_ASE_, best.));
20216  end;
20217  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20218  %let EMEXCEPTIONSTRING=;
20219  *------------------------------------------------------------*;
20220  * REPORT: Tree3;
20221  *------------------------------------------------------------*;
20222  %let EM_ACTION = REPORT;
20223  %let syscc = 0;
20224  %macro main;
20225
20226    %if %upcase(&EM_ACTION) = CREATE %then %do;
20227      filename temp catalog 'sashelp.emmodl.tree_create.source';
20228      %include temp;
20229      filename temp;
20230
20231      %em_tree_create;
20232    %end;
20233
20234     %else
20235     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20236
20237         filename temp catalog 'sashelp.emmodl.tree_train.source';
20238         %include temp;
20239         filename temp;
20240         %em_tree_train;
20241     %end;
20242
20243    %else
20244    %if %upcase(&EM_ACTION) = SCORE %then %do;
20245      filename temp catalog 'sashelp.emmodl.tree_score.source';
20246      %include temp;
20247      filename temp;
20248
20249      %em_tree_score;
20250
20251    %end;
20252
20253    %else
20254    %if %upcase(&EM_ACTION) = REPORT %then %do;
20255
20256         filename temp catalog 'sashelp.emmodl.tree_report.source';
20257         %include temp;
20258         filename temp;
20259
20260         %em_tree_report;
20261     %end;
20262
20263    %else
20264    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20265
20266         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20267         %include temp;
20268         filename temp;
20269         %EM_TREE_OPENTREEVIEWER;
20270
20271     %end;
20272
20273    %else
20274    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20275
20276         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20277         %include temp;
20278         filename temp;
20279         %EM_TREE_CLOSETREEVIEWER;
20280
20281     %end;
20282
20283
20284     %doendm:
20285  %mend main;
20286
20287  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20289 +%macro em_tree_makePlotDs( multipleTar= );
20291 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20292 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20293 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20294 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20296 +  /* determine if validation statistics will be displayed */
20297 +  %let validflag=N;
20298 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20299 +    /* determine if validation data exists */
20300 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20301 +      %let validflag=Y;
20302 +    %end;
20303 +  %end;
20305 +   /* retrieve name of decmeta even in presence of multiple targets */
20306 +   %let decmeta = ;
20307 +   %if &EM_DEC_DECMETA eq %then %do;
20308 +     data _Target;
20309 +       set &em_data_variableset;
20310 +       where ROLE='TARGET' and USE in('D', 'Y');
20311 +       keep NAME;
20312 +     run;
20313 +     proc sort data=_Target;
20314 +       by NAME;
20315 +     run;
20316 +     proc sort data=EM_TARGETDECINFO;
20317 +       by TARGET;
20318 +     run;
20319 +     data _Target;
20320 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20321 +       by NAME;
20322 +       if _a then do;
20323 +         call symput('decmeta', trim(DECMETA));
20324 +       end;
20325 +     run;
20326 +     proc delete data=_Target;run;
20327 +   %end;
20328 +   %else %let decmeta = &EM_DEC_DECMETA;
20331 +  /* retrieve targetEvent from decmeta */
20332 +  %let targetEvent=;
20333 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20334 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20335 +      data _null_;
20336 +       set &DECMETA(where=(_TYPE_="TARGET"));
20337 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20338 +      run;
20339 +    %end;
20340 +  %end;
20342 +  /* retrieve predicted var for targetEvent from decmeta */
20343 +  %let predTarget=;
20344 +  %let predLvl=;
20345 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20346 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20347 +      data _null_;
20348 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20349 +       call symput('predTarget', strip(VARIABLE));
20350 +       call symput('predLvl', strip(LEVEL));
20351 +      run;
20352 +    %end;
20353 +  %end;
20354 +  %else %do;
20355 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20356 +      data _null_;
20357 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20358 +       call symput('predTarget', strip(VARIABLE));
20359 +      run;
20360 +    %end;
20361 +  %end;
20363 +  /* create BelowText value */
20364 +  data belowtext;
20365 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20366 +    keep node belowtext;
20367 +  run;
20369 +  /* replace belowtext with variable label if it exists */
20370 +  data belowtext2;
20371 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20372 +    keep node belowtextlbl;
20373 +  run;
20375 +  proc sort data=belowtext; by node; run;
20376 +  proc sort data=belowtext2; by node; run;
20378 +  data belowtext;
20379 +    merge belowtext belowtext2(in=_a);
20380 +    by node;
20381 +    if _a then belowtext=belowtextlbl;
20382 +    keep node belowtext;
20383 +  run;
20385 +  /* create AboveText value */
20386 +  data abovetext;
20387 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20388 +  run;
20389 +  proc sort data=abovetext; by node numeric_value; run;
20391 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20392 +  data abovetext;
20393 +    set abovetext(rename=(node=parent));
20394 +    by parent numeric_value;
20395 +    retain abovetext tempstring flag branch origval origchar ;
20396 +    length abovetext $256;
20397 +    length tempstring origchar $64;
20399 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20400 +      if first.parent then do;
20401 +        if missing(character_value) then do;
20402 +          numeric_value = round(numeric_value, &sp_precision);
20403 +          abovetext = "< "||strip(NUMERIC_VALUE);
20404 +          branch = 1;
20405 +          origval = numeric_value;
20406 +          output;
20407 +        end;
20408 +        else do;
20409 +          abovetext = "< "||strip(CHARACTER_VALUE);
20410 +          branch = 1;
20411 +          origchar = character_value;
20412 +          output;
20413 +        end;
20415 +        if first.parent AND last.parent then do;
20416 +          if missing(character_value) then do;
20417 +            numeric_value = round(numeric_value, &sp_precision);
20418 +            branch = branch + 1;
20419 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20420 +            output;
20421 +          end;
20422 +          else do;
20423 +            branch = branch + 1;
20424 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20425 +            output;
20426 +          end;
20427 +        end;
20428 +      end;
20429 +      else if last.parent then do;
20430 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20431 +          if missing(character_value) then do;
20432 +            numeric_value = round(numeric_value, &sp_precision);
20433 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20434 +          end;
20435 +          else do;
20436 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20437 +          end;
20438 +          branch = branch + 1;
20439 +          output;
20441 +          if missing(character_value) then do;
20442 +            numeric_value = round(numeric_value, &sp_precision);
20443 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20444 +          end;
20445 +          else do;
20446 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20447 +          end;
20448 +          branch = branch + 1;
20449 +          output;
20450 +        end;
20451 +        else do;
20452 +          if missing(character_value) then do;
20453 +            numeric_value = round(numeric_value, &sp_precision);
20454 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20455 +          end;
20456 +          else do;
20457 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20458 +          end;
20459 +          branch = branch + 1;
20460 +          output;
20461 +        end;
20462 +      end;
20463 +      else do;
20464 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20465 +          if missing(character_value) then do;
20466 +            numeric_value = round(numeric_value,&sp_precision);
20467 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20468 +            origval = numeric_value;
20469 +          end;
20470 +          else do;
20471 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20472 +            origchar = character_value;
20473 +          end;
20474 +          branch = branch + 1;
20475 +          output;
20477 +        end;
20478 +        else do;
20479 +          if missing(character_value) then do;
20480 +            numeric_value = round(numeric_value, &sp_precision);
20481 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20482 +            origval = numeric_value;
20483 +          end;
20484 +          else do;
20485 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20486 +            origval = character_value;
20487 +          end;
20488 +          branch = branch + 1;
20489 +          output;
20490 +        end;
20491 +      end;
20492 +    end;
20493 +    else do;
20494 +       if first.numeric_value then do;
20495 +         flag = 0;
20496 +         abovetext = strip(CHARACTER_VALUE);
20497 +         branch = numeric_value;
20498 +         if first.numeric_value AND last.numeric_value then do;
20499 +           output;
20500 +         end;
20501 +       end;
20502 +       else if last.numeric_value then do;
20503 +         if flag=0 then do;
20504 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20505 +           length = length(strip(tempstring));
20506 +           if length < 32 then do;
20507 +             abovetext = strip(tempstring);
20508 +           end;
20509 +           else do;
20510 +             abovetext = strip(abovetext)||", ...";
20511 +             flag = 1;
20512 +           end;
20513 +         end;
20514 +         branch = numeric_value;
20515 +         output;
20516 +       end;
20517 +       else do;
20518 +         if flag=0 then do;
20519 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20520 +           length = length(strip(tempstring));
20521 +           if length < 32 then do;
20522 +             abovetext = strip(tempstring);
20523 +           end;
20524 +           else do;
20525 +             abovetext = strip(abovetext)||", ...";
20526 +             flag=1;
20527 +           end;
20528 +         end;
20529 +         branch = numeric_value;
20530 +       end;
20531 +    end;
20532 +    keep parent branch abovetext;
20533 +  run;
20535 +  /* Missing value to abovetext */
20536 +  data tempmissing;
20537 +    set &EM_USER_OUTRULES;
20538 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20539 +    rename node=parent numeric_value=branch character_value=misschar;
20540 +  run;
20543 +  proc sort data=abovetext; by parent branch; run;
20544 +  proc sort data=tempmissing; by parent branch; run;
20545 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20547 +  data tempoutnodes;
20548 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20549 +    by parent branch;
20550 +    length traintotal validtotal 8;
20551 +    retain traintotal validtotal;
20553 +    if _a then do;
20554 +      if ^MISSING(abovetext) then do;
20555 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20556 +      end;
20557 +      else do;
20558 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20559 +      end;
20560 +    end;
20561 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20563 +    if node=1 then do;
20564 +      traintotal = N;
20565 +      validtotal=VN;
20566 +    end;
20568 +    drop role rank stat misschar belowtext;
20569 +  run;
20570 +  proc sort data=tempoutnodes; by node; run;
20571 +  proc sort data=belowtext; by node; run;
20573 +  data tempoutnodes;
20574 +    merge tempoutnodes belowtext;
20575 +    by node;
20577 +  run;
20579 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20580 +  %let adjusted = N;
20581 +  %let npriors = 0;
20582 +  data _null_ ;
20583 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20584 +    if eof then do ;
20585 +      call symput("npriors" , strip(put(_N_,best.))) ;
20586 +    end;
20587 +  run;
20588 +  %if &npriors gt 0 %then %let adjusted=Y;
20591 +  /* create a table with targetUsed and targetLevel columns for each node */
20592 +  data temptarmeta;
20593 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20594 +    %if &multipleTar eq N %then %do;
20595 +      AND USE in ('D', 'Y')
20596 +    %end;
20597 +    ));
20598 +    length TARGET $32;
20599 +    Target=name;
20600 +    keep target level;
20601 +  run;
20603 +  %if &multipleTar eq Y %then %do;
20604 +    data temptargetused;
20605 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20606 +      keep node target;
20607 +    run;
20608 +    proc sort data=temptargetused; by target; run;
20609 +    proc sort data=temptarmeta; by target; run;
20610 +    data temptargetused;
20611 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20612 +      by target;
20613 +      if _a and _b;
20614 +    run;
20615 +  %end;
20616 +  %else %do;
20617 +    data temptargetused;
20618 +      set &EM_USER_OUTSTATS;
20619 +      length target $32 tarlevel $10;
20620 +      target="%EM_TARGET";
20621 +      tarlevel="%EM_TARGET_LEVEL";
20622 +      keep node target tarlevel;
20623 +    run;
20624 +    proc sort data=temptargetused nodupkey; by node; run;
20625 +  %end;
20627 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20628 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20629 +  proc sort data=temptargetused; by node; run;
20632 +  /* create tables for all interval targets as well as all class targets */
20633 +  data tempinterval tempclass;
20634 +    merge tempoutstats temptargetused( rename=(target=targetused));
20635 +    by node;
20636 +    %if "&multipleTar" eq "Y" %then %do;
20637 +      if ((missing(Target)) OR (target=targetused ));
20638 +    %end;
20640 +    if tarlevel="INTERVAL" then output tempinterval;
20641 +    else output tempclass;
20642 +  run;
20644 +  /* initialize intTarget and classTarget flags */
20645 +  %let em_intNobs =0;
20646 +  %let em_classNobs = 0;
20647 +  %let em_intTarget= N;
20648 +  %let em_classTarget= N;
20650 +  proc sql;
20651 +    reset noprint;
20652 +    select count(*) into :em_intNobs from tempinterval;
20653 +  quit;
20654 +  proc sql;
20655 +    reset noprint;
20656 +    select count(*) into :em_classNobs from tempclass;
20657 +  quit;
20659 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20660 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20662 +  /* retrieve all information for interval targets */
20663 +  %if &em_intTarget eq Y %then %do;
20665 +    /* determine if leaf variable exists */
20666 +    %let dsid=%sysfunc(open(tempinterval,i));
20667 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20668 +    %let rc=%sysfunc(close(&dsid));
20670 +    proc transpose data=tempinterval
20671 +      %if &leafexists %then %do;
20672 +        (drop=leaf)
20673 +      %end;
20674 +      %if &validexist %then %do;
20675 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20676 +      %end;
20677 +      %else %do;
20678 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20679 +      %end;
20680 +      by node;
20681 +      id statname;
20682 +    run;
20683 +    data tempinterval;
20684 +      set tempinterval;
20685 +      if missing(N) then delete;
20686 +    run;
20687 +  %end;
20689 +  /* retrieve all information for class targets */
20690 +  %if &em_classTarget eq Y %then %do;
20691 +    proc sort data=tempclass; by node category; run;
20692 +    %if &validflag eq N %then %do;
20693 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20694 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20695 +    %end;
20696 +    %else %do;
20697 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20698 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20699 +    %end;
20700 +      set tempclass;
20702 +      %if &validflag eq N %then %do;
20703 +        %if "&adjusted" eq "N" %then %do;
20704 +          if statname="N" then output tempn;
20705 +        %end;
20706 +        %else %do;
20707 +          if statname="NPRIORS" then output tempn;
20708 +        %end;
20709 +        else if statname="PREDICTION" then output temppredict;
20710 +        else if statname="PROBABILITY" then output tempprob;
20711 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20712 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20713 +      %end;
20714 +      %else %do;
20715 +        %if "&adjusted" eq "N" %then %do;
20716 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20717 +        %end;
20718 +        %else %do;
20719 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20720 +        %end;
20721 +        else if statname="PREDICTION" then output temppredict;
20722 +        else if statname="PROBABILITY" then output tempprob;
20723 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20724 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20725 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20726 +      %end;
20727 +    run;
20730 +    /* determine if profit/loss exists in tempprofit */
20731 +    %let em_profitflag=0;
20732 +    %let em_lossflag=0;
20733 +    proc sql;
20734 +      reset noprint;
20735 +      select count(*) into :em_profitflag from tempprofit;
20736 +    quit;
20737 +    proc sql;
20738 +      reset noprint;
20739 +      select count(*) into :em_lossflag from temploss;
20740 +    quit;
20742 +    %if &validFlag eq Y %then %do;
20743 +      proc transpose data=tempn
20744 +        %if "&adjusted" eq "N" %then %do;
20745 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20746 +        %end;
20747 +        %else %do;
20748 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20749 +        %end;
20750 +        by node;
20751 +        id statname;
20752 +      run;
20753 +      %if &em_profitflag ne 0 %then %do;
20754 +        proc transpose data=tempprofit out=tempprofit;
20755 +          by node category;
20756 +          id statname ;
20757 +        run;
20758 +      %end;
20759 +      %if &em_lossflag ne 0 %then %do;
20760 +        proc transpose data=temploss out=temploss;
20761 +          by node category;
20762 +          id statname ;
20763 +        run;
20764 +      %end;
20765 +      data tempprob;
20766 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20767 +        by node
20768 +        %if &multipleTar eq Y %then %do;
20769 +          target
20770 +        %end;
20771 +        category;
20772 +      run;
20773 +    %end;
20775 +    /* store percentcorrect value */
20776 +    data temppredict;
20777 +      merge tempprob temppredict(in=_a);
20778 +      by node category;
20779 +      if _a then do;
20780 +        percentCorrect = statvalue;
20781 +        %if &validFlag eq Y %then %do;
20782 +          vpercentCorrect= vstatvalue;
20783 +        %end;
20784 +      end;
20785 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20786 +      %if &validFlag eq Y %then %do;
20787 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20788 +      %end;
20789 +      ;
20790 +      if missing(percentCorrect) then delete;
20791 +      drop target;
20792 +    run;
20794 +    /* build profittext */
20795 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20796 +      data tempprofittext(keep= node profittext profitloss);
20797 +        length profittext $800 profitloss 8.;
20798 +        retain profittext profitloss;
20800 +        merge tempprob
20801 +        %if &em_profitflag ne 0 %then %do;
20802 +          tempprofit
20803 +        %end;
20804 +        %else %if &em_lossflag ne 0 %then %do;
20805 +          temploss
20806 +        %end;
20807 +        ;
20808 +        by node category;
20810 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20811 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20812 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20813 +          %let profittype = ALL;
20814 +        %end;
20816 +        /* create the profitloss variable for nodecolor if selected */
20817 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20819 +        %if "&profittype" eq "ALL" %then %do;
20820 +          if strip(CATEGORY)="&targetEvent" then do;
20821 +            profitloss=statvalue;
20822 +          end;
20823 +          if first.node then do;
20824 +            %if &validFlag eq N %then %do;
20825 +             %if &em_profitflag ne 0 %then %do;
20826 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20827 +             %end;
20828 +             %if &em_lossflag ne 0 %then %do;
20829 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20830 +             %end;
20831 +            %end;
20832 +            %else %do;
20833 +             %if &em_profitflag ne 0 %then %do;
20834 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20834!+;
20835 +             %end;
20836 +             %if &em_lossflag ne 0 %then %do;
20837 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20838 +             %end;
20839 +            %end;
20840 +          end;
20841 +          else if last.node then do;
20842 +            %if &validFlag eq N %then %do;
20843 +             %if &em_profitflag ne 0 %then %do;
20844 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20845 +             %end;
20846 +             %if &em_lossflag ne 0 %then %do;
20847 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20848 +             %end;
20849 +             /*if CATEGORY="&targetEvent" then do;
20850 +               profitloss=statvalue;
20851 +             end;*/
20852 +            %end;
20853 +            %else %do;
20854 +             %if &em_profitflag ne 0 %then %do;
20855 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20855!+14.&EM_PROPERTY_SPLITPRECISION);
20856 +                if CATEGORY="&targetEvent" then do;
20857 +                 profitloss=ALTERNATIVE_PROFIT;
20858 +                end;
20859 +             %end;
20860 +             %if &em_lossflag ne 0 %then %do;
20861 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20861!+14.&EM_PROPERTY_SPLITPRECISION);
20862 +                if CATEGORY="&targetEvent" then do;
20863 +                  profitloss=ALTERNATIVE_LOSS;
20864 +                end;
20865 +             %end;
20866 +            %end;
20867 +            output;
20868 +          end;
20869 +          else do;
20870 +            %if &validFlag eq N %then %do;
20871 +             %if &em_profitflag ne 0 %then %do;
20872 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20873 +             %end;
20874 +             %if &em_lossflag ne 0 %then %do;
20875 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20876 +             %end;
20877 +            %end;
20878 +            %else %do;
20879 +             %if &em_profitflag ne 0 %then %do;
20880 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20880!+14.&EM_PROPERTY_SPLITPRECISION);
20881 +             %end;
20882 +             %if &em_lossflag ne 0 %then %do;
20883 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20883!+14.&EM_PROPERTY_SPLITPRECISION);
20884 +             %end;
20885 +            %end;
20886 +          end;
20887 +        %end;
20888 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20889 +          if strip(CATEGORY) = "&targetevent" then do;
20890 +            %if &validFlag eq N %then %do;
20891 +             %if &em_profitflag ne 0 %then %do;
20892 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20893 +             %end;
20894 +             %if &em_lossflag ne 0 %then %do;
20895 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20896 +             %end;
20897 +             profitloss=statvalue;
20898 +            %end;
20899 +            %else %do;
20900 +             %if &em_profitflag ne 0 %then %do;
20901 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20901!+;
20902 +                profitloss=ALTERNATIVE_PROFIT;
20903 +             %end;
20904 +             %if &em_lossflag ne 0 %then %do;
20905 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20906 +                profitloss=ALTERNATIVE_LOSS;
20907 +             %end;
20908 +            %end;
20909 +            output;
20910 +          end;
20911 +        %end;
20912 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
20913 +          if strip(CATEGORY) = "&targetevent" then do;
20914 +            %if &validFlag eq N %then %do;
20915 +             profitloss=statvalue;
20916 +            %end;
20917 +            %else %do;
20918 +             %if &em_profitflag ne 0 %then %do;
20919 +                profitloss=ALTERNATIVE_PROFIT;
20920 +             %end;
20921 +             %if &em_lossflag ne 0 %then %do;
20922 +                profitloss=ALTERNATIVE_LOSS;
20923 +             %end;
20924 +            %end;
20925 +            output;
20926 +          end;
20927 +        %end;
20928 +      run;
20929 +    %end;
20931 +    data tempprob(keep= node probtext);
20932 +      length probtext $800;
20933 +      retain probtext;
20934 +      set tempprob ;
20935 +      by node;
20937 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20938 +      %let probtype = &EM_PROPERTY_TARGET;
20939 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
20940 +        %let probtype = ALL;
20941 +      %end;
20943 +      %if "&probtype" eq "ALL" %then %do;
20944 +        if first.node then do;
20945 +          %if &validFlag eq N %then %do;
20946 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20947 +          %end;
20948 +          %else %do;
20949 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20950 +          %end;
20951 +        end;
20952 +        else if last.node then do;
20953 +          %if &validFlag eq N %then %do;
20954 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20955 +          %end;
20956 +          %else %do;
20957 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20958 +          %end;
20959 +          output;
20960 +        end;
20961 +        else do;
20962 +          %if &validFlag eq N %then %do;
20963 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20964 +          %end;
20965 +          %else %do;
20966 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20967 +          %end;
20968 +        end;
20969 +      %end;
20970 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20971 +        if strip(CATEGORY) = "&targetevent" then do;
20972 +          %if &validFlag eq N %then %do;
20973 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20974 +          %end;
20975 +          %else %do;
20976 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20977 +          %end;
20978 +          output;
20979 +        end;
20980 +      %end;
20981 +      %else %if "&probtype" eq "NONE" %then %do;
20982 +        if last.node then do;
20983 +          output;
20984 +        end;
20985 +      %end;
20986 +    run;
20987 +  %end;
20989 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
20991 +  %let oldexists=0;
20992 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
20993 +     data old_tree_plot;
20994 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
20995 +        rename nodecolor=oldnodecolor;
20996 +     run;
20998 +     proc sort data=old_tree_plot;
20999 +        by node;
21000 +     run;
21002 +     %let oldexists=1;
21003 +  %end;
21005 +  data &EM_USER_TREE_PLOT;
21006 +    length textall $800;
21007 +    merge tempoutnodes temptargetused
21009 +    %if &em_intTarget eq Y %then %do;
21010 +      tempinterval
21011 +    %end;
21013 +    %if &em_classTarget eq Y %then %do;
21015 +      %if &validFlag eq N %then %do;
21016 +        tempn(rename=(statvalue=N))
21017 +      %end;
21018 +      %else %do;
21019 +        tempn
21020 +      %end;
21022 +      temppredict tempprob
21024 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21025 +        tempprofittext
21026 +      %end;
21027 +    %end;
21028 +    ;
21029 +    by node;
21031 +    /* build nodetext based on user selection */
21032 +    textall="";
21034 +    %if &em_intTarget eq Y %then %do;
21035 +    if tarlevel="INTERVAL" then do;
21036 +      /* Nodeid */
21037 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21038 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21039 +      %end;
21041 +      /* Target identifier if multiple targets are used */
21042 +      %if "&multipleTar" eq "Y" %then %do;
21043 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21044 +      %end;
21046 +      %if &validFlag eq Y %then %do;
21047 +         /* Column labels displayed in validflag eq Y only */
21048 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21049 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21049!+noquote ))";
21050 +         %end;
21052 +         /* Average values */
21053 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21054 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21055 +         %end;
21057 +         /* RASE */
21058 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21059 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21060 +         %end;
21062 +         /* Count */
21063 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21064 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21065 +         %end;
21066 +      %end;
21067 +      %else %do;
21068 +         /* Average values */
21069 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21070 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21071 +         %end;
21073 +         /* RASE */
21074 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21075 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21076 +         %end;
21078 +         /* Count */
21079 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21080 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21081 +         %end;
21082 +      %end;
21084 +      /* nodecolor */
21085 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21086 +        nodecolor=PREDICTION;
21087 +      %end;
21088 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21089 +        nodecolor=RASE;
21090 +      %end;
21091 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21092 +        nodecolor=1;
21093 +      %end;
21095 +    end;
21096 +    %end;
21097 +    %if &em_classTarget eq Y %then %do;
21098 +    if tarlevel^="INTERVAL" then  do;
21100 +      /* Nodeid */
21101 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21102 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21103 +      %end;
21104 +      /* Target identifier if multiple targets are used */
21105 +      %if "&multipleTar" eq "Y" %then %do;
21106 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21107 +      %end;
21109 +      /* Predicted values */
21110 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21111 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21112 +      %end;
21114 +      /* Column labels displayed in validflag eq Y only */
21115 +      %if "&ValidFlag" eq "Y" %then %do;
21116 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21117 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21117!+noquote ))";
21118 +        %end;
21119 +      %end;
21121 +      /* Target Values */
21122 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21123 +        textall=strip(textall)||"0A"x||strip(probtext);
21124 +      %end;
21126 +      /* include profit or loss for all target levels */
21127 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21128 +        textall=strip(textall)||"0A"x||strip(profittext);
21129 +      %end;
21131 +      %if &validFlag eq N %then %do;
21132 +        /* Percent Correct */
21133 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21134 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21135 +        %end;
21137 +         /* Count */
21138 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21139 +          %if "&adjusted" eq "N" %then %do;
21140 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21141 +          %end;
21142 +          %else %do;
21143 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21144 +          %end;
21145 +         %end;
21146 +      %end;
21147 +      %else %do;
21148 +        /* Percent Correct */
21149 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21150 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21151 +        %end;
21153 +         /* Count */
21154 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21155 +          %if "&adjusted" eq "N" %then %do;
21156 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21157 +          %end;
21158 +          %else %do;
21159 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21160 +          %end;
21161 +         %end;
21162 +      %end;
21164 +      /* nodecolor */
21165 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21166 +       %if &multipleTar ne Y %then %do;
21167 +        nodecolor=&predTarget;
21168 +       %end;
21169 +       %else %do;
21170 +         nodecolor=percentcorrect;
21171 +       %end;
21172 +      %end;
21173 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21174 +        nodecolor=percentcorrect;
21175 +      %end;
21176 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21177 +        nodecolor=1;
21178 +      %end;
21179 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21180 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21181 +          nodecolor=percentcorrect;
21182 +        %end;
21183 +        %else %do;
21184 +          nodecolor=profitloss;
21185 +        %end;
21186 +      %end;
21188 +    end;
21189 +    %end;
21190 +    %if &em_intTarget eq Y %then %do;
21191 +     drop  PREDICTION  TARGET TARLEVEL
21192 +     %if &ValidFlag eq Y %then %do;
21193 +         VPREDICTION
21194 +     %end;
21195 +     ;
21196 +    %end;
21197 +    %if &em_classTarget eq Y %then %do;
21198 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21199 +     %if &ValidFlag eq Y %then %do;
21200 +         VSTATVALUE
21201 +     %end;
21202 +     ;
21203 +    %end;
21205 +  run;
21207 +  /* add leaf index information to plotds - based on primary target only*/
21208 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21209 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21210 +      set &EM_USER_OUTSTATS;
21211 +      if ((statname="PROBABILITY"
21212 +      %if &validexist %then %do;
21213 +       or statname="VALID: PROBABILITY"
21214 +      %end;
21215 +      ) AND (CATEGORY="&TARGETEVENT")
21216 +      %if "&multipleTar" eq "Y" %then %do;
21217 +        AND (Target="%EM_TARGET")
21218 +      %end;
21219 +      );
21220 +    run;
21222 +    %if &validexist %then %do;
21223 +      proc sort data=tempprob; by node; run;
21224 +      %let vpredTarget = V%substr(&predTarget, 2);
21225 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21226 +         by node;
21227 +         id statname;
21228 +      run;
21229 +    %end;
21230 +  %end;
21231 +  %else %do;
21232 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21233 +      set &EM_USER_OUTSTATS;
21234 +      if ((statname="PREDICTION"
21235 +      %if &validexist %then %do;
21236 +       or statname="VALID: PREDICTION"
21237 +      %end;
21238 +      )
21239 +      %if "&multipleTar" eq "Y" %then %do;
21240 +        AND (Target="%EM_TARGET")
21241 +      %end;
21242 +      );
21243 +    run;
21244 +    %if &validexist %then %do;
21245 +      proc sort data=tempprob; by node; run;
21246 +      %let vpredTarget = V%substr(&predTarget, 2);
21247 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21248 +         by node;
21249 +         id statname;
21250 +      run;
21251 +    %end;
21252 +  %end;
21254 +  proc sort data=tempprob; by node; run;
21255 +  data tempoutnodes;
21256 +    merge tempoutnodes tempprob;
21257 +    by node;
21258 +  run;
21260 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21261 +  data tempnodes;
21262 +    retain traintotal validtotal;
21263 +    set tempnodes(where=(leaf ne . ));
21264 +    tprob=round(&predTarget, .01);
21265 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21266 +      percevent_train=round(tprob*100, .01);
21267 +    %end;
21268 +    %else %do;
21269 +      percevent_train=tprob;
21270 +    %end;
21272 +    perc_train=round((n/traintotal)*100, 0.01);
21273 +    /* leafwidth already has a *10 multiplier */
21274 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21276 +    %if &validexist %then %do;
21277 +      %let vpredTarget = V%substr(&predTarget,2);
21278 +      vprob=round(&vpredTarget, .01);
21279 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21280 +        percevent_valid=round(vprob*100, .01);
21281 +      %end;
21282 +      %else %do;
21283 +        percevent_valid=vprob;
21284 +      %end;
21285 +      perc_valid=round((vn/validtotal)*100, .01);
21286 +    %end;
21288 +    index=_N_;
21289 +    keep node index tprob perc_train percevent_train
21290 +    %if &validexist %then %do;
21291 +        vprob percevent_valid perc_valid
21292 +    %end;
21293 +    ;
21294 +  run;
21295 +  proc sort data=tempnodes; by node; run;
21296 +  data &EM_USER_TREE_PLOT;
21297 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21298 +    by node;
21299 +    if missing(node) then delete;
21300 +    %if &oldexists %then %do;
21301 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21302 +      drop oldnodecolor;
21303 +    %end;
21304 +    abovetext = compbl(abovetext);
21306 +    /* add variable labels */
21307 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21308 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21309 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21310 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21311 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21312 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21314 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21315 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21316 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21317 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21318 +          %end;
21319 +          %else %do;
21320 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21321 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21322 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21323 +          %end;
21324 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21326 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21327 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21328 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21329 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21330 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21331 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21332 +          %end;
21333 +          %else %do;
21334 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21335 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21336 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21337 +          %end;
21338 +    ;
21339 +  run;
21341 +  /* delete temporary tables */
21342 +  proc datasets lib=work nolist;
21343 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21344 +  run;
21346 +%mend em_tree_makePlotDs;
21350 +%macro em_tree_report;
21352 +   /* report properties */
21353 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21354 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21355 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21356 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21357 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21358 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21359 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21360 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21361 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21362 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21363 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21364 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21365 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21367 +   %let validexist=0;
21368 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21369 +     %let validexist=1;
21370 +   %end;
21372 +   /* determine if multiple targets will be processed */
21373 +   %let em_tree_multipleTargets=N;
21374 +   %let em_tree_numTarget=1;
21375 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21376 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21377 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21378 +         %let em_tree_multipleTargets=N;
21379 +      %end;
21380 +      %else %do;
21381 +        data _null_;
21382 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21383 +          if eof then
21384 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21385 +        run;
21387 +        %if &em_tree_numTarget gt 1 %then %do;
21388 +           %let em_tree_multipleTargets=Y;
21389 +        %end;
21390 +     %end;
21391 +   %end;
21393 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21395 +   /* variable importance */
21396 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21397 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21399 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21400 +     /* and the columns may not be generated                                                                                 */
21401 +     %let em_tree_cvexists=;
21402 +     %let em_tree_surrexists=.;
21403 +     data _null_;
21404 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21405 +       if eof then do ;
21406 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21407 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21408 +       end;
21409 +     run;
21411 +     data &EM_USER_OUTIMPORT;
21412 +         set &EM_USER_OUTIMPORT;
21413 +         /* format columns based on Precison value specified */
21414 +         format importance 15.&EM_PROPERTY_PRECISION
21415 +              %if &validexist %then %do;
21416 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21417 +              %end;
21418 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21419 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21420 +              %end;
21421 +         ;
21422 +     run;
21424 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21425 +     proc print data=&EM_USER_OUTIMPORT
21426 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21427 +          (where=((nrules>0) OR (nsurrogates>0)))
21428 +        %end;
21429 +        %else %do;
21430 +           (where=(nrules>0))
21431 +        %end;
21432 +        label noobs
21433 +        ;
21434 +     run;
21435 +     title10;
21437 +   %end;
21439 +   /* Sequence */
21440 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21441 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21442 +   data _null_ ;
21443 +      set &EM_USER_outseq (obs=2) end=eof ;
21444 +      if eof then do ;
21445 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21446 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21447 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21448 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21449 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21450 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21451 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21452 +      end;
21453 +    run;
21455 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21456 +      data &EM_USER_OUTSEQ;
21457 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21458 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21459 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21460 +           _XMISC_=_VMISC_
21461 +        %end;
21462 +        %if "&em_tree_aprof" ne "."  %then %do;
21463 +           _XAPROF_=_VAPROF_
21464 +           _XPROF_ = _VPROF_
21465 +        %end;
21466 +        %if "&em_tree_aloss" ne "."  %then %do;
21467 +           _XALOSS_=_VALOSS_
21468 +        %end;
21469 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21470 +           _XPASE_ = _VPASE_
21471 +           _XPMISC_ = _VPMISC_
21472 +        %end;
21474 +        ));
21475 +     %end;
21476 +     %else %do;
21477 +        set &EM_USER_OUTSEQ;
21478 +     %end;
21480 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21481 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21482 +            _MISC_   15.&EM_PROPERTY_PRECISION
21483 +         %end;
21484 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21485 +            _PASE_  15.&EM_PROPERTY_PRECISION
21486 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21487 +         %end;
21488 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21489 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21490 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21491 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21492 +            %end;
21493 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21494 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21495 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21496 +            %end;
21497 +         %end;
21498 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21499 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21500 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21501 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21502 +            %end;
21503 +         %end;
21504 +         %if "&em_tree_seq" ne "." %then %do;
21505 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21506 +         %end;
21507 +         %if "&em_tree_vseq" ne "." %then %do;
21508 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21509 +         %end;
21510 +         %if "&em_tree_aprof" ne "." %then %do;
21511 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21512 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21513 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21514 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21515 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21516 +           %end;
21517 +         %end;
21518 +         %else %if "&em_tree_aloss" ne "." %then %do;
21519 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21520 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21521 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21522 +           %end;
21523 +         %end;
21524 +      ;
21525 +    run;
21526 +   %end;
21528 +   /* Observation Based Importance */
21529 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21531 +      /* need to check for 0 obs */
21532 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21533 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21534 +      %let rc=%sysfunc(close(&dsid));
21536 +      %if &onobs %then %do;
21537 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21538 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21540 +         data &EM_USER_OUTOBSIMP;
21541 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21542 +           if _a;
21543 +           by _INPUT1_;
21544 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21545 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21546 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21547 +                   %end;
21548 +                   ;
21549 +         run;
21550 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21551 +      %end;
21552 +   %end;
21554 +  %end;
21556 +  /* create dataset to support tree diagram and icicle plot */
21557 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21558 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21560 +  /* display tree diagram */
21561 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21562 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21564 +  /* display icicle diagram */
21565 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21566 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21568 +  /* Leaf Statistics Plot */
21569 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21571 +  /* print leaf information to output window */
21572 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21574 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21575 +       by descending N;
21576 +     run;
21578 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21579 +     %local vn;
21580 +     data _null_;
21581 +       set t (obs=2) end=eof;
21582 +       if eof then do;
21583 +         call symput("vn", strip(put(vn, best.)));
21584 +       end;
21585 +     run;
21587 +     data t;
21588 +       set t;
21589 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21590 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21591 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21592 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21593 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21594 +       %end;
21595 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21596 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21597 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21598 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21599 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21600 +          %end;
21601 +       %end;
21602 +       ;
21603 +     run;
21605 +     /* determine if rase is found in t */
21606 +    %let dsid=%sysfunc(open(t,i));
21607 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21608 +    %let rc=%sysfunc(close(&dsid));
21610 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21611 +     proc print data=t noobs label;
21612 +       where tprob ne .;
21613 +       var node depth N tprob
21614 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21615 +         %if "&vn" ne "." %then %do;
21616 +           VN
21617 +         %end;
21618 +         vprob
21619 +       %end;
21620 +       %if &raseexists %then %do;
21621 +            RASE
21622 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21623 +              VRASE
21624 +            %end;
21625 +       %end;
21626 +       ;
21627 +     run;
21628 +     title10;
21629 +  %end;
21631 +  /* create plots that are done during training of node */
21632 +  /* display iterative plot, including reference line */
21633 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21634 +   /* %if &nleaves eq  %then %do; */
21635 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21636 +      data _null_;
21637 +        set &EM_USER_OUTTOPOLOGY end=eof;
21638 +        if eof then do;
21639 +          call symput('nleaves', LEAF);
21640 +        end;
21641 +      run;
21642 +   /* %end; */
21644 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21645 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21646 +  %end;
21648 +  /* display leaf statistics */
21649 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21651 +  /* stats by node if multiple targets = Y */
21652 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21653 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21654 +    data &EM_USER_OUTSTATS;
21655 +      set &EM_USER_OUTSTATS;
21657 +     * if STATNAME="TARGET" then delete;
21658 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21659 +      drop leaf;
21660 +    run;
21661 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21663 +  %end;
21664 +  %else %do;
21665 +    /* add outstats and outdescribe to spk but not results */
21666 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21667 +  %end;
21669 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE3_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set EMWS3.TREE3_OUTIMPORT.
NOTE: The data set EMWS3.TREE3_OUTIMPORT has 42 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE3_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE3_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE3_OUTSEQ.
NOTE: The data set EMWS3.TREE3_OUTSEQ has 12 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set EMWS3.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set EMWS3.TREE3_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 9 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 18 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 234 observations read from the data set EMWS3.TREE3_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 18 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set EMWS3.TREE3_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 9 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 9 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE3_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE3_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set EMWS3.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 513 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 494 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 19 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set EMWS3.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 513 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 19 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 513 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 513 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 513 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 38 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 19 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 228 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 228 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 19 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 228 observations read from the data set WORK.TEMPPROB.
NOTE: There were 228 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 228 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 228 observations read from the data set WORK.TEMPPROB.
NOTE: There were 19 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 228 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 19 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 19 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 19 observations read from the data set WORK.TEMPN.
NOTE: There were 19 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 19 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE3_TREE_PLOT has 19 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 513 observations read from the data set EMWS3.TREE3_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 38 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 38 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 19 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 19 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 19 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 19 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 10 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 19 observations read from the data set EMWS3.TREE3_TREE_PLOT.
NOTE: There were 10 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE3_TREE_PLOT has 19 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set EMWS3.TREE3_TREE_PLOT.
NOTE: The data set WORK.T has 19 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 19 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 19 observations read from the data set EMWS3.TREE3_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
21670
21671  *------------------------------------------------------------*;
21672  * End REPORT: Tree3;
21673  *------------------------------------------------------------*;
 
21674  /* Reset EM Options */
21675  options formchar="|----|+|---+=|-/\<>*";
21676  options nocenter ls=256 ps=10000;
21677  goptions reset=all device=GIF NODISPLAY;
 
21678  proc sort data=WORK.EM_USER_REPORT;
21679  by ID VIEW;
21680  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21681  proc sort data=EMWS3.TextCluster10_CMeta_TRAIN out=WORK.SUBSETINMETA;
21682  by NAME;
21683  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TEXTCLUSTER10_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 54 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21684  proc sort data=EMWS3.Tree3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21685  by NAME;
21686  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TREE3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21687  data WORK.ASSESS_META;
21688  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21689  by NAME;
21690  run;
 
NOTE: There were 54 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 54 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 54 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21691  data EM_temp_assessMeta;
21692  set EMWS3.Tree3_CMeta_TRAIN;
21693  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21694  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21695  data EM_temp_assessdata;
21696  set EMWS3.Tree3_TRAIN(keep=
21697  F_Category
21698  I_Category
21699  P_CategoryADVOCATE
21700  P_CategoryBUSINESS_DEVELOPMENT
21701  P_CategoryCONSULTANT
21702  P_CategoryDESIGNER
21703  P_CategoryDIGITAL_MEDIA
21704  P_CategoryFITNESS
21705  P_CategoryHEALTHCARE
21706  P_CategoryHR
21707  P_CategoryINFORMATION_TECHNOLOGY
21708  P_CategoryOTHER
21709  P_CategorySALES
21710  P_CategoryTEACHER
21711  Q_CategoryADVOCATE
21712  Q_CategoryBUSINESS_DEVELOPMENT
21713  Q_CategoryCONSULTANT
21714  Q_CategoryDESIGNER
21715  Q_CategoryDIGITAL_MEDIA
21716  Q_CategoryFITNESS
21717  Q_CategoryHEALTHCARE
21718  Q_CategoryHR
21719  Q_CategoryINFORMATION_TECHNOLOGY
21720  Q_CategoryOTHER
21721  Q_CategorySALES
21722  Q_CategoryTEACHER
21723  R_CategoryADVOCATE
21724  R_CategoryBUSINESS_DEVELOPMENT
21725  R_CategoryCONSULTANT
21726  R_CategoryDESIGNER
21727  R_CategoryDIGITAL_MEDIA
21728  R_CategoryFITNESS
21729  R_CategoryHEALTHCARE
21730  R_CategoryHR
21731  R_CategoryINFORMATION_TECHNOLOGY
21732  R_CategoryOTHER
21733  R_CategorySALES
21734  R_CategoryTEACHER
21735  U_Category
21736  V_CategoryADVOCATE
21737  V_CategoryBUSINESS_DEVELOPMENT
21738  V_CategoryCONSULTANT
21739  V_CategoryDESIGNER
21740  V_CategoryDIGITAL_MEDIA
21741  V_CategoryFITNESS
21742  V_CategoryHEALTHCARE
21743  V_CategoryHR
21744  V_CategoryINFORMATION_TECHNOLOGY
21745  V_CategoryOTHER
21746  V_CategorySALES
21747  V_CategoryTEACHER
21748  _WARN_
21749  Category
21750  );
21751  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER10_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26033   data EM_temp_assessMeta;
26034   set EMWS3.Tree3_CMeta_TRAIN;
26035   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26036   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26037   data EM_temp_assessdata;
26038   set EMWS3.Tree3_VALIDATE(keep=
26039   F_Category
26040   I_Category
26041   P_CategoryADVOCATE
26042   P_CategoryBUSINESS_DEVELOPMENT
26043   P_CategoryCONSULTANT
26044   P_CategoryDESIGNER
26045   P_CategoryDIGITAL_MEDIA
26046   P_CategoryFITNESS
26047   P_CategoryHEALTHCARE
26048   P_CategoryHR
26049   P_CategoryINFORMATION_TECHNOLOGY
26050   P_CategoryOTHER
26051   P_CategorySALES
26052   P_CategoryTEACHER
26053   Q_CategoryADVOCATE
26054   Q_CategoryBUSINESS_DEVELOPMENT
26055   Q_CategoryCONSULTANT
26056   Q_CategoryDESIGNER
26057   Q_CategoryDIGITAL_MEDIA
26058   Q_CategoryFITNESS
26059   Q_CategoryHEALTHCARE
26060   Q_CategoryHR
26061   Q_CategoryINFORMATION_TECHNOLOGY
26062   Q_CategoryOTHER
26063   Q_CategorySALES
26064   Q_CategoryTEACHER
26065   R_CategoryADVOCATE
26066   R_CategoryBUSINESS_DEVELOPMENT
26067   R_CategoryCONSULTANT
26068   R_CategoryDESIGNER
26069   R_CategoryDIGITAL_MEDIA
26070   R_CategoryFITNESS
26071   R_CategoryHEALTHCARE
26072   R_CategoryHR
26073   R_CategoryINFORMATION_TECHNOLOGY
26074   R_CategoryOTHER
26075   R_CategorySALES
26076   R_CategoryTEACHER
26077   U_Category
26078   V_CategoryADVOCATE
26079   V_CategoryBUSINESS_DEVELOPMENT
26080   V_CategoryCONSULTANT
26081   V_CategoryDESIGNER
26082   V_CategoryDIGITAL_MEDIA
26083   V_CategoryFITNESS
26084   V_CategoryHEALTHCARE
26085   V_CategoryHR
26086   V_CategoryINFORMATION_TECHNOLOGY
26087   V_CategoryOTHER
26088   V_CategorySALES
26089   V_CategoryTEACHER
26090   _WARN_
26091   Category
26092   );
26093   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE3_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER10_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE3_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30384   %let _cn = %sysfunc(getoption(CENTER));
30385   options nocenter;
30386   proc print data=EMWS3.Tree3_EMREPORTFIT noobs label;
30387   var STAT LABEL TRAIN
30388   VALIDATE
30389   TEST
30390   ;
30391   by TARGET TARGETLABEL;
30392   title9 ' ';
30393   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30394   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE3_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30395   title10;
30396   options &_cn;
 
30397   proc sort data=EMWS3.Tree3_EMCLASSIFICATION nothreads;
30398   by DATAROLE TARGET TARGETLABEL;
30399   run;
 
NOTE: There were 89 observations read from the data set EMWS3.TREE3_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE3_EMCLASSIFICATION has 89 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30400   %let _cn = %sysfunc(getoption(CENTER));
30401   options nocenter;
30402   proc print data=EMWS3.Tree3_EMCLASSIFICATION noobs label;
30403   var from into pct_row pct_col count percent
30404   ;
30405   by DATAROLE TARGET TARGETLABEL;
30406   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30407   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30408   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30409   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30410   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30411   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30412   where _TYPE_='PREDICTION';
30413   title9 ' ';
30414   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30415   run;
 
NOTE: There were 89 observations read from the data set EMWS3.TREE3_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30416   title9;
30417   title10;
30418   options &_cn;
 
30419   %let _cn = %sysfunc(getoption(CENTER));
30420   options nocenter;
30421   data EMWS3.Tree3_EMEVENTREPORT;
30422   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30423   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30423 ! FALSEEVENT
30424   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30425      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30426   FALSEEVENT=0;
30427   FALSENEVENT=0;
30428   TRUEEVENT=0;
30429   TRUENEVENT=0;
30430   set EMWS3.Tree3_EMEVENTREPORT;
30431   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE3_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE3_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30432   proc print data=EMWS3.Tree3_EMEVENTREPORT noobs label;
30433   title9 ' ';
30434   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30435   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30436   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE3_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30437   title10;
30438   options &_cn;
 
30439   proc datasets library=EMWS3 nolist;
30440   modify Tree3_EMRANK;
30441   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30442   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30443   run;
 
NOTE: MODIFY was successful for EMWS3.TREE3_EMRANK.DATA.
30444   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
30445   %let _cn = %sysfunc(getoption(CENTER));
30446   options nocenter;
30447   proc print data=EMWS3.Tree3_EMRANK label noobs;
30448   var
30449   decile gain lift liftc resp respc N _meanP_;
30450   by
30451   notsorted DATAROLE
30452   notsorted TARGET
30453   notsorted TARGETLABEL
30454   ;
30455   title9 ' ';
30456   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30457   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE3_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30458   title10;
30459   options &_cn;
 
30460   proc datasets library=EMWS3 nolist;
30461   modify Tree3_EMSCOREDIST;
30462   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30463   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30464   run;
 
NOTE: MODIFY was successful for EMWS3.TREE3_EMSCOREDIST.DATA.
30465   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
 
 
