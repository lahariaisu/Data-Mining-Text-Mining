*------------------------------------------------------------*
User:                lahar
Date:                November 14, 2023
Time:                19:51:36
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 14, 2023
Time:                19:51:34
*------------------------------------------------------------*
15225  proc freq data=EMWS3.FIMPORT_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.FIMPORTMETA;
15227  run;
 
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: The data set WORK.FIMPORTMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
15228  proc print data=WORK.FIMPORTMETA label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 3 observations read from the data set WORK.FIMPORTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
15234  title10;
 
15235  %let EMEXCEPTIONSTRING=;
15561  *------------------------------------------------------------*;
15562  * FIMPORT: Generation of macros and macro variables;
15563  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15564  *------------------------------------------------------------*;
 
15565  %let EMEXCEPTIONSTRING=;
15566  *------------------------------------------------------------*;
15567  * TRAIN: FIMPORT;
15568  *------------------------------------------------------------*;
15569  %let EM_ACTION = TRAIN;
15570  %let syscc = 0;
15571  /* Fimport.source */
15572  %macro main;
15573        %if %upcase(&EM_ACTION) = CREATE %then %do;
15574           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15575           %include temp;
15576           filename temp;
15577           %create;
15578        %end;
15579        %else
15580        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15581           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15582           %include temp;
15583           filename temp;
15584           %train;
15585        %end;
15586        %else
15587        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15588           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15589           %include temp;
15590           filename temp;
15591           %update;
15592        %end;
15593        %else
15594        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15595           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15596           %include temp;
15597           filename temp;
15598           %property;
15599        %end;
15600         %else
15601        %if %upcase(&EM_ACTION) = SCORE %then %do;
15602           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15603           %include temp;
15604           filename temp;
15605           %score;
15606        %end;
15607        %else
15608        %if %upcase(&EM_ACTION) = REPORT %then %do;
15609           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15610           %include temp;
15611           filename temp;
15612           %report;
15613        %end;
15614        %else
15615        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15616           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15617           %include temp;
15618           filename temp;
15619           %openvariableset;
15620        %end;
15621        %else
15622        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15623           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15624           %include temp;
15625           filename temp;
15626           %closevariableset;
15627        %end;
15628  %mend main;
15629  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15630 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15631 +%macro appendExt;
15632 +   data _null_;
15633 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15634 +      rfile = reverse(tempuif);
15635 +      period = indexc(rfile,".");
15636 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15637 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15638 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15639 +   run;
15640 +%mend appendExt;
15642 +%macro getNobs(ds);
15643 + %global dset nobs;
15644 + %let dset=&ds;
15645 + %let dsid = %sysfunc(open(&dset));
15646 + %if &dsid %then %do;
15647 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15648 +      %let rc = %sysfunc(close(&dsid));
15649 +   %end;
15650 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15651 +%mend getNobs;
15652 +%macro keepordrop;
15653 +  proc contents data=work.importfile noprint
15654 +  out=work.importattrs;
15655 +  run;
15656 +  %getNobs(work.importattrs);
15657 +  data _null_;
15658 +    set  work.importattrs;
15659 +    call symput("varname"||left(_n_),name);
15660 +  run;
15662 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15663 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15664 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15665 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15666 +     %put diff=&diff;
15667 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15668 +         %let kORd = keep;
15669 +             %let start=1;
15670 +             %let end = &EM_PROPERTY_MAXCOLS;
15671 +       %end;
15672 +     %else %do;
15673 +         %let kORd = drop;
15674 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15675 +             %let end = &nobs;
15676 +       %end;
15677 +     data &em_user_data;
15678 +        set &em_user_data;
15679 +        &kORd
15680 +        %do i = &start %to &end;
15681 +            &&varname&i
15682 +         %end;
15683 +        ;
15684 +     run;
15685 +%end;
15686 +%mend keepordrop;
15687 +%macro dropformatvars;
15688 +   %put fmtcnt=&fmtcnt;
15689 +   data new;
15690 +     set work.importfile;
15691 +     %do i = 1 %to &fmtcnt;
15692 +       x1zy&i =put(&&varname&i,&&fmt&i);
15693 +     %end;
15694 +   run;
15695 +   data new;
15696 +     set new;
15697 +     drop
15698 +     %do i = 1 %to &fmtcnt;
15699 +     &&varname&i
15700 +     %end;
15701 +     ;
15702 +   run;
15703 +   proc datasets library=work nolist;
15704 +     modify new;
15705 +     %do i = 1 %to &fmtcnt;
15706 +     rename x1zy&i=&&varname&i;
15707 +     %end;
15708 +   run; quit;
15709 +   data work.importfile;
15710 +     set new;
15711 +   run;
15712 +%mend;
15714 +%macro procimport(out=);
15715 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15716 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15717 +         out=&out
15718 +         dbms = ACCESS
15719 +         replace;
15720 +         database="%trim(&_IFILENAME)"
15721 +   %end;
15722 +   %else %do;
15723 +       proc import datafile="%trim(&_IFILENAME)"
15724 +          out=&out
15726 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15727 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15728 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15729 +         dbms=&EM_PROPERTY_FILETYPE
15730 +      %end;
15731 +      %else %do;
15732 +         dbms=TAB
15733 +      %end;
15734 +      /* Work around for the following defects:S0560899 and S0560009.   */
15735 +      %let sasEnv=%sysfunc(getlocenv());
15736 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15737 +         dbms=EXCEL
15738 +      %end;
15740 +      replace;
15741 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15742 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15743 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15744 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15745 +            getnames=&EM_PROPERTY_NAMEROW;
15746 +        %end;
15747 +      %end;
15748 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15749 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15750 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15751 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15752 +               delimiter=" ";
15753 +            %end;
15754 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15755 +               /* Do not specifiy a delimiter */
15756 +            %end;
15757 +            %else %do;
15758 +               delimiter="&EM_PROPERTY_DELIMITER";
15759 +            %end;
15760 +         %end;
15761 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15762 +            datarow=&EM_PROPERTY_SKIPROWS;
15763 +            /* Guessingrows must be >= skiprows */
15764 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15765 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15766 +            %end;
15767 +         %end;
15768 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15769 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15770 +         %end;
15771 +       %end;
15772 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15773 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15774 +            FMTLIB = work.formats;
15775 +      %end;
15776 +   %end;
15777 +   run;
15778 +%mend procimport;
15780 +%macro train;
15782 +   %let vvnString = %sysfunc(getoption(validvarname));
15784 +   %em_getname(key=DATA,           type=DATA);
15785 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15786 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15787 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15789 +   %appendExt;
15791 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15792 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15793 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15794 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15795 +   %end;
15797 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15798 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15799 +       %goto endtrain;
15800 +   %end;
15802 +   options validvarname=ANY;
15803 +   %procimport(out=work.importfile);
15805 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15806 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15807 +      %global fmtcnt;
15808 +      %let fmtcnt=0;
15809 +      proc contents data=work.importfile out=work.impattrs noprint;
15810 +      run;
15811 +      data _null_;
15812 +        set work.impattrs;
15813 +        if _n_=1 then i=0;
15814 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15815 +           i = i+1;
15816 +           varname = substr(name, 1, length(name));
15817 +           call symput("fmt"||left(i), trim(format)||".");
15818 +           call symput("varname"||left(i), varname);
15819 +           call symput("fmtcnt",left(i));
15820 +      end;
15821 +      retain i;
15822 +     run;
15823 +    %if &fmtcnt > 0 %then %do;
15824 +       %dropformatvars;
15825 +    %end;
15826 +    proc datasets lib=work memtype=data nolist;
15827 +        modify importfile;
15828 +        attrib _all_ format=;
15829 +    run;
15830 +    quit;
15831 +   %end;
15833 +   %let _fimportObs  = 0;
15834 +   %let _fimportVars = 0;
15835 +   %if %sysfunc(exist(work.importFile)) %then %do;
15836 +       %let dsid = %sysfunc(open(work.importFile));
15837 +       %if &dsid %then %do;
15838 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15839 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15840 +       %let dsid = %sysfunc(close(&dsid));
15841 +       %end;
15842 +   %end;
15844 +   %if ^&_fimportObs %then %do;
15845 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15846 +       %goto endtrain;
15847 +   %end;
15848 +   %if ^&_fimportVars %then %do;
15849 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15850 +       %goto endtrain;
15851 +   %end;
15853 +   data &em_user_data;
15854 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15855 +   run;
15856 +   %keepordrop;
15858 +   %em_getname(key=EMSTAT,     type=DATA);
15860 +   proc datasets lib=&em_lib nolist;
15861 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15862 +   run;
15864 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15865 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15866 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15867 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15868 +            maxClassLevels=20, identifyEmptyColumns=Y,
15869 +            outdata=&em_user_EMCMETADEFAULT,
15870 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15872 +        data &em_user_emcmetadefault;
15873 +           set &em_user_emcmetadefault;
15874 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15875 +        run;
15877 +        data &em_data_eminfo;
15878 +           length TARGET KEY $32  DATA $43;
15879 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15880 +        run;
15882 +        %let EM_META_ADVISOR=ADVANCED;
15884 +   %end;
15885 +   %else %do;
15886 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15887 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15888 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15889 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15891 +            %if "&em_property_summarize" eq "Y" %then %do;
15892 +                %em_getname(key=EMSTAT,  type=DATA);
15893 +                data &em_data_eminfo;
15894 +                   length TARGET KEY $32  DATA $43;
15895 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15896 +                run;
15897 +            %end;
15899 +        %let EM_META_ADVISOR=BASIC;
15901 +   %end;
15903 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15904 +   data _null_;
15905 +      fname = '_text';
15906 +      rc=filename(fname, "&em_user_vvnlabel");
15907 +      if ^rc and fexist(fname) then
15908 +         rc=fdelete(fname);
15909 +     rc=filename(fname);
15910 +   run;
15913 +   /* Validvarname Case */
15914 +   %let newNameFlag = 0;
15915 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15916 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15917 +        %if &dsid %then %do;
15918 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15919 +            %let dsid = %sysfunc(close(&dsid));
15920 +       %end;
15921 +   %end;
15923 +   %if %sysevalf(&newNameFlag>0) %then %do;
15924 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15925 +       run;
15926 +       proc sort data=work._any; by VARNUM; run; quit;
15928 +       options validvarname=V7;
15930 +       %procimport(out=work.importfile2);
15932 +       options validvarname=ANY;
15934 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15935 +       run;
15936 +       proc sort data=work._v7; by varnum; run; quit;
15938 +       filename _FI "&em_user_vvnlabel";
15939 +       data work._names;
15940 +          length string $200;
15941 +          merge work._v7 work._any;
15942 +          by VARNUM;
15943 +          file _FI;
15944 +          if V7NAME ne NAME then do;
15945 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15946 +             put string;
15947 +             if LABEL eq '' then do;
15948 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15949 +                put string;
15950 +             end;
15951 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15952 +             put string;
15953 +          end;
15954 +          drop string;
15955 +       run;
15956 +       data &em_user_data;
15957 +          set &em_user_data;
15958 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15959 +              filename _FI "&em_user_vvnlabel";
15960 +              %inc _FI;
15961 +             filename _FI;
15962 +          %end;
15963 +       run;
15965 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15966 +       proc sort data=work._names;             by NAME; run;
15968 +       data &em_user_EMCMETADEFAULT;
15969 +         merge  &em_user_EMCMETADEFAULT _names;
15970 +         by NAME;
15971 +         length DROP $1;
15972 +         DROP='N';
15973 +         if NEWNAME ne NAME then do;
15974 +            if LABEL eq '' then do;
15975 +               LABEL = NAME;
15976 +            end;
15977 +            NAME=V7NAME;
15978 +         end;
15979 +         drop NEWNAME V7NAME VARNUM;
15980 +       run;
15982 +       proc datasets lib=work nolist;
15983 +          delete _any _v7 _names importfile2;
15984 +       run;
15985 +       quit;
15987 +   %end;
15988 +   %else %do;
15989 +       data &em_user_EMCMETADEFAULT;
15990 +          set &em_user_EMCMETADEFAULT;
15991 +          length DROP $1;
15992 +          DROP='N';
15993 +       run;
15994 +   %end;
15996 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15998 +   data _temp;
15999 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
16000 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
16001 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
16002 +      COLUMNMETAMODTIME=MODTIME;
16003 +   run;
16004 +   proc sort data=&em_data_importset;
16005 +      by PORT;
16006 +   run;
16007 +   data &em_data_importset;
16008 +      merge &em_data_importset _temp;
16009 +      by PORT;
16010 +      if PORT='DATA' then ROLE="&em_property_role";
16011 +   run;
16013 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
16015 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
16016 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
16017 +            filename x "&em_user_variablesetdelta";
16018 +            data &em_data_variableset;
16019 +               set &em_user_emcmetadefault;
16020 +               %inc X;
16021 +            run;
16022 +            filename x;
16023 +        %end;
16024 +        %else %do;
16025 +            data &em_data_variableset;
16026 +               set &em_user_emcmetadefault;
16027 +            run;
16028 +        %end;
16029 +    %end;
16031 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
16032 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
16033 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
16034 +         id NAME;
16035 +      run;
16037 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
16038 +         data _null_;
16039 +            length string $200;
16040 +            set _DiffMeta end=eof;
16041 +            where _type_='COMPARE';
16042 +            file x1;
16043 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
16044 +            put string;
16045 +            string = '   ROLE="'!!strip(ROLE)!!'";';
16046 +            put string;
16047 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
16048 +            put string;
16049 +            string = '   ORDER="'!!strip(ORDER)!!'";';
16050 +            put string;
16051 +            put 'end;';
16052 +            if drop='Y' then do;
16053 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
16054 +               put string;
16055 +            end;
16056 +            if eof then
16057 +               put 'drop DROP;';
16058 +         run;
16060 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
16061 +         filename x2 "&em_user_deltacode";
16062 +         %em_copyfile(infref=x1, outfref=x2);
16063 +         filename x1;
16064 +         filename x2;
16066 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
16067 +         filename x "&em_user_variablesetdelta";
16068 +         data _null_;
16069 +            length string $200;
16070 +            set _DiffMeta end=eof;
16071 +            where _type_='COMPARE';
16072 +            file x;
16073 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
16074 +            put string;
16075 +            string = '   ROLE="'!!strip(ROLE)!!'";';
16076 +            put string;
16077 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
16078 +            put string;
16079 +            string = '   ORDER="'!!strip(ORDER)!!'";';
16080 +            put string;
16081 +            string = '   DROP="'!!strip(DROP)!!'";';
16082 +            put string;
16083 +            put 'end;';
16084 +         run;
16085 +         filename x;
16086 +       proc datasets lib=work nolist;
16087 +          delete _DiffMeta;
16088 +       run;
16090 +       data &em_data_exportset;
16091 +          set &em_data_exportset;
16092 +          if NODEPORT='TRAIN' then do;
16093 +             ROLE="&em_property_role";
16094 +             COLUMNMETAMODTIME=datetime();
16095 +             MODTIME=datetime();
16096 +             DATASET="&em_nodeid._train";
16097 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
16098 +             DELTACODE="CDelta_TRAIN";
16099 +             APPLYDELTA='Y';
16100 +             EXPORT='Y';
16101 +             NEEDUPDATE='Y';
16103 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
16104 +                EMINFO="&em_data_eminfo";
16105 +                EMINFOMODTIME=datetime();
16106 +            %end;
16107 +            %else %do;
16108 +                EMINFO='';
16109 +                EMINFOMODTIME=.;
16110 +            %end;
16111 +          end;
16112 +       run;
16113 +   %end;
16115 +  proc contents data=&em_user_data;
16116 +  run;
16117 +  proc datasets library=work nolist;
16118 +   delete importfile importattrs new;
16119 +   quit;
16120 +  run;
16122 +  /* Reset VALIDVARNAME to original settings */
16123 +  options validvarname=&vvnString;
16125 +  %endtrain:
16126 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
filetype=*xlsx*
delimiter=*,*
 
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1353 observations and 3 variables.
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.30 seconds
      cpu time            0.28 seconds
 
 
 
NOTE: There were 1353 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS3.FIMPORT_DATA has 1353 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 3 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 3 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
nobs=3  maxcols=10000
 
NOTE: The file EMWS3.FIMPORT_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
16127  %let SYSCC = 0;
16128  %let _dsidTable = 0;
16129  %let _engineTable =;
16130  data _null_;
16131  dsid = open('EMWS3.FIMPORT_DATA');
16132  call symput('_dsidTable', strip(put(dsid, best.)));
16133  if dsid then do;
16134  call symput('_engineTable', attrc(dsid, 'ENGINE'));
16135  dsid = close(dsid);
16136  end;
16137  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16138  options fmterr;
16139  data _metaTestView;
16140  set EMWS3.FIMPORT_DATA;
16141  if _N_=1 then do;
16142  output;
16143  stop;
16144  end;
16145  run;
 
NOTE: There were 1 observations read from the data set EMWS3.FIMPORT_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16146  proc contents data=EMWS3.FIMPORT_DATA
16147  out=WORK.M2LJCXNL noprint;
16148  run;
 
NOTE: The data set WORK.M2LJCXNL has 3 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16149  data WORK.M2LJCXNL;
16150  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
16151  label NAME =;
16152  set WORK.M2LJCXNL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
16153  if itype = 1 then type = 'N';
16154  else type = 'C';
16155  if formatl > 0 then do;
16156  if format ne '' then do;
16157  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
16158  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
16159  end;
16160  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
16161  end;
16162  else if format ne '' then format = strip(format)!!'.';
16163  if informl > 0 then do;
16164  if informat ne ' ' then do;
16165  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
16166  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
16167  end;
16168  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
16169  end;
16170  else if informat ne '' then informat = strip(informat)!!'.';
16171  if idxusage = 'NONE' then index ="N";
16172  else index = "Y";
16173  indextype = idxusage;
16174  drop idxusage itype formatl formatd informl informd;
16175  run;
 
NOTE: There were 3 observations read from the data set WORK.M2LJCXNL.
NOTE: The data set WORK.M2LJCXNL has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16176  data WORK.M2LJCXNL;
16177  length UNAME $64;
16178  set WORK.M2LJCXNL;
16179  UNAME = upcase(NAME);
16180  run;
 
NOTE: There were 3 observations read from the data set WORK.M2LJCXNL.
NOTE: The data set WORK.M2LJCXNL has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16184  data WORK.M1CHD3NQ;
16185  drop UNAME;
16186  set WORK.M1CHD3NQ;
16187  run;
 
NOTE: There were 3 observations read from the data set WORK.M1CHD3NQ.
NOTE: The data set WORK.M1CHD3NQ has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS3.FIMPORT_EMCMETADEFAULT has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
16438  %let SYSCC = 0;
16439  data EMWS3.FIMPORT_EMTMETADEFAULT;
16440  length LIBNAME $8;
16441  LIBNAME = "EMWS3";
16442  run;
 
NOTE: The data set EMWS3.FIMPORT_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.FIMPORT_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.FIMPORT_IMPORTSET.
NOTE: The data set EMWS3.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.FIMPORT_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS3.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\FIMPORT\VARIABLESETDELTA.txt.
16471 +if NAME="Category" then do;
16472 +ROLE="TARGET";
16473 +LEVEL="NOMINAL";
16474 +ORDER="";
16475 +DROP="N";
16476 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS3.FIMPORT_VARIABLESET has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 2 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X1 is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\FIMPORT\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=14Nov2023:19:51:35,
      Create Time=13Nov2023:19:39:53
 
NOTE: 6 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 27.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X2 is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\FIMPORT\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=14Nov2023:19:51:35,
      Create Time=13Nov2023:19:41:11
 
NOTE: 6 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 27.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\FIMPORT\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=14Nov2023:19:51:35,
      Create Time=13Nov2023:19:41:11
 
NOTE: 6 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 27.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16477  *------------------------------------------------------------*;
16478  * End TRAIN: FIMPORT;
16479  *------------------------------------------------------------*;
 
16480  *------------------------------------------------------------*;
16481  * Close any missing semi colons;
16482  *------------------------------------------------------------*;
16483  ;
16484  ;
16485  ;
16486  ;
16487  quit;
16488  *------------------------------------------------------------*;
16489  * Close any unbalanced quotes;
16490  *------------------------------------------------------------*;
16491  /*; *"; *'; */
16492  ;
16493  run;
16494  quit;
16495  /* Reset EM Options */
16496  options formchar="|----|+|---+=|-/\<>*";
16497  options nocenter ls=256 ps=10000;
16498  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                November 14, 2023
Time:                19:51:36
*------------------------------------------------------------*
16600  %let EMEXCEPTIONSTRING=;
16601  *------------------------------------------------------------*;
16602  * SCORE: FIMPORT;
16603  *------------------------------------------------------------*;
16604  %let EM_ACTION = SCORE;
16605  %let syscc = 0;
16606  /* Fimport.source */
16607  %macro main;
16608        %if %upcase(&EM_ACTION) = CREATE %then %do;
16609           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16610           %include temp;
16611           filename temp;
16612           %create;
16613        %end;
16614        %else
16615        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16616           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16617           %include temp;
16618           filename temp;
16619           %train;
16620        %end;
16621        %else
16622        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16623           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16624           %include temp;
16625           filename temp;
16626           %update;
16627        %end;
16628        %else
16629        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16630           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16631           %include temp;
16632           filename temp;
16633           %property;
16634        %end;
16635         %else
16636        %if %upcase(&EM_ACTION) = SCORE %then %do;
16637           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16638           %include temp;
16639           filename temp;
16640           %score;
16641        %end;
16642        %else
16643        %if %upcase(&EM_ACTION) = REPORT %then %do;
16644           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16645           %include temp;
16646           filename temp;
16647           %report;
16648        %end;
16649        %else
16650        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16651           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16652           %include temp;
16653           filename temp;
16654           %openvariableset;
16655        %end;
16656        %else
16657        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16658           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16659           %include temp;
16660           filename temp;
16661           %closevariableset;
16662        %end;
16663  %mend main;
16664  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16665 +%macro score;
16666 +
16667 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16668 +   data _null_;
16669 +      file x;
16670 +      put ' ';
16671 +   run;
16672 +   filename x;
16673 +
16674 +   %em_getname(key=DATA, type=DATA);
16675 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16676 +       data &em_export_train / view=&em_export_train;
16677 +          set &em_user_data;
16678 +       run;
16679 +   %end;
16680 +
16681 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\FIMPORT\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=14Nov2023:19:51:35,
      Create Time=14Nov2023:19:51:35
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS3.FIMPORT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16682  *------------------------------------------------------------*;
16683  * End SCORE: FIMPORT;
16684  *------------------------------------------------------------*;
 
16686  *------------------------------------------------------------*;
16687  * FIMPORT: Computing metadata for TRAIN data;
16688  *------------------------------------------------------------*;
 
NOTE: View EMWS3.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 14, 2023
Time:                19:51:36
*------------------------------------------------------------*
17055  %let EMEXCEPTIONSTRING=;
17056  *------------------------------------------------------------*;
17057  * REPORT: FIMPORT;
17058  *------------------------------------------------------------*;
17059  %let EM_ACTION = REPORT;
17060  %let syscc = 0;
17061  /* Fimport.source */
17062  %macro main;
17063        %if %upcase(&EM_ACTION) = CREATE %then %do;
17064           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
17065           %include temp;
17066           filename temp;
17067           %create;
17068        %end;
17069        %else
17070        %if %upcase(&EM_ACTION) = TRAIN %then %do;
17071           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
17072           %include temp;
17073           filename temp;
17074           %train;
17075        %end;
17076        %else
17077        %if %upcase(&EM_ACTION) = UPDATE %then %do;
17078           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
17079           %include temp;
17080           filename temp;
17081           %update;
17082        %end;
17083        %else
17084        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
17085           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
17086           %include temp;
17087           filename temp;
17088           %property;
17089        %end;
17090         %else
17091        %if %upcase(&EM_ACTION) = SCORE %then %do;
17092           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
17093           %include temp;
17094           filename temp;
17095           %score;
17096        %end;
17097        %else
17098        %if %upcase(&EM_ACTION) = REPORT %then %do;
17099           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
17100           %include temp;
17101           filename temp;
17102           %report;
17103        %end;
17104        %else
17105        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
17106           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
17107           %include temp;
17108           filename temp;
17109           %openvariableset;
17110        %end;
17111        %else
17112        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
17113           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
17114           %include temp;
17115           filename temp;
17116           %closevariableset;
17117        %end;
17118  %mend main;
17119  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
17120 +%macro report;
17121 +    %em_getname(key=EMSTAT,     type=DATA);
17122 +    %em_getname(key=EMINFO,     type=DATA);
17123 +    %em_getname(key=CLASS,      type=DATA);
17124 +    %em_getname(key=INTERVAL,   type=DATA);
17125 +
17126 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
17127 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
17128 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
17129 +
17130 +    %if &em_property_summarize eq Y %then %do;
17131 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
17132 +        %include temp;
17133 +        filename temp;
17134 +
17135 +        data work.tempmeta;
17136 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
17137 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
17138 +         run;
17139 +
17140 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
17141 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
17142 +
17143 +         data work.tempmeta;
17144 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
17145 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
17146 +         run;
17147 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
17148 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
17149 +
17150 +        data work.tempmeta;
17151 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
17152 +        run;
17153 +
17154 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
17155 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
17156 +
17157 +            data &em_data_exportset;
17158 +                 set &em_data_exportset;
17159 +                 if NODEPORT='TRAIN' then do;
17160 +                    EMINFO="&em_data_eminfo";
17161 +                    EMINFOMODTIME=datetime();
17162 +                 end;
17163 +            run;
17164 +        %end;
17165 +        %else %do;
17166 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
17167 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
17168 +                data &em_user_emstat /  view=&em_user_emstat;
17169 +                   set &em_user_emstatdefault;
17170 +                run;
17171 +            %end;
17172 +        %end;
17173 +    %end;
17174 +    %else %do;
17175 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
17176 +            proc datasets lib=&em_lib nolist;
17177 +               delete &em_nodeid._EMINFO;
17178 +            run;
17179 +            quit;
17180 +            data &em_data_exportset;
17181 +                 set &em_data_exportset;
17182 +                 if NODEPORT='TRAIN' then do;
17183 +                    EMINFO="";
17184 +                    EMINFOMODTIME=.;
17185 +                 end;
17186 +            run;
17187 +        %end;
17188 +    %end;
17189 +
17190 +    data &em_data_exportset;
17191 +       set &em_data_exportset;
17192 +       if NODEPORT='TRAIN' then do;
17193 +          ROLE="&em_property_role";
17194 +       end;
17195 +    run;
17196 +
17197 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
17198 +        proc freq data=&em_data_variableset noprint;
17199 +             table ROLE*LEVEL/out=work.tempMeta;
17200 +        run;
17201 +        proc print data=work.tempmeta label noobs;
17202 +           var ROLE LEVEL COUNT;
17203 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
17204 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
17205 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
17206 +        title9  ' ';
17207 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
17208 +        run;
17209 +        title10;
17210 +    %end;
17211 +
17212 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
17213 +        proc datasets lib=work nolist;
17214 +           delete tempmeta;
17215 +        run;
17216 +        quit;
17217 +    %end;
17218 +
17219 +%mend report;
17220 +
17221 +
17222 +
17223 +
17224 +
17225 +
17226 +
17227 +
17228 +
17229 +
17230 +
17231 +
17232 +
17233 +
17234 +
17235 +
17236 +
17237 +
17238 +
17239 +
17240 +
17241 +
17242 +
17243 +
17244 +
17245 +
17246 +
17247 +
17248 +
17249 +
17250 +
17251 +
17252 +
17253 +
17254 +
17255 +
17256 +
17257 +
17258 +
17259 +
17260 +
17261 +
17262 +
17263 +
17264 +
17265 +
17266 +
17267 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file EMWS3.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17268  *------------------------------------------------------------*;
17269  * End REPORT: FIMPORT;
17270  *------------------------------------------------------------*;
 
17271  /* Reset EM Options */
17272  options formchar="|----|+|---+=|-/\<>*";
17273  options nocenter ls=256 ps=10000;
17274  goptions reset=all device=GIF NODISPLAY;
 
17275  proc sort data=WORK.EM_USER_REPORT;
17276  by ID VIEW;
17277  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
