*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:38
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:30
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree6_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree6META;
15227  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TREE6_VARIABLESET.
NOTE: The data set WORK.TREE6META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.Tree6META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE6META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster6_TRAIN EMWS3.TextCluster6_TRAIN
EMWS3.TextCluster6_TRAIN EMWS3.TextCluster6_TRAIN EMWS3 TextCluster6_TRAIN
EMWS3.TextCluster6_TRAIN EMWS3.TextCluster6_TRAIN
EMWS3.TextCluster6_TRAIN EMWS3.TextCluster6_TRAIN EMWS3 TextCluster6_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE6_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE6_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree6_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE6_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree6_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15944  *------------------------------------------------------------*;
15945  * Tree6: Generation of macros and macro variables;
15946  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15947  *------------------------------------------------------------*;
 
15948  %let EMEXCEPTIONSTRING=;
15949  *------------------------------------------------------------*;
15950  * TRAIN: Tree6;
15951  *------------------------------------------------------------*;
15952  %let EM_ACTION = TRAIN;
15953  %let syscc = 0;
15954  %macro main;
15955
15956    %if %upcase(&EM_ACTION) = CREATE %then %do;
15957      filename temp catalog 'sashelp.emmodl.tree_create.source';
15958      %include temp;
15959      filename temp;
15960
15961      %em_tree_create;
15962    %end;
15963
15964     %else
15965     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15966
15967         filename temp catalog 'sashelp.emmodl.tree_train.source';
15968         %include temp;
15969         filename temp;
15970         %em_tree_train;
15971     %end;
15972
15973    %else
15974    %if %upcase(&EM_ACTION) = SCORE %then %do;
15975      filename temp catalog 'sashelp.emmodl.tree_score.source';
15976      %include temp;
15977      filename temp;
15978
15979      %em_tree_score;
15980
15981    %end;
15982
15983    %else
15984    %if %upcase(&EM_ACTION) = REPORT %then %do;
15985
15986         filename temp catalog 'sashelp.emmodl.tree_report.source';
15987         %include temp;
15988         filename temp;
15989
15990         %em_tree_report;
15991     %end;
15992
15993    %else
15994    %if %upcase(&EM_ACTION) = OPENINT %then %do;
15995
15996         filename temp catalog 'sashelp.emmodl.tree_actions.source';
15997         %include temp;
15998         filename temp;
15999         %EM_TREE_OPENTREEVIEWER;
16000
16001     %end;
16002
16003    %else
16004    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16005
16006         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16007         %include temp;
16008         filename temp;
16009         %EM_TREE_CLOSETREEVIEWER;
16010
16011     %end;
16012
16013
16014     %doendm:
16015  %mend main;
16016
16017  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16019 +%macro em_tree_train;
16021 +   %if &EM_IMPORT_DATA eq %then %do;
16022 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16023 +       %put &em_codebar;
16024 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16025 +       %put &errormsg;
16026 +       %put &em_codebar;
16027 +       %goto doendm;
16028 +   %end;
16029 +   %else
16030 +       %let EMEXCEPTIONSTRING =;
16032 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16033 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16034 +        %put &em_codebar;
16035 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16036 +        %put &errormsg;
16037 +        %put &em_codebar;
16038 +        %goto doendm;
16039 +   %end;
16041 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16042 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16043 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16044 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16045 +        %put &em_codebar;
16046 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16047 +        %put &errormsg;
16048 +        %put &em_codebar;
16049 +        %goto doendm;
16050 +   %end;
16052 +   /* Initialize property macro variables */
16053 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16054 +   %include temp;
16055 +   filename temp;
16057 +   %EM_SetProperties;
16059 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16060 +   %EM_GETNAME(key=EMTREE, type=DATA);
16061 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16062 +     /* if import eq Y and no importtable defined, throw an exception */
16063 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16064 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16065 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16066 +         %put &em_codebar;
16067 +         %put &errmsg;
16068 +         %put &em_codebar;
16069 +         %goto doendm;
16070 +      %end;
16071 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16072 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16073 +         %put &em_codebar;
16074 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16075 +         %put &errormsg;
16076 +         %put &em_codebar;
16077 +         %goto doendm;
16078 +      %end;
16079 +      %else %do;
16080 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16081 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16082 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16083 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16084 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16085 +         %let dsid = %sysfunc(close(&dsid));
16086 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16087 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16088 +            %put &em_codebar;
16089 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16090 +            %put &errormsg;
16091 +            %put &em_codebar;
16092 +            %goto doendm;
16093 +         %end;
16094 +      %end;
16095 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16096 +         proc delete data=&EM_USER_EMTREE;
16097 +         run;
16098 +      %end;
16099 +   %end;
16100 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16101 +      proc delete data=&EM_USER_EMTREE;
16102 +      run;
16103 +   %end;
16105 +   /* load tree macros */
16106 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16107 +   %include temp;
16108 +   filename temp;
16110 +   /* data sets */
16111 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16112 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16113 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16115 +   /* files */
16116 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16118 +   /* check actual num of target levels */
16119 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16120 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16121 +                              nLevel=_nTargetLevel );
16122 +      %if &_nTargetLevel  > 2 %then %do;
16123 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16124 +        %put &em_codebar;
16125 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16126 +        %put &errormsg;
16127 +        %put &em_codebar;
16128 +        %goto doendm;
16129 +      %end;
16130 +   %end;
16132 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16133 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16134 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16135 +        %let costflag=0;
16136 +        data _null_;
16137 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16138 +          if eof then call symput("costflag", _N_);
16139 +        run;
16140 +        %if &costflag gt 0 %then %do;
16141 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16142 +          %put &em_codebar;
16143 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16144 +          %put &errormsg;
16145 +          %put &em_codebar;
16146 +          %goto doendm;
16147 +       %end;
16148 +     %end;
16149 +   %end;
16151 +   /* determine if multiple targets will be processed */
16152 +   %let em_tree_multipleTargets=N;
16153 +   %let em_tree_numTarget = 1;
16154 +   %let em_tree_targetVars=;
16156 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16157 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16158 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16159 +         %let em_tree_multipleTargets=N;
16160 +      %end;
16161 +      %else %do;
16162 +         /* create macro array of targets  */
16163 +         data _null_;
16164 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16165 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16166 +           if eof then
16167 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16168 +        run;
16170 +        %if &em_tree_numTarget gt 1 %then %do;
16171 +           %let em_tree_multipleTargets=Y;
16172 +        %end;
16173 +      %end;
16174 +   %end;
16176 +   /* create view of only necessary variable for performance reasons */
16177 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16178 +   data &tempData / view=&tempData;
16179 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16180 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16181 +       %EM_TARGET
16182 +     %end;
16183 +     %else %do;
16184 +       %if &em_tree_numTarget ne 0 %then %do;
16185 +         %do i=1 %to &em_tree_numTarget;
16186 +            &&em_tree_targetVars&i
16187 +         %end;
16188 +       %end;
16189 +     %end;
16190 +     );
16191 +   run;
16193 +   /* run Tree procedure */
16194 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16196 +   /* Check return code and throw exception if error is detected */
16197 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16198 +   %if &syserr %then %do;
16199 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16200 +     %goto doendm;
16201 +   %end;
16203 +   /* add decision score code if multiple targets are processed */
16204 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16205 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16206 +   %end;
16208 +   /* create outfit dataset if multiple score statements have been executed */
16209 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16211 +   /* create English Rules */
16212 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16213 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16214 +       %em_tree_makeEnglishRules;
16216 +       /* English Rules */
16217 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16219 +     %end;
16220 +   filename x;
16222 +   %doendm:
16223 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16224 +%macro EM_SetProperties;
16226 +   /* train properties */
16227 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16228 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16229 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16230 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16231 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16232 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16233 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16234 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16235 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16236 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16237 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16238 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16239 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16240 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16241 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16242 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16243 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16244 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16245 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16246 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16247 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16248 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16249 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16250 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16251 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16252 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16253 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16254 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16255 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16260 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16261 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16262 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16266 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16267 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16269 +   /* properties for interactive sample */
16270 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16275 +   /* report properties */
16276 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16281 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16282 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16283 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16290 +   /* score properties */
16291 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16294 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE6_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16296 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16297 +  %global &nLevel;
16298 +  proc dmdb batch data=&indata
16299 +    classout=_tmp_dmdbout;
16300 +    class &target;
16301 +  run;
16302 +  data _tmp_dmdbout;
16303 +    set _tmp_dmdbout;
16304 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16305 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16306 +  run;
16307 +  data _null_;
16308 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16309 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16310 +    %let dsid = %sysfunc(close(&dsid));
16311 +     call symput("&nLevel", put(&_obs, Best12.));
16312 +  run;
16314 +  proc datasets lib=work nolist;
16315 +     delete _tmp_dmdbout;
16316 +  run;
16317 +  quit;
16318 +%Mend EM_CheckBinaryTargetLevel;
16321 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16323 +  /* determine the number of obs in training data */
16324 +  proc sql;
16325 +    reset noprint;
16326 +    select count(*) into :em_nobs from &indata;
16327 +  quit;
16329 +  /* determine the number of input variables */
16330 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16331 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16333 +  /* retrieve targetEvent from decmeta */
16334 +  %let targetEvent=;
16335 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16336 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16337 +      data _null_;
16338 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16339 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16340 +      run;
16341 +    %end;
16342 +  %end;
16344 +  /* create targetTable if multipleTar eq Y */
16345 +  data temptarget;
16346 +    set &EM_DATA_VARIABLESET;
16347 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16348 +  run;
16350 + /* data sets */
16351 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16352 + %EM_GETNAME(key=EMTREE,        type=DATA);
16353 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16354 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16355 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16356 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16357 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16358 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16359 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16360 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16362 + /* files */
16363 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16364 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16366 + /* turn on pmml if requested */
16367 + %let nnpmml=0;
16368 + %if %symexist(EM_PMML) %then %do;
16369 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16370 +       %let nnpmml=1;
16372 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16373 +   %end;
16374 +%end;
16376 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16378 +%if &nnpmml or &numClassTarget %then %do;
16380 +    /* create dmdb needed for pmml generation */
16381 +    %let tree_maxlevel = 512;
16382 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16383 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16384 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16385 +      %end;
16386 +    %end;
16387 +    %if &tree_maxlevel gt 0 %then %do;
16388 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16389 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16390 +    %end;
16392 +    %let targetOrderString =;
16393 +    %let targetString = ;
16394 +    data _null_;
16395 +       length orderString nameString $10000;
16396 +       retain orderString nameString;
16397 +       set &em_data_variableset end=eof;
16398 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16399 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16400 +       %end;
16401 +       %else %do;
16402 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16403 +       %end;          select(order);
16404 +         when('')        order ='DESC';
16405 +         when('FMTASC')  order='ASCFMT';
16406 +         when('FMTDESC') order='DESFMT';
16407 +         otherwise;
16408 +       end;
16409 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16410 +       nameString = trim(nameString)!!' '!!trim(NAME);
16412 +       if eof then do;
16413 +          call symput('targetOrderString', trim(orderString));
16414 +          call symput('targetString', trim(nameString));
16415 +       end;
16416 +    run;
16418 +    %let arborkluge= "work._treeDMDB";
16420 +    proc dmdb batch data=&indata
16421 +    %if &nnpmml %then %do;
16422 +        PMML
16423 +    %end;
16424 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16426 +      %if &nnpmml %then %do;
16427 +           %if "%EM_ID" ne "" %then %do;
16428 +             id %EM_ID;
16429 +           %end;
16430 +           %if &EM_NUM_CLASS gt 0 %then %do;
16431 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16432 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16433 +                  &targetOrderString;
16434 +           %end;
16435 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16436 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16437 +           %end;
16438 +           target &targetString %EM_INTERVAL_TARGET;
16439 +           %if "%EM_FREQ" ne "" %then %do;
16440 +             freq %EM_FREQ;
16441 +           %end;
16442 +      %end;
16443 +      %else %do;
16444 +         class  &targetOrderString;
16445 +         target &targetString %EM_INTERVAL_TARGET;
16446 +      %end;
16447 +    run;
16448 +    quit;
16450 +    proc datasets lib=work nolist;
16451 +       delete classout varout;
16452 +    run;
16453 +    quit;
16455 + %end;
16458 + /* run Arbor procedure */
16459 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16460 +  proc arbor data=&INDATA
16462 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16463 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16464 +  %end;
16466 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16467 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16468 +  %end;
16470 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16471 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16472 +  %end;
16474 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16475 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16476 +  %end;
16478 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16479 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16480 +  %end;
16482 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16483 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16484 +  %end;
16485 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16486 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16487 +  %end;
16488 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16489 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16490 +  %end;
16492 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16493 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16494 +      alpha = &EM_PROPERTY_SIGLEVEL
16495 +    %end;
16496 +  %end;
16498 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16499 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16500 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16501 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16502 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16504 +        padjust =
16505 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16506 +          &chaid
16507 +        %end;
16508 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16509 +          DEPTH
16510 +        %end;
16511 +      %end;
16512 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16513 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16514 +         pvars = &num_inputs
16515 +      %end;
16516 +    %end;
16517 +  %end;
16518 +  %else %do;
16519 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16520 +         padjust = NONE
16521 +      %end;
16522 +  %end;
16524 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16525 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16526 +    Maxrules = &num_nrules
16527 +  %end;
16529 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16530 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16531 +    Maxsurrs = &num_nsurrs
16532 +  %end;
16534 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16535 +     Missing=&EM_PROPERTY_MISSINGVALUE
16536 +  %end;
16538 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16539 +     USEVARONCE
16540 +  %end;
16542 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16543 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16544 +  %end;
16547 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16548 +    event = "&targetEvent"
16549 +  %end;
16551 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16552 +     DECSEARCH
16553 +  %end;
16555 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16556 +     PRIORSSEARCH
16557 +  %end;
16559 +  %if &arbor_1 ne %then %do;
16560 +    &arbor_1
16561 +  %end;
16563 +  %if &em_arbor ne %then %do;
16564 +     &em_arbor
16565 +  %end;
16566 +  ;
16567 + %end;
16568 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16569 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16570 +       Performance &EM_PROPERTY_PERFORMANCE
16571 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16572 +         nodesize=&EM_PROPERTY_NODESAMPLE
16573 +       %end;
16574 +       ;
16575 +       interact;
16576 + %end;
16577 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16578 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16579 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16580 +    %put &em_codebar;
16581 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16582 +    %put &errormsg;
16583 +    %put &em_codebar;
16584 +    %goto doendm;
16585 +   %end;
16586 +   %else %do;
16587 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16588 +       Performance &EM_PROPERTY_PERFORMANCE
16589 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16590 +         nodesize=&EM_PROPERTY_NODESAMPLE
16591 +       %end;
16592 +       ;
16593 +       interact;
16594 +   %end;
16595 + %end;
16597 + %else %do;
16598 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16599 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16600 +    %put &em_codebar;
16601 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16602 +    %put &errormsg;
16603 +    %put &em_codebar;
16604 +    %goto doendm;
16605 +   %end;
16606 +   %else %do;
16607 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16608 +       Performance &EM_PROPERTY_PERFORMANCE
16609 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16610 +         nodesize=&EM_PROPERTY_NODESAMPLE
16611 +       %end;
16612 +       ;
16613 +        interact;
16614 +   %end;
16615 + %end;
16617 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16618 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16619 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16620 +    %end;
16622 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16623 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16624 +    %end;
16626 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16627 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16628 +    %end;
16630 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16631 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16632 +    %end;
16634 +    %if "%EM_FREQ" ne "" %then %do;
16635 +       freq %EM_FREQ;
16636 +    %end;
16638 +    %if "&multipleTar" eq "Y" %then %do;
16639 +       /* cycle through all target vars in variableset */
16640 +       %let tdsid = %sysfunc(open(temptarget));
16641 +       %if &tdsid %then %do;
16642 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16643 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16644 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16645 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16646 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16647 +             target &var / level = &lvl
16648 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16649 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16650 +             %end;
16651 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16652 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16653 +             %end;
16654 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16655 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16656 +             %end;
16657 +          %end;
16658 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16659 +       %end;
16660 +       useTarget variable = %EM_TARGET;
16661 +    %end;
16662 +    %else %do;
16663 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16664 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16665 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16666 +      %end;
16667 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16668 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16669 +      %end;
16670 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16671 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16672 +      %end;
16673 +    %end;
16675 +    %if "&multipleTar" eq "N" %then %do;
16676 +      &EM_DEC_STATEMENT;
16677 +    %end;
16679 +    Performance &EM_PROPERTY_PERFORMANCE
16680 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16681 +      nodesize=&EM_PROPERTY_NODESAMPLE
16682 +    %end;
16683 +    ;
16685 +    %if "&intFlag" eq "Y" %then %do;
16686 +       INTERACT Largest;
16687 +       Train maxnewdepth=0;
16688 +    %end;
16690 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16691 +         Assess
16692 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16693 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16694 +              %put &em_codebar;
16695 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16696 +              %put &errormsg;
16697 +              %put &em_codebar;
16698 +            %end;
16699 +            %else %do;
16700 +               Validata=&EM_IMPORT_VALIDATE
16701 +            %end;
16702 +         %end;
16703 +         %else %do;
16704 +           NoValidata
16705 +         %end;
16706 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16707 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16708 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16709 +               %if &dsid %then %do;
16710 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16711 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16712 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16713 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16714 +                   %else %do;
16715 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16716 +                      %else %let measure= MISC;
16717 +                   %end;
16718 +                 %end;
16719 +               %end;
16720 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16721 +            %end;
16722 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16723 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16724 +                 %let measure=ASE;
16725 +              %end;
16726 +              %else %do;
16727 +                 %let measure=MISC;
16728 +              %end;
16729 +            %end;
16730 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16731 +              %let measure=ASE;
16732 +            %end;
16733 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16734 +               %let measure = LIFT;
16735 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16736 +               %if &dsid %then %do;
16737 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16738 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16739 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16740 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16741 +                 %end;
16742 +               %end;
16743 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16744 +            %end;
16745 +            measure=&measure
16746 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16747 +               event = "&targetEvent"
16748 +            %end;
16749 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16750 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16751 +            %end;
16752 +         %end;
16753 +         %if "&multipleTar" eq "N" %then %do;
16754 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16755 +               CV
16756 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16757 +                 CVNITer = &EM_PROPERTY_CVNITER
16758 +               %end;
16759 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16760 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16761 +               %end;
16762 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16763 +                 CVSeed = &EM_PROPERTY_CVSEED
16764 +               %end;
16765 +            %end;
16766 +         %end;
16767 +       %end;
16768 +      ;
16770 +      %if "&intFlag" ne "Y" %then %do;
16771 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16772 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16773 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16774 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16776 +          SUBTREE &subtree
16777 +          %if "&subtree" eq "NLEAVES" %then %do;
16778 +            =&EM_PROPERTY_NSUBTREE
16779 +          %end;
16780 +          ;
16781 +        %end;
16783 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16784 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16785 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16786 +          %end;
16787 +       %end;
16788 +      %end;
16789 + %end;
16792 + MakeMacro nleaves = nleaves;
16793 + save
16794 + %if "&EM_USER_EMTREE" ne "" %then %do;
16795 +   MODEL=&EM_USER_EMTREE
16796 + %end;
16797 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16798 +   SEQUENCE=&EM_USER_OUTSEQ
16799 + %end;
16800 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16801 +   IMPORTANCE=&EM_USER_OUTIMPORT
16802 + %end;
16803 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16804 +   NODESTAT=&EM_USER_OUTNODES
16805 + %end;
16806 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16807 +   SUMMARY=&EM_USER_OUTSUMMARY
16808 + %end;
16809 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16810 +   STATSBYNODE=&EM_USER_OUTSTATS
16811 + %end;
16812 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16813 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16814 + %end;
16815 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16816 +   Pathlistnonmissing=&EM_USER_OUTPATH
16817 + %end;
16818 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16819 +   RULES = &EM_USER_OUTRULES
16820 + %end;
16821 + ;
16823 + %if "&intFlag" ne "Y" %then %do;
16825 +   %let lookupString = ;
16826 +   %if ^%symexist(EM_OPTION) %then
16827 +      %let EM_OPTION=;
16829 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16830 +      %let lookupString = LOOKUP=SELECT;
16831 +   %end;
16833 +   %let codetext=;
16834 +   %let norescodetxt=;
16836 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16837 +     %let codetext=&codetext DUMMY;
16838 +     %let norescodetxt=&norescodetxt DUMMY;
16839 +   %end;
16840 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16841 +     %let codetext=&codetext NOLEAFID;
16842 +     %let norescodetxt=&norescodetxt NOLEAFID;
16843 +   %end;
16844 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16845 +     %let norescodetxt=&norescodetxt NOPRED;
16846 +   %end;
16848 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16849 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16851 +   %if &nnpmml %then %do;
16852 +     code pmml;
16853 +   %end;
16855 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16856 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16857 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16858 +   %end;
16859 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16860 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16861 +   %end;
16862 + %end;
16864 + run;
16865 + quit;
16867 + /*%em_checkerror(); */
16868 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16869 +   /* Delete DMDB catalog */
16870 +   proc datasets lib=work nolist;
16871 +       delete _treeDMDB / mt=cat;
16872 +  run;
16873 +  %end;
16875 + %if &nnpmml %then %do;
16876 +    ods pmml close;
16877 + %end;
16879 +  %doendm:
16881 +%mend em_tree_runTreeProcedure;
16883 +%macro em_tree_createFitStats( multipleTar= );
16886 +  /* create targetTable is multipleTar eq Y */
16887 +  data temptarget;
16888 +    set &EM_DATA_VARIABLESET;
16889 +    where ROLE="TARGET";
16890 +  run;
16892 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16893 +   data &EM_USER_EMOUTFIT;
16894 +     length target $32;
16895 +     merge work.fit_train
16896 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16897 +       work.fit_valid
16898 +     %end;
16899 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16900 +       work.fit_test
16901 +     %end;
16902 +     ;
16903 +     %if "&multipleTar" eq "N" %then %do;
16904 +       target="%EM_TARGET";
16905 +     %end;
16906 +     %else %do;
16907 +       target = _TARGET_;
16908 +     %end;
16909 +     drop _NW_ _SUMW_
16910 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16911 +        _VSUMW_
16912 +     %end;
16913 +     ;
16914 +   run;
16916 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16917 +     proc datasets library=work nolist;
16918 +       delete fit_valid;
16919 +     run;
16920 +   %end;
16921 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16922 +     proc datasets library=work nolist;
16923 +       delete fit_test;
16924 +     run;
16925 +   %end;
16927 +%mend em_tree_createFitStats;
16930 +%macro em_tree_makeEnglishRules;
16932 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16933 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16935 +  /* verify that necessary tables exist and if not, skip processing */
16936 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16937 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16938 +    %goto doendm;
16939 +  %end;
16940 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16941 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16942 +    %goto doendm;
16943 +  %end;
16945 +  /* determine length of variable in outpath dataset */
16946 +  %let vlength= ;
16947 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16948 +  %if &dsid ne %then %do;
16949 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16950 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16951 +  %end;
16952 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16954 +  data tempoutpath;
16955 +    length varname $&vlength;
16956 +    retain varname;
16957 +    set &EM_USER_OUTPATH;
16959 +    if ^missing(variable) then varname=variable;
16960 +    else if ^missing(var_name) then varname=var_name;
16961 +    output;
16962 +  run;
16964 +  /* create an array of generated predicted variable names */
16965 +  %let tree_pred_vars = ;
16966 +  %let tree_pred_label = ;
16967 +  %let numpred= 0;
16968 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16970 +    data _null_;
16971 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16972 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16973 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
16974 +     if eof then
16975 +       call symput('numpred', strip(put(_N_, BEST.)));
16976 +    run;
16977 +  %end;
16979 +  /* determine if NPRIORS exists in outnodes  */
16980 +  %local nprior_flag;
16981 +  data _null_;
16982 +    set &EM_USER_OUTNODES(obs=2) end=eof;
16983 +    if eof then do;
16984 +      call symput('nprior_flag', strip(put(npriors, best.)));
16985 +    end;
16986 +  run;
16988 +  proc sort data=tempoutpath; by node; run;
16989 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
16991 +  data tempoutpath;
16992 +    merge tempoutpath(in=_a) outnodes(keep= node
16993 +    %if "&nprior_flag" ne "." %then %do;
16994 +      NPRIORS
16995 +    %end;
16996 +    %else %do;
16997 +      N
16998 +    %end;
16999 +    %if &numpred gt 0 %then %do;
17000 +      %do i=1 %to &numpred;
17001 +        &&tree_pred_vars&i
17002 +      %end;
17003 +    %end;
17004 +    );
17005 +    by node;
17006 +    if _a;
17007 +  run;
17009 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17011 +  data _null_;
17012 +    file x;
17013 +    set tempoutpath;
17014 +    by node descending varname;
17015 +    retain origvar oldnode string;
17016 +    length origvar $32 oldnode 8 string $5000;
17018 +    if _N_ = 1 then do;
17019 +      origvar = varname;
17020 +      oldnode = node;
17021 +    end;
17023 +    if first.node then do;
17024 +       put "&EM_CODEBAR";
17025 +       put " Node = " node;
17026 +       put "&EM_CODEBAR";
17027 +    end;
17029 +      if first.varname then do;
17030 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17031 +            if MISSING(CHARACTER_VALUE) then do;
17032 +             if NUMERIC_VALUE ne .  then do;
17033 +              if ^first.node then do;
17034 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17035 +              end;
17036 +              else do;
17037 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17038 +              end;
17039 +             end;
17040 +            end;
17041 +            else do;
17042 +              if ^first.node then do;
17043 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17044 +              end;
17045 +              else do;
17046 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17047 +              end;
17048 +             end;
17049 +         end;
17050 +         else if RELATION in ("=") then do;
17051 +            if ^first.node then do;
17052 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17053 +            end;
17054 +            else do;
17055 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17056 +            end;
17057 +         end;
17058 +         else if RELATION in ("ISMISSING") then do;
17059 +            if ^first.node then do;
17060 +              string = " AND "|| strip(varname) || " equals Missing";
17061 +            end;
17062 +            else do;
17063 +              string = "if "|| strip(varname) ||" equals Missing";
17064 +            end;
17065 +         end;
17066 +         else if RELATION in ("ISNOTMISSING") then do;
17067 +            if ^first.node then do;
17068 +              string = " AND "|| strip(varname) || " equals All Values";
17069 +            end;
17070 +            else do;
17071 +              string = "if "|| strip(varname) ||" equals All Values";
17072 +            end;
17073 +         end;
17074 +         if ^missing(varname) then origvar = varname;
17075 +         oldnode=node;
17077 +      end;
17078 +      else do;
17079 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17080 +          if MISSING(CHARACTER_VALUE) then do;
17081 +           if  NUMERIC_VALUE ne .  then do;
17082 +            if ^MISSING(string) then
17083 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17084 +            else
17085 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17086 +           end;
17087 +          end;
17088 +          else do;
17089 +            if ^MISSING(string) then
17090 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17091 +            else
17092 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17093 +          end;
17095 +         end;
17096 +         else if RELATION in ("=") then do;
17097 +           string = strip(string)||", "||strip(character_value);
17098 +         end;
17099 +         else if RELATION in ("ISMISSING") then do;
17101 +         end;
17102 +         if ^missing(varname) then origvar = varname;
17103 +         oldnode=node;
17104 +      end;
17105 +      if last.varname then do;
17106 +         if RELATION in ("ISMISSING") then do;
17107 +           if ^first.varname then do;
17108 +             string = strip(string) || " or MISSING";
17109 +           end;
17110 +         end;
17111 +         put string;
17112 +         if ^missing(varname) then origvar = varname;
17113 +         oldnode=node;
17114 +      end;
17116 +      if last.node then do;
17117 +         put "then ";
17118 +         put " Tree Node Identifier   = " node;
17120 +         %if "&nprior_flag" ne "." %then %do;
17121 +           put " Number of Observations = " NPRIORS;
17122 +         %end;
17123 +         %else %do;
17124 +           put " Number of Observations = " N;
17125 +         %end;
17127 +         %if &numpred gt 0 %then %do;
17128 +           %do i=1 %to &numpred;
17129 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17130 +           %end;
17131 +         %end;
17133 +         put " ";
17134 +         if ^missing(varname) then origvar = varname;
17135 +         oldnode=node;
17136 +      end;
17138 +  run;
17140 +  proc datasets lib=work nolist;
17141 +    delete tempoutpath outnodes;
17142 +  run;
17144 +  %doendm:
17145 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE6.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE6.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER6_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE6.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER6_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE6.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595234 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 428327936 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 813160 bytes of work memory.
NOTE: The subtree sequence contains 10 subtrees. The largest has 19 nodes and 10 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Created macro variable NLEAVES equal to 8.
NOTE: The data set EMWS3.TREE6_OUTIMPORT has 44 observations and 6 variables.
NOTE: The data set EMWS3.TREE6_EMTREE has 1522 observations and 4 variables.
NOTE: The data set EMWS3.TREE6_OUTNODES has 15 observations and 54 variables.
NOTE: The data set EMWS3.TREE6_OUTPATH has 88 observations and 7 variables.
NOTE: The data set EMWS3.TREE6_OUTRULES has 207 observations and 6 variables.
NOTE: The data set EMWS3.TREE6_OUTSEQ has 10 observations and 20 variables.
NOTE: The data set EMWS3.TREE6_OUTSTATS has 405 observations and 5 variables.
NOTE: The data set EMWS3.TREE6_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE6_OUTTOPOLOGY has 15 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE6.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER6_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE6.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.07 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER6_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE6.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.33 seconds
      cpu time            0.07 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE6_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 88 observations read from the data set EMWS3.TREE6_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE6_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE6_OUTNODES.
NOTE: The data set WORK.OUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 15 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:32,
      Create Time=23Nov2023:22:13:32
 
NOTE: 184 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: Fileref X has been deassigned.
17147
17148  *------------------------------------------------------------*;
17149  * End TRAIN: Tree6;
17150  *------------------------------------------------------------*;
 
17151  *------------------------------------------------------------*;
17152  * Close any missing semi colons;
17153  *------------------------------------------------------------*;
17154  ;
17155  ;
17156  ;
17157  ;
17158  quit;
17159  *------------------------------------------------------------*;
17160  * Close any unbalanced quotes;
17161  *------------------------------------------------------------*;
17162  /*; *"; *'; */
17163  ;
17164  run;
17165  quit;
17166  /* Reset EM Options */
17167  options formchar="|----|+|---+=|-/\<>*";
17168  options nocenter ls=256 ps=10000;
17169  goptions reset=all device=GIF NODISPLAY;
 
17170  proc sort data=WORK.EM_USER_REPORT;
17171  by ID VIEW;
17172  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:33
*------------------------------------------------------------*
17274  %let EMEXCEPTIONSTRING=;
17275  *------------------------------------------------------------*;
17276  * SCORE: Tree6;
17277  *------------------------------------------------------------*;
17278  %let EM_ACTION = SCORE;
17279  %let syscc = 0;
17280  %macro main;
17281
17282    %if %upcase(&EM_ACTION) = CREATE %then %do;
17283      filename temp catalog 'sashelp.emmodl.tree_create.source';
17284      %include temp;
17285      filename temp;
17286
17287      %em_tree_create;
17288    %end;
17289
17290     %else
17291     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17292
17293         filename temp catalog 'sashelp.emmodl.tree_train.source';
17294         %include temp;
17295         filename temp;
17296         %em_tree_train;
17297     %end;
17298
17299    %else
17300    %if %upcase(&EM_ACTION) = SCORE %then %do;
17301      filename temp catalog 'sashelp.emmodl.tree_score.source';
17302      %include temp;
17303      filename temp;
17304
17305      %em_tree_score;
17306
17307    %end;
17308
17309    %else
17310    %if %upcase(&EM_ACTION) = REPORT %then %do;
17311
17312         filename temp catalog 'sashelp.emmodl.tree_report.source';
17313         %include temp;
17314         filename temp;
17315
17316         %em_tree_report;
17317     %end;
17318
17319    %else
17320    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17321
17322         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17323         %include temp;
17324         filename temp;
17325         %EM_TREE_OPENTREEVIEWER;
17326
17327     %end;
17328
17329    %else
17330    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17331
17332         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17333         %include temp;
17334         filename temp;
17335         %EM_TREE_CLOSETREEVIEWER;
17336
17337     %end;
17338
17339
17340     %doendm:
17341  %mend main;
17342
17343  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17345 +%macro em_tree_score;
17347 +   /* determine if multiple targets will be processed */
17348 +   %let em_tree_multipleTargets=N;
17349 +   %let em_tree_numTarget=1;
17350 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17351 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17352 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17353 +         %let em_tree_multipleTargets=N;
17354 +      %end;
17355 +      %else %do;
17356 +         /* create macro array of targets  */
17357 +         data _null_;
17358 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17359 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17360 +           if eof then
17361 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17362 +        run;
17364 +        %if &em_tree_numTarget gt 1 %then %do;
17365 +           %let em_tree_multipleTargets=Y;
17366 +        %end;
17367 +      %end;
17368 +   %end;
17370 +   /* build flow and publish scoring code */
17371 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17372 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17374 +   filename treeflow "&EM_USER_TREEFLOW";
17375 +   filename treepub "&EM_USER_TREEPUBLISH";
17377 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17378 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17380 +   %em_copyfile(infref=treeflow, outfref=flowref);
17381 +   %em_copyfile(infref=treepub, outfref=pubref);
17383 +   filename treeflow;
17384 +   filename treepub;
17386 +   /* if priors are used, add code to generate unadjusted residuals in export */
17387 +   %let useAdjPriors = N;
17388 +   data _null_;
17389 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17390 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17391 +   run;
17392 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17393 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17394 +      %include temp;
17395 +      filename temp;
17397 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17398 +      filename adjref "&EM_USER_adjResidualCode";
17399 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17401 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17403 +      filename adjref;
17404 +   %end;
17406 +   /* LEAF */
17407 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17408 +      data _null_;
17409 +        file flowref mod;
17410 +        put 'drop _LEAF_;';
17411 +      run;
17413 +      data _null_;
17414 +        file pubref mod;
17415 +        put 'drop _LEAF_;';
17416 +      run;
17418 +   %end;
17420 +   filename flowref;
17421 +   filename pubref;
17423 +   /* em_metachange code */
17424 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17425 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17426 +   %end;
17428 +   /* variable selection based on importance stat    */
17429 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17430 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17431 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17432 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17433 +     %let obs = %sysfunc(fetch(&dsid));
17434 +     %do %while(&obs=0);
17435 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17436 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17437 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17438 +       %let obs = %sysfunc(fetch(&dsid));
17439 +     %end;
17440 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17441 +   %end;
17443 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17444 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17445 +    %let tree_pred_vars = ;
17446 +    %let tree_pred_lvl =;
17447 +    %let numpred= 0;
17449 +    data _null_;
17450 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17451 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17452 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17453 +     if eof then
17454 +       call symput('numpred', strip(put(_N_, BEST.)));
17455 +    run;
17456 +   %end;
17458 +   %if &numpred ne 0 %then %do;
17459 +    %do i=1 %to &numpred;
17460 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17461 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17462 +    %end;
17463 +   %end;
17465 +   /* determine if multiple targets will be processed */
17466 +   %let em_tree_multipleTargets=N;
17467 +   %let em_tree_numTarget=1;
17468 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17469 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17470 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17471 +         %let em_tree_multipleTargets=N;
17472 +      %end;
17473 +      %else %do;
17474 +        data _null_;
17475 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17476 +          if eof then
17477 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17478 +        run;
17480 +        %if &em_tree_numTarget gt 1 %then %do;
17481 +           %let em_tree_multipleTargets=Y;
17482 +        %end;
17483 +     %end;
17484 +   %end;
17486 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17487 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17489 +      /* variable importance */
17490 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17491 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17493 +         %let validexist=0;
17494 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17495 +           %let validexist=1;
17496 +         %end;
17498 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17499 +         /* and the columns may not be generated                                                                                 */
17500 +         %let em_tree_cvexists=;
17501 +         %let em_tree_surrexists=.;
17502 +         data _null_;
17503 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17504 +            if eof then do ;
17505 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17506 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17507 +            end;
17508 +         run;
17510 +         data &EM_USER_OUTIMPORT;
17511 +            set &EM_USER_OUTIMPORT;
17513 +            /* format columns based on Precison value specified */
17514 +            format importance 15.&EM_PROPERTY_PRECISION
17515 +                 %if &validexist %then %do;
17516 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17517 +                 %end;
17518 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17519 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17520 +                 %end;
17521 +            ;
17522 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17523 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17524 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17525 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17526 +                 %if "&em_tree_surrexists" ne "" %then %do;
17527 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17528 +                 %end;
17529 +                 %if &validexist %then %do;
17530 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17531 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17532 +                 %end;
17533 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17534 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17535 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17536 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17537 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17538 +                 %end;
17539 +            ;
17540 +         run;
17542 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17543 +      %end;
17544 +   %end;
17546 +   %doendm:
17547 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:33,
      Create Time=23Nov2023:22:13:33
 
NOTE: 505 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:33,
      Create Time=23Nov2023:22:13:33
 
NOTE: 425 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25218,
      Last Modified=23Nov2023:22:13:33,
      Create Time=23Nov2023:22:13:33
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21645,
      Last Modified=23Nov2023:22:13:33,
      Create Time=23Nov2023:22:13:33
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE6_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 44 observations read from the data set EMWS3.TREE6_OUTIMPORT.
NOTE: The data set EMWS3.TREE6_OUTIMPORT has 44 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
17548
17549  *------------------------------------------------------------*;
17550  * End SCORE: Tree6;
17551  *------------------------------------------------------------*;
 
17552  proc sort data=WORK.EM_METACHANGE;
17553  by key uname;
17554  run;
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17555  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\CDELTA_TRAIN.sas";
17556  data _null_;
17557  file x;
17558  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17559  put 'ROLE = "ASSESS";';
17560  put 'end;';
17561  put 'else ';
17562  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17563  put 'ROLE = "ASSESS";';
17564  put 'end;';
17565  put 'else ';
17566  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17567  put 'ROLE = "ASSESS";';
17568  put 'end;';
17569  put 'else ';
17570  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17571  put 'ROLE = "ASSESS";';
17572  put 'end;';
17573  put 'else ';
17574  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17575  put 'ROLE = "ASSESS";';
17576  put 'end;';
17577  put 'else ';
17578  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17579  put 'ROLE = "ASSESS";';
17580  put 'end;';
17581  put 'else ';
17582  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17583  put 'ROLE = "ASSESS";';
17584  put 'end;';
17585  put 'else ';
17586  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17587  put 'ROLE = "ASSESS";';
17588  put 'end;';
17589  put 'else ';
17590  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17591  put 'ROLE = "ASSESS";';
17592  put 'end;';
17593  put 'else ';
17594  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17595  put 'ROLE = "ASSESS";';
17596  put 'end;';
17597  put 'else ';
17598  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17599  put 'ROLE = "ASSESS";';
17600  put 'end;';
17601  put 'else ';
17602  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17603  put 'ROLE = "ASSESS";';
17604  put 'end;';
17605  put 'else ';
17606  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD1" then do;';
17607  put 'ROLE = "REJECTED";';
17608  put 'end;';
17609  put 'else ';
17610  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD10" then do;';
17611  put 'ROLE = "REJECTED";';
17612  put 'end;';
17613  put 'else ';
17614  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD12" then do;';
17615  put 'ROLE = "REJECTED";';
17616  put 'end;';
17617  put 'else ';
17618  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD13" then do;';
17619  put 'ROLE = "REJECTED";';
17620  put 'end;';
17621  put 'else ';
17622  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD14" then do;';
17623  put 'ROLE = "REJECTED";';
17624  put 'end;';
17625  put 'else ';
17626  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD15" then do;';
17627  put 'ROLE = "REJECTED";';
17628  put 'end;';
17629  put 'else ';
17630  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD16" then do;';
17631  put 'ROLE = "REJECTED";';
17632  put 'end;';
17633  put 'else ';
17634  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD17" then do;';
17635  put 'ROLE = "REJECTED";';
17636  put 'end;';
17637  put 'else ';
17638  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD18" then do;';
17639  put 'ROLE = "REJECTED";';
17640  put 'end;';
17641  put 'else ';
17642  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD19" then do;';
17643  put 'ROLE = "REJECTED";';
17644  put 'end;';
17645  put 'else ';
17646  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD20" then do;';
17647  put 'ROLE = "REJECTED";';
17648  put 'end;';
17649  put 'else ';
17650  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD21" then do;';
17651  put 'ROLE = "REJECTED";';
17652  put 'end;';
17653  put 'else ';
17654  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD22" then do;';
17655  put 'ROLE = "REJECTED";';
17656  put 'end;';
17657  put 'else ';
17658  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD23" then do;';
17659  put 'ROLE = "REJECTED";';
17660  put 'end;';
17661  put 'else ';
17662  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD24" then do;';
17663  put 'ROLE = "REJECTED";';
17664  put 'end;';
17665  put 'else ';
17666  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD25" then do;';
17667  put 'ROLE = "REJECTED";';
17668  put 'end;';
17669  put 'else ';
17670  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD26" then do;';
17671  put 'ROLE = "REJECTED";';
17672  put 'end;';
17673  put 'else ';
17674  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD27" then do;';
17675  put 'ROLE = "REJECTED";';
17676  put 'end;';
17677  put 'else ';
17678  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD28" then do;';
17679  put 'ROLE = "REJECTED";';
17680  put 'end;';
17681  put 'else ';
17682  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD29" then do;';
17683  put 'ROLE = "REJECTED";';
17684  put 'end;';
17685  put 'else ';
17686  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD30" then do;';
17687  put 'ROLE = "REJECTED";';
17688  put 'end;';
17689  put 'else ';
17690  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD31" then do;';
17691  put 'ROLE = "REJECTED";';
17692  put 'end;';
17693  put 'else ';
17694  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD32" then do;';
17695  put 'ROLE = "REJECTED";';
17696  put 'end;';
17697  put 'else ';
17698  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD33" then do;';
17699  put 'ROLE = "REJECTED";';
17700  put 'end;';
17701  put 'else ';
17702  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD34" then do;';
17703  put 'ROLE = "REJECTED";';
17704  put 'end;';
17705  put 'else ';
17706  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD35" then do;';
17707  put 'ROLE = "REJECTED";';
17708  put 'end;';
17709  put 'else ';
17710  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD36" then do;';
17711  put 'ROLE = "REJECTED";';
17712  put 'end;';
17713  put 'else ';
17714  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD37" then do;';
17715  put 'ROLE = "REJECTED";';
17716  put 'end;';
17717  put 'else ';
17718  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD38" then do;';
17719  put 'ROLE = "REJECTED";';
17720  put 'end;';
17721  put 'else ';
17722  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD39" then do;';
17723  put 'ROLE = "REJECTED";';
17724  put 'end;';
17725  put 'else ';
17726  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD40" then do;';
17727  put 'ROLE = "REJECTED";';
17728  put 'end;';
17729  put 'else ';
17730  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD41" then do;';
17731  put 'ROLE = "REJECTED";';
17732  put 'end;';
17733  put 'else ';
17734  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD42" then do;';
17735  put 'ROLE = "REJECTED";';
17736  put 'end;';
17737  put 'else ';
17738  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD43" then do;';
17739  put 'ROLE = "REJECTED";';
17740  put 'end;';
17741  put 'else ';
17742  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD44" then do;';
17743  put 'ROLE = "REJECTED";';
17744  put 'end;';
17745  put 'else ';
17746  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD6" then do;';
17747  put 'ROLE = "REJECTED";';
17748  put 'end;';
17749  put 'else ';
17750  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD8" then do;';
17751  put 'ROLE = "REJECTED";';
17752  put 'end;';
17753  put 'else ';
17754  put 'if upcase(NAME) = "TEXTCLUSTER6_SVD9" then do;';
17755  put 'ROLE = "REJECTED";';
17756  put 'end;';
17757  put 'else ';
17758  put 'if upcase(NAME) = "_NODE_" then do;';
17759  put 'ROLE = "SEGMENT";';
17760  put 'LEVEL = "NOMINAL";';
17761  put 'end;';
17762  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:33,
      Create Time=19Nov2023:18:25:50
 
NOTE: 204 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17763  filename x;
NOTE: Fileref X has been deassigned.
 
17764  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas";
17765  *------------------------------------------------------------*;
17766  * Tree6: Scoring DATA data;
17767  *------------------------------------------------------------*;
17768  data EMWS3.Tree6_TRAIN
17769  / view=EMWS3.Tree6_TRAIN
17770  ;
17771  set EMWS3.TextCluster6_TRAIN
17772  ;
17773  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas.
17774 +****************************************************************;
17775 +******             DECISION TREE SCORING CODE             ******;
17776 +****************************************************************;
17777 +
17778 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17779 +LENGTH F_Category  $   22;
17780 +LENGTH I_Category  $   22;
17781 +LENGTH U_Category  $   22;
17782 +LENGTH _WARN_  $    4;
17783 +
17784 +******              LABELS FOR NEW VARIABLES              ******;
17785 +label _NODE_ = 'Node' ;
17786 +label _LEAF_ = 'Leaf' ;
17787 +label P_CategoryHR = 'Predicted: Category=HR' ;
17788 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17789 +label P_CategoryINFORMATION_TECHNOLOGY =
17790 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17791 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17792 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17793 +label P_CategoryBUSINESS_DEVELOPMENT =
17794 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17795 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17796 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17797 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17798 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17799 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17800 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17801 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17802 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17803 +label Q_CategoryINFORMATION_TECHNOLOGY =
17804 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17805 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17806 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17807 +label Q_CategoryBUSINESS_DEVELOPMENT =
17808 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17809 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17810 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17811 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17812 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17813 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17814 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17815 +label V_CategoryHR = 'Validated: Category=HR' ;
17816 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17817 +label V_CategoryINFORMATION_TECHNOLOGY =
17818 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17819 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17820 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17821 +label V_CategoryBUSINESS_DEVELOPMENT =
17822 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17823 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17824 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17825 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17826 +label V_CategorySALES = 'Validated: Category=SALES' ;
17827 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17828 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17829 +label R_CategoryHR = 'Residual: Category=HR' ;
17830 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17831 +label R_CategoryINFORMATION_TECHNOLOGY =
17832 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17833 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17834 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17835 +label R_CategoryBUSINESS_DEVELOPMENT =
17836 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17837 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17838 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17839 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17840 +label R_CategorySALES = 'Residual: Category=SALES' ;
17841 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17842 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17843 +label F_Category = 'From: Category' ;
17844 +label I_Category = 'Into: Category' ;
17845 +label U_Category = 'Unnormalized Into: Category' ;
17846 +label _WARN_ = 'Warnings' ;
17847 +
17848 +
17849 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17850 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17851 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17852 +
17853 +
17854 +_ARBFMT_22 = PUT( Category , $22.);
17855 + %DMNORMCP( _ARBFMT_22, F_Category );
17856 +
17857 +******             ASSIGN OBSERVATION TO NODE             ******;
17858 +IF  NOT MISSING(TextCluster6_SVD4 ) AND
17859 +  TextCluster6_SVD4  <    -0.25373725645761 THEN DO;
17860 +  _NODE_  =                    2;
17861 +  _LEAF_  =                    1;
17862 +  P_CategoryHR  =     0.77419354838709;
17863 +  P_CategoryDESIGNER  =                    0;
17864 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
17865 +  P_CategoryTEACHER  =                    0;
17866 +  P_CategoryADVOCATE  =     0.04838709677419;
17867 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
17868 +  P_CategoryHEALTHCARE  =     0.04838709677419;
17869 +  P_CategoryFITNESS  =     0.01612903225806;
17870 +  P_CategoryOTHER  =     0.01612903225806;
17871 +  P_CategorySALES  =     0.03225806451612;
17872 +  P_CategoryCONSULTANT  =     0.03225806451612;
17873 +  P_CategoryDIGITAL_MEDIA  =                    0;
17874 +  Q_CategoryHR  =     0.77419354838709;
17875 +  Q_CategoryDESIGNER  =                    0;
17876 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
17877 +  Q_CategoryTEACHER  =                    0;
17878 +  Q_CategoryADVOCATE  =     0.04838709677419;
17879 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
17880 +  Q_CategoryHEALTHCARE  =     0.04838709677419;
17881 +  Q_CategoryFITNESS  =     0.01612903225806;
17882 +  Q_CategoryOTHER  =     0.01612903225806;
17883 +  Q_CategorySALES  =     0.03225806451612;
17884 +  Q_CategoryCONSULTANT  =     0.03225806451612;
17885 +  Q_CategoryDIGITAL_MEDIA  =                    0;
17886 +  V_CategoryHR  =     0.75675675675675;
17887 +  V_CategoryDESIGNER  =                    0;
17888 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02702702702702;
17889 +  V_CategoryTEACHER  =                    0;
17890 +  V_CategoryADVOCATE  =                    0;
17891 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
17892 +  V_CategoryHEALTHCARE  =     0.08108108108108;
17893 +  V_CategoryFITNESS  =     0.02702702702702;
17894 +  V_CategoryOTHER  =     0.02702702702702;
17895 +  V_CategorySALES  =                    0;
17896 +  V_CategoryCONSULTANT  =     0.05405405405405;
17897 +  V_CategoryDIGITAL_MEDIA  =                    0;
17898 +  I_Category  = 'HR' ;
17899 +  U_Category  = 'HR' ;
17900 +  END;
17901 +ELSE DO;
17902 +  IF  NOT MISSING(TextCluster6_SVD5 ) AND
17903 +    TextCluster6_SVD5  <    -0.29159435927799 THEN DO;
17904 +    _NODE_  =                    6;
17905 +    _LEAF_  =                    2;
17906 +    P_CategoryHR  =                    0;
17907 +    P_CategoryDESIGNER  =     0.02564102564102;
17908 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17909 +    P_CategoryTEACHER  =     0.84615384615384;
17910 +    P_CategoryADVOCATE  =     0.05128205128205;
17911 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17912 +    P_CategoryHEALTHCARE  =                    0;
17913 +    P_CategoryFITNESS  =     0.07692307692307;
17914 +    P_CategoryOTHER  =                    0;
17915 +    P_CategorySALES  =                    0;
17916 +    P_CategoryCONSULTANT  =                    0;
17917 +    P_CategoryDIGITAL_MEDIA  =                    0;
17918 +    Q_CategoryHR  =                    0;
17919 +    Q_CategoryDESIGNER  =     0.02564102564102;
17920 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17921 +    Q_CategoryTEACHER  =     0.84615384615384;
17922 +    Q_CategoryADVOCATE  =     0.05128205128205;
17923 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17924 +    Q_CategoryHEALTHCARE  =                    0;
17925 +    Q_CategoryFITNESS  =     0.07692307692307;
17926 +    Q_CategoryOTHER  =                    0;
17927 +    Q_CategorySALES  =                    0;
17928 +    Q_CategoryCONSULTANT  =                    0;
17929 +    Q_CategoryDIGITAL_MEDIA  =                    0;
17930 +    V_CategoryHR  =              0.03125;
17931 +    V_CategoryDESIGNER  =               0.0625;
17932 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17933 +    V_CategoryTEACHER  =               0.6875;
17934 +    V_CategoryADVOCATE  =              0.03125;
17935 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17936 +    V_CategoryHEALTHCARE  =                    0;
17937 +    V_CategoryFITNESS  =              0.03125;
17938 +    V_CategoryOTHER  =              0.15625;
17939 +    V_CategorySALES  =                    0;
17940 +    V_CategoryCONSULTANT  =                    0;
17941 +    V_CategoryDIGITAL_MEDIA  =                    0;
17942 +    I_Category  = 'TEACHER' ;
17943 +    U_Category  = 'TEACHER' ;
17944 +    END;
17945 +  ELSE DO;
17946 +    IF  NOT MISSING(TextCluster6_SVD2 ) AND
17947 +           0.2593230243674 <= TextCluster6_SVD2  THEN DO;
17948 +      _NODE_  =                   11;
17949 +      _LEAF_  =                    8;
17950 +      P_CategoryHR  =                    0;
17951 +      P_CategoryDESIGNER  =     0.03333333333333;
17952 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
17953 +      P_CategoryTEACHER  =                    0;
17954 +      P_CategoryADVOCATE  =     0.02222222222222;
17955 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17956 +      P_CategoryHEALTHCARE  =     0.03333333333333;
17957 +      P_CategoryFITNESS  =                    0;
17958 +      P_CategoryOTHER  =     0.06666666666666;
17959 +      P_CategorySALES  =                    0;
17960 +      P_CategoryCONSULTANT  =     0.23333333333333;
17961 +      P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
17962 +      Q_CategoryHR  =                    0;
17963 +      Q_CategoryDESIGNER  =     0.03333333333333;
17964 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
17965 +      Q_CategoryTEACHER  =                    0;
17966 +      Q_CategoryADVOCATE  =     0.02222222222222;
17967 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17968 +      Q_CategoryHEALTHCARE  =     0.03333333333333;
17969 +      Q_CategoryFITNESS  =                    0;
17970 +      Q_CategoryOTHER  =     0.06666666666666;
17971 +      Q_CategorySALES  =                    0;
17972 +      Q_CategoryCONSULTANT  =     0.23333333333333;
17973 +      Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
17974 +      V_CategoryHR  =                    0;
17975 +      V_CategoryDESIGNER  =      0.0377358490566;
17976 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
17977 +      V_CategoryTEACHER  =                    0;
17978 +      V_CategoryADVOCATE  =      0.0188679245283;
17979 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
17980 +      V_CategoryHEALTHCARE  =      0.0188679245283;
17981 +      V_CategoryFITNESS  =                    0;
17982 +      V_CategoryOTHER  =      0.0566037735849;
17983 +      V_CategorySALES  =      0.0188679245283;
17984 +      V_CategoryCONSULTANT  =     0.16981132075471;
17985 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
17986 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
17987 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
17988 +      END;
17989 +    ELSE DO;
17990 +      IF  NOT MISSING(TextCluster6_SVD11 ) AND
17991 +            0.20157647365093 <= TextCluster6_SVD11  THEN DO;
17992 +        _NODE_  =                   13;
17993 +        _LEAF_  =                    7;
17994 +        P_CategoryHR  =                0.025;
17995 +        P_CategoryDESIGNER  =                    0;
17996 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17997 +        P_CategoryTEACHER  =                    0;
17998 +        P_CategoryADVOCATE  =                0.075;
17999 +        P_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18000 +        P_CategoryHEALTHCARE  =                    0;
18001 +        P_CategoryFITNESS  =                0.825;
18002 +        P_CategoryOTHER  =                    0;
18003 +        P_CategorySALES  =                0.025;
18004 +        P_CategoryCONSULTANT  =                    0;
18005 +        P_CategoryDIGITAL_MEDIA  =                0.025;
18006 +        Q_CategoryHR  =                0.025;
18007 +        Q_CategoryDESIGNER  =                    0;
18008 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18009 +        Q_CategoryTEACHER  =                    0;
18010 +        Q_CategoryADVOCATE  =                0.075;
18011 +        Q_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18012 +        Q_CategoryHEALTHCARE  =                    0;
18013 +        Q_CategoryFITNESS  =                0.825;
18014 +        Q_CategoryOTHER  =                    0;
18015 +        Q_CategorySALES  =                0.025;
18016 +        Q_CategoryCONSULTANT  =                    0;
18017 +        Q_CategoryDIGITAL_MEDIA  =                0.025;
18018 +        V_CategoryHR  =                    0;
18019 +        V_CategoryDESIGNER  =                    0;
18020 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.05882352941176;
18021 +        V_CategoryTEACHER  =                    0;
18022 +        V_CategoryADVOCATE  =     0.05882352941176;
18023 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18024 +        V_CategoryHEALTHCARE  =     0.05882352941176;
18025 +        V_CategoryFITNESS  =      0.8235294117647;
18026 +        V_CategoryOTHER  =                    0;
18027 +        V_CategorySALES  =                    0;
18028 +        V_CategoryCONSULTANT  =                    0;
18029 +        V_CategoryDIGITAL_MEDIA  =                    0;
18030 +        I_Category  = 'FITNESS' ;
18031 +        U_Category  = 'FITNESS' ;
18032 +        END;
18033 +      ELSE DO;
18034 +        IF  NOT MISSING(TextCluster6_SVD7 ) AND
18035 +              0.05623637538451 <= TextCluster6_SVD7  THEN DO;
18036 +          IF  NOT MISSING(TextCluster6_SVD2 ) AND
18037 +            TextCluster6_SVD2  <    -0.13866764992338 THEN DO;
18038 +            _NODE_  =                   18;
18039 +            _LEAF_  =                    5;
18040 +            P_CategoryHR  =     0.05194805194805;
18041 +            P_CategoryDESIGNER  =     0.03896103896103;
18042 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18043 +            P_CategoryTEACHER  =     0.19480519480519;
18044 +            P_CategoryADVOCATE  =      0.1038961038961;
18045 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
18046 +            P_CategoryHEALTHCARE  =     0.01298701298701;
18047 +            P_CategoryFITNESS  =     0.07792207792207;
18048 +            P_CategoryOTHER  =     0.03896103896103;
18049 +            P_CategorySALES  =     0.35064935064935;
18050 +            P_CategoryCONSULTANT  =     0.03896103896103;
18051 +            P_CategoryDIGITAL_MEDIA  =     0.02597402597402;
18052 +            Q_CategoryHR  =     0.05194805194805;
18053 +            Q_CategoryDESIGNER  =     0.03896103896103;
18054 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18055 +            Q_CategoryTEACHER  =     0.19480519480519;
18056 +            Q_CategoryADVOCATE  =      0.1038961038961;
18057 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
18058 +            Q_CategoryHEALTHCARE  =     0.01298701298701;
18059 +            Q_CategoryFITNESS  =     0.07792207792207;
18060 +            Q_CategoryOTHER  =     0.03896103896103;
18061 +            Q_CategorySALES  =     0.35064935064935;
18062 +            Q_CategoryCONSULTANT  =     0.03896103896103;
18063 +            Q_CategoryDIGITAL_MEDIA  =     0.02597402597402;
18064 +            V_CategoryHR  =     0.04255319148936;
18065 +            V_CategoryDESIGNER  =      0.1063829787234;
18066 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18067 +            V_CategoryTEACHER  =      0.1063829787234;
18068 +            V_CategoryADVOCATE  =     0.17021276595744;
18069 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02127659574468;
18070 +            V_CategoryHEALTHCARE  =     0.02127659574468;
18071 +            V_CategoryFITNESS  =      0.1063829787234;
18072 +            V_CategoryOTHER  =     0.04255319148936;
18073 +            V_CategorySALES  =     0.31914893617021;
18074 +            V_CategoryCONSULTANT  =     0.02127659574468;
18075 +            V_CategoryDIGITAL_MEDIA  =     0.04255319148936;
18076 +            I_Category  = 'SALES' ;
18077 +            U_Category  = 'SALES' ;
18078 +            END;
18079 +          ELSE DO;
18080 +            _NODE_  =                   19;
18081 +            _LEAF_  =                    6;
18082 +            P_CategoryHR  =     0.01190476190476;
18083 +            P_CategoryDESIGNER  =     0.48809523809523;
18084 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
18085 +            P_CategoryTEACHER  =                    0;
18086 +            P_CategoryADVOCATE  =                    0;
18087 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
18088 +            P_CategoryHEALTHCARE  =     0.03571428571428;
18089 +            P_CategoryFITNESS  =                    0;
18090 +            P_CategoryOTHER  =     0.02380952380952;
18091 +            P_CategorySALES  =     0.03571428571428;
18092 +            P_CategoryCONSULTANT  =     0.01190476190476;
18093 +            P_CategoryDIGITAL_MEDIA  =     0.33333333333333;
18094 +            Q_CategoryHR  =     0.01190476190476;
18095 +            Q_CategoryDESIGNER  =     0.48809523809523;
18096 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
18097 +            Q_CategoryTEACHER  =                    0;
18098 +            Q_CategoryADVOCATE  =                    0;
18099 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
18100 +            Q_CategoryHEALTHCARE  =     0.03571428571428;
18101 +            Q_CategoryFITNESS  =                    0;
18102 +            Q_CategoryOTHER  =     0.02380952380952;
18103 +            Q_CategorySALES  =     0.03571428571428;
18104 +            Q_CategoryCONSULTANT  =     0.01190476190476;
18105 +            Q_CategoryDIGITAL_MEDIA  =     0.33333333333333;
18106 +            V_CategoryHR  =      0.0204081632653;
18107 +            V_CategoryDESIGNER  =     0.38775510204081;
18108 +            V_CategoryINFORMATION_TECHNOLOGY  =      0.0204081632653;
18109 +            V_CategoryTEACHER  =      0.0204081632653;
18110 +            V_CategoryADVOCATE  =                    0;
18111 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06122448979591;
18112 +            V_CategoryHEALTHCARE  =                    0;
18113 +            V_CategoryFITNESS  =                    0;
18114 +            V_CategoryOTHER  =     0.04081632653061;
18115 +            V_CategorySALES  =     0.08163265306122;
18116 +            V_CategoryCONSULTANT  =      0.0204081632653;
18117 +            V_CategoryDIGITAL_MEDIA  =      0.3469387755102;
18118 +            I_Category  = 'DESIGNER' ;
18119 +            U_Category  = 'DESIGNER' ;
18120 +            END;
18121 +          END;
18122 +        ELSE DO;
18123 +          IF  NOT MISSING(TextCluster6_SVD3 ) AND
18124 +                0.25756950693809 <= TextCluster6_SVD3  THEN DO;
18125 +            _NODE_  =                   17;
18126 +            _LEAF_  =                    4;
18127 +            P_CategoryHR  =                    0;
18128 +            P_CategoryDESIGNER  =                    0;
18129 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18130 +            P_CategoryTEACHER  =                    0;
18131 +            P_CategoryADVOCATE  =     0.01515151515151;
18132 +            P_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
18133 +            P_CategoryHEALTHCARE  =     0.07575757575757;
18134 +            P_CategoryFITNESS  =     0.04545454545454;
18135 +            P_CategoryOTHER  =     0.06060606060606;
18136 +            P_CategorySALES  =     0.07575757575757;
18137 +            P_CategoryCONSULTANT  =     0.12121212121212;
18138 +            P_CategoryDIGITAL_MEDIA  =      0.1060606060606;
18139 +            Q_CategoryHR  =                    0;
18140 +            Q_CategoryDESIGNER  =                    0;
18141 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18142 +            Q_CategoryTEACHER  =                    0;
18143 +            Q_CategoryADVOCATE  =     0.01515151515151;
18144 +            Q_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
18145 +            Q_CategoryHEALTHCARE  =     0.07575757575757;
18146 +            Q_CategoryFITNESS  =     0.04545454545454;
18147 +            Q_CategoryOTHER  =     0.06060606060606;
18148 +            Q_CategorySALES  =     0.07575757575757;
18149 +            Q_CategoryCONSULTANT  =     0.12121212121212;
18150 +            Q_CategoryDIGITAL_MEDIA  =      0.1060606060606;
18151 +            V_CategoryHR  =                    0;
18152 +            V_CategoryDESIGNER  =                    0;
18153 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18154 +            V_CategoryTEACHER  =                    0;
18155 +            V_CategoryADVOCATE  =                    0;
18156 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48717948717948;
18157 +            V_CategoryHEALTHCARE  =     0.12820512820512;
18158 +            V_CategoryFITNESS  =     0.02564102564102;
18159 +            V_CategoryOTHER  =     0.02564102564102;
18160 +            V_CategorySALES  =     0.07692307692307;
18161 +            V_CategoryCONSULTANT  =     0.17948717948717;
18162 +            V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
18163 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18164 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18165 +            END;
18166 +          ELSE DO;
18167 +            _NODE_  =                   16;
18168 +            _LEAF_  =                    3;
18169 +            P_CategoryHR  =     0.00462962962962;
18170 +            P_CategoryDESIGNER  =     0.02314814814814;
18171 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
18172 +            P_CategoryTEACHER  =     0.00925925925925;
18173 +            P_CategoryADVOCATE  =     0.17592592592592;
18174 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
18175 +            P_CategoryHEALTHCARE  =     0.19444444444444;
18176 +            P_CategoryFITNESS  =     0.05555555555555;
18177 +            P_CategoryOTHER  =     0.21759259259259;
18178 +            P_CategorySALES  =     0.09259259259259;
18179 +            P_CategoryCONSULTANT  =     0.10185185185185;
18180 +            P_CategoryDIGITAL_MEDIA  =     0.01388888888888;
18181 +            Q_CategoryHR  =     0.00462962962962;
18182 +            Q_CategoryDESIGNER  =     0.02314814814814;
18183 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
18184 +            Q_CategoryTEACHER  =     0.00925925925925;
18185 +            Q_CategoryADVOCATE  =     0.17592592592592;
18186 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
18187 +            Q_CategoryHEALTHCARE  =     0.19444444444444;
18188 +            Q_CategoryFITNESS  =     0.05555555555555;
18189 +            Q_CategoryOTHER  =     0.21759259259259;
18190 +            Q_CategorySALES  =     0.09259259259259;
18191 +            Q_CategoryCONSULTANT  =     0.10185185185185;
18192 +            Q_CategoryDIGITAL_MEDIA  =     0.01388888888888;
18193 +            V_CategoryHR  =                    0;
18194 +            V_CategoryDESIGNER  =     0.02290076335877;
18195 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02290076335877;
18196 +            V_CategoryTEACHER  =     0.02290076335877;
18197 +            V_CategoryADVOCATE  =     0.18320610687022;
18198 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.08396946564885;
18199 +            V_CategoryHEALTHCARE  =      0.1679389312977;
18200 +            V_CategoryFITNESS  =     0.09923664122137;
18201 +            V_CategoryOTHER  =     0.18320610687022;
18202 +            V_CategorySALES  =     0.08396946564885;
18203 +            V_CategoryCONSULTANT  =     0.11450381679389;
18204 +            V_CategoryDIGITAL_MEDIA  =     0.01526717557251;
18205 +            I_Category  = 'OTHER' ;
18206 +            U_Category  = 'OTHER' ;
18207 +            END;
18208 +          END;
18209 +        END;
18210 +      END;
18211 +    END;
18212 +  END;
18213 +
18214 +*****  RESIDUALS R_ *************;
18215 +IF  F_Category  NE 'HR'
18216 +AND F_Category  NE 'DESIGNER'
18217 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18218 +AND F_Category  NE 'TEACHER'
18219 +AND F_Category  NE 'ADVOCATE'
18220 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18221 +AND F_Category  NE 'HEALTHCARE'
18222 +AND F_Category  NE 'FITNESS'
18223 +AND F_Category  NE 'OTHER'
18224 +AND F_Category  NE 'SALES'
18225 +AND F_Category  NE 'CONSULTANT'
18226 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18227 +        R_CategoryHR  = .;
18228 +        R_CategoryDESIGNER  = .;
18229 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18230 +        R_CategoryTEACHER  = .;
18231 +        R_CategoryADVOCATE  = .;
18232 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18233 +        R_CategoryHEALTHCARE  = .;
18234 +        R_CategoryFITNESS  = .;
18235 +        R_CategoryOTHER  = .;
18236 +        R_CategorySALES  = .;
18237 +        R_CategoryCONSULTANT  = .;
18238 +        R_CategoryDIGITAL_MEDIA  = .;
18239 + END;
18240 + ELSE DO;
18241 +       R_CategoryHR  =  -P_CategoryHR ;
18242 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18243 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18244 +         ;
18245 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18246 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18247 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18248 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18249 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18250 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18251 +       R_CategorySALES  =  -P_CategorySALES ;
18252 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18253 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18254 +       SELECT( F_Category  );
18255 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18256 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18257 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18258 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18259 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18260 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18261 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18262 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18263 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18264 +          +1;
18265 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18266 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18267 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18268 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18269 +          +1;
18270 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18271 +        R_CategoryDIGITAL_MEDIA  +1;
18272 +       END;
18273 + END;
18274 +
18275 +****************************************************************;
18276 +******          END OF DECISION TREE SCORING CODE         ******;
18277 +****************************************************************;
18278 +
18279 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18280  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18281  quit;
18282  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18283  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas";
18284  *------------------------------------------------------------*;
18285  * Tree6: Scoring VALIDATE data;
18286  *------------------------------------------------------------*;
18287  data EMWS3.Tree6_VALIDATE
18288  / view=EMWS3.Tree6_VALIDATE
18289  ;
18290  set EMWS3.TextCluster6_VALIDATE
18291  ;
18292  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas.
18293 +****************************************************************;
18294 +******             DECISION TREE SCORING CODE             ******;
18295 +****************************************************************;
18296 +
18297 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18298 +LENGTH F_Category  $   22;
18299 +LENGTH I_Category  $   22;
18300 +LENGTH U_Category  $   22;
18301 +LENGTH _WARN_  $    4;
18302 +
18303 +******              LABELS FOR NEW VARIABLES              ******;
18304 +label _NODE_ = 'Node' ;
18305 +label _LEAF_ = 'Leaf' ;
18306 +label P_CategoryHR = 'Predicted: Category=HR' ;
18307 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18308 +label P_CategoryINFORMATION_TECHNOLOGY =
18309 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18310 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18311 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18312 +label P_CategoryBUSINESS_DEVELOPMENT =
18313 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18314 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18315 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18316 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18317 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18318 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18319 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18320 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18321 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18322 +label Q_CategoryINFORMATION_TECHNOLOGY =
18323 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18324 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18325 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18326 +label Q_CategoryBUSINESS_DEVELOPMENT =
18327 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18328 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18329 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18330 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18331 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18332 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18333 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18334 +label V_CategoryHR = 'Validated: Category=HR' ;
18335 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18336 +label V_CategoryINFORMATION_TECHNOLOGY =
18337 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18338 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18339 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18340 +label V_CategoryBUSINESS_DEVELOPMENT =
18341 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18342 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18343 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18344 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18345 +label V_CategorySALES = 'Validated: Category=SALES' ;
18346 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18347 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18348 +label R_CategoryHR = 'Residual: Category=HR' ;
18349 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18350 +label R_CategoryINFORMATION_TECHNOLOGY =
18351 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18352 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18353 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18354 +label R_CategoryBUSINESS_DEVELOPMENT =
18355 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18356 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18357 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18358 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18359 +label R_CategorySALES = 'Residual: Category=SALES' ;
18360 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18361 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18362 +label F_Category = 'From: Category' ;
18363 +label I_Category = 'Into: Category' ;
18364 +label U_Category = 'Unnormalized Into: Category' ;
18365 +label _WARN_ = 'Warnings' ;
18366 +
18367 +
18368 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18369 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18370 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18371 +
18372 +
18373 +_ARBFMT_22 = PUT( Category , $22.);
18374 + %DMNORMCP( _ARBFMT_22, F_Category );
18375 +
18376 +******             ASSIGN OBSERVATION TO NODE             ******;
18377 +IF  NOT MISSING(TextCluster6_SVD4 ) AND
18378 +  TextCluster6_SVD4  <    -0.25373725645761 THEN DO;
18379 +  _NODE_  =                    2;
18380 +  _LEAF_  =                    1;
18381 +  P_CategoryHR  =     0.77419354838709;
18382 +  P_CategoryDESIGNER  =                    0;
18383 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
18384 +  P_CategoryTEACHER  =                    0;
18385 +  P_CategoryADVOCATE  =     0.04838709677419;
18386 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
18387 +  P_CategoryHEALTHCARE  =     0.04838709677419;
18388 +  P_CategoryFITNESS  =     0.01612903225806;
18389 +  P_CategoryOTHER  =     0.01612903225806;
18390 +  P_CategorySALES  =     0.03225806451612;
18391 +  P_CategoryCONSULTANT  =     0.03225806451612;
18392 +  P_CategoryDIGITAL_MEDIA  =                    0;
18393 +  Q_CategoryHR  =     0.77419354838709;
18394 +  Q_CategoryDESIGNER  =                    0;
18395 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
18396 +  Q_CategoryTEACHER  =                    0;
18397 +  Q_CategoryADVOCATE  =     0.04838709677419;
18398 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
18399 +  Q_CategoryHEALTHCARE  =     0.04838709677419;
18400 +  Q_CategoryFITNESS  =     0.01612903225806;
18401 +  Q_CategoryOTHER  =     0.01612903225806;
18402 +  Q_CategorySALES  =     0.03225806451612;
18403 +  Q_CategoryCONSULTANT  =     0.03225806451612;
18404 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18405 +  V_CategoryHR  =     0.75675675675675;
18406 +  V_CategoryDESIGNER  =                    0;
18407 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02702702702702;
18408 +  V_CategoryTEACHER  =                    0;
18409 +  V_CategoryADVOCATE  =                    0;
18410 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
18411 +  V_CategoryHEALTHCARE  =     0.08108108108108;
18412 +  V_CategoryFITNESS  =     0.02702702702702;
18413 +  V_CategoryOTHER  =     0.02702702702702;
18414 +  V_CategorySALES  =                    0;
18415 +  V_CategoryCONSULTANT  =     0.05405405405405;
18416 +  V_CategoryDIGITAL_MEDIA  =                    0;
18417 +  I_Category  = 'HR' ;
18418 +  U_Category  = 'HR' ;
18419 +  END;
18420 +ELSE DO;
18421 +  IF  NOT MISSING(TextCluster6_SVD5 ) AND
18422 +    TextCluster6_SVD5  <    -0.29159435927799 THEN DO;
18423 +    _NODE_  =                    6;
18424 +    _LEAF_  =                    2;
18425 +    P_CategoryHR  =                    0;
18426 +    P_CategoryDESIGNER  =     0.02564102564102;
18427 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18428 +    P_CategoryTEACHER  =     0.84615384615384;
18429 +    P_CategoryADVOCATE  =     0.05128205128205;
18430 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18431 +    P_CategoryHEALTHCARE  =                    0;
18432 +    P_CategoryFITNESS  =     0.07692307692307;
18433 +    P_CategoryOTHER  =                    0;
18434 +    P_CategorySALES  =                    0;
18435 +    P_CategoryCONSULTANT  =                    0;
18436 +    P_CategoryDIGITAL_MEDIA  =                    0;
18437 +    Q_CategoryHR  =                    0;
18438 +    Q_CategoryDESIGNER  =     0.02564102564102;
18439 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18440 +    Q_CategoryTEACHER  =     0.84615384615384;
18441 +    Q_CategoryADVOCATE  =     0.05128205128205;
18442 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18443 +    Q_CategoryHEALTHCARE  =                    0;
18444 +    Q_CategoryFITNESS  =     0.07692307692307;
18445 +    Q_CategoryOTHER  =                    0;
18446 +    Q_CategorySALES  =                    0;
18447 +    Q_CategoryCONSULTANT  =                    0;
18448 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18449 +    V_CategoryHR  =              0.03125;
18450 +    V_CategoryDESIGNER  =               0.0625;
18451 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18452 +    V_CategoryTEACHER  =               0.6875;
18453 +    V_CategoryADVOCATE  =              0.03125;
18454 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18455 +    V_CategoryHEALTHCARE  =                    0;
18456 +    V_CategoryFITNESS  =              0.03125;
18457 +    V_CategoryOTHER  =              0.15625;
18458 +    V_CategorySALES  =                    0;
18459 +    V_CategoryCONSULTANT  =                    0;
18460 +    V_CategoryDIGITAL_MEDIA  =                    0;
18461 +    I_Category  = 'TEACHER' ;
18462 +    U_Category  = 'TEACHER' ;
18463 +    END;
18464 +  ELSE DO;
18465 +    IF  NOT MISSING(TextCluster6_SVD2 ) AND
18466 +           0.2593230243674 <= TextCluster6_SVD2  THEN DO;
18467 +      _NODE_  =                   11;
18468 +      _LEAF_  =                    8;
18469 +      P_CategoryHR  =                    0;
18470 +      P_CategoryDESIGNER  =     0.03333333333333;
18471 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
18472 +      P_CategoryTEACHER  =                    0;
18473 +      P_CategoryADVOCATE  =     0.02222222222222;
18474 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18475 +      P_CategoryHEALTHCARE  =     0.03333333333333;
18476 +      P_CategoryFITNESS  =                    0;
18477 +      P_CategoryOTHER  =     0.06666666666666;
18478 +      P_CategorySALES  =                    0;
18479 +      P_CategoryCONSULTANT  =     0.23333333333333;
18480 +      P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
18481 +      Q_CategoryHR  =                    0;
18482 +      Q_CategoryDESIGNER  =     0.03333333333333;
18483 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
18484 +      Q_CategoryTEACHER  =                    0;
18485 +      Q_CategoryADVOCATE  =     0.02222222222222;
18486 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18487 +      Q_CategoryHEALTHCARE  =     0.03333333333333;
18488 +      Q_CategoryFITNESS  =                    0;
18489 +      Q_CategoryOTHER  =     0.06666666666666;
18490 +      Q_CategorySALES  =                    0;
18491 +      Q_CategoryCONSULTANT  =     0.23333333333333;
18492 +      Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
18493 +      V_CategoryHR  =                    0;
18494 +      V_CategoryDESIGNER  =      0.0377358490566;
18495 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
18496 +      V_CategoryTEACHER  =                    0;
18497 +      V_CategoryADVOCATE  =      0.0188679245283;
18498 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
18499 +      V_CategoryHEALTHCARE  =      0.0188679245283;
18500 +      V_CategoryFITNESS  =                    0;
18501 +      V_CategoryOTHER  =      0.0566037735849;
18502 +      V_CategorySALES  =      0.0188679245283;
18503 +      V_CategoryCONSULTANT  =     0.16981132075471;
18504 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
18505 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18506 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18507 +      END;
18508 +    ELSE DO;
18509 +      IF  NOT MISSING(TextCluster6_SVD11 ) AND
18510 +            0.20157647365093 <= TextCluster6_SVD11  THEN DO;
18511 +        _NODE_  =                   13;
18512 +        _LEAF_  =                    7;
18513 +        P_CategoryHR  =                0.025;
18514 +        P_CategoryDESIGNER  =                    0;
18515 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18516 +        P_CategoryTEACHER  =                    0;
18517 +        P_CategoryADVOCATE  =                0.075;
18518 +        P_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18519 +        P_CategoryHEALTHCARE  =                    0;
18520 +        P_CategoryFITNESS  =                0.825;
18521 +        P_CategoryOTHER  =                    0;
18522 +        P_CategorySALES  =                0.025;
18523 +        P_CategoryCONSULTANT  =                    0;
18524 +        P_CategoryDIGITAL_MEDIA  =                0.025;
18525 +        Q_CategoryHR  =                0.025;
18526 +        Q_CategoryDESIGNER  =                    0;
18527 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18528 +        Q_CategoryTEACHER  =                    0;
18529 +        Q_CategoryADVOCATE  =                0.075;
18530 +        Q_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18531 +        Q_CategoryHEALTHCARE  =                    0;
18532 +        Q_CategoryFITNESS  =                0.825;
18533 +        Q_CategoryOTHER  =                    0;
18534 +        Q_CategorySALES  =                0.025;
18535 +        Q_CategoryCONSULTANT  =                    0;
18536 +        Q_CategoryDIGITAL_MEDIA  =                0.025;
18537 +        V_CategoryHR  =                    0;
18538 +        V_CategoryDESIGNER  =                    0;
18539 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.05882352941176;
18540 +        V_CategoryTEACHER  =                    0;
18541 +        V_CategoryADVOCATE  =     0.05882352941176;
18542 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18543 +        V_CategoryHEALTHCARE  =     0.05882352941176;
18544 +        V_CategoryFITNESS  =      0.8235294117647;
18545 +        V_CategoryOTHER  =                    0;
18546 +        V_CategorySALES  =                    0;
18547 +        V_CategoryCONSULTANT  =                    0;
18548 +        V_CategoryDIGITAL_MEDIA  =                    0;
18549 +        I_Category  = 'FITNESS' ;
18550 +        U_Category  = 'FITNESS' ;
18551 +        END;
18552 +      ELSE DO;
18553 +        IF  NOT MISSING(TextCluster6_SVD7 ) AND
18554 +              0.05623637538451 <= TextCluster6_SVD7  THEN DO;
18555 +          IF  NOT MISSING(TextCluster6_SVD2 ) AND
18556 +            TextCluster6_SVD2  <    -0.13866764992338 THEN DO;
18557 +            _NODE_  =                   18;
18558 +            _LEAF_  =                    5;
18559 +            P_CategoryHR  =     0.05194805194805;
18560 +            P_CategoryDESIGNER  =     0.03896103896103;
18561 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18562 +            P_CategoryTEACHER  =     0.19480519480519;
18563 +            P_CategoryADVOCATE  =      0.1038961038961;
18564 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
18565 +            P_CategoryHEALTHCARE  =     0.01298701298701;
18566 +            P_CategoryFITNESS  =     0.07792207792207;
18567 +            P_CategoryOTHER  =     0.03896103896103;
18568 +            P_CategorySALES  =     0.35064935064935;
18569 +            P_CategoryCONSULTANT  =     0.03896103896103;
18570 +            P_CategoryDIGITAL_MEDIA  =     0.02597402597402;
18571 +            Q_CategoryHR  =     0.05194805194805;
18572 +            Q_CategoryDESIGNER  =     0.03896103896103;
18573 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18574 +            Q_CategoryTEACHER  =     0.19480519480519;
18575 +            Q_CategoryADVOCATE  =      0.1038961038961;
18576 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
18577 +            Q_CategoryHEALTHCARE  =     0.01298701298701;
18578 +            Q_CategoryFITNESS  =     0.07792207792207;
18579 +            Q_CategoryOTHER  =     0.03896103896103;
18580 +            Q_CategorySALES  =     0.35064935064935;
18581 +            Q_CategoryCONSULTANT  =     0.03896103896103;
18582 +            Q_CategoryDIGITAL_MEDIA  =     0.02597402597402;
18583 +            V_CategoryHR  =     0.04255319148936;
18584 +            V_CategoryDESIGNER  =      0.1063829787234;
18585 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18586 +            V_CategoryTEACHER  =      0.1063829787234;
18587 +            V_CategoryADVOCATE  =     0.17021276595744;
18588 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02127659574468;
18589 +            V_CategoryHEALTHCARE  =     0.02127659574468;
18590 +            V_CategoryFITNESS  =      0.1063829787234;
18591 +            V_CategoryOTHER  =     0.04255319148936;
18592 +            V_CategorySALES  =     0.31914893617021;
18593 +            V_CategoryCONSULTANT  =     0.02127659574468;
18594 +            V_CategoryDIGITAL_MEDIA  =     0.04255319148936;
18595 +            I_Category  = 'SALES' ;
18596 +            U_Category  = 'SALES' ;
18597 +            END;
18598 +          ELSE DO;
18599 +            _NODE_  =                   19;
18600 +            _LEAF_  =                    6;
18601 +            P_CategoryHR  =     0.01190476190476;
18602 +            P_CategoryDESIGNER  =     0.48809523809523;
18603 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
18604 +            P_CategoryTEACHER  =                    0;
18605 +            P_CategoryADVOCATE  =                    0;
18606 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
18607 +            P_CategoryHEALTHCARE  =     0.03571428571428;
18608 +            P_CategoryFITNESS  =                    0;
18609 +            P_CategoryOTHER  =     0.02380952380952;
18610 +            P_CategorySALES  =     0.03571428571428;
18611 +            P_CategoryCONSULTANT  =     0.01190476190476;
18612 +            P_CategoryDIGITAL_MEDIA  =     0.33333333333333;
18613 +            Q_CategoryHR  =     0.01190476190476;
18614 +            Q_CategoryDESIGNER  =     0.48809523809523;
18615 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
18616 +            Q_CategoryTEACHER  =                    0;
18617 +            Q_CategoryADVOCATE  =                    0;
18618 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
18619 +            Q_CategoryHEALTHCARE  =     0.03571428571428;
18620 +            Q_CategoryFITNESS  =                    0;
18621 +            Q_CategoryOTHER  =     0.02380952380952;
18622 +            Q_CategorySALES  =     0.03571428571428;
18623 +            Q_CategoryCONSULTANT  =     0.01190476190476;
18624 +            Q_CategoryDIGITAL_MEDIA  =     0.33333333333333;
18625 +            V_CategoryHR  =      0.0204081632653;
18626 +            V_CategoryDESIGNER  =     0.38775510204081;
18627 +            V_CategoryINFORMATION_TECHNOLOGY  =      0.0204081632653;
18628 +            V_CategoryTEACHER  =      0.0204081632653;
18629 +            V_CategoryADVOCATE  =                    0;
18630 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06122448979591;
18631 +            V_CategoryHEALTHCARE  =                    0;
18632 +            V_CategoryFITNESS  =                    0;
18633 +            V_CategoryOTHER  =     0.04081632653061;
18634 +            V_CategorySALES  =     0.08163265306122;
18635 +            V_CategoryCONSULTANT  =      0.0204081632653;
18636 +            V_CategoryDIGITAL_MEDIA  =      0.3469387755102;
18637 +            I_Category  = 'DESIGNER' ;
18638 +            U_Category  = 'DESIGNER' ;
18639 +            END;
18640 +          END;
18641 +        ELSE DO;
18642 +          IF  NOT MISSING(TextCluster6_SVD3 ) AND
18643 +                0.25756950693809 <= TextCluster6_SVD3  THEN DO;
18644 +            _NODE_  =                   17;
18645 +            _LEAF_  =                    4;
18646 +            P_CategoryHR  =                    0;
18647 +            P_CategoryDESIGNER  =                    0;
18648 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18649 +            P_CategoryTEACHER  =                    0;
18650 +            P_CategoryADVOCATE  =     0.01515151515151;
18651 +            P_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
18652 +            P_CategoryHEALTHCARE  =     0.07575757575757;
18653 +            P_CategoryFITNESS  =     0.04545454545454;
18654 +            P_CategoryOTHER  =     0.06060606060606;
18655 +            P_CategorySALES  =     0.07575757575757;
18656 +            P_CategoryCONSULTANT  =     0.12121212121212;
18657 +            P_CategoryDIGITAL_MEDIA  =      0.1060606060606;
18658 +            Q_CategoryHR  =                    0;
18659 +            Q_CategoryDESIGNER  =                    0;
18660 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18661 +            Q_CategoryTEACHER  =                    0;
18662 +            Q_CategoryADVOCATE  =     0.01515151515151;
18663 +            Q_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
18664 +            Q_CategoryHEALTHCARE  =     0.07575757575757;
18665 +            Q_CategoryFITNESS  =     0.04545454545454;
18666 +            Q_CategoryOTHER  =     0.06060606060606;
18667 +            Q_CategorySALES  =     0.07575757575757;
18668 +            Q_CategoryCONSULTANT  =     0.12121212121212;
18669 +            Q_CategoryDIGITAL_MEDIA  =      0.1060606060606;
18670 +            V_CategoryHR  =                    0;
18671 +            V_CategoryDESIGNER  =                    0;
18672 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18673 +            V_CategoryTEACHER  =                    0;
18674 +            V_CategoryADVOCATE  =                    0;
18675 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48717948717948;
18676 +            V_CategoryHEALTHCARE  =     0.12820512820512;
18677 +            V_CategoryFITNESS  =     0.02564102564102;
18678 +            V_CategoryOTHER  =     0.02564102564102;
18679 +            V_CategorySALES  =     0.07692307692307;
18680 +            V_CategoryCONSULTANT  =     0.17948717948717;
18681 +            V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
18682 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18683 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18684 +            END;
18685 +          ELSE DO;
18686 +            _NODE_  =                   16;
18687 +            _LEAF_  =                    3;
18688 +            P_CategoryHR  =     0.00462962962962;
18689 +            P_CategoryDESIGNER  =     0.02314814814814;
18690 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
18691 +            P_CategoryTEACHER  =     0.00925925925925;
18692 +            P_CategoryADVOCATE  =     0.17592592592592;
18693 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
18694 +            P_CategoryHEALTHCARE  =     0.19444444444444;
18695 +            P_CategoryFITNESS  =     0.05555555555555;
18696 +            P_CategoryOTHER  =     0.21759259259259;
18697 +            P_CategorySALES  =     0.09259259259259;
18698 +            P_CategoryCONSULTANT  =     0.10185185185185;
18699 +            P_CategoryDIGITAL_MEDIA  =     0.01388888888888;
18700 +            Q_CategoryHR  =     0.00462962962962;
18701 +            Q_CategoryDESIGNER  =     0.02314814814814;
18702 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
18703 +            Q_CategoryTEACHER  =     0.00925925925925;
18704 +            Q_CategoryADVOCATE  =     0.17592592592592;
18705 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
18706 +            Q_CategoryHEALTHCARE  =     0.19444444444444;
18707 +            Q_CategoryFITNESS  =     0.05555555555555;
18708 +            Q_CategoryOTHER  =     0.21759259259259;
18709 +            Q_CategorySALES  =     0.09259259259259;
18710 +            Q_CategoryCONSULTANT  =     0.10185185185185;
18711 +            Q_CategoryDIGITAL_MEDIA  =     0.01388888888888;
18712 +            V_CategoryHR  =                    0;
18713 +            V_CategoryDESIGNER  =     0.02290076335877;
18714 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02290076335877;
18715 +            V_CategoryTEACHER  =     0.02290076335877;
18716 +            V_CategoryADVOCATE  =     0.18320610687022;
18717 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.08396946564885;
18718 +            V_CategoryHEALTHCARE  =      0.1679389312977;
18719 +            V_CategoryFITNESS  =     0.09923664122137;
18720 +            V_CategoryOTHER  =     0.18320610687022;
18721 +            V_CategorySALES  =     0.08396946564885;
18722 +            V_CategoryCONSULTANT  =     0.11450381679389;
18723 +            V_CategoryDIGITAL_MEDIA  =     0.01526717557251;
18724 +            I_Category  = 'OTHER' ;
18725 +            U_Category  = 'OTHER' ;
18726 +            END;
18727 +          END;
18728 +        END;
18729 +      END;
18730 +    END;
18731 +  END;
18732 +
18733 +*****  RESIDUALS R_ *************;
18734 +IF  F_Category  NE 'HR'
18735 +AND F_Category  NE 'DESIGNER'
18736 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18737 +AND F_Category  NE 'TEACHER'
18738 +AND F_Category  NE 'ADVOCATE'
18739 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18740 +AND F_Category  NE 'HEALTHCARE'
18741 +AND F_Category  NE 'FITNESS'
18742 +AND F_Category  NE 'OTHER'
18743 +AND F_Category  NE 'SALES'
18744 +AND F_Category  NE 'CONSULTANT'
18745 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18746 +        R_CategoryHR  = .;
18747 +        R_CategoryDESIGNER  = .;
18748 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18749 +        R_CategoryTEACHER  = .;
18750 +        R_CategoryADVOCATE  = .;
18751 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18752 +        R_CategoryHEALTHCARE  = .;
18753 +        R_CategoryFITNESS  = .;
18754 +        R_CategoryOTHER  = .;
18755 +        R_CategorySALES  = .;
18756 +        R_CategoryCONSULTANT  = .;
18757 +        R_CategoryDIGITAL_MEDIA  = .;
18758 + END;
18759 + ELSE DO;
18760 +       R_CategoryHR  =  -P_CategoryHR ;
18761 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18762 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18763 +         ;
18764 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18765 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18766 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18767 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18768 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18769 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18770 +       R_CategorySALES  =  -P_CategorySALES ;
18771 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18772 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18773 +       SELECT( F_Category  );
18774 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18775 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18776 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18777 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18778 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18779 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18780 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18781 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18782 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18783 +          +1;
18784 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18785 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18786 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18787 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18788 +          +1;
18789 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18790 +        R_CategoryDIGITAL_MEDIA  +1;
18791 +       END;
18792 + END;
18793 +
18794 +****************************************************************;
18795 +******          END OF DECISION TREE SCORING CODE         ******;
18796 +****************************************************************;
18797 +
18798 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18799  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18800  quit;
18801  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18802  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas";
18803  *------------------------------------------------------------*;
18804  * Tree6: Scoring TEST data;
18805  *------------------------------------------------------------*;
18806  data EMWS3.Tree6_TEST
18807  / view=EMWS3.Tree6_TEST
18808  ;
18809  set EMWS3.TextCluster6_TEST
18810  ;
18811  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree6\EMFLOWSCORE.sas.
18812 +****************************************************************;
18813 +******             DECISION TREE SCORING CODE             ******;
18814 +****************************************************************;
18815 +
18816 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18817 +LENGTH F_Category  $   22;
18818 +LENGTH I_Category  $   22;
18819 +LENGTH U_Category  $   22;
18820 +LENGTH _WARN_  $    4;
18821 +
18822 +******              LABELS FOR NEW VARIABLES              ******;
18823 +label _NODE_ = 'Node' ;
18824 +label _LEAF_ = 'Leaf' ;
18825 +label P_CategoryHR = 'Predicted: Category=HR' ;
18826 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18827 +label P_CategoryINFORMATION_TECHNOLOGY =
18828 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18829 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18830 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18831 +label P_CategoryBUSINESS_DEVELOPMENT =
18832 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18833 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18834 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18835 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18836 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18837 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18838 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18839 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18840 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18841 +label Q_CategoryINFORMATION_TECHNOLOGY =
18842 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18843 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18844 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18845 +label Q_CategoryBUSINESS_DEVELOPMENT =
18846 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18847 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18848 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18849 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18850 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18851 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18852 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18853 +label V_CategoryHR = 'Validated: Category=HR' ;
18854 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18855 +label V_CategoryINFORMATION_TECHNOLOGY =
18856 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18857 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18858 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18859 +label V_CategoryBUSINESS_DEVELOPMENT =
18860 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18861 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18862 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18863 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18864 +label V_CategorySALES = 'Validated: Category=SALES' ;
18865 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18866 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18867 +label R_CategoryHR = 'Residual: Category=HR' ;
18868 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18869 +label R_CategoryINFORMATION_TECHNOLOGY =
18870 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18871 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18872 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18873 +label R_CategoryBUSINESS_DEVELOPMENT =
18874 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18875 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18876 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18877 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18878 +label R_CategorySALES = 'Residual: Category=SALES' ;
18879 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18880 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18881 +label F_Category = 'From: Category' ;
18882 +label I_Category = 'Into: Category' ;
18883 +label U_Category = 'Unnormalized Into: Category' ;
18884 +label _WARN_ = 'Warnings' ;
18885 +
18886 +
18887 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18888 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18889 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18890 +
18891 +
18892 +_ARBFMT_22 = PUT( Category , $22.);
18893 + %DMNORMCP( _ARBFMT_22, F_Category );
18894 +
18895 +******             ASSIGN OBSERVATION TO NODE             ******;
18896 +IF  NOT MISSING(TextCluster6_SVD4 ) AND
18897 +  TextCluster6_SVD4  <    -0.25373725645761 THEN DO;
18898 +  _NODE_  =                    2;
18899 +  _LEAF_  =                    1;
18900 +  P_CategoryHR  =     0.77419354838709;
18901 +  P_CategoryDESIGNER  =                    0;
18902 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
18903 +  P_CategoryTEACHER  =                    0;
18904 +  P_CategoryADVOCATE  =     0.04838709677419;
18905 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
18906 +  P_CategoryHEALTHCARE  =     0.04838709677419;
18907 +  P_CategoryFITNESS  =     0.01612903225806;
18908 +  P_CategoryOTHER  =     0.01612903225806;
18909 +  P_CategorySALES  =     0.03225806451612;
18910 +  P_CategoryCONSULTANT  =     0.03225806451612;
18911 +  P_CategoryDIGITAL_MEDIA  =                    0;
18912 +  Q_CategoryHR  =     0.77419354838709;
18913 +  Q_CategoryDESIGNER  =                    0;
18914 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
18915 +  Q_CategoryTEACHER  =                    0;
18916 +  Q_CategoryADVOCATE  =     0.04838709677419;
18917 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01612903225806;
18918 +  Q_CategoryHEALTHCARE  =     0.04838709677419;
18919 +  Q_CategoryFITNESS  =     0.01612903225806;
18920 +  Q_CategoryOTHER  =     0.01612903225806;
18921 +  Q_CategorySALES  =     0.03225806451612;
18922 +  Q_CategoryCONSULTANT  =     0.03225806451612;
18923 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18924 +  V_CategoryHR  =     0.75675675675675;
18925 +  V_CategoryDESIGNER  =                    0;
18926 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02702702702702;
18927 +  V_CategoryTEACHER  =                    0;
18928 +  V_CategoryADVOCATE  =                    0;
18929 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
18930 +  V_CategoryHEALTHCARE  =     0.08108108108108;
18931 +  V_CategoryFITNESS  =     0.02702702702702;
18932 +  V_CategoryOTHER  =     0.02702702702702;
18933 +  V_CategorySALES  =                    0;
18934 +  V_CategoryCONSULTANT  =     0.05405405405405;
18935 +  V_CategoryDIGITAL_MEDIA  =                    0;
18936 +  I_Category  = 'HR' ;
18937 +  U_Category  = 'HR' ;
18938 +  END;
18939 +ELSE DO;
18940 +  IF  NOT MISSING(TextCluster6_SVD5 ) AND
18941 +    TextCluster6_SVD5  <    -0.29159435927799 THEN DO;
18942 +    _NODE_  =                    6;
18943 +    _LEAF_  =                    2;
18944 +    P_CategoryHR  =                    0;
18945 +    P_CategoryDESIGNER  =     0.02564102564102;
18946 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18947 +    P_CategoryTEACHER  =     0.84615384615384;
18948 +    P_CategoryADVOCATE  =     0.05128205128205;
18949 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18950 +    P_CategoryHEALTHCARE  =                    0;
18951 +    P_CategoryFITNESS  =     0.07692307692307;
18952 +    P_CategoryOTHER  =                    0;
18953 +    P_CategorySALES  =                    0;
18954 +    P_CategoryCONSULTANT  =                    0;
18955 +    P_CategoryDIGITAL_MEDIA  =                    0;
18956 +    Q_CategoryHR  =                    0;
18957 +    Q_CategoryDESIGNER  =     0.02564102564102;
18958 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18959 +    Q_CategoryTEACHER  =     0.84615384615384;
18960 +    Q_CategoryADVOCATE  =     0.05128205128205;
18961 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18962 +    Q_CategoryHEALTHCARE  =                    0;
18963 +    Q_CategoryFITNESS  =     0.07692307692307;
18964 +    Q_CategoryOTHER  =                    0;
18965 +    Q_CategorySALES  =                    0;
18966 +    Q_CategoryCONSULTANT  =                    0;
18967 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18968 +    V_CategoryHR  =              0.03125;
18969 +    V_CategoryDESIGNER  =               0.0625;
18970 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18971 +    V_CategoryTEACHER  =               0.6875;
18972 +    V_CategoryADVOCATE  =              0.03125;
18973 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18974 +    V_CategoryHEALTHCARE  =                    0;
18975 +    V_CategoryFITNESS  =              0.03125;
18976 +    V_CategoryOTHER  =              0.15625;
18977 +    V_CategorySALES  =                    0;
18978 +    V_CategoryCONSULTANT  =                    0;
18979 +    V_CategoryDIGITAL_MEDIA  =                    0;
18980 +    I_Category  = 'TEACHER' ;
18981 +    U_Category  = 'TEACHER' ;
18982 +    END;
18983 +  ELSE DO;
18984 +    IF  NOT MISSING(TextCluster6_SVD2 ) AND
18985 +           0.2593230243674 <= TextCluster6_SVD2  THEN DO;
18986 +      _NODE_  =                   11;
18987 +      _LEAF_  =                    8;
18988 +      P_CategoryHR  =                    0;
18989 +      P_CategoryDESIGNER  =     0.03333333333333;
18990 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
18991 +      P_CategoryTEACHER  =                    0;
18992 +      P_CategoryADVOCATE  =     0.02222222222222;
18993 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18994 +      P_CategoryHEALTHCARE  =     0.03333333333333;
18995 +      P_CategoryFITNESS  =                    0;
18996 +      P_CategoryOTHER  =     0.06666666666666;
18997 +      P_CategorySALES  =                    0;
18998 +      P_CategoryCONSULTANT  =     0.23333333333333;
18999 +      P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19000 +      Q_CategoryHR  =                    0;
19001 +      Q_CategoryDESIGNER  =     0.03333333333333;
19002 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.54444444444444;
19003 +      Q_CategoryTEACHER  =                    0;
19004 +      Q_CategoryADVOCATE  =     0.02222222222222;
19005 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19006 +      Q_CategoryHEALTHCARE  =     0.03333333333333;
19007 +      Q_CategoryFITNESS  =                    0;
19008 +      Q_CategoryOTHER  =     0.06666666666666;
19009 +      Q_CategorySALES  =                    0;
19010 +      Q_CategoryCONSULTANT  =     0.23333333333333;
19011 +      Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19012 +      V_CategoryHR  =                    0;
19013 +      V_CategoryDESIGNER  =      0.0377358490566;
19014 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
19015 +      V_CategoryTEACHER  =                    0;
19016 +      V_CategoryADVOCATE  =      0.0188679245283;
19017 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
19018 +      V_CategoryHEALTHCARE  =      0.0188679245283;
19019 +      V_CategoryFITNESS  =                    0;
19020 +      V_CategoryOTHER  =      0.0566037735849;
19021 +      V_CategorySALES  =      0.0188679245283;
19022 +      V_CategoryCONSULTANT  =     0.16981132075471;
19023 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
19024 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
19025 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
19026 +      END;
19027 +    ELSE DO;
19028 +      IF  NOT MISSING(TextCluster6_SVD11 ) AND
19029 +            0.20157647365093 <= TextCluster6_SVD11  THEN DO;
19030 +        _NODE_  =                   13;
19031 +        _LEAF_  =                    7;
19032 +        P_CategoryHR  =                0.025;
19033 +        P_CategoryDESIGNER  =                    0;
19034 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19035 +        P_CategoryTEACHER  =                    0;
19036 +        P_CategoryADVOCATE  =                0.075;
19037 +        P_CategoryBUSINESS_DEVELOPMENT  =                0.025;
19038 +        P_CategoryHEALTHCARE  =                    0;
19039 +        P_CategoryFITNESS  =                0.825;
19040 +        P_CategoryOTHER  =                    0;
19041 +        P_CategorySALES  =                0.025;
19042 +        P_CategoryCONSULTANT  =                    0;
19043 +        P_CategoryDIGITAL_MEDIA  =                0.025;
19044 +        Q_CategoryHR  =                0.025;
19045 +        Q_CategoryDESIGNER  =                    0;
19046 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19047 +        Q_CategoryTEACHER  =                    0;
19048 +        Q_CategoryADVOCATE  =                0.075;
19049 +        Q_CategoryBUSINESS_DEVELOPMENT  =                0.025;
19050 +        Q_CategoryHEALTHCARE  =                    0;
19051 +        Q_CategoryFITNESS  =                0.825;
19052 +        Q_CategoryOTHER  =                    0;
19053 +        Q_CategorySALES  =                0.025;
19054 +        Q_CategoryCONSULTANT  =                    0;
19055 +        Q_CategoryDIGITAL_MEDIA  =                0.025;
19056 +        V_CategoryHR  =                    0;
19057 +        V_CategoryDESIGNER  =                    0;
19058 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.05882352941176;
19059 +        V_CategoryTEACHER  =                    0;
19060 +        V_CategoryADVOCATE  =     0.05882352941176;
19061 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19062 +        V_CategoryHEALTHCARE  =     0.05882352941176;
19063 +        V_CategoryFITNESS  =      0.8235294117647;
19064 +        V_CategoryOTHER  =                    0;
19065 +        V_CategorySALES  =                    0;
19066 +        V_CategoryCONSULTANT  =                    0;
19067 +        V_CategoryDIGITAL_MEDIA  =                    0;
19068 +        I_Category  = 'FITNESS' ;
19069 +        U_Category  = 'FITNESS' ;
19070 +        END;
19071 +      ELSE DO;
19072 +        IF  NOT MISSING(TextCluster6_SVD7 ) AND
19073 +              0.05623637538451 <= TextCluster6_SVD7  THEN DO;
19074 +          IF  NOT MISSING(TextCluster6_SVD2 ) AND
19075 +            TextCluster6_SVD2  <    -0.13866764992338 THEN DO;
19076 +            _NODE_  =                   18;
19077 +            _LEAF_  =                    5;
19078 +            P_CategoryHR  =     0.05194805194805;
19079 +            P_CategoryDESIGNER  =     0.03896103896103;
19080 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19081 +            P_CategoryTEACHER  =     0.19480519480519;
19082 +            P_CategoryADVOCATE  =      0.1038961038961;
19083 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
19084 +            P_CategoryHEALTHCARE  =     0.01298701298701;
19085 +            P_CategoryFITNESS  =     0.07792207792207;
19086 +            P_CategoryOTHER  =     0.03896103896103;
19087 +            P_CategorySALES  =     0.35064935064935;
19088 +            P_CategoryCONSULTANT  =     0.03896103896103;
19089 +            P_CategoryDIGITAL_MEDIA  =     0.02597402597402;
19090 +            Q_CategoryHR  =     0.05194805194805;
19091 +            Q_CategoryDESIGNER  =     0.03896103896103;
19092 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19093 +            Q_CategoryTEACHER  =     0.19480519480519;
19094 +            Q_CategoryADVOCATE  =      0.1038961038961;
19095 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.06493506493506;
19096 +            Q_CategoryHEALTHCARE  =     0.01298701298701;
19097 +            Q_CategoryFITNESS  =     0.07792207792207;
19098 +            Q_CategoryOTHER  =     0.03896103896103;
19099 +            Q_CategorySALES  =     0.35064935064935;
19100 +            Q_CategoryCONSULTANT  =     0.03896103896103;
19101 +            Q_CategoryDIGITAL_MEDIA  =     0.02597402597402;
19102 +            V_CategoryHR  =     0.04255319148936;
19103 +            V_CategoryDESIGNER  =      0.1063829787234;
19104 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19105 +            V_CategoryTEACHER  =      0.1063829787234;
19106 +            V_CategoryADVOCATE  =     0.17021276595744;
19107 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02127659574468;
19108 +            V_CategoryHEALTHCARE  =     0.02127659574468;
19109 +            V_CategoryFITNESS  =      0.1063829787234;
19110 +            V_CategoryOTHER  =     0.04255319148936;
19111 +            V_CategorySALES  =     0.31914893617021;
19112 +            V_CategoryCONSULTANT  =     0.02127659574468;
19113 +            V_CategoryDIGITAL_MEDIA  =     0.04255319148936;
19114 +            I_Category  = 'SALES' ;
19115 +            U_Category  = 'SALES' ;
19116 +            END;
19117 +          ELSE DO;
19118 +            _NODE_  =                   19;
19119 +            _LEAF_  =                    6;
19120 +            P_CategoryHR  =     0.01190476190476;
19121 +            P_CategoryDESIGNER  =     0.48809523809523;
19122 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
19123 +            P_CategoryTEACHER  =                    0;
19124 +            P_CategoryADVOCATE  =                    0;
19125 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
19126 +            P_CategoryHEALTHCARE  =     0.03571428571428;
19127 +            P_CategoryFITNESS  =                    0;
19128 +            P_CategoryOTHER  =     0.02380952380952;
19129 +            P_CategorySALES  =     0.03571428571428;
19130 +            P_CategoryCONSULTANT  =     0.01190476190476;
19131 +            P_CategoryDIGITAL_MEDIA  =     0.33333333333333;
19132 +            Q_CategoryHR  =     0.01190476190476;
19133 +            Q_CategoryDESIGNER  =     0.48809523809523;
19134 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04761904761904;
19135 +            Q_CategoryTEACHER  =                    0;
19136 +            Q_CategoryADVOCATE  =                    0;
19137 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.01190476190476;
19138 +            Q_CategoryHEALTHCARE  =     0.03571428571428;
19139 +            Q_CategoryFITNESS  =                    0;
19140 +            Q_CategoryOTHER  =     0.02380952380952;
19141 +            Q_CategorySALES  =     0.03571428571428;
19142 +            Q_CategoryCONSULTANT  =     0.01190476190476;
19143 +            Q_CategoryDIGITAL_MEDIA  =     0.33333333333333;
19144 +            V_CategoryHR  =      0.0204081632653;
19145 +            V_CategoryDESIGNER  =     0.38775510204081;
19146 +            V_CategoryINFORMATION_TECHNOLOGY  =      0.0204081632653;
19147 +            V_CategoryTEACHER  =      0.0204081632653;
19148 +            V_CategoryADVOCATE  =                    0;
19149 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.06122448979591;
19150 +            V_CategoryHEALTHCARE  =                    0;
19151 +            V_CategoryFITNESS  =                    0;
19152 +            V_CategoryOTHER  =     0.04081632653061;
19153 +            V_CategorySALES  =     0.08163265306122;
19154 +            V_CategoryCONSULTANT  =      0.0204081632653;
19155 +            V_CategoryDIGITAL_MEDIA  =      0.3469387755102;
19156 +            I_Category  = 'DESIGNER' ;
19157 +            U_Category  = 'DESIGNER' ;
19158 +            END;
19159 +          END;
19160 +        ELSE DO;
19161 +          IF  NOT MISSING(TextCluster6_SVD3 ) AND
19162 +                0.25756950693809 <= TextCluster6_SVD3  THEN DO;
19163 +            _NODE_  =                   17;
19164 +            _LEAF_  =                    4;
19165 +            P_CategoryHR  =                    0;
19166 +            P_CategoryDESIGNER  =                    0;
19167 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19168 +            P_CategoryTEACHER  =                    0;
19169 +            P_CategoryADVOCATE  =     0.01515151515151;
19170 +            P_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
19171 +            P_CategoryHEALTHCARE  =     0.07575757575757;
19172 +            P_CategoryFITNESS  =     0.04545454545454;
19173 +            P_CategoryOTHER  =     0.06060606060606;
19174 +            P_CategorySALES  =     0.07575757575757;
19175 +            P_CategoryCONSULTANT  =     0.12121212121212;
19176 +            P_CategoryDIGITAL_MEDIA  =      0.1060606060606;
19177 +            Q_CategoryHR  =                    0;
19178 +            Q_CategoryDESIGNER  =                    0;
19179 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19180 +            Q_CategoryTEACHER  =                    0;
19181 +            Q_CategoryADVOCATE  =     0.01515151515151;
19182 +            Q_CategoryBUSINESS_DEVELOPMENT  =                  0.5;
19183 +            Q_CategoryHEALTHCARE  =     0.07575757575757;
19184 +            Q_CategoryFITNESS  =     0.04545454545454;
19185 +            Q_CategoryOTHER  =     0.06060606060606;
19186 +            Q_CategorySALES  =     0.07575757575757;
19187 +            Q_CategoryCONSULTANT  =     0.12121212121212;
19188 +            Q_CategoryDIGITAL_MEDIA  =      0.1060606060606;
19189 +            V_CategoryHR  =                    0;
19190 +            V_CategoryDESIGNER  =                    0;
19191 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19192 +            V_CategoryTEACHER  =                    0;
19193 +            V_CategoryADVOCATE  =                    0;
19194 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48717948717948;
19195 +            V_CategoryHEALTHCARE  =     0.12820512820512;
19196 +            V_CategoryFITNESS  =     0.02564102564102;
19197 +            V_CategoryOTHER  =     0.02564102564102;
19198 +            V_CategorySALES  =     0.07692307692307;
19199 +            V_CategoryCONSULTANT  =     0.17948717948717;
19200 +            V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
19201 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
19202 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
19203 +            END;
19204 +          ELSE DO;
19205 +            _NODE_  =                   16;
19206 +            _LEAF_  =                    3;
19207 +            P_CategoryHR  =     0.00462962962962;
19208 +            P_CategoryDESIGNER  =     0.02314814814814;
19209 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
19210 +            P_CategoryTEACHER  =     0.00925925925925;
19211 +            P_CategoryADVOCATE  =     0.17592592592592;
19212 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
19213 +            P_CategoryHEALTHCARE  =     0.19444444444444;
19214 +            P_CategoryFITNESS  =     0.05555555555555;
19215 +            P_CategoryOTHER  =     0.21759259259259;
19216 +            P_CategorySALES  =     0.09259259259259;
19217 +            P_CategoryCONSULTANT  =     0.10185185185185;
19218 +            P_CategoryDIGITAL_MEDIA  =     0.01388888888888;
19219 +            Q_CategoryHR  =     0.00462962962962;
19220 +            Q_CategoryDESIGNER  =     0.02314814814814;
19221 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02314814814814;
19222 +            Q_CategoryTEACHER  =     0.00925925925925;
19223 +            Q_CategoryADVOCATE  =     0.17592592592592;
19224 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.08796296296296;
19225 +            Q_CategoryHEALTHCARE  =     0.19444444444444;
19226 +            Q_CategoryFITNESS  =     0.05555555555555;
19227 +            Q_CategoryOTHER  =     0.21759259259259;
19228 +            Q_CategorySALES  =     0.09259259259259;
19229 +            Q_CategoryCONSULTANT  =     0.10185185185185;
19230 +            Q_CategoryDIGITAL_MEDIA  =     0.01388888888888;
19231 +            V_CategoryHR  =                    0;
19232 +            V_CategoryDESIGNER  =     0.02290076335877;
19233 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02290076335877;
19234 +            V_CategoryTEACHER  =     0.02290076335877;
19235 +            V_CategoryADVOCATE  =     0.18320610687022;
19236 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.08396946564885;
19237 +            V_CategoryHEALTHCARE  =      0.1679389312977;
19238 +            V_CategoryFITNESS  =     0.09923664122137;
19239 +            V_CategoryOTHER  =     0.18320610687022;
19240 +            V_CategorySALES  =     0.08396946564885;
19241 +            V_CategoryCONSULTANT  =     0.11450381679389;
19242 +            V_CategoryDIGITAL_MEDIA  =     0.01526717557251;
19243 +            I_Category  = 'OTHER' ;
19244 +            U_Category  = 'OTHER' ;
19245 +            END;
19246 +          END;
19247 +        END;
19248 +      END;
19249 +    END;
19250 +  END;
19251 +
19252 +*****  RESIDUALS R_ *************;
19253 +IF  F_Category  NE 'HR'
19254 +AND F_Category  NE 'DESIGNER'
19255 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19256 +AND F_Category  NE 'TEACHER'
19257 +AND F_Category  NE 'ADVOCATE'
19258 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19259 +AND F_Category  NE 'HEALTHCARE'
19260 +AND F_Category  NE 'FITNESS'
19261 +AND F_Category  NE 'OTHER'
19262 +AND F_Category  NE 'SALES'
19263 +AND F_Category  NE 'CONSULTANT'
19264 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19265 +        R_CategoryHR  = .;
19266 +        R_CategoryDESIGNER  = .;
19267 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19268 +        R_CategoryTEACHER  = .;
19269 +        R_CategoryADVOCATE  = .;
19270 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19271 +        R_CategoryHEALTHCARE  = .;
19272 +        R_CategoryFITNESS  = .;
19273 +        R_CategoryOTHER  = .;
19274 +        R_CategorySALES  = .;
19275 +        R_CategoryCONSULTANT  = .;
19276 +        R_CategoryDIGITAL_MEDIA  = .;
19277 + END;
19278 + ELSE DO;
19279 +       R_CategoryHR  =  -P_CategoryHR ;
19280 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19281 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19282 +         ;
19283 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19284 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19285 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19286 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19287 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19288 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19289 +       R_CategorySALES  =  -P_CategorySALES ;
19290 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19291 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19292 +       SELECT( F_Category  );
19293 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19294 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19295 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19296 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19297 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19298 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19299 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19300 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19301 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19302 +          +1;
19303 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19304 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19305 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19306 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19307 +          +1;
19308 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19309 +        R_CategoryDIGITAL_MEDIA  +1;
19310 +       END;
19311 + END;
19312 +
19313 +****************************************************************;
19314 +******          END OF DECISION TREE SCORING CODE         ******;
19315 +****************************************************************;
19316 +
19317 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19318  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE6_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
19319  quit;
19320  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
19322  proc sort data=WORK.EM_USER_REPORT;
19323  by ID VIEW;
19324  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19325  *------------------------------------------------------------*;
19326  * Tree6: Computing metadata for TRAIN data;
19327  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
19889  data WORK.MODELTEMP_INFO;
19890  set EMWS3.Tree6_EMINFO;
19891  where DATA='Tree6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
19892  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE6_EMINFO.
      WHERE (DATA='Tree6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19893  data EMWS3.Tree6_EMINFO;
19894  length TARGET KEY $32 DATA $43;
19895  input TARGET KEY DATA $;
19896  cards;
 
NOTE: The data set EMWS3.TREE6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19900  run;
19901  data EMWS3.Tree6_EMINFO;
19902  set EMWS3.Tree6_EMINFO WORK.MODELTEMP_INFO;
19903  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19904  proc sort data = EMWS3.Tree6_EMINFO NOTHREADS;
19905  by TARGET KEY;
19906  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE6_EMINFO.
NOTE: The data set EMWS3.TREE6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19907  proc sort data = EMWS3.TextCluster6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
19908  by TARGET KEY;
19909  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19910  proc sort data = EMWS3.Tree6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
19911  by TARGET KEY;
19912  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
19913  data EMWS3.Tree6_EMINFO;
19914  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
19915  by TARGET KEY;
19916  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE6_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19917  proc datasets lib=work nolist;
19918  delete TEMP_INFO SORTEDEMINFO;
19919  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
19920  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE6_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE6_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:35
*------------------------------------------------------------*
19944  data EMWS3.Tree6_EMOUTFIT;
19945  set EMWS3.Tree6_EMOUTFIT;
19946  length TargetLabel $200;
19947  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
19948  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
19949  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_EMOUTFIT.
NOTE: The data set EMWS3.TREE6_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
19950  proc sort data=EMWS3.Tree6_EMREPORTFIT nothreads;
19951  by TARGET;
19952  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE6_EMREPORTFIT.
NOTE: The data set EMWS3.TREE6_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19953  %let _EMwarndup = 0;
19954  %let _EMtargetdup =;
19955  %let _EMASEtargetdup =;
19956  data _null_;
19957  set EMWS3.Tree6_EMOUTFIT;
19958  if .<_ASE_<0.000001 then do;
19959  call symput('_EMwarndup', '1');
19960  call symput('_EMtargetdup', target);
19961  call symput('_EMASEtargetdup', put(_ASE_, best.));
19962  end;
19963  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19964  %let EMEXCEPTIONSTRING=;
19965  *------------------------------------------------------------*;
19966  * REPORT: Tree6;
19967  *------------------------------------------------------------*;
19968  %let EM_ACTION = REPORT;
19969  %let syscc = 0;
19970  %macro main;
19971
19972    %if %upcase(&EM_ACTION) = CREATE %then %do;
19973      filename temp catalog 'sashelp.emmodl.tree_create.source';
19974      %include temp;
19975      filename temp;
19976
19977      %em_tree_create;
19978    %end;
19979
19980     %else
19981     %if %upcase(&EM_ACTION) = TRAIN %then %do;
19982
19983         filename temp catalog 'sashelp.emmodl.tree_train.source';
19984         %include temp;
19985         filename temp;
19986         %em_tree_train;
19987     %end;
19988
19989    %else
19990    %if %upcase(&EM_ACTION) = SCORE %then %do;
19991      filename temp catalog 'sashelp.emmodl.tree_score.source';
19992      %include temp;
19993      filename temp;
19994
19995      %em_tree_score;
19996
19997    %end;
19998
19999    %else
20000    %if %upcase(&EM_ACTION) = REPORT %then %do;
20001
20002         filename temp catalog 'sashelp.emmodl.tree_report.source';
20003         %include temp;
20004         filename temp;
20005
20006         %em_tree_report;
20007     %end;
20008
20009    %else
20010    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20011
20012         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20013         %include temp;
20014         filename temp;
20015         %EM_TREE_OPENTREEVIEWER;
20016
20017     %end;
20018
20019    %else
20020    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20021
20022         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20023         %include temp;
20024         filename temp;
20025         %EM_TREE_CLOSETREEVIEWER;
20026
20027     %end;
20028
20029
20030     %doendm:
20031  %mend main;
20032
20033  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20035 +%macro em_tree_makePlotDs( multipleTar= );
20037 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20038 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20039 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20040 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20042 +  /* determine if validation statistics will be displayed */
20043 +  %let validflag=N;
20044 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20045 +    /* determine if validation data exists */
20046 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20047 +      %let validflag=Y;
20048 +    %end;
20049 +  %end;
20051 +   /* retrieve name of decmeta even in presence of multiple targets */
20052 +   %let decmeta = ;
20053 +   %if &EM_DEC_DECMETA eq %then %do;
20054 +     data _Target;
20055 +       set &em_data_variableset;
20056 +       where ROLE='TARGET' and USE in('D', 'Y');
20057 +       keep NAME;
20058 +     run;
20059 +     proc sort data=_Target;
20060 +       by NAME;
20061 +     run;
20062 +     proc sort data=EM_TARGETDECINFO;
20063 +       by TARGET;
20064 +     run;
20065 +     data _Target;
20066 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20067 +       by NAME;
20068 +       if _a then do;
20069 +         call symput('decmeta', trim(DECMETA));
20070 +       end;
20071 +     run;
20072 +     proc delete data=_Target;run;
20073 +   %end;
20074 +   %else %let decmeta = &EM_DEC_DECMETA;
20077 +  /* retrieve targetEvent from decmeta */
20078 +  %let targetEvent=;
20079 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20080 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20081 +      data _null_;
20082 +       set &DECMETA(where=(_TYPE_="TARGET"));
20083 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20084 +      run;
20085 +    %end;
20086 +  %end;
20088 +  /* retrieve predicted var for targetEvent from decmeta */
20089 +  %let predTarget=;
20090 +  %let predLvl=;
20091 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20092 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20093 +      data _null_;
20094 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20095 +       call symput('predTarget', strip(VARIABLE));
20096 +       call symput('predLvl', strip(LEVEL));
20097 +      run;
20098 +    %end;
20099 +  %end;
20100 +  %else %do;
20101 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20102 +      data _null_;
20103 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20104 +       call symput('predTarget', strip(VARIABLE));
20105 +      run;
20106 +    %end;
20107 +  %end;
20109 +  /* create BelowText value */
20110 +  data belowtext;
20111 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20112 +    keep node belowtext;
20113 +  run;
20115 +  /* replace belowtext with variable label if it exists */
20116 +  data belowtext2;
20117 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20118 +    keep node belowtextlbl;
20119 +  run;
20121 +  proc sort data=belowtext; by node; run;
20122 +  proc sort data=belowtext2; by node; run;
20124 +  data belowtext;
20125 +    merge belowtext belowtext2(in=_a);
20126 +    by node;
20127 +    if _a then belowtext=belowtextlbl;
20128 +    keep node belowtext;
20129 +  run;
20131 +  /* create AboveText value */
20132 +  data abovetext;
20133 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20134 +  run;
20135 +  proc sort data=abovetext; by node numeric_value; run;
20137 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20138 +  data abovetext;
20139 +    set abovetext(rename=(node=parent));
20140 +    by parent numeric_value;
20141 +    retain abovetext tempstring flag branch origval origchar ;
20142 +    length abovetext $256;
20143 +    length tempstring origchar $64;
20145 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20146 +      if first.parent then do;
20147 +        if missing(character_value) then do;
20148 +          numeric_value = round(numeric_value, &sp_precision);
20149 +          abovetext = "< "||strip(NUMERIC_VALUE);
20150 +          branch = 1;
20151 +          origval = numeric_value;
20152 +          output;
20153 +        end;
20154 +        else do;
20155 +          abovetext = "< "||strip(CHARACTER_VALUE);
20156 +          branch = 1;
20157 +          origchar = character_value;
20158 +          output;
20159 +        end;
20161 +        if first.parent AND last.parent then do;
20162 +          if missing(character_value) then do;
20163 +            numeric_value = round(numeric_value, &sp_precision);
20164 +            branch = branch + 1;
20165 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20166 +            output;
20167 +          end;
20168 +          else do;
20169 +            branch = branch + 1;
20170 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20171 +            output;
20172 +          end;
20173 +        end;
20174 +      end;
20175 +      else if last.parent then do;
20176 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20177 +          if missing(character_value) then do;
20178 +            numeric_value = round(numeric_value, &sp_precision);
20179 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20180 +          end;
20181 +          else do;
20182 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20183 +          end;
20184 +          branch = branch + 1;
20185 +          output;
20187 +          if missing(character_value) then do;
20188 +            numeric_value = round(numeric_value, &sp_precision);
20189 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20190 +          end;
20191 +          else do;
20192 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20193 +          end;
20194 +          branch = branch + 1;
20195 +          output;
20196 +        end;
20197 +        else do;
20198 +          if missing(character_value) then do;
20199 +            numeric_value = round(numeric_value, &sp_precision);
20200 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20201 +          end;
20202 +          else do;
20203 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20204 +          end;
20205 +          branch = branch + 1;
20206 +          output;
20207 +        end;
20208 +      end;
20209 +      else do;
20210 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20211 +          if missing(character_value) then do;
20212 +            numeric_value = round(numeric_value,&sp_precision);
20213 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20214 +            origval = numeric_value;
20215 +          end;
20216 +          else do;
20217 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20218 +            origchar = character_value;
20219 +          end;
20220 +          branch = branch + 1;
20221 +          output;
20223 +        end;
20224 +        else do;
20225 +          if missing(character_value) then do;
20226 +            numeric_value = round(numeric_value, &sp_precision);
20227 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20228 +            origval = numeric_value;
20229 +          end;
20230 +          else do;
20231 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20232 +            origval = character_value;
20233 +          end;
20234 +          branch = branch + 1;
20235 +          output;
20236 +        end;
20237 +      end;
20238 +    end;
20239 +    else do;
20240 +       if first.numeric_value then do;
20241 +         flag = 0;
20242 +         abovetext = strip(CHARACTER_VALUE);
20243 +         branch = numeric_value;
20244 +         if first.numeric_value AND last.numeric_value then do;
20245 +           output;
20246 +         end;
20247 +       end;
20248 +       else if last.numeric_value then do;
20249 +         if flag=0 then do;
20250 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20251 +           length = length(strip(tempstring));
20252 +           if length < 32 then do;
20253 +             abovetext = strip(tempstring);
20254 +           end;
20255 +           else do;
20256 +             abovetext = strip(abovetext)||", ...";
20257 +             flag = 1;
20258 +           end;
20259 +         end;
20260 +         branch = numeric_value;
20261 +         output;
20262 +       end;
20263 +       else do;
20264 +         if flag=0 then do;
20265 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20266 +           length = length(strip(tempstring));
20267 +           if length < 32 then do;
20268 +             abovetext = strip(tempstring);
20269 +           end;
20270 +           else do;
20271 +             abovetext = strip(abovetext)||", ...";
20272 +             flag=1;
20273 +           end;
20274 +         end;
20275 +         branch = numeric_value;
20276 +       end;
20277 +    end;
20278 +    keep parent branch abovetext;
20279 +  run;
20281 +  /* Missing value to abovetext */
20282 +  data tempmissing;
20283 +    set &EM_USER_OUTRULES;
20284 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20285 +    rename node=parent numeric_value=branch character_value=misschar;
20286 +  run;
20289 +  proc sort data=abovetext; by parent branch; run;
20290 +  proc sort data=tempmissing; by parent branch; run;
20291 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20293 +  data tempoutnodes;
20294 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20295 +    by parent branch;
20296 +    length traintotal validtotal 8;
20297 +    retain traintotal validtotal;
20299 +    if _a then do;
20300 +      if ^MISSING(abovetext) then do;
20301 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20302 +      end;
20303 +      else do;
20304 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20305 +      end;
20306 +    end;
20307 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20309 +    if node=1 then do;
20310 +      traintotal = N;
20311 +      validtotal=VN;
20312 +    end;
20314 +    drop role rank stat misschar belowtext;
20315 +  run;
20316 +  proc sort data=tempoutnodes; by node; run;
20317 +  proc sort data=belowtext; by node; run;
20319 +  data tempoutnodes;
20320 +    merge tempoutnodes belowtext;
20321 +    by node;
20323 +  run;
20325 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20326 +  %let adjusted = N;
20327 +  %let npriors = 0;
20328 +  data _null_ ;
20329 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20330 +    if eof then do ;
20331 +      call symput("npriors" , strip(put(_N_,best.))) ;
20332 +    end;
20333 +  run;
20334 +  %if &npriors gt 0 %then %let adjusted=Y;
20337 +  /* create a table with targetUsed and targetLevel columns for each node */
20338 +  data temptarmeta;
20339 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20340 +    %if &multipleTar eq N %then %do;
20341 +      AND USE in ('D', 'Y')
20342 +    %end;
20343 +    ));
20344 +    length TARGET $32;
20345 +    Target=name;
20346 +    keep target level;
20347 +  run;
20349 +  %if &multipleTar eq Y %then %do;
20350 +    data temptargetused;
20351 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20352 +      keep node target;
20353 +    run;
20354 +    proc sort data=temptargetused; by target; run;
20355 +    proc sort data=temptarmeta; by target; run;
20356 +    data temptargetused;
20357 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20358 +      by target;
20359 +      if _a and _b;
20360 +    run;
20361 +  %end;
20362 +  %else %do;
20363 +    data temptargetused;
20364 +      set &EM_USER_OUTSTATS;
20365 +      length target $32 tarlevel $10;
20366 +      target="%EM_TARGET";
20367 +      tarlevel="%EM_TARGET_LEVEL";
20368 +      keep node target tarlevel;
20369 +    run;
20370 +    proc sort data=temptargetused nodupkey; by node; run;
20371 +  %end;
20373 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20374 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20375 +  proc sort data=temptargetused; by node; run;
20378 +  /* create tables for all interval targets as well as all class targets */
20379 +  data tempinterval tempclass;
20380 +    merge tempoutstats temptargetused( rename=(target=targetused));
20381 +    by node;
20382 +    %if "&multipleTar" eq "Y" %then %do;
20383 +      if ((missing(Target)) OR (target=targetused ));
20384 +    %end;
20386 +    if tarlevel="INTERVAL" then output tempinterval;
20387 +    else output tempclass;
20388 +  run;
20390 +  /* initialize intTarget and classTarget flags */
20391 +  %let em_intNobs =0;
20392 +  %let em_classNobs = 0;
20393 +  %let em_intTarget= N;
20394 +  %let em_classTarget= N;
20396 +  proc sql;
20397 +    reset noprint;
20398 +    select count(*) into :em_intNobs from tempinterval;
20399 +  quit;
20400 +  proc sql;
20401 +    reset noprint;
20402 +    select count(*) into :em_classNobs from tempclass;
20403 +  quit;
20405 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20406 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20408 +  /* retrieve all information for interval targets */
20409 +  %if &em_intTarget eq Y %then %do;
20411 +    /* determine if leaf variable exists */
20412 +    %let dsid=%sysfunc(open(tempinterval,i));
20413 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20414 +    %let rc=%sysfunc(close(&dsid));
20416 +    proc transpose data=tempinterval
20417 +      %if &leafexists %then %do;
20418 +        (drop=leaf)
20419 +      %end;
20420 +      %if &validexist %then %do;
20421 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20422 +      %end;
20423 +      %else %do;
20424 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20425 +      %end;
20426 +      by node;
20427 +      id statname;
20428 +    run;
20429 +    data tempinterval;
20430 +      set tempinterval;
20431 +      if missing(N) then delete;
20432 +    run;
20433 +  %end;
20435 +  /* retrieve all information for class targets */
20436 +  %if &em_classTarget eq Y %then %do;
20437 +    proc sort data=tempclass; by node category; run;
20438 +    %if &validflag eq N %then %do;
20439 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20440 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20441 +    %end;
20442 +    %else %do;
20443 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20444 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20445 +    %end;
20446 +      set tempclass;
20448 +      %if &validflag eq N %then %do;
20449 +        %if "&adjusted" eq "N" %then %do;
20450 +          if statname="N" then output tempn;
20451 +        %end;
20452 +        %else %do;
20453 +          if statname="NPRIORS" then output tempn;
20454 +        %end;
20455 +        else if statname="PREDICTION" then output temppredict;
20456 +        else if statname="PROBABILITY" then output tempprob;
20457 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20458 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20459 +      %end;
20460 +      %else %do;
20461 +        %if "&adjusted" eq "N" %then %do;
20462 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20463 +        %end;
20464 +        %else %do;
20465 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20466 +        %end;
20467 +        else if statname="PREDICTION" then output temppredict;
20468 +        else if statname="PROBABILITY" then output tempprob;
20469 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20470 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20471 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20472 +      %end;
20473 +    run;
20476 +    /* determine if profit/loss exists in tempprofit */
20477 +    %let em_profitflag=0;
20478 +    %let em_lossflag=0;
20479 +    proc sql;
20480 +      reset noprint;
20481 +      select count(*) into :em_profitflag from tempprofit;
20482 +    quit;
20483 +    proc sql;
20484 +      reset noprint;
20485 +      select count(*) into :em_lossflag from temploss;
20486 +    quit;
20488 +    %if &validFlag eq Y %then %do;
20489 +      proc transpose data=tempn
20490 +        %if "&adjusted" eq "N" %then %do;
20491 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20492 +        %end;
20493 +        %else %do;
20494 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20495 +        %end;
20496 +        by node;
20497 +        id statname;
20498 +      run;
20499 +      %if &em_profitflag ne 0 %then %do;
20500 +        proc transpose data=tempprofit out=tempprofit;
20501 +          by node category;
20502 +          id statname ;
20503 +        run;
20504 +      %end;
20505 +      %if &em_lossflag ne 0 %then %do;
20506 +        proc transpose data=temploss out=temploss;
20507 +          by node category;
20508 +          id statname ;
20509 +        run;
20510 +      %end;
20511 +      data tempprob;
20512 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20513 +        by node
20514 +        %if &multipleTar eq Y %then %do;
20515 +          target
20516 +        %end;
20517 +        category;
20518 +      run;
20519 +    %end;
20521 +    /* store percentcorrect value */
20522 +    data temppredict;
20523 +      merge tempprob temppredict(in=_a);
20524 +      by node category;
20525 +      if _a then do;
20526 +        percentCorrect = statvalue;
20527 +        %if &validFlag eq Y %then %do;
20528 +          vpercentCorrect= vstatvalue;
20529 +        %end;
20530 +      end;
20531 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20532 +      %if &validFlag eq Y %then %do;
20533 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20534 +      %end;
20535 +      ;
20536 +      if missing(percentCorrect) then delete;
20537 +      drop target;
20538 +    run;
20540 +    /* build profittext */
20541 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20542 +      data tempprofittext(keep= node profittext profitloss);
20543 +        length profittext $800 profitloss 8.;
20544 +        retain profittext profitloss;
20546 +        merge tempprob
20547 +        %if &em_profitflag ne 0 %then %do;
20548 +          tempprofit
20549 +        %end;
20550 +        %else %if &em_lossflag ne 0 %then %do;
20551 +          temploss
20552 +        %end;
20553 +        ;
20554 +        by node category;
20556 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20557 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20558 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20559 +          %let profittype = ALL;
20560 +        %end;
20562 +        /* create the profitloss variable for nodecolor if selected */
20563 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20565 +        %if "&profittype" eq "ALL" %then %do;
20566 +          if strip(CATEGORY)="&targetEvent" then do;
20567 +            profitloss=statvalue;
20568 +          end;
20569 +          if first.node then do;
20570 +            %if &validFlag eq N %then %do;
20571 +             %if &em_profitflag ne 0 %then %do;
20572 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20573 +             %end;
20574 +             %if &em_lossflag ne 0 %then %do;
20575 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20576 +             %end;
20577 +            %end;
20578 +            %else %do;
20579 +             %if &em_profitflag ne 0 %then %do;
20580 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20580!+;
20581 +             %end;
20582 +             %if &em_lossflag ne 0 %then %do;
20583 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20584 +             %end;
20585 +            %end;
20586 +          end;
20587 +          else if last.node then do;
20588 +            %if &validFlag eq N %then %do;
20589 +             %if &em_profitflag ne 0 %then %do;
20590 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20591 +             %end;
20592 +             %if &em_lossflag ne 0 %then %do;
20593 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20594 +             %end;
20595 +             /*if CATEGORY="&targetEvent" then do;
20596 +               profitloss=statvalue;
20597 +             end;*/
20598 +            %end;
20599 +            %else %do;
20600 +             %if &em_profitflag ne 0 %then %do;
20601 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20601!+14.&EM_PROPERTY_SPLITPRECISION);
20602 +                if CATEGORY="&targetEvent" then do;
20603 +                 profitloss=ALTERNATIVE_PROFIT;
20604 +                end;
20605 +             %end;
20606 +             %if &em_lossflag ne 0 %then %do;
20607 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20607!+14.&EM_PROPERTY_SPLITPRECISION);
20608 +                if CATEGORY="&targetEvent" then do;
20609 +                  profitloss=ALTERNATIVE_LOSS;
20610 +                end;
20611 +             %end;
20612 +            %end;
20613 +            output;
20614 +          end;
20615 +          else do;
20616 +            %if &validFlag eq N %then %do;
20617 +             %if &em_profitflag ne 0 %then %do;
20618 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20619 +             %end;
20620 +             %if &em_lossflag ne 0 %then %do;
20621 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20622 +             %end;
20623 +            %end;
20624 +            %else %do;
20625 +             %if &em_profitflag ne 0 %then %do;
20626 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20626!+14.&EM_PROPERTY_SPLITPRECISION);
20627 +             %end;
20628 +             %if &em_lossflag ne 0 %then %do;
20629 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20629!+14.&EM_PROPERTY_SPLITPRECISION);
20630 +             %end;
20631 +            %end;
20632 +          end;
20633 +        %end;
20634 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20635 +          if strip(CATEGORY) = "&targetevent" then do;
20636 +            %if &validFlag eq N %then %do;
20637 +             %if &em_profitflag ne 0 %then %do;
20638 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20639 +             %end;
20640 +             %if &em_lossflag ne 0 %then %do;
20641 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20642 +             %end;
20643 +             profitloss=statvalue;
20644 +            %end;
20645 +            %else %do;
20646 +             %if &em_profitflag ne 0 %then %do;
20647 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20647!+;
20648 +                profitloss=ALTERNATIVE_PROFIT;
20649 +             %end;
20650 +             %if &em_lossflag ne 0 %then %do;
20651 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20652 +                profitloss=ALTERNATIVE_LOSS;
20653 +             %end;
20654 +            %end;
20655 +            output;
20656 +          end;
20657 +        %end;
20658 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
20659 +          if strip(CATEGORY) = "&targetevent" then do;
20660 +            %if &validFlag eq N %then %do;
20661 +             profitloss=statvalue;
20662 +            %end;
20663 +            %else %do;
20664 +             %if &em_profitflag ne 0 %then %do;
20665 +                profitloss=ALTERNATIVE_PROFIT;
20666 +             %end;
20667 +             %if &em_lossflag ne 0 %then %do;
20668 +                profitloss=ALTERNATIVE_LOSS;
20669 +             %end;
20670 +            %end;
20671 +            output;
20672 +          end;
20673 +        %end;
20674 +      run;
20675 +    %end;
20677 +    data tempprob(keep= node probtext);
20678 +      length probtext $800;
20679 +      retain probtext;
20680 +      set tempprob ;
20681 +      by node;
20683 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20684 +      %let probtype = &EM_PROPERTY_TARGET;
20685 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
20686 +        %let probtype = ALL;
20687 +      %end;
20689 +      %if "&probtype" eq "ALL" %then %do;
20690 +        if first.node then do;
20691 +          %if &validFlag eq N %then %do;
20692 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20693 +          %end;
20694 +          %else %do;
20695 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20696 +          %end;
20697 +        end;
20698 +        else if last.node then do;
20699 +          %if &validFlag eq N %then %do;
20700 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20701 +          %end;
20702 +          %else %do;
20703 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20704 +          %end;
20705 +          output;
20706 +        end;
20707 +        else do;
20708 +          %if &validFlag eq N %then %do;
20709 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20710 +          %end;
20711 +          %else %do;
20712 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20713 +          %end;
20714 +        end;
20715 +      %end;
20716 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20717 +        if strip(CATEGORY) = "&targetevent" then do;
20718 +          %if &validFlag eq N %then %do;
20719 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20720 +          %end;
20721 +          %else %do;
20722 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20723 +          %end;
20724 +          output;
20725 +        end;
20726 +      %end;
20727 +      %else %if "&probtype" eq "NONE" %then %do;
20728 +        if last.node then do;
20729 +          output;
20730 +        end;
20731 +      %end;
20732 +    run;
20733 +  %end;
20735 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
20737 +  %let oldexists=0;
20738 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
20739 +     data old_tree_plot;
20740 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
20741 +        rename nodecolor=oldnodecolor;
20742 +     run;
20744 +     proc sort data=old_tree_plot;
20745 +        by node;
20746 +     run;
20748 +     %let oldexists=1;
20749 +  %end;
20751 +  data &EM_USER_TREE_PLOT;
20752 +    length textall $800;
20753 +    merge tempoutnodes temptargetused
20755 +    %if &em_intTarget eq Y %then %do;
20756 +      tempinterval
20757 +    %end;
20759 +    %if &em_classTarget eq Y %then %do;
20761 +      %if &validFlag eq N %then %do;
20762 +        tempn(rename=(statvalue=N))
20763 +      %end;
20764 +      %else %do;
20765 +        tempn
20766 +      %end;
20768 +      temppredict tempprob
20770 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20771 +        tempprofittext
20772 +      %end;
20773 +    %end;
20774 +    ;
20775 +    by node;
20777 +    /* build nodetext based on user selection */
20778 +    textall="";
20780 +    %if &em_intTarget eq Y %then %do;
20781 +    if tarlevel="INTERVAL" then do;
20782 +      /* Nodeid */
20783 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
20784 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
20785 +      %end;
20787 +      /* Target identifier if multiple targets are used */
20788 +      %if "&multipleTar" eq "Y" %then %do;
20789 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
20790 +      %end;
20792 +      %if &validFlag eq Y %then %do;
20793 +         /* Column labels displayed in validflag eq Y only */
20794 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
20795 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
20795!+noquote ))";
20796 +         %end;
20798 +         /* Average values */
20799 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20800 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20801 +         %end;
20803 +         /* RASE */
20804 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20805 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
20806 +         %end;
20808 +         /* Count */
20809 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20810 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
20811 +         %end;
20812 +      %end;
20813 +      %else %do;
20814 +         /* Average values */
20815 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20816 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20817 +         %end;
20819 +         /* RASE */
20820 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20821 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
20822 +         %end;
20824 +         /* Count */
20825 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20826 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
20827 +         %end;
20828 +      %end;
20830 +      /* nodecolor */
20831 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
20832 +        nodecolor=PREDICTION;
20833 +      %end;
20834 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
20835 +        nodecolor=RASE;
20836 +      %end;
20837 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
20838 +        nodecolor=1;
20839 +      %end;
20841 +    end;
20842 +    %end;
20843 +    %if &em_classTarget eq Y %then %do;
20844 +    if tarlevel^="INTERVAL" then  do;
20846 +      /* Nodeid */
20847 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
20848 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
20849 +      %end;
20850 +      /* Target identifier if multiple targets are used */
20851 +      %if "&multipleTar" eq "Y" %then %do;
20852 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
20853 +      %end;
20855 +      /* Predicted values */
20856 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
20857 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
20858 +      %end;
20860 +      /* Column labels displayed in validflag eq Y only */
20861 +      %if "&ValidFlag" eq "Y" %then %do;
20862 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
20863 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
20863!+noquote ))";
20864 +        %end;
20865 +      %end;
20867 +      /* Target Values */
20868 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
20869 +        textall=strip(textall)||"0A"x||strip(probtext);
20870 +      %end;
20872 +      /* include profit or loss for all target levels */
20873 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
20874 +        textall=strip(textall)||"0A"x||strip(profittext);
20875 +      %end;
20877 +      %if &validFlag eq N %then %do;
20878 +        /* Percent Correct */
20879 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
20880 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
20881 +        %end;
20883 +         /* Count */
20884 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20885 +          %if "&adjusted" eq "N" %then %do;
20886 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
20887 +          %end;
20888 +          %else %do;
20889 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
20890 +          %end;
20891 +         %end;
20892 +      %end;
20893 +      %else %do;
20894 +        /* Percent Correct */
20895 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
20896 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
20897 +        %end;
20899 +         /* Count */
20900 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20901 +          %if "&adjusted" eq "N" %then %do;
20902 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
20903 +          %end;
20904 +          %else %do;
20905 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
20906 +          %end;
20907 +         %end;
20908 +      %end;
20910 +      /* nodecolor */
20911 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
20912 +       %if &multipleTar ne Y %then %do;
20913 +        nodecolor=&predTarget;
20914 +       %end;
20915 +       %else %do;
20916 +         nodecolor=percentcorrect;
20917 +       %end;
20918 +      %end;
20919 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
20920 +        nodecolor=percentcorrect;
20921 +      %end;
20922 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
20923 +        nodecolor=1;
20924 +      %end;
20925 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
20926 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
20927 +          nodecolor=percentcorrect;
20928 +        %end;
20929 +        %else %do;
20930 +          nodecolor=profitloss;
20931 +        %end;
20932 +      %end;
20934 +    end;
20935 +    %end;
20936 +    %if &em_intTarget eq Y %then %do;
20937 +     drop  PREDICTION  TARGET TARLEVEL
20938 +     %if &ValidFlag eq Y %then %do;
20939 +         VPREDICTION
20940 +     %end;
20941 +     ;
20942 +    %end;
20943 +    %if &em_classTarget eq Y %then %do;
20944 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
20945 +     %if &ValidFlag eq Y %then %do;
20946 +         VSTATVALUE
20947 +     %end;
20948 +     ;
20949 +    %end;
20951 +  run;
20953 +  /* add leaf index information to plotds - based on primary target only*/
20954 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20955 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
20956 +      set &EM_USER_OUTSTATS;
20957 +      if ((statname="PROBABILITY"
20958 +      %if &validexist %then %do;
20959 +       or statname="VALID: PROBABILITY"
20960 +      %end;
20961 +      ) AND (CATEGORY="&TARGETEVENT")
20962 +      %if "&multipleTar" eq "Y" %then %do;
20963 +        AND (Target="%EM_TARGET")
20964 +      %end;
20965 +      );
20966 +    run;
20968 +    %if &validexist %then %do;
20969 +      proc sort data=tempprob; by node; run;
20970 +      %let vpredTarget = V%substr(&predTarget, 2);
20971 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
20972 +         by node;
20973 +         id statname;
20974 +      run;
20975 +    %end;
20976 +  %end;
20977 +  %else %do;
20978 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
20979 +      set &EM_USER_OUTSTATS;
20980 +      if ((statname="PREDICTION"
20981 +      %if &validexist %then %do;
20982 +       or statname="VALID: PREDICTION"
20983 +      %end;
20984 +      )
20985 +      %if "&multipleTar" eq "Y" %then %do;
20986 +        AND (Target="%EM_TARGET")
20987 +      %end;
20988 +      );
20989 +    run;
20990 +    %if &validexist %then %do;
20991 +      proc sort data=tempprob; by node; run;
20992 +      %let vpredTarget = V%substr(&predTarget, 2);
20993 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
20994 +         by node;
20995 +         id statname;
20996 +      run;
20997 +    %end;
20998 +  %end;
21000 +  proc sort data=tempprob; by node; run;
21001 +  data tempoutnodes;
21002 +    merge tempoutnodes tempprob;
21003 +    by node;
21004 +  run;
21006 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21007 +  data tempnodes;
21008 +    retain traintotal validtotal;
21009 +    set tempnodes(where=(leaf ne . ));
21010 +    tprob=round(&predTarget, .01);
21011 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21012 +      percevent_train=round(tprob*100, .01);
21013 +    %end;
21014 +    %else %do;
21015 +      percevent_train=tprob;
21016 +    %end;
21018 +    perc_train=round((n/traintotal)*100, 0.01);
21019 +    /* leafwidth already has a *10 multiplier */
21020 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21022 +    %if &validexist %then %do;
21023 +      %let vpredTarget = V%substr(&predTarget,2);
21024 +      vprob=round(&vpredTarget, .01);
21025 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21026 +        percevent_valid=round(vprob*100, .01);
21027 +      %end;
21028 +      %else %do;
21029 +        percevent_valid=vprob;
21030 +      %end;
21031 +      perc_valid=round((vn/validtotal)*100, .01);
21032 +    %end;
21034 +    index=_N_;
21035 +    keep node index tprob perc_train percevent_train
21036 +    %if &validexist %then %do;
21037 +        vprob percevent_valid perc_valid
21038 +    %end;
21039 +    ;
21040 +  run;
21041 +  proc sort data=tempnodes; by node; run;
21042 +  data &EM_USER_TREE_PLOT;
21043 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21044 +    by node;
21045 +    if missing(node) then delete;
21046 +    %if &oldexists %then %do;
21047 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21048 +      drop oldnodecolor;
21049 +    %end;
21050 +    abovetext = compbl(abovetext);
21052 +    /* add variable labels */
21053 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21054 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21055 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21056 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21057 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21058 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21060 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21061 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21062 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21063 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21064 +          %end;
21065 +          %else %do;
21066 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21067 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21068 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21069 +          %end;
21070 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21072 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21073 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21074 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21075 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21076 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21077 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21078 +          %end;
21079 +          %else %do;
21080 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21081 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21082 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21083 +          %end;
21084 +    ;
21085 +  run;
21087 +  /* delete temporary tables */
21088 +  proc datasets lib=work nolist;
21089 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21090 +  run;
21092 +%mend em_tree_makePlotDs;
21096 +%macro em_tree_report;
21098 +   /* report properties */
21099 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21100 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21101 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21102 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21103 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21104 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21105 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21106 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21107 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21108 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21109 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21110 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21111 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21113 +   %let validexist=0;
21114 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21115 +     %let validexist=1;
21116 +   %end;
21118 +   /* determine if multiple targets will be processed */
21119 +   %let em_tree_multipleTargets=N;
21120 +   %let em_tree_numTarget=1;
21121 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21122 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21123 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21124 +         %let em_tree_multipleTargets=N;
21125 +      %end;
21126 +      %else %do;
21127 +        data _null_;
21128 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21129 +          if eof then
21130 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21131 +        run;
21133 +        %if &em_tree_numTarget gt 1 %then %do;
21134 +           %let em_tree_multipleTargets=Y;
21135 +        %end;
21136 +     %end;
21137 +   %end;
21139 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21141 +   /* variable importance */
21142 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21143 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21145 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21146 +     /* and the columns may not be generated                                                                                 */
21147 +     %let em_tree_cvexists=;
21148 +     %let em_tree_surrexists=.;
21149 +     data _null_;
21150 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21151 +       if eof then do ;
21152 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21153 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21154 +       end;
21155 +     run;
21157 +     data &EM_USER_OUTIMPORT;
21158 +         set &EM_USER_OUTIMPORT;
21159 +         /* format columns based on Precison value specified */
21160 +         format importance 15.&EM_PROPERTY_PRECISION
21161 +              %if &validexist %then %do;
21162 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21163 +              %end;
21164 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21165 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21166 +              %end;
21167 +         ;
21168 +     run;
21170 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21171 +     proc print data=&EM_USER_OUTIMPORT
21172 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21173 +          (where=((nrules>0) OR (nsurrogates>0)))
21174 +        %end;
21175 +        %else %do;
21176 +           (where=(nrules>0))
21177 +        %end;
21178 +        label noobs
21179 +        ;
21180 +     run;
21181 +     title10;
21183 +   %end;
21185 +   /* Sequence */
21186 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21187 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21188 +   data _null_ ;
21189 +      set &EM_USER_outseq (obs=2) end=eof ;
21190 +      if eof then do ;
21191 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21192 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21193 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21194 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21195 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21196 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21197 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21198 +      end;
21199 +    run;
21201 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21202 +      data &EM_USER_OUTSEQ;
21203 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21204 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21205 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21206 +           _XMISC_=_VMISC_
21207 +        %end;
21208 +        %if "&em_tree_aprof" ne "."  %then %do;
21209 +           _XAPROF_=_VAPROF_
21210 +           _XPROF_ = _VPROF_
21211 +        %end;
21212 +        %if "&em_tree_aloss" ne "."  %then %do;
21213 +           _XALOSS_=_VALOSS_
21214 +        %end;
21215 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21216 +           _XPASE_ = _VPASE_
21217 +           _XPMISC_ = _VPMISC_
21218 +        %end;
21220 +        ));
21221 +     %end;
21222 +     %else %do;
21223 +        set &EM_USER_OUTSEQ;
21224 +     %end;
21226 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21227 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21228 +            _MISC_   15.&EM_PROPERTY_PRECISION
21229 +         %end;
21230 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21231 +            _PASE_  15.&EM_PROPERTY_PRECISION
21232 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21233 +         %end;
21234 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21235 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21236 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21237 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21238 +            %end;
21239 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21240 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21241 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21242 +            %end;
21243 +         %end;
21244 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21245 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21246 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21247 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21248 +            %end;
21249 +         %end;
21250 +         %if "&em_tree_seq" ne "." %then %do;
21251 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21252 +         %end;
21253 +         %if "&em_tree_vseq" ne "." %then %do;
21254 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21255 +         %end;
21256 +         %if "&em_tree_aprof" ne "." %then %do;
21257 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21258 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21259 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21260 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21261 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21262 +           %end;
21263 +         %end;
21264 +         %else %if "&em_tree_aloss" ne "." %then %do;
21265 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21266 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21267 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21268 +           %end;
21269 +         %end;
21270 +      ;
21271 +    run;
21272 +   %end;
21274 +   /* Observation Based Importance */
21275 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21277 +      /* need to check for 0 obs */
21278 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21279 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21280 +      %let rc=%sysfunc(close(&dsid));
21282 +      %if &onobs %then %do;
21283 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21284 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21286 +         data &EM_USER_OUTOBSIMP;
21287 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21288 +           if _a;
21289 +           by _INPUT1_;
21290 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21291 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21292 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21293 +                   %end;
21294 +                   ;
21295 +         run;
21296 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21297 +      %end;
21298 +   %end;
21300 +  %end;
21302 +  /* create dataset to support tree diagram and icicle plot */
21303 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21304 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21306 +  /* display tree diagram */
21307 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21308 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21310 +  /* display icicle diagram */
21311 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21312 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21314 +  /* Leaf Statistics Plot */
21315 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21317 +  /* print leaf information to output window */
21318 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21320 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21321 +       by descending N;
21322 +     run;
21324 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21325 +     %local vn;
21326 +     data _null_;
21327 +       set t (obs=2) end=eof;
21328 +       if eof then do;
21329 +         call symput("vn", strip(put(vn, best.)));
21330 +       end;
21331 +     run;
21333 +     data t;
21334 +       set t;
21335 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21336 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21337 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21338 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21339 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21340 +       %end;
21341 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21342 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21343 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21344 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21345 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21346 +          %end;
21347 +       %end;
21348 +       ;
21349 +     run;
21351 +     /* determine if rase is found in t */
21352 +    %let dsid=%sysfunc(open(t,i));
21353 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21354 +    %let rc=%sysfunc(close(&dsid));
21356 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21357 +     proc print data=t noobs label;
21358 +       where tprob ne .;
21359 +       var node depth N tprob
21360 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21361 +         %if "&vn" ne "." %then %do;
21362 +           VN
21363 +         %end;
21364 +         vprob
21365 +       %end;
21366 +       %if &raseexists %then %do;
21367 +            RASE
21368 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21369 +              VRASE
21370 +            %end;
21371 +       %end;
21372 +       ;
21373 +     run;
21374 +     title10;
21375 +  %end;
21377 +  /* create plots that are done during training of node */
21378 +  /* display iterative plot, including reference line */
21379 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21380 +   /* %if &nleaves eq  %then %do; */
21381 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21382 +      data _null_;
21383 +        set &EM_USER_OUTTOPOLOGY end=eof;
21384 +        if eof then do;
21385 +          call symput('nleaves', LEAF);
21386 +        end;
21387 +      run;
21388 +   /* %end; */
21390 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21391 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21392 +  %end;
21394 +  /* display leaf statistics */
21395 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21397 +  /* stats by node if multiple targets = Y */
21398 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21399 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21400 +    data &EM_USER_OUTSTATS;
21401 +      set &EM_USER_OUTSTATS;
21403 +     * if STATNAME="TARGET" then delete;
21404 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21405 +      drop leaf;
21406 +    run;
21407 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21409 +  %end;
21410 +  %else %do;
21411 +    /* add outstats and outdescribe to spk but not results */
21412 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21413 +  %end;
21415 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE6_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set EMWS3.TREE6_OUTIMPORT.
NOTE: The data set EMWS3.TREE6_OUTIMPORT has 44 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE6_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE6_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set EMWS3.TREE6_OUTSEQ.
NOTE: The data set EMWS3.TREE6_OUTSEQ has 10 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE6_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE6_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE6_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 207 observations read from the data set EMWS3.TREE6_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE6_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE6_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE6_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE6_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 405 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 390 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE6_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 405 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 30 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 180 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 180 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 15 observations read from the data set WORK.TEMPN.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE6_TREE_PLOT has 15 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE6_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE6_TREE_PLOT.
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE6_TREE_PLOT has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE6_TREE_PLOT.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 15 observations read from the data set EMWS3.TREE6_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
21416
21417  *------------------------------------------------------------*;
21418  * End REPORT: Tree6;
21419  *------------------------------------------------------------*;
 
21420  /* Reset EM Options */
21421  options formchar="|----|+|---+=|-/\<>*";
21422  options nocenter ls=256 ps=10000;
21423  goptions reset=all device=GIF NODISPLAY;
 
21424  proc sort data=WORK.EM_USER_REPORT;
21425  by ID VIEW;
21426  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21427  proc sort data=EMWS3.TextCluster6_CMeta_TRAIN out=WORK.SUBSETINMETA;
21428  by NAME;
21429  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TEXTCLUSTER6_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 54 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21430  proc sort data=EMWS3.Tree6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21431  by NAME;
21432  run;
 
NOTE: There were 54 observations read from the data set EMWS3.TREE6_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 54 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21433  data WORK.ASSESS_META;
21434  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21435  by NAME;
21436  run;
 
NOTE: There were 54 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 54 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 54 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21437  data EM_temp_assessMeta;
21438  set EMWS3.Tree6_CMeta_TRAIN;
21439  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21440  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21441  data EM_temp_assessdata;
21442  set EMWS3.Tree6_TRAIN(keep=
21443  F_Category
21444  I_Category
21445  P_CategoryADVOCATE
21446  P_CategoryBUSINESS_DEVELOPMENT
21447  P_CategoryCONSULTANT
21448  P_CategoryDESIGNER
21449  P_CategoryDIGITAL_MEDIA
21450  P_CategoryFITNESS
21451  P_CategoryHEALTHCARE
21452  P_CategoryHR
21453  P_CategoryINFORMATION_TECHNOLOGY
21454  P_CategoryOTHER
21455  P_CategorySALES
21456  P_CategoryTEACHER
21457  Q_CategoryADVOCATE
21458  Q_CategoryBUSINESS_DEVELOPMENT
21459  Q_CategoryCONSULTANT
21460  Q_CategoryDESIGNER
21461  Q_CategoryDIGITAL_MEDIA
21462  Q_CategoryFITNESS
21463  Q_CategoryHEALTHCARE
21464  Q_CategoryHR
21465  Q_CategoryINFORMATION_TECHNOLOGY
21466  Q_CategoryOTHER
21467  Q_CategorySALES
21468  Q_CategoryTEACHER
21469  R_CategoryADVOCATE
21470  R_CategoryBUSINESS_DEVELOPMENT
21471  R_CategoryCONSULTANT
21472  R_CategoryDESIGNER
21473  R_CategoryDIGITAL_MEDIA
21474  R_CategoryFITNESS
21475  R_CategoryHEALTHCARE
21476  R_CategoryHR
21477  R_CategoryINFORMATION_TECHNOLOGY
21478  R_CategoryOTHER
21479  R_CategorySALES
21480  R_CategoryTEACHER
21481  U_Category
21482  V_CategoryADVOCATE
21483  V_CategoryBUSINESS_DEVELOPMENT
21484  V_CategoryCONSULTANT
21485  V_CategoryDESIGNER
21486  V_CategoryDIGITAL_MEDIA
21487  V_CategoryFITNESS
21488  V_CategoryHEALTHCARE
21489  V_CategoryHR
21490  V_CategoryINFORMATION_TECHNOLOGY
21491  V_CategoryOTHER
21492  V_CategorySALES
21493  V_CategoryTEACHER
21494  _WARN_
21495  Category
21496  );
21497  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER6_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE6_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
25779   data EM_temp_assessMeta;
25780   set EMWS3.Tree6_CMeta_TRAIN;
25781   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
25782   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25783   data EM_temp_assessdata;
25784   set EMWS3.Tree6_VALIDATE(keep=
25785   F_Category
25786   I_Category
25787   P_CategoryADVOCATE
25788   P_CategoryBUSINESS_DEVELOPMENT
25789   P_CategoryCONSULTANT
25790   P_CategoryDESIGNER
25791   P_CategoryDIGITAL_MEDIA
25792   P_CategoryFITNESS
25793   P_CategoryHEALTHCARE
25794   P_CategoryHR
25795   P_CategoryINFORMATION_TECHNOLOGY
25796   P_CategoryOTHER
25797   P_CategorySALES
25798   P_CategoryTEACHER
25799   Q_CategoryADVOCATE
25800   Q_CategoryBUSINESS_DEVELOPMENT
25801   Q_CategoryCONSULTANT
25802   Q_CategoryDESIGNER
25803   Q_CategoryDIGITAL_MEDIA
25804   Q_CategoryFITNESS
25805   Q_CategoryHEALTHCARE
25806   Q_CategoryHR
25807   Q_CategoryINFORMATION_TECHNOLOGY
25808   Q_CategoryOTHER
25809   Q_CategorySALES
25810   Q_CategoryTEACHER
25811   R_CategoryADVOCATE
25812   R_CategoryBUSINESS_DEVELOPMENT
25813   R_CategoryCONSULTANT
25814   R_CategoryDESIGNER
25815   R_CategoryDIGITAL_MEDIA
25816   R_CategoryFITNESS
25817   R_CategoryHEALTHCARE
25818   R_CategoryHR
25819   R_CategoryINFORMATION_TECHNOLOGY
25820   R_CategoryOTHER
25821   R_CategorySALES
25822   R_CategoryTEACHER
25823   U_Category
25824   V_CategoryADVOCATE
25825   V_CategoryBUSINESS_DEVELOPMENT
25826   V_CategoryCONSULTANT
25827   V_CategoryDESIGNER
25828   V_CategoryDIGITAL_MEDIA
25829   V_CategoryFITNESS
25830   V_CategoryHEALTHCARE
25831   V_CategoryHR
25832   V_CategoryINFORMATION_TECHNOLOGY
25833   V_CategoryOTHER
25834   V_CategorySALES
25835   V_CategoryTEACHER
25836   _WARN_
25837   Category
25838   );
25839   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE6_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER6_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE6_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30130   %let _cn = %sysfunc(getoption(CENTER));
30131   options nocenter;
30132   proc print data=EMWS3.Tree6_EMREPORTFIT noobs label;
30133   var STAT LABEL TRAIN
30134   VALIDATE
30135   TEST
30136   ;
30137   by TARGET TARGETLABEL;
30138   title9 ' ';
30139   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30140   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE6_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30141   title10;
30142   options &_cn;
 
30143   proc sort data=EMWS3.Tree6_EMCLASSIFICATION nothreads;
30144   by DATAROLE TARGET TARGETLABEL;
30145   run;
 
NOTE: There were 130 observations read from the data set EMWS3.TREE6_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE6_EMCLASSIFICATION has 130 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30146   %let _cn = %sysfunc(getoption(CENTER));
30147   options nocenter;
30148   proc print data=EMWS3.Tree6_EMCLASSIFICATION noobs label;
30149   var from into pct_row pct_col count percent
30150   ;
30151   by DATAROLE TARGET TARGETLABEL;
30152   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30153   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30154   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30155   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30156   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30157   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30158   where _TYPE_='PREDICTION';
30159   title9 ' ';
30160   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30161   run;
 
NOTE: There were 130 observations read from the data set EMWS3.TREE6_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30162   title9;
30163   title10;
30164   options &_cn;
 
30165   %let _cn = %sysfunc(getoption(CENTER));
30166   options nocenter;
30167   data EMWS3.Tree6_EMEVENTREPORT;
30168   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30169   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30169 ! FALSEEVENT
30170   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30171      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30172   FALSEEVENT=0;
30173   FALSENEVENT=0;
30174   TRUEEVENT=0;
30175   TRUENEVENT=0;
30176   set EMWS3.Tree6_EMEVENTREPORT;
30177   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE6_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE6_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30178   proc print data=EMWS3.Tree6_EMEVENTREPORT noobs label;
30179   title9 ' ';
30180   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30181   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30182   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE6_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30183   title10;
30184   options &_cn;
 
30185   proc datasets library=EMWS3 nolist;
30186   modify Tree6_EMRANK;
30187   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30188   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30189   run;
 
NOTE: MODIFY was successful for EMWS3.TREE6_EMRANK.DATA.
30190   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
30191   %let _cn = %sysfunc(getoption(CENTER));
30192   options nocenter;
30193   proc print data=EMWS3.Tree6_EMRANK label noobs;
30194   var
30195   decile gain lift liftc resp respc N _meanP_;
30196   by
30197   notsorted DATAROLE
30198   notsorted TARGET
30199   notsorted TARGETLABEL
30200   ;
30201   title9 ' ';
30202   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30203   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE6_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30204   title10;
30205   options &_cn;
 
30206   proc datasets library=EMWS3 nolist;
30207   modify Tree6_EMSCOREDIST;
30208   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30209   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30210   run;
 
NOTE: MODIFY was successful for EMWS3.TREE6_EMSCOREDIST.DATA.
30211   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
