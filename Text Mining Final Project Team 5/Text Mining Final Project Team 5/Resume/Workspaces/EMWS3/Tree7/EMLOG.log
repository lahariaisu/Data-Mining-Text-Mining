*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:14
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:07
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree7_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree7META;
15227  run;
 
NOTE: There were 74 observations read from the data set EMWS3.TREE7_VARIABLESET.
NOTE: The data set WORK.TREE7META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
15228  proc print data=WORK.Tree7META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE7META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster11_TRAIN EMWS3.TextCluster11_TRAIN
EMWS3.TextCluster11_TRAIN EMWS3.TextCluster11_TRAIN EMWS3 TextCluster11_TRAIN
EMWS3.TextCluster11_TRAIN EMWS3.TextCluster11_TRAIN
EMWS3.TextCluster11_TRAIN EMWS3.TextCluster11_TRAIN EMWS3 TextCluster11_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE7_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree7_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE7_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree7_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15964  *------------------------------------------------------------*;
15965  * Tree7: Generation of macros and macro variables;
15966  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15967  *------------------------------------------------------------*;
 
15968  %let EMEXCEPTIONSTRING=;
15969  *------------------------------------------------------------*;
15970  * TRAIN: Tree7;
15971  *------------------------------------------------------------*;
15972  %let EM_ACTION = TRAIN;
15973  %let syscc = 0;
15974  %macro main;
15975
15976    %if %upcase(&EM_ACTION) = CREATE %then %do;
15977      filename temp catalog 'sashelp.emmodl.tree_create.source';
15978      %include temp;
15979      filename temp;
15980
15981      %em_tree_create;
15982    %end;
15983
15984     %else
15985     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15986
15987         filename temp catalog 'sashelp.emmodl.tree_train.source';
15988         %include temp;
15989         filename temp;
15990         %em_tree_train;
15991     %end;
15992
15993    %else
15994    %if %upcase(&EM_ACTION) = SCORE %then %do;
15995      filename temp catalog 'sashelp.emmodl.tree_score.source';
15996      %include temp;
15997      filename temp;
15998
15999      %em_tree_score;
16000
16001    %end;
16002
16003    %else
16004    %if %upcase(&EM_ACTION) = REPORT %then %do;
16005
16006         filename temp catalog 'sashelp.emmodl.tree_report.source';
16007         %include temp;
16008         filename temp;
16009
16010         %em_tree_report;
16011     %end;
16012
16013    %else
16014    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16015
16016         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16017         %include temp;
16018         filename temp;
16019         %EM_TREE_OPENTREEVIEWER;
16020
16021     %end;
16022
16023    %else
16024    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16025
16026         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16027         %include temp;
16028         filename temp;
16029         %EM_TREE_CLOSETREEVIEWER;
16030
16031     %end;
16032
16033
16034     %doendm:
16035  %mend main;
16036
16037  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16039 +%macro em_tree_train;
16041 +   %if &EM_IMPORT_DATA eq %then %do;
16042 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16043 +       %put &em_codebar;
16044 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16045 +       %put &errormsg;
16046 +       %put &em_codebar;
16047 +       %goto doendm;
16048 +   %end;
16049 +   %else
16050 +       %let EMEXCEPTIONSTRING =;
16052 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16053 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16054 +        %put &em_codebar;
16055 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16056 +        %put &errormsg;
16057 +        %put &em_codebar;
16058 +        %goto doendm;
16059 +   %end;
16061 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16062 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16063 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16064 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16065 +        %put &em_codebar;
16066 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16067 +        %put &errormsg;
16068 +        %put &em_codebar;
16069 +        %goto doendm;
16070 +   %end;
16072 +   /* Initialize property macro variables */
16073 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16074 +   %include temp;
16075 +   filename temp;
16077 +   %EM_SetProperties;
16079 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16080 +   %EM_GETNAME(key=EMTREE, type=DATA);
16081 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16082 +     /* if import eq Y and no importtable defined, throw an exception */
16083 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16084 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16085 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16086 +         %put &em_codebar;
16087 +         %put &errmsg;
16088 +         %put &em_codebar;
16089 +         %goto doendm;
16090 +      %end;
16091 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16092 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16093 +         %put &em_codebar;
16094 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16095 +         %put &errormsg;
16096 +         %put &em_codebar;
16097 +         %goto doendm;
16098 +      %end;
16099 +      %else %do;
16100 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16101 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16102 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16103 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16104 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16105 +         %let dsid = %sysfunc(close(&dsid));
16106 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16107 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16108 +            %put &em_codebar;
16109 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16110 +            %put &errormsg;
16111 +            %put &em_codebar;
16112 +            %goto doendm;
16113 +         %end;
16114 +      %end;
16115 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16116 +         proc delete data=&EM_USER_EMTREE;
16117 +         run;
16118 +      %end;
16119 +   %end;
16120 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16121 +      proc delete data=&EM_USER_EMTREE;
16122 +      run;
16123 +   %end;
16125 +   /* load tree macros */
16126 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16127 +   %include temp;
16128 +   filename temp;
16130 +   /* data sets */
16131 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16132 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16133 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16135 +   /* files */
16136 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16138 +   /* check actual num of target levels */
16139 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16140 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16141 +                              nLevel=_nTargetLevel );
16142 +      %if &_nTargetLevel  > 2 %then %do;
16143 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16144 +        %put &em_codebar;
16145 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16146 +        %put &errormsg;
16147 +        %put &em_codebar;
16148 +        %goto doendm;
16149 +      %end;
16150 +   %end;
16152 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16153 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16154 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16155 +        %let costflag=0;
16156 +        data _null_;
16157 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16158 +          if eof then call symput("costflag", _N_);
16159 +        run;
16160 +        %if &costflag gt 0 %then %do;
16161 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16162 +          %put &em_codebar;
16163 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16164 +          %put &errormsg;
16165 +          %put &em_codebar;
16166 +          %goto doendm;
16167 +       %end;
16168 +     %end;
16169 +   %end;
16171 +   /* determine if multiple targets will be processed */
16172 +   %let em_tree_multipleTargets=N;
16173 +   %let em_tree_numTarget = 1;
16174 +   %let em_tree_targetVars=;
16176 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16177 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16178 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16179 +         %let em_tree_multipleTargets=N;
16180 +      %end;
16181 +      %else %do;
16182 +         /* create macro array of targets  */
16183 +         data _null_;
16184 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16185 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16186 +           if eof then
16187 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16188 +        run;
16190 +        %if &em_tree_numTarget gt 1 %then %do;
16191 +           %let em_tree_multipleTargets=Y;
16192 +        %end;
16193 +      %end;
16194 +   %end;
16196 +   /* create view of only necessary variable for performance reasons */
16197 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16198 +   data &tempData / view=&tempData;
16199 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16200 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16201 +       %EM_TARGET
16202 +     %end;
16203 +     %else %do;
16204 +       %if &em_tree_numTarget ne 0 %then %do;
16205 +         %do i=1 %to &em_tree_numTarget;
16206 +            &&em_tree_targetVars&i
16207 +         %end;
16208 +       %end;
16209 +     %end;
16210 +     );
16211 +   run;
16213 +   /* run Tree procedure */
16214 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16216 +   /* Check return code and throw exception if error is detected */
16217 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16218 +   %if &syserr %then %do;
16219 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16220 +     %goto doendm;
16221 +   %end;
16223 +   /* add decision score code if multiple targets are processed */
16224 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16225 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16226 +   %end;
16228 +   /* create outfit dataset if multiple score statements have been executed */
16229 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16231 +   /* create English Rules */
16232 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16233 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16234 +       %em_tree_makeEnglishRules;
16236 +       /* English Rules */
16237 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16239 +     %end;
16240 +   filename x;
16242 +   %doendm:
16243 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16244 +%macro EM_SetProperties;
16246 +   /* train properties */
16247 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16248 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16249 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16250 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16251 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16252 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16253 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16254 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16255 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16260 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16261 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16262 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16266 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16267 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16268 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16269 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16270 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16274 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16275 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16276 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16281 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16282 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16283 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16289 +   /* properties for interactive sample */
16290 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16293 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16295 +   /* report properties */
16296 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16297 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16298 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16299 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16300 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16301 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16302 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16303 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16304 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16310 +   /* score properties */
16311 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16314 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE7_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16316 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16317 +  %global &nLevel;
16318 +  proc dmdb batch data=&indata
16319 +    classout=_tmp_dmdbout;
16320 +    class &target;
16321 +  run;
16322 +  data _tmp_dmdbout;
16323 +    set _tmp_dmdbout;
16324 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16325 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16326 +  run;
16327 +  data _null_;
16328 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16329 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16330 +    %let dsid = %sysfunc(close(&dsid));
16331 +     call symput("&nLevel", put(&_obs, Best12.));
16332 +  run;
16334 +  proc datasets lib=work nolist;
16335 +     delete _tmp_dmdbout;
16336 +  run;
16337 +  quit;
16338 +%Mend EM_CheckBinaryTargetLevel;
16341 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16343 +  /* determine the number of obs in training data */
16344 +  proc sql;
16345 +    reset noprint;
16346 +    select count(*) into :em_nobs from &indata;
16347 +  quit;
16349 +  /* determine the number of input variables */
16350 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16351 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16353 +  /* retrieve targetEvent from decmeta */
16354 +  %let targetEvent=;
16355 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16356 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16357 +      data _null_;
16358 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16359 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16360 +      run;
16361 +    %end;
16362 +  %end;
16364 +  /* create targetTable if multipleTar eq Y */
16365 +  data temptarget;
16366 +    set &EM_DATA_VARIABLESET;
16367 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16368 +  run;
16370 + /* data sets */
16371 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16372 + %EM_GETNAME(key=EMTREE,        type=DATA);
16373 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16374 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16375 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16376 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16377 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16378 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16379 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16380 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16382 + /* files */
16383 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16384 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16386 + /* turn on pmml if requested */
16387 + %let nnpmml=0;
16388 + %if %symexist(EM_PMML) %then %do;
16389 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16390 +       %let nnpmml=1;
16392 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16393 +   %end;
16394 +%end;
16396 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16398 +%if &nnpmml or &numClassTarget %then %do;
16400 +    /* create dmdb needed for pmml generation */
16401 +    %let tree_maxlevel = 512;
16402 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16403 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16404 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16405 +      %end;
16406 +    %end;
16407 +    %if &tree_maxlevel gt 0 %then %do;
16408 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16409 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16410 +    %end;
16412 +    %let targetOrderString =;
16413 +    %let targetString = ;
16414 +    data _null_;
16415 +       length orderString nameString $10000;
16416 +       retain orderString nameString;
16417 +       set &em_data_variableset end=eof;
16418 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16419 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16420 +       %end;
16421 +       %else %do;
16422 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16423 +       %end;          select(order);
16424 +         when('')        order ='DESC';
16425 +         when('FMTASC')  order='ASCFMT';
16426 +         when('FMTDESC') order='DESFMT';
16427 +         otherwise;
16428 +       end;
16429 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16430 +       nameString = trim(nameString)!!' '!!trim(NAME);
16432 +       if eof then do;
16433 +          call symput('targetOrderString', trim(orderString));
16434 +          call symput('targetString', trim(nameString));
16435 +       end;
16436 +    run;
16438 +    %let arborkluge= "work._treeDMDB";
16440 +    proc dmdb batch data=&indata
16441 +    %if &nnpmml %then %do;
16442 +        PMML
16443 +    %end;
16444 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16446 +      %if &nnpmml %then %do;
16447 +           %if "%EM_ID" ne "" %then %do;
16448 +             id %EM_ID;
16449 +           %end;
16450 +           %if &EM_NUM_CLASS gt 0 %then %do;
16451 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16452 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16453 +                  &targetOrderString;
16454 +           %end;
16455 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16456 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16457 +           %end;
16458 +           target &targetString %EM_INTERVAL_TARGET;
16459 +           %if "%EM_FREQ" ne "" %then %do;
16460 +             freq %EM_FREQ;
16461 +           %end;
16462 +      %end;
16463 +      %else %do;
16464 +         class  &targetOrderString;
16465 +         target &targetString %EM_INTERVAL_TARGET;
16466 +      %end;
16467 +    run;
16468 +    quit;
16470 +    proc datasets lib=work nolist;
16471 +       delete classout varout;
16472 +    run;
16473 +    quit;
16475 + %end;
16478 + /* run Arbor procedure */
16479 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16480 +  proc arbor data=&INDATA
16482 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16483 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16484 +  %end;
16486 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16487 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16488 +  %end;
16490 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16491 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16492 +  %end;
16494 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16495 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16496 +  %end;
16498 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16499 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16500 +  %end;
16502 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16503 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16504 +  %end;
16505 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16506 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16507 +  %end;
16508 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16509 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16510 +  %end;
16512 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16513 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16514 +      alpha = &EM_PROPERTY_SIGLEVEL
16515 +    %end;
16516 +  %end;
16518 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16519 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16520 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16521 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16522 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16524 +        padjust =
16525 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16526 +          &chaid
16527 +        %end;
16528 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16529 +          DEPTH
16530 +        %end;
16531 +      %end;
16532 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16533 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16534 +         pvars = &num_inputs
16535 +      %end;
16536 +    %end;
16537 +  %end;
16538 +  %else %do;
16539 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16540 +         padjust = NONE
16541 +      %end;
16542 +  %end;
16544 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16545 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16546 +    Maxrules = &num_nrules
16547 +  %end;
16549 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16550 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16551 +    Maxsurrs = &num_nsurrs
16552 +  %end;
16554 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16555 +     Missing=&EM_PROPERTY_MISSINGVALUE
16556 +  %end;
16558 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16559 +     USEVARONCE
16560 +  %end;
16562 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16563 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16564 +  %end;
16567 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16568 +    event = "&targetEvent"
16569 +  %end;
16571 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16572 +     DECSEARCH
16573 +  %end;
16575 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16576 +     PRIORSSEARCH
16577 +  %end;
16579 +  %if &arbor_1 ne %then %do;
16580 +    &arbor_1
16581 +  %end;
16583 +  %if &em_arbor ne %then %do;
16584 +     &em_arbor
16585 +  %end;
16586 +  ;
16587 + %end;
16588 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16589 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16590 +       Performance &EM_PROPERTY_PERFORMANCE
16591 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16592 +         nodesize=&EM_PROPERTY_NODESAMPLE
16593 +       %end;
16594 +       ;
16595 +       interact;
16596 + %end;
16597 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16598 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16599 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16600 +    %put &em_codebar;
16601 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16602 +    %put &errormsg;
16603 +    %put &em_codebar;
16604 +    %goto doendm;
16605 +   %end;
16606 +   %else %do;
16607 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16608 +       Performance &EM_PROPERTY_PERFORMANCE
16609 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16610 +         nodesize=&EM_PROPERTY_NODESAMPLE
16611 +       %end;
16612 +       ;
16613 +       interact;
16614 +   %end;
16615 + %end;
16617 + %else %do;
16618 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16619 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16620 +    %put &em_codebar;
16621 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16622 +    %put &errormsg;
16623 +    %put &em_codebar;
16624 +    %goto doendm;
16625 +   %end;
16626 +   %else %do;
16627 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16628 +       Performance &EM_PROPERTY_PERFORMANCE
16629 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16630 +         nodesize=&EM_PROPERTY_NODESAMPLE
16631 +       %end;
16632 +       ;
16633 +        interact;
16634 +   %end;
16635 + %end;
16637 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16638 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16639 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16640 +    %end;
16642 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16643 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16644 +    %end;
16646 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16647 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16648 +    %end;
16650 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16651 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16652 +    %end;
16654 +    %if "%EM_FREQ" ne "" %then %do;
16655 +       freq %EM_FREQ;
16656 +    %end;
16658 +    %if "&multipleTar" eq "Y" %then %do;
16659 +       /* cycle through all target vars in variableset */
16660 +       %let tdsid = %sysfunc(open(temptarget));
16661 +       %if &tdsid %then %do;
16662 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16663 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16664 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16665 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16666 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16667 +             target &var / level = &lvl
16668 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16669 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16670 +             %end;
16671 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16672 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16673 +             %end;
16674 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16675 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16676 +             %end;
16677 +          %end;
16678 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16679 +       %end;
16680 +       useTarget variable = %EM_TARGET;
16681 +    %end;
16682 +    %else %do;
16683 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16684 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16685 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16686 +      %end;
16687 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16688 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16689 +      %end;
16690 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16691 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16692 +      %end;
16693 +    %end;
16695 +    %if "&multipleTar" eq "N" %then %do;
16696 +      &EM_DEC_STATEMENT;
16697 +    %end;
16699 +    Performance &EM_PROPERTY_PERFORMANCE
16700 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16701 +      nodesize=&EM_PROPERTY_NODESAMPLE
16702 +    %end;
16703 +    ;
16705 +    %if "&intFlag" eq "Y" %then %do;
16706 +       INTERACT Largest;
16707 +       Train maxnewdepth=0;
16708 +    %end;
16710 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16711 +         Assess
16712 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16713 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16714 +              %put &em_codebar;
16715 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16716 +              %put &errormsg;
16717 +              %put &em_codebar;
16718 +            %end;
16719 +            %else %do;
16720 +               Validata=&EM_IMPORT_VALIDATE
16721 +            %end;
16722 +         %end;
16723 +         %else %do;
16724 +           NoValidata
16725 +         %end;
16726 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16727 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16728 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16729 +               %if &dsid %then %do;
16730 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16731 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16732 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16733 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16734 +                   %else %do;
16735 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16736 +                      %else %let measure= MISC;
16737 +                   %end;
16738 +                 %end;
16739 +               %end;
16740 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16741 +            %end;
16742 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16743 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16744 +                 %let measure=ASE;
16745 +              %end;
16746 +              %else %do;
16747 +                 %let measure=MISC;
16748 +              %end;
16749 +            %end;
16750 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16751 +              %let measure=ASE;
16752 +            %end;
16753 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16754 +               %let measure = LIFT;
16755 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16756 +               %if &dsid %then %do;
16757 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16758 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16759 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16760 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16761 +                 %end;
16762 +               %end;
16763 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16764 +            %end;
16765 +            measure=&measure
16766 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16767 +               event = "&targetEvent"
16768 +            %end;
16769 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16770 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16771 +            %end;
16772 +         %end;
16773 +         %if "&multipleTar" eq "N" %then %do;
16774 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16775 +               CV
16776 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16777 +                 CVNITer = &EM_PROPERTY_CVNITER
16778 +               %end;
16779 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16780 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16781 +               %end;
16782 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16783 +                 CVSeed = &EM_PROPERTY_CVSEED
16784 +               %end;
16785 +            %end;
16786 +         %end;
16787 +       %end;
16788 +      ;
16790 +      %if "&intFlag" ne "Y" %then %do;
16791 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16792 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16793 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16794 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16796 +          SUBTREE &subtree
16797 +          %if "&subtree" eq "NLEAVES" %then %do;
16798 +            =&EM_PROPERTY_NSUBTREE
16799 +          %end;
16800 +          ;
16801 +        %end;
16803 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16804 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16805 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16806 +          %end;
16807 +       %end;
16808 +      %end;
16809 + %end;
16812 + MakeMacro nleaves = nleaves;
16813 + save
16814 + %if "&EM_USER_EMTREE" ne "" %then %do;
16815 +   MODEL=&EM_USER_EMTREE
16816 + %end;
16817 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16818 +   SEQUENCE=&EM_USER_OUTSEQ
16819 + %end;
16820 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16821 +   IMPORTANCE=&EM_USER_OUTIMPORT
16822 + %end;
16823 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16824 +   NODESTAT=&EM_USER_OUTNODES
16825 + %end;
16826 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16827 +   SUMMARY=&EM_USER_OUTSUMMARY
16828 + %end;
16829 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16830 +   STATSBYNODE=&EM_USER_OUTSTATS
16831 + %end;
16832 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16833 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16834 + %end;
16835 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16836 +   Pathlistnonmissing=&EM_USER_OUTPATH
16837 + %end;
16838 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16839 +   RULES = &EM_USER_OUTRULES
16840 + %end;
16841 + ;
16843 + %if "&intFlag" ne "Y" %then %do;
16845 +   %let lookupString = ;
16846 +   %if ^%symexist(EM_OPTION) %then
16847 +      %let EM_OPTION=;
16849 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16850 +      %let lookupString = LOOKUP=SELECT;
16851 +   %end;
16853 +   %let codetext=;
16854 +   %let norescodetxt=;
16856 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16857 +     %let codetext=&codetext DUMMY;
16858 +     %let norescodetxt=&norescodetxt DUMMY;
16859 +   %end;
16860 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16861 +     %let codetext=&codetext NOLEAFID;
16862 +     %let norescodetxt=&norescodetxt NOLEAFID;
16863 +   %end;
16864 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16865 +     %let norescodetxt=&norescodetxt NOPRED;
16866 +   %end;
16868 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16869 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16871 +   %if &nnpmml %then %do;
16872 +     code pmml;
16873 +   %end;
16875 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16876 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16877 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16878 +   %end;
16879 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16880 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16881 +   %end;
16882 + %end;
16884 + run;
16885 + quit;
16887 + /*%em_checkerror(); */
16888 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16889 +   /* Delete DMDB catalog */
16890 +   proc datasets lib=work nolist;
16891 +       delete _treeDMDB / mt=cat;
16892 +  run;
16893 +  %end;
16895 + %if &nnpmml %then %do;
16896 +    ods pmml close;
16897 + %end;
16899 +  %doendm:
16901 +%mend em_tree_runTreeProcedure;
16903 +%macro em_tree_createFitStats( multipleTar= );
16906 +  /* create targetTable is multipleTar eq Y */
16907 +  data temptarget;
16908 +    set &EM_DATA_VARIABLESET;
16909 +    where ROLE="TARGET";
16910 +  run;
16912 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16913 +   data &EM_USER_EMOUTFIT;
16914 +     length target $32;
16915 +     merge work.fit_train
16916 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16917 +       work.fit_valid
16918 +     %end;
16919 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16920 +       work.fit_test
16921 +     %end;
16922 +     ;
16923 +     %if "&multipleTar" eq "N" %then %do;
16924 +       target="%EM_TARGET";
16925 +     %end;
16926 +     %else %do;
16927 +       target = _TARGET_;
16928 +     %end;
16929 +     drop _NW_ _SUMW_
16930 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16931 +        _VSUMW_
16932 +     %end;
16933 +     ;
16934 +   run;
16936 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16937 +     proc datasets library=work nolist;
16938 +       delete fit_valid;
16939 +     run;
16940 +   %end;
16941 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16942 +     proc datasets library=work nolist;
16943 +       delete fit_test;
16944 +     run;
16945 +   %end;
16947 +%mend em_tree_createFitStats;
16950 +%macro em_tree_makeEnglishRules;
16952 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16953 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16955 +  /* verify that necessary tables exist and if not, skip processing */
16956 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16957 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16958 +    %goto doendm;
16959 +  %end;
16960 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16961 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16962 +    %goto doendm;
16963 +  %end;
16965 +  /* determine length of variable in outpath dataset */
16966 +  %let vlength= ;
16967 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16968 +  %if &dsid ne %then %do;
16969 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16970 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16971 +  %end;
16972 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16974 +  data tempoutpath;
16975 +    length varname $&vlength;
16976 +    retain varname;
16977 +    set &EM_USER_OUTPATH;
16979 +    if ^missing(variable) then varname=variable;
16980 +    else if ^missing(var_name) then varname=var_name;
16981 +    output;
16982 +  run;
16984 +  /* create an array of generated predicted variable names */
16985 +  %let tree_pred_vars = ;
16986 +  %let tree_pred_label = ;
16987 +  %let numpred= 0;
16988 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16990 +    data _null_;
16991 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16992 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16993 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
16994 +     if eof then
16995 +       call symput('numpred', strip(put(_N_, BEST.)));
16996 +    run;
16997 +  %end;
16999 +  /* determine if NPRIORS exists in outnodes  */
17000 +  %local nprior_flag;
17001 +  data _null_;
17002 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17003 +    if eof then do;
17004 +      call symput('nprior_flag', strip(put(npriors, best.)));
17005 +    end;
17006 +  run;
17008 +  proc sort data=tempoutpath; by node; run;
17009 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17011 +  data tempoutpath;
17012 +    merge tempoutpath(in=_a) outnodes(keep= node
17013 +    %if "&nprior_flag" ne "." %then %do;
17014 +      NPRIORS
17015 +    %end;
17016 +    %else %do;
17017 +      N
17018 +    %end;
17019 +    %if &numpred gt 0 %then %do;
17020 +      %do i=1 %to &numpred;
17021 +        &&tree_pred_vars&i
17022 +      %end;
17023 +    %end;
17024 +    );
17025 +    by node;
17026 +    if _a;
17027 +  run;
17029 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17031 +  data _null_;
17032 +    file x;
17033 +    set tempoutpath;
17034 +    by node descending varname;
17035 +    retain origvar oldnode string;
17036 +    length origvar $32 oldnode 8 string $5000;
17038 +    if _N_ = 1 then do;
17039 +      origvar = varname;
17040 +      oldnode = node;
17041 +    end;
17043 +    if first.node then do;
17044 +       put "&EM_CODEBAR";
17045 +       put " Node = " node;
17046 +       put "&EM_CODEBAR";
17047 +    end;
17049 +      if first.varname then do;
17050 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17051 +            if MISSING(CHARACTER_VALUE) then do;
17052 +             if NUMERIC_VALUE ne .  then do;
17053 +              if ^first.node then do;
17054 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17055 +              end;
17056 +              else do;
17057 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17058 +              end;
17059 +             end;
17060 +            end;
17061 +            else do;
17062 +              if ^first.node then do;
17063 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17064 +              end;
17065 +              else do;
17066 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17067 +              end;
17068 +             end;
17069 +         end;
17070 +         else if RELATION in ("=") then do;
17071 +            if ^first.node then do;
17072 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17073 +            end;
17074 +            else do;
17075 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17076 +            end;
17077 +         end;
17078 +         else if RELATION in ("ISMISSING") then do;
17079 +            if ^first.node then do;
17080 +              string = " AND "|| strip(varname) || " equals Missing";
17081 +            end;
17082 +            else do;
17083 +              string = "if "|| strip(varname) ||" equals Missing";
17084 +            end;
17085 +         end;
17086 +         else if RELATION in ("ISNOTMISSING") then do;
17087 +            if ^first.node then do;
17088 +              string = " AND "|| strip(varname) || " equals All Values";
17089 +            end;
17090 +            else do;
17091 +              string = "if "|| strip(varname) ||" equals All Values";
17092 +            end;
17093 +         end;
17094 +         if ^missing(varname) then origvar = varname;
17095 +         oldnode=node;
17097 +      end;
17098 +      else do;
17099 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17100 +          if MISSING(CHARACTER_VALUE) then do;
17101 +           if  NUMERIC_VALUE ne .  then do;
17102 +            if ^MISSING(string) then
17103 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17104 +            else
17105 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17106 +           end;
17107 +          end;
17108 +          else do;
17109 +            if ^MISSING(string) then
17110 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17111 +            else
17112 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17113 +          end;
17115 +         end;
17116 +         else if RELATION in ("=") then do;
17117 +           string = strip(string)||", "||strip(character_value);
17118 +         end;
17119 +         else if RELATION in ("ISMISSING") then do;
17121 +         end;
17122 +         if ^missing(varname) then origvar = varname;
17123 +         oldnode=node;
17124 +      end;
17125 +      if last.varname then do;
17126 +         if RELATION in ("ISMISSING") then do;
17127 +           if ^first.varname then do;
17128 +             string = strip(string) || " or MISSING";
17129 +           end;
17130 +         end;
17131 +         put string;
17132 +         if ^missing(varname) then origvar = varname;
17133 +         oldnode=node;
17134 +      end;
17136 +      if last.node then do;
17137 +         put "then ";
17138 +         put " Tree Node Identifier   = " node;
17140 +         %if "&nprior_flag" ne "." %then %do;
17141 +           put " Number of Observations = " NPRIORS;
17142 +         %end;
17143 +         %else %do;
17144 +           put " Number of Observations = " N;
17145 +         %end;
17147 +         %if &numpred gt 0 %then %do;
17148 +           %do i=1 %to &numpred;
17149 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17150 +           %end;
17151 +         %end;
17153 +         put " ";
17154 +         if ^missing(varname) then origvar = varname;
17155 +         oldnode=node;
17156 +      end;
17158 +  run;
17160 +  proc datasets lib=work nolist;
17161 +    delete tempoutpath outnodes;
17162 +  run;
17164 +  %doendm:
17165 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE7.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS3.EM_TREE7.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER11_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE7.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER11_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE7.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: 1595432 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 586494976 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1120792 bytes of work memory.
NOTE: The subtree sequence contains 11 subtrees. The largest has 21 nodes and 11 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Created macro variable NLEAVES equal to 8.
NOTE: The data set EMWS3.TREE7_OUTIMPORT has 61 observations and 6 variables.
NOTE: The data set EMWS3.TREE7_EMTREE has 1743 observations and 4 variables.
NOTE: The data set EMWS3.TREE7_OUTNODES has 15 observations and 54 variables.
NOTE: The data set EMWS3.TREE7_OUTPATH has 70 observations and 7 variables.
NOTE: The data set EMWS3.TREE7_OUTRULES has 227 observations and 6 variables.
NOTE: The data set EMWS3.TREE7_OUTSEQ has 11 observations and 20 variables.
NOTE: The data set EMWS3.TREE7_OUTSTATS has 405 observations and 5 variables.
NOTE: The data set EMWS3.TREE7_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE7_OUTTOPOLOGY has 15 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE7.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER11_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE7.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.15 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER11_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE7.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.36 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE7_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set EMWS3.TREE7_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 70 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE7_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 70 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE7_OUTNODES.
NOTE: The data set WORK.OUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 15 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 70 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 70 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:09,
      Create Time=23Nov2023:22:13:09
 
NOTE: 178 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: There were 70 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
17167
17168  *------------------------------------------------------------*;
17169  * End TRAIN: Tree7;
17170  *------------------------------------------------------------*;
 
17171  *------------------------------------------------------------*;
17172  * Close any missing semi colons;
17173  *------------------------------------------------------------*;
17174  ;
17175  ;
17176  ;
17177  ;
17178  quit;
17179  *------------------------------------------------------------*;
17180  * Close any unbalanced quotes;
17181  *------------------------------------------------------------*;
17182  /*; *"; *'; */
17183  ;
17184  run;
17185  quit;
17186  /* Reset EM Options */
17187  options formchar="|----|+|---+=|-/\<>*";
17188  options nocenter ls=256 ps=10000;
17189  goptions reset=all device=GIF NODISPLAY;
 
17190  proc sort data=WORK.EM_USER_REPORT;
17191  by ID VIEW;
17192  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:10
*------------------------------------------------------------*
17294  %let EMEXCEPTIONSTRING=;
17295  *------------------------------------------------------------*;
17296  * SCORE: Tree7;
17297  *------------------------------------------------------------*;
17298  %let EM_ACTION = SCORE;
17299  %let syscc = 0;
17300  %macro main;
17301
17302    %if %upcase(&EM_ACTION) = CREATE %then %do;
17303      filename temp catalog 'sashelp.emmodl.tree_create.source';
17304      %include temp;
17305      filename temp;
17306
17307      %em_tree_create;
17308    %end;
17309
17310     %else
17311     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17312
17313         filename temp catalog 'sashelp.emmodl.tree_train.source';
17314         %include temp;
17315         filename temp;
17316         %em_tree_train;
17317     %end;
17318
17319    %else
17320    %if %upcase(&EM_ACTION) = SCORE %then %do;
17321      filename temp catalog 'sashelp.emmodl.tree_score.source';
17322      %include temp;
17323      filename temp;
17324
17325      %em_tree_score;
17326
17327    %end;
17328
17329    %else
17330    %if %upcase(&EM_ACTION) = REPORT %then %do;
17331
17332         filename temp catalog 'sashelp.emmodl.tree_report.source';
17333         %include temp;
17334         filename temp;
17335
17336         %em_tree_report;
17337     %end;
17338
17339    %else
17340    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17341
17342         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17343         %include temp;
17344         filename temp;
17345         %EM_TREE_OPENTREEVIEWER;
17346
17347     %end;
17348
17349    %else
17350    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17351
17352         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17353         %include temp;
17354         filename temp;
17355         %EM_TREE_CLOSETREEVIEWER;
17356
17357     %end;
17358
17359
17360     %doendm:
17361  %mend main;
17362
17363  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17365 +%macro em_tree_score;
17367 +   /* determine if multiple targets will be processed */
17368 +   %let em_tree_multipleTargets=N;
17369 +   %let em_tree_numTarget=1;
17370 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17371 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17372 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17373 +         %let em_tree_multipleTargets=N;
17374 +      %end;
17375 +      %else %do;
17376 +         /* create macro array of targets  */
17377 +         data _null_;
17378 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17379 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17380 +           if eof then
17381 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17382 +        run;
17384 +        %if &em_tree_numTarget gt 1 %then %do;
17385 +           %let em_tree_multipleTargets=Y;
17386 +        %end;
17387 +      %end;
17388 +   %end;
17390 +   /* build flow and publish scoring code */
17391 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17392 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17394 +   filename treeflow "&EM_USER_TREEFLOW";
17395 +   filename treepub "&EM_USER_TREEPUBLISH";
17397 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17398 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17400 +   %em_copyfile(infref=treeflow, outfref=flowref);
17401 +   %em_copyfile(infref=treepub, outfref=pubref);
17403 +   filename treeflow;
17404 +   filename treepub;
17406 +   /* if priors are used, add code to generate unadjusted residuals in export */
17407 +   %let useAdjPriors = N;
17408 +   data _null_;
17409 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17410 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17411 +   run;
17412 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17413 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17414 +      %include temp;
17415 +      filename temp;
17417 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17418 +      filename adjref "&EM_USER_adjResidualCode";
17419 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17421 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17423 +      filename adjref;
17424 +   %end;
17426 +   /* LEAF */
17427 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17428 +      data _null_;
17429 +        file flowref mod;
17430 +        put 'drop _LEAF_;';
17431 +      run;
17433 +      data _null_;
17434 +        file pubref mod;
17435 +        put 'drop _LEAF_;';
17436 +      run;
17438 +   %end;
17440 +   filename flowref;
17441 +   filename pubref;
17443 +   /* em_metachange code */
17444 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17445 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17446 +   %end;
17448 +   /* variable selection based on importance stat    */
17449 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17450 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17451 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17452 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17453 +     %let obs = %sysfunc(fetch(&dsid));
17454 +     %do %while(&obs=0);
17455 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17456 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17457 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17458 +       %let obs = %sysfunc(fetch(&dsid));
17459 +     %end;
17460 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17461 +   %end;
17463 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17464 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17465 +    %let tree_pred_vars = ;
17466 +    %let tree_pred_lvl =;
17467 +    %let numpred= 0;
17469 +    data _null_;
17470 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17471 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17472 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17473 +     if eof then
17474 +       call symput('numpred', strip(put(_N_, BEST.)));
17475 +    run;
17476 +   %end;
17478 +   %if &numpred ne 0 %then %do;
17479 +    %do i=1 %to &numpred;
17480 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17481 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17482 +    %end;
17483 +   %end;
17485 +   /* determine if multiple targets will be processed */
17486 +   %let em_tree_multipleTargets=N;
17487 +   %let em_tree_numTarget=1;
17488 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17489 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17490 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17491 +         %let em_tree_multipleTargets=N;
17492 +      %end;
17493 +      %else %do;
17494 +        data _null_;
17495 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17496 +          if eof then
17497 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17498 +        run;
17500 +        %if &em_tree_numTarget gt 1 %then %do;
17501 +           %let em_tree_multipleTargets=Y;
17502 +        %end;
17503 +     %end;
17504 +   %end;
17506 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17507 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17509 +      /* variable importance */
17510 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17511 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17513 +         %let validexist=0;
17514 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17515 +           %let validexist=1;
17516 +         %end;
17518 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17519 +         /* and the columns may not be generated                                                                                 */
17520 +         %let em_tree_cvexists=;
17521 +         %let em_tree_surrexists=.;
17522 +         data _null_;
17523 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17524 +            if eof then do ;
17525 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17526 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17527 +            end;
17528 +         run;
17530 +         data &EM_USER_OUTIMPORT;
17531 +            set &EM_USER_OUTIMPORT;
17533 +            /* format columns based on Precison value specified */
17534 +            format importance 15.&EM_PROPERTY_PRECISION
17535 +                 %if &validexist %then %do;
17536 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17537 +                 %end;
17538 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17539 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17540 +                 %end;
17541 +            ;
17542 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17543 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17544 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17545 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17546 +                 %if "&em_tree_surrexists" ne "" %then %do;
17547 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17548 +                 %end;
17549 +                 %if &validexist %then %do;
17550 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17551 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17552 +                 %end;
17553 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17554 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17555 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17556 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17557 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17558 +                 %end;
17559 +            ;
17560 +         run;
17562 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17563 +      %end;
17564 +   %end;
17566 +   %doendm:
17567 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:09,
      Create Time=23Nov2023:22:13:09
 
NOTE: 505 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:09,
      Create Time=23Nov2023:22:13:09
 
NOTE: 425 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=24963,
      Last Modified=23Nov2023:22:13:09,
      Create Time=23Nov2023:22:13:09
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21390,
      Last Modified=23Nov2023:22:13:09,
      Create Time=23Nov2023:22:13:09
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE7_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 61 observations read from the data set EMWS3.TREE7_OUTIMPORT.
NOTE: The data set EMWS3.TREE7_OUTIMPORT has 61 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
17568
17569  *------------------------------------------------------------*;
17570  * End SCORE: Tree7;
17571  *------------------------------------------------------------*;
 
17572  proc sort data=WORK.EM_METACHANGE;
17573  by key uname;
17574  run;
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17575  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\CDELTA_TRAIN.sas";
17576  data _null_;
17577  file x;
17578  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17579  put 'ROLE = "ASSESS";';
17580  put 'end;';
17581  put 'else ';
17582  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17583  put 'ROLE = "ASSESS";';
17584  put 'end;';
17585  put 'else ';
17586  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17587  put 'ROLE = "ASSESS";';
17588  put 'end;';
17589  put 'else ';
17590  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17591  put 'ROLE = "ASSESS";';
17592  put 'end;';
17593  put 'else ';
17594  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17595  put 'ROLE = "ASSESS";';
17596  put 'end;';
17597  put 'else ';
17598  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17599  put 'ROLE = "ASSESS";';
17600  put 'end;';
17601  put 'else ';
17602  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17603  put 'ROLE = "ASSESS";';
17604  put 'end;';
17605  put 'else ';
17606  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17607  put 'ROLE = "ASSESS";';
17608  put 'end;';
17609  put 'else ';
17610  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17611  put 'ROLE = "ASSESS";';
17612  put 'end;';
17613  put 'else ';
17614  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17615  put 'ROLE = "ASSESS";';
17616  put 'end;';
17617  put 'else ';
17618  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17619  put 'ROLE = "ASSESS";';
17620  put 'end;';
17621  put 'else ';
17622  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17623  put 'ROLE = "ASSESS";';
17624  put 'end;';
17625  put 'else ';
17626  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD1" then do;';
17627  put 'ROLE = "REJECTED";';
17628  put 'end;';
17629  put 'else ';
17630  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD10" then do;';
17631  put 'ROLE = "REJECTED";';
17632  put 'end;';
17633  put 'else ';
17634  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD11" then do;';
17635  put 'ROLE = "REJECTED";';
17636  put 'end;';
17637  put 'else ';
17638  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD12" then do;';
17639  put 'ROLE = "REJECTED";';
17640  put 'end;';
17641  put 'else ';
17642  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD13" then do;';
17643  put 'ROLE = "REJECTED";';
17644  put 'end;';
17645  put 'else ';
17646  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD14" then do;';
17647  put 'ROLE = "REJECTED";';
17648  put 'end;';
17649  put 'else ';
17650  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD15" then do;';
17651  put 'ROLE = "REJECTED";';
17652  put 'end;';
17653  put 'else ';
17654  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD16" then do;';
17655  put 'ROLE = "REJECTED";';
17656  put 'end;';
17657  put 'else ';
17658  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD17" then do;';
17659  put 'ROLE = "REJECTED";';
17660  put 'end;';
17661  put 'else ';
17662  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD18" then do;';
17663  put 'ROLE = "REJECTED";';
17664  put 'end;';
17665  put 'else ';
17666  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD19" then do;';
17667  put 'ROLE = "REJECTED";';
17668  put 'end;';
17669  put 'else ';
17670  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD20" then do;';
17671  put 'ROLE = "REJECTED";';
17672  put 'end;';
17673  put 'else ';
17674  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD21" then do;';
17675  put 'ROLE = "REJECTED";';
17676  put 'end;';
17677  put 'else ';
17678  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD22" then do;';
17679  put 'ROLE = "REJECTED";';
17680  put 'end;';
17681  put 'else ';
17682  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD23" then do;';
17683  put 'ROLE = "REJECTED";';
17684  put 'end;';
17685  put 'else ';
17686  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD24" then do;';
17687  put 'ROLE = "REJECTED";';
17688  put 'end;';
17689  put 'else ';
17690  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD25" then do;';
17691  put 'ROLE = "REJECTED";';
17692  put 'end;';
17693  put 'else ';
17694  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD26" then do;';
17695  put 'ROLE = "REJECTED";';
17696  put 'end;';
17697  put 'else ';
17698  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD27" then do;';
17699  put 'ROLE = "REJECTED";';
17700  put 'end;';
17701  put 'else ';
17702  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD28" then do;';
17703  put 'ROLE = "REJECTED";';
17704  put 'end;';
17705  put 'else ';
17706  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD29" then do;';
17707  put 'ROLE = "REJECTED";';
17708  put 'end;';
17709  put 'else ';
17710  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD30" then do;';
17711  put 'ROLE = "REJECTED";';
17712  put 'end;';
17713  put 'else ';
17714  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD31" then do;';
17715  put 'ROLE = "REJECTED";';
17716  put 'end;';
17717  put 'else ';
17718  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD32" then do;';
17719  put 'ROLE = "REJECTED";';
17720  put 'end;';
17721  put 'else ';
17722  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD33" then do;';
17723  put 'ROLE = "REJECTED";';
17724  put 'end;';
17725  put 'else ';
17726  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD34" then do;';
17727  put 'ROLE = "REJECTED";';
17728  put 'end;';
17729  put 'else ';
17730  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD35" then do;';
17731  put 'ROLE = "REJECTED";';
17732  put 'end;';
17733  put 'else ';
17734  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD36" then do;';
17735  put 'ROLE = "REJECTED";';
17736  put 'end;';
17737  put 'else ';
17738  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD37" then do;';
17739  put 'ROLE = "REJECTED";';
17740  put 'end;';
17741  put 'else ';
17742  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD38" then do;';
17743  put 'ROLE = "REJECTED";';
17744  put 'end;';
17745  put 'else ';
17746  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD39" then do;';
17747  put 'ROLE = "REJECTED";';
17748  put 'end;';
17749  put 'else ';
17750  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD4" then do;';
17751  put 'ROLE = "REJECTED";';
17752  put 'end;';
17753  put 'else ';
17754  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD40" then do;';
17755  put 'ROLE = "REJECTED";';
17756  put 'end;';
17757  put 'else ';
17758  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD41" then do;';
17759  put 'ROLE = "REJECTED";';
17760  put 'end;';
17761  put 'else ';
17762  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD42" then do;';
17763  put 'ROLE = "REJECTED";';
17764  put 'end;';
17765  put 'else ';
17766  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD43" then do;';
17767  put 'ROLE = "REJECTED";';
17768  put 'end;';
17769  put 'else ';
17770  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD44" then do;';
17771  put 'ROLE = "REJECTED";';
17772  put 'end;';
17773  put 'else ';
17774  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD45" then do;';
17775  put 'ROLE = "REJECTED";';
17776  put 'end;';
17777  put 'else ';
17778  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD46" then do;';
17779  put 'ROLE = "REJECTED";';
17780  put 'end;';
17781  put 'else ';
17782  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD47" then do;';
17783  put 'ROLE = "REJECTED";';
17784  put 'end;';
17785  put 'else ';
17786  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD48" then do;';
17787  put 'ROLE = "REJECTED";';
17788  put 'end;';
17789  put 'else ';
17790  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD49" then do;';
17791  put 'ROLE = "REJECTED";';
17792  put 'end;';
17793  put 'else ';
17794  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD50" then do;';
17795  put 'ROLE = "REJECTED";';
17796  put 'end;';
17797  put 'else ';
17798  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD51" then do;';
17799  put 'ROLE = "REJECTED";';
17800  put 'end;';
17801  put 'else ';
17802  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD52" then do;';
17803  put 'ROLE = "REJECTED";';
17804  put 'end;';
17805  put 'else ';
17806  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD53" then do;';
17807  put 'ROLE = "REJECTED";';
17808  put 'end;';
17809  put 'else ';
17810  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD54" then do;';
17811  put 'ROLE = "REJECTED";';
17812  put 'end;';
17813  put 'else ';
17814  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD55" then do;';
17815  put 'ROLE = "REJECTED";';
17816  put 'end;';
17817  put 'else ';
17818  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD56" then do;';
17819  put 'ROLE = "REJECTED";';
17820  put 'end;';
17821  put 'else ';
17822  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD57" then do;';
17823  put 'ROLE = "REJECTED";';
17824  put 'end;';
17825  put 'else ';
17826  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD58" then do;';
17827  put 'ROLE = "REJECTED";';
17828  put 'end;';
17829  put 'else ';
17830  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD59" then do;';
17831  put 'ROLE = "REJECTED";';
17832  put 'end;';
17833  put 'else ';
17834  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD60" then do;';
17835  put 'ROLE = "REJECTED";';
17836  put 'end;';
17837  put 'else ';
17838  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD61" then do;';
17839  put 'ROLE = "REJECTED";';
17840  put 'end;';
17841  put 'else ';
17842  put 'if upcase(NAME) = "TEXTCLUSTER11_SVD7" then do;';
17843  put 'ROLE = "REJECTED";';
17844  put 'end;';
17845  put 'else ';
17846  put 'if upcase(NAME) = "_NODE_" then do;';
17847  put 'ROLE = "SEGMENT";';
17848  put 'LEVEL = "NOMINAL";';
17849  put 'end;';
17850  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:10,
      Create Time=19Nov2023:19:24:25
 
NOTE: 272 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17851  filename x;
NOTE: Fileref X has been deassigned.
 
17852  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas";
17853  *------------------------------------------------------------*;
17854  * Tree7: Scoring DATA data;
17855  *------------------------------------------------------------*;
17856  data EMWS3.Tree7_TRAIN
17857  / view=EMWS3.Tree7_TRAIN
17858  ;
17859  set EMWS3.TextCluster11_TRAIN
17860  ;
17861  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas.
17862 +****************************************************************;
17863 +******             DECISION TREE SCORING CODE             ******;
17864 +****************************************************************;
17865 +
17866 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17867 +LENGTH F_Category  $   22;
17868 +LENGTH I_Category  $   22;
17869 +LENGTH U_Category  $   22;
17870 +LENGTH _WARN_  $    4;
17871 +
17872 +******              LABELS FOR NEW VARIABLES              ******;
17873 +label _NODE_ = 'Node' ;
17874 +label _LEAF_ = 'Leaf' ;
17875 +label P_CategoryHR = 'Predicted: Category=HR' ;
17876 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17877 +label P_CategoryINFORMATION_TECHNOLOGY =
17878 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17879 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17880 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17881 +label P_CategoryBUSINESS_DEVELOPMENT =
17882 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17883 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17884 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17885 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17886 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17887 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17888 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17889 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17890 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17891 +label Q_CategoryINFORMATION_TECHNOLOGY =
17892 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17893 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17894 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17895 +label Q_CategoryBUSINESS_DEVELOPMENT =
17896 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17897 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17898 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17899 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17900 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17901 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17902 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17903 +label V_CategoryHR = 'Validated: Category=HR' ;
17904 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17905 +label V_CategoryINFORMATION_TECHNOLOGY =
17906 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17907 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17908 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17909 +label V_CategoryBUSINESS_DEVELOPMENT =
17910 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17911 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17912 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17913 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17914 +label V_CategorySALES = 'Validated: Category=SALES' ;
17915 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17916 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17917 +label R_CategoryHR = 'Residual: Category=HR' ;
17918 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17919 +label R_CategoryINFORMATION_TECHNOLOGY =
17920 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17921 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17922 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17923 +label R_CategoryBUSINESS_DEVELOPMENT =
17924 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17925 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17926 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17927 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17928 +label R_CategorySALES = 'Residual: Category=SALES' ;
17929 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17930 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17931 +label F_Category = 'From: Category' ;
17932 +label I_Category = 'Into: Category' ;
17933 +label U_Category = 'Unnormalized Into: Category' ;
17934 +label _WARN_ = 'Warnings' ;
17935 +
17936 +
17937 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17938 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17939 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17940 +
17941 +
17942 +_ARBFMT_22 = PUT( Category , $22.);
17943 + %DMNORMCP( _ARBFMT_22, F_Category );
17944 +
17945 +******             ASSIGN OBSERVATION TO NODE             ******;
17946 +IF  NOT MISSING(TextCluster11_SVD3 ) AND
17947 +      0.28196358819982 <= TextCluster11_SVD3  THEN DO;
17948 +  _NODE_  =                    3;
17949 +  _LEAF_  =                    8;
17950 +  P_CategoryHR  =     0.85964912280701;
17951 +  P_CategoryDESIGNER  =                    0;
17952 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17953 +  P_CategoryTEACHER  =                    0;
17954 +  P_CategoryADVOCATE  =     0.03508771929824;
17955 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
17956 +  P_CategoryHEALTHCARE  =     0.03508771929824;
17957 +  P_CategoryFITNESS  =     0.01754385964912;
17958 +  P_CategoryOTHER  =     0.01754385964912;
17959 +  P_CategorySALES  =                    0;
17960 +  P_CategoryCONSULTANT  =     0.01754385964912;
17961 +  P_CategoryDIGITAL_MEDIA  =                    0;
17962 +  Q_CategoryHR  =     0.85964912280701;
17963 +  Q_CategoryDESIGNER  =                    0;
17964 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17965 +  Q_CategoryTEACHER  =                    0;
17966 +  Q_CategoryADVOCATE  =     0.03508771929824;
17967 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
17968 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
17969 +  Q_CategoryFITNESS  =     0.01754385964912;
17970 +  Q_CategoryOTHER  =     0.01754385964912;
17971 +  Q_CategorySALES  =                    0;
17972 +  Q_CategoryCONSULTANT  =     0.01754385964912;
17973 +  Q_CategoryDIGITAL_MEDIA  =                    0;
17974 +  V_CategoryHR  =     0.78378378378378;
17975 +  V_CategoryDESIGNER  =                    0;
17976 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17977 +  V_CategoryTEACHER  =                    0;
17978 +  V_CategoryADVOCATE  =                    0;
17979 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
17980 +  V_CategoryHEALTHCARE  =     0.08108108108108;
17981 +  V_CategoryFITNESS  =     0.02702702702702;
17982 +  V_CategoryOTHER  =                    0;
17983 +  V_CategorySALES  =                    0;
17984 +  V_CategoryCONSULTANT  =     0.05405405405405;
17985 +  V_CategoryDIGITAL_MEDIA  =     0.02702702702702;
17986 +  I_Category  = 'HR' ;
17987 +  U_Category  = 'HR' ;
17988 +  END;
17989 +ELSE DO;
17990 +  IF  NOT MISSING(TextCluster11_SVD6 ) AND
17991 +    TextCluster11_SVD6  <    -0.24286093887231 THEN DO;
17992 +    IF  NOT MISSING(TextCluster11_SVD9 ) AND
17993 +          0.13101413665189 <= TextCluster11_SVD9  THEN DO;
17994 +      _NODE_  =                    9;
17995 +      _LEAF_  =                    2;
17996 +      P_CategoryHR  =                    0;
17997 +      P_CategoryDESIGNER  =                  0.4;
17998 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17999 +      P_CategoryTEACHER  =                    0;
18000 +      P_CategoryADVOCATE  =                    0;
18001 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18002 +      P_CategoryHEALTHCARE  =                    0;
18003 +      P_CategoryFITNESS  =                    0;
18004 +      P_CategoryOTHER  =                    0;
18005 +      P_CategorySALES  =                    0;
18006 +      P_CategoryCONSULTANT  =                    0;
18007 +      P_CategoryDIGITAL_MEDIA  =                  0.6;
18008 +      Q_CategoryHR  =                    0;
18009 +      Q_CategoryDESIGNER  =                  0.4;
18010 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18011 +      Q_CategoryTEACHER  =                    0;
18012 +      Q_CategoryADVOCATE  =                    0;
18013 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18014 +      Q_CategoryHEALTHCARE  =                    0;
18015 +      Q_CategoryFITNESS  =                    0;
18016 +      Q_CategoryOTHER  =                    0;
18017 +      Q_CategorySALES  =                    0;
18018 +      Q_CategoryCONSULTANT  =                    0;
18019 +      Q_CategoryDIGITAL_MEDIA  =                  0.6;
18020 +      V_CategoryHR  =                    0;
18021 +      V_CategoryDESIGNER  =                 0.25;
18022 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18023 +      V_CategoryTEACHER  =                    0;
18024 +      V_CategoryADVOCATE  =                 0.25;
18025 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18026 +      V_CategoryHEALTHCARE  =                    0;
18027 +      V_CategoryFITNESS  =                    0;
18028 +      V_CategoryOTHER  =                    0;
18029 +      V_CategorySALES  =                    0;
18030 +      V_CategoryCONSULTANT  =                    0;
18031 +      V_CategoryDIGITAL_MEDIA  =                  0.5;
18032 +      I_Category  = 'DIGITAL-MEDIA' ;
18033 +      U_Category  = 'DIGITAL-MEDIA' ;
18034 +      END;
18035 +    ELSE DO;
18036 +      _NODE_  =                    8;
18037 +      _LEAF_  =                    1;
18038 +      P_CategoryHR  =                    0;
18039 +      P_CategoryDESIGNER  =     0.93333333333333;
18040 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18041 +      P_CategoryTEACHER  =                    0;
18042 +      P_CategoryADVOCATE  =                    0;
18043 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18044 +      P_CategoryHEALTHCARE  =                    0;
18045 +      P_CategoryFITNESS  =                    0;
18046 +      P_CategoryOTHER  =                    0;
18047 +      P_CategorySALES  =     0.04444444444444;
18048 +      P_CategoryCONSULTANT  =                    0;
18049 +      P_CategoryDIGITAL_MEDIA  =                    0;
18050 +      Q_CategoryHR  =                    0;
18051 +      Q_CategoryDESIGNER  =     0.93333333333333;
18052 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18053 +      Q_CategoryTEACHER  =                    0;
18054 +      Q_CategoryADVOCATE  =                    0;
18055 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18056 +      Q_CategoryHEALTHCARE  =                    0;
18057 +      Q_CategoryFITNESS  =                    0;
18058 +      Q_CategoryOTHER  =                    0;
18059 +      Q_CategorySALES  =     0.04444444444444;
18060 +      Q_CategoryCONSULTANT  =                    0;
18061 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18062 +      V_CategoryHR  =                    0;
18063 +      V_CategoryDESIGNER  =     0.86666666666666;
18064 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18065 +      V_CategoryTEACHER  =     0.06666666666666;
18066 +      V_CategoryADVOCATE  =                    0;
18067 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18068 +      V_CategoryHEALTHCARE  =                    0;
18069 +      V_CategoryFITNESS  =                    0;
18070 +      V_CategoryOTHER  =                    0;
18071 +      V_CategorySALES  =     0.06666666666666;
18072 +      V_CategoryCONSULTANT  =                    0;
18073 +      V_CategoryDIGITAL_MEDIA  =                    0;
18074 +      I_Category  = 'DESIGNER' ;
18075 +      U_Category  = 'DESIGNER' ;
18076 +      END;
18077 +    END;
18078 +  ELSE DO;
18079 +    IF  NOT MISSING(TextCluster11_SVD3 ) AND
18080 +      TextCluster11_SVD3  <    -0.42848187206424 THEN DO;
18081 +      _NODE_  =                   10;
18082 +      _LEAF_  =                    3;
18083 +      P_CategoryHR  =                    0;
18084 +      P_CategoryDESIGNER  =                    0;
18085 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
18086 +      P_CategoryTEACHER  =     0.84313725490196;
18087 +      P_CategoryADVOCATE  =     0.05882352941176;
18088 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18089 +      P_CategoryHEALTHCARE  =     0.01960784313725;
18090 +      P_CategoryFITNESS  =     0.05882352941176;
18091 +      P_CategoryOTHER  =                    0;
18092 +      P_CategorySALES  =                    0;
18093 +      P_CategoryCONSULTANT  =                    0;
18094 +      P_CategoryDIGITAL_MEDIA  =                    0;
18095 +      Q_CategoryHR  =                    0;
18096 +      Q_CategoryDESIGNER  =                    0;
18097 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
18098 +      Q_CategoryTEACHER  =     0.84313725490196;
18099 +      Q_CategoryADVOCATE  =     0.05882352941176;
18100 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18101 +      Q_CategoryHEALTHCARE  =     0.01960784313725;
18102 +      Q_CategoryFITNESS  =     0.05882352941176;
18103 +      Q_CategoryOTHER  =                    0;
18104 +      Q_CategorySALES  =                    0;
18105 +      Q_CategoryCONSULTANT  =                    0;
18106 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18107 +      V_CategoryHR  =                    0;
18108 +      V_CategoryDESIGNER  =                    0;
18109 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18110 +      V_CategoryTEACHER  =     0.71794871794871;
18111 +      V_CategoryADVOCATE  =     0.05128205128205;
18112 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18113 +      V_CategoryHEALTHCARE  =     0.02564102564102;
18114 +      V_CategoryFITNESS  =     0.05128205128205;
18115 +      V_CategoryOTHER  =      0.1025641025641;
18116 +      V_CategorySALES  =     0.02564102564102;
18117 +      V_CategoryCONSULTANT  =                    0;
18118 +      V_CategoryDIGITAL_MEDIA  =                    0;
18119 +      I_Category  = 'TEACHER' ;
18120 +      U_Category  = 'TEACHER' ;
18121 +      END;
18122 +    ELSE DO;
18123 +      IF  NOT MISSING(TextCluster11_SVD8 ) AND
18124 +            0.12070736690043 <= TextCluster11_SVD8  THEN DO;
18125 +        _NODE_  =                   15;
18126 +        _LEAF_  =                    7;
18127 +        P_CategoryHR  =                    0;
18128 +        P_CategoryDESIGNER  =                    0;
18129 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18130 +        P_CategoryTEACHER  =                    0;
18131 +        P_CategoryADVOCATE  =     0.06521739130434;
18132 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18133 +        P_CategoryHEALTHCARE  =                    0;
18134 +        P_CategoryFITNESS  =     0.89130434782608;
18135 +        P_CategoryOTHER  =     0.02173913043478;
18136 +        P_CategorySALES  =                    0;
18137 +        P_CategoryCONSULTANT  =                    0;
18138 +        P_CategoryDIGITAL_MEDIA  =                    0;
18139 +        Q_CategoryHR  =                    0;
18140 +        Q_CategoryDESIGNER  =                    0;
18141 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18142 +        Q_CategoryTEACHER  =                    0;
18143 +        Q_CategoryADVOCATE  =     0.06521739130434;
18144 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18145 +        Q_CategoryHEALTHCARE  =                    0;
18146 +        Q_CategoryFITNESS  =     0.89130434782608;
18147 +        Q_CategoryOTHER  =     0.02173913043478;
18148 +        Q_CategorySALES  =                    0;
18149 +        Q_CategoryCONSULTANT  =                    0;
18150 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18151 +        V_CategoryHR  =                    0;
18152 +        V_CategoryDESIGNER  =     0.03225806451612;
18153 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18154 +        V_CategoryTEACHER  =                    0;
18155 +        V_CategoryADVOCATE  =                    0;
18156 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18157 +        V_CategoryHEALTHCARE  =     0.03225806451612;
18158 +        V_CategoryFITNESS  =     0.80645161290322;
18159 +        V_CategoryOTHER  =     0.03225806451612;
18160 +        V_CategorySALES  =     0.03225806451612;
18161 +        V_CategoryCONSULTANT  =     0.03225806451612;
18162 +        V_CategoryDIGITAL_MEDIA  =     0.03225806451612;
18163 +        I_Category  = 'FITNESS' ;
18164 +        U_Category  = 'FITNESS' ;
18165 +        END;
18166 +      ELSE DO;
18167 +        IF  NOT MISSING(TextCluster11_SVD2 ) AND
18168 +              0.23324615863228 <= TextCluster11_SVD2  THEN DO;
18169 +          _NODE_  =                   17;
18170 +          _LEAF_  =                    6;
18171 +          P_CategoryHR  =                    0;
18172 +          P_CategoryDESIGNER  =     0.01162790697674;
18173 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
18174 +          P_CategoryTEACHER  =                    0;
18175 +          P_CategoryADVOCATE  =     0.02325581395348;
18176 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
18177 +          P_CategoryHEALTHCARE  =     0.03488372093023;
18178 +          P_CategoryFITNESS  =                    0;
18179 +          P_CategoryOTHER  =     0.04651162790697;
18180 +          P_CategorySALES  =     0.01162790697674;
18181 +          P_CategoryCONSULTANT  =     0.23255813953488;
18182 +          P_CategoryDIGITAL_MEDIA  =     0.04651162790697;
18183 +          Q_CategoryHR  =                    0;
18184 +          Q_CategoryDESIGNER  =     0.01162790697674;
18185 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
18186 +          Q_CategoryTEACHER  =                    0;
18187 +          Q_CategoryADVOCATE  =     0.02325581395348;
18188 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
18189 +          Q_CategoryHEALTHCARE  =     0.03488372093023;
18190 +          Q_CategoryFITNESS  =                    0;
18191 +          Q_CategoryOTHER  =     0.04651162790697;
18192 +          Q_CategorySALES  =     0.01162790697674;
18193 +          Q_CategoryCONSULTANT  =     0.23255813953488;
18194 +          Q_CategoryDIGITAL_MEDIA  =     0.04651162790697;
18195 +          V_CategoryHR  =                    0;
18196 +          V_CategoryDESIGNER  =                    0;
18197 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.63461538461538;
18198 +          V_CategoryTEACHER  =                    0;
18199 +          V_CategoryADVOCATE  =     0.01923076923076;
18200 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.03846153846153;
18201 +          V_CategoryHEALTHCARE  =     0.01923076923076;
18202 +          V_CategoryFITNESS  =                    0;
18203 +          V_CategoryOTHER  =      0.0576923076923;
18204 +          V_CategorySALES  =     0.01923076923076;
18205 +          V_CategoryCONSULTANT  =     0.13461538461538;
18206 +          V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
18207 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18208 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18209 +          END;
18210 +        ELSE DO;
18211 +          IF  NOT MISSING(TextCluster11_SVD5 ) AND
18212 +                 0.0876603538126 <= TextCluster11_SVD5  THEN DO;
18213 +            _NODE_  =                   19;
18214 +            _LEAF_  =                    5;
18215 +            P_CategoryHR  =     0.03333333333333;
18216 +            P_CategoryDESIGNER  =     0.01666666666666;
18217 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
18218 +            P_CategoryTEACHER  =     0.01666666666666;
18219 +            P_CategoryADVOCATE  =                    0;
18220 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
18221 +            P_CategoryHEALTHCARE  =     0.03333333333333;
18222 +            P_CategoryFITNESS  =                    0;
18223 +            P_CategoryOTHER  =     0.08333333333333;
18224 +            P_CategorySALES  =                    0;
18225 +            P_CategoryCONSULTANT  =                  0.1;
18226 +            P_CategoryDIGITAL_MEDIA  =     0.58333333333333;
18227 +            Q_CategoryHR  =     0.03333333333333;
18228 +            Q_CategoryDESIGNER  =     0.01666666666666;
18229 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
18230 +            Q_CategoryTEACHER  =     0.01666666666666;
18231 +            Q_CategoryADVOCATE  =                    0;
18232 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
18233 +            Q_CategoryHEALTHCARE  =     0.03333333333333;
18234 +            Q_CategoryFITNESS  =                    0;
18235 +            Q_CategoryOTHER  =     0.08333333333333;
18236 +            Q_CategorySALES  =                    0;
18237 +            Q_CategoryCONSULTANT  =                  0.1;
18238 +            Q_CategoryDIGITAL_MEDIA  =     0.58333333333333;
18239 +            V_CategoryHR  =     0.03333333333333;
18240 +            V_CategoryDESIGNER  =     0.03333333333333;
18241 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18242 +            V_CategoryTEACHER  =                    0;
18243 +            V_CategoryADVOCATE  =                    0;
18244 +            V_CategoryBUSINESS_DEVELOPMENT  =                  0.1;
18245 +            V_CategoryHEALTHCARE  =                    0;
18246 +            V_CategoryFITNESS  =                    0;
18247 +            V_CategoryOTHER  =                    0;
18248 +            V_CategorySALES  =     0.06666666666666;
18249 +            V_CategoryCONSULTANT  =                  0.2;
18250 +            V_CategoryDIGITAL_MEDIA  =     0.56666666666666;
18251 +            I_Category  = 'DIGITAL-MEDIA' ;
18252 +            U_Category  = 'DIGITAL-MEDIA' ;
18253 +            END;
18254 +          ELSE DO;
18255 +            _NODE_  =                   18;
18256 +            _LEAF_  =                    4;
18257 +            P_CategoryHR  =     0.01234567901234;
18258 +            P_CategoryDESIGNER  =      0.0216049382716;
18259 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18260 +            P_CategoryTEACHER  =     0.01851851851851;
18261 +            P_CategoryADVOCATE  =     0.14506172839506;
18262 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18263 +            P_CategoryHEALTHCARE  =     0.15123456790123;
18264 +            P_CategoryFITNESS  =     0.04012345679012;
18265 +            P_CategoryOTHER  =     0.16049382716049;
18266 +            P_CategorySALES  =     0.16975308641975;
18267 +            P_CategoryCONSULTANT  =     0.09259259259259;
18268 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18269 +            Q_CategoryHR  =     0.01234567901234;
18270 +            Q_CategoryDESIGNER  =      0.0216049382716;
18271 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18272 +            Q_CategoryTEACHER  =     0.01851851851851;
18273 +            Q_CategoryADVOCATE  =     0.14506172839506;
18274 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18275 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
18276 +            Q_CategoryFITNESS  =     0.04012345679012;
18277 +            Q_CategoryOTHER  =     0.16049382716049;
18278 +            Q_CategorySALES  =     0.16975308641975;
18279 +            Q_CategoryCONSULTANT  =     0.09259259259259;
18280 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18281 +            V_CategoryHR  =     0.01098901098901;
18282 +            V_CategoryDESIGNER  =     0.01098901098901;
18283 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01098901098901;
18284 +            V_CategoryTEACHER  =      0.0054945054945;
18285 +            V_CategoryADVOCATE  =     0.17032967032967;
18286 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16483516483516;
18287 +            V_CategoryHEALTHCARE  =     0.14835164835164;
18288 +            V_CategoryFITNESS  =     0.03846153846153;
18289 +            V_CategoryOTHER  =     0.16483516483516;
18290 +            V_CategorySALES  =     0.14835164835164;
18291 +            V_CategoryCONSULTANT  =      0.1043956043956;
18292 +            V_CategoryDIGITAL_MEDIA  =     0.02197802197802;
18293 +            I_Category  = 'SALES' ;
18294 +            U_Category  = 'SALES' ;
18295 +            END;
18296 +          END;
18297 +        END;
18298 +      END;
18299 +    END;
18300 +  END;
18301 +
18302 +*****  RESIDUALS R_ *************;
18303 +IF  F_Category  NE 'HR'
18304 +AND F_Category  NE 'DESIGNER'
18305 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18306 +AND F_Category  NE 'TEACHER'
18307 +AND F_Category  NE 'ADVOCATE'
18308 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18309 +AND F_Category  NE 'HEALTHCARE'
18310 +AND F_Category  NE 'FITNESS'
18311 +AND F_Category  NE 'OTHER'
18312 +AND F_Category  NE 'SALES'
18313 +AND F_Category  NE 'CONSULTANT'
18314 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18315 +        R_CategoryHR  = .;
18316 +        R_CategoryDESIGNER  = .;
18317 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18318 +        R_CategoryTEACHER  = .;
18319 +        R_CategoryADVOCATE  = .;
18320 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18321 +        R_CategoryHEALTHCARE  = .;
18322 +        R_CategoryFITNESS  = .;
18323 +        R_CategoryOTHER  = .;
18324 +        R_CategorySALES  = .;
18325 +        R_CategoryCONSULTANT  = .;
18326 +        R_CategoryDIGITAL_MEDIA  = .;
18327 + END;
18328 + ELSE DO;
18329 +       R_CategoryHR  =  -P_CategoryHR ;
18330 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18331 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18332 +         ;
18333 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18334 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18335 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18336 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18337 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18338 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18339 +       R_CategorySALES  =  -P_CategorySALES ;
18340 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18341 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18342 +       SELECT( F_Category  );
18343 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18344 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18345 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18346 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18347 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18348 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18349 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18350 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18351 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18352 +          +1;
18353 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18354 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18355 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18356 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18357 +          +1;
18358 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18359 +        R_CategoryDIGITAL_MEDIA  +1;
18360 +       END;
18361 + END;
18362 +
18363 +****************************************************************;
18364 +******          END OF DECISION TREE SCORING CODE         ******;
18365 +****************************************************************;
18366 +
18367 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18368  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18369  quit;
18370  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18371  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas";
18372  *------------------------------------------------------------*;
18373  * Tree7: Scoring VALIDATE data;
18374  *------------------------------------------------------------*;
18375  data EMWS3.Tree7_VALIDATE
18376  / view=EMWS3.Tree7_VALIDATE
18377  ;
18378  set EMWS3.TextCluster11_VALIDATE
18379  ;
18380  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas.
18381 +****************************************************************;
18382 +******             DECISION TREE SCORING CODE             ******;
18383 +****************************************************************;
18384 +
18385 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18386 +LENGTH F_Category  $   22;
18387 +LENGTH I_Category  $   22;
18388 +LENGTH U_Category  $   22;
18389 +LENGTH _WARN_  $    4;
18390 +
18391 +******              LABELS FOR NEW VARIABLES              ******;
18392 +label _NODE_ = 'Node' ;
18393 +label _LEAF_ = 'Leaf' ;
18394 +label P_CategoryHR = 'Predicted: Category=HR' ;
18395 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18396 +label P_CategoryINFORMATION_TECHNOLOGY =
18397 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18398 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18399 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18400 +label P_CategoryBUSINESS_DEVELOPMENT =
18401 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18402 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18403 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18404 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18405 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18406 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18407 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18408 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18409 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18410 +label Q_CategoryINFORMATION_TECHNOLOGY =
18411 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18412 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18413 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18414 +label Q_CategoryBUSINESS_DEVELOPMENT =
18415 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18416 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18417 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18418 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18419 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18420 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18421 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18422 +label V_CategoryHR = 'Validated: Category=HR' ;
18423 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18424 +label V_CategoryINFORMATION_TECHNOLOGY =
18425 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18426 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18427 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18428 +label V_CategoryBUSINESS_DEVELOPMENT =
18429 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18430 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18431 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18432 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18433 +label V_CategorySALES = 'Validated: Category=SALES' ;
18434 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18435 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18436 +label R_CategoryHR = 'Residual: Category=HR' ;
18437 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18438 +label R_CategoryINFORMATION_TECHNOLOGY =
18439 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18440 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18441 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18442 +label R_CategoryBUSINESS_DEVELOPMENT =
18443 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18444 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18445 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18446 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18447 +label R_CategorySALES = 'Residual: Category=SALES' ;
18448 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18449 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18450 +label F_Category = 'From: Category' ;
18451 +label I_Category = 'Into: Category' ;
18452 +label U_Category = 'Unnormalized Into: Category' ;
18453 +label _WARN_ = 'Warnings' ;
18454 +
18455 +
18456 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18457 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18458 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18459 +
18460 +
18461 +_ARBFMT_22 = PUT( Category , $22.);
18462 + %DMNORMCP( _ARBFMT_22, F_Category );
18463 +
18464 +******             ASSIGN OBSERVATION TO NODE             ******;
18465 +IF  NOT MISSING(TextCluster11_SVD3 ) AND
18466 +      0.28196358819982 <= TextCluster11_SVD3  THEN DO;
18467 +  _NODE_  =                    3;
18468 +  _LEAF_  =                    8;
18469 +  P_CategoryHR  =     0.85964912280701;
18470 +  P_CategoryDESIGNER  =                    0;
18471 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18472 +  P_CategoryTEACHER  =                    0;
18473 +  P_CategoryADVOCATE  =     0.03508771929824;
18474 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18475 +  P_CategoryHEALTHCARE  =     0.03508771929824;
18476 +  P_CategoryFITNESS  =     0.01754385964912;
18477 +  P_CategoryOTHER  =     0.01754385964912;
18478 +  P_CategorySALES  =                    0;
18479 +  P_CategoryCONSULTANT  =     0.01754385964912;
18480 +  P_CategoryDIGITAL_MEDIA  =                    0;
18481 +  Q_CategoryHR  =     0.85964912280701;
18482 +  Q_CategoryDESIGNER  =                    0;
18483 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18484 +  Q_CategoryTEACHER  =                    0;
18485 +  Q_CategoryADVOCATE  =     0.03508771929824;
18486 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18487 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
18488 +  Q_CategoryFITNESS  =     0.01754385964912;
18489 +  Q_CategoryOTHER  =     0.01754385964912;
18490 +  Q_CategorySALES  =                    0;
18491 +  Q_CategoryCONSULTANT  =     0.01754385964912;
18492 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18493 +  V_CategoryHR  =     0.78378378378378;
18494 +  V_CategoryDESIGNER  =                    0;
18495 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18496 +  V_CategoryTEACHER  =                    0;
18497 +  V_CategoryADVOCATE  =                    0;
18498 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
18499 +  V_CategoryHEALTHCARE  =     0.08108108108108;
18500 +  V_CategoryFITNESS  =     0.02702702702702;
18501 +  V_CategoryOTHER  =                    0;
18502 +  V_CategorySALES  =                    0;
18503 +  V_CategoryCONSULTANT  =     0.05405405405405;
18504 +  V_CategoryDIGITAL_MEDIA  =     0.02702702702702;
18505 +  I_Category  = 'HR' ;
18506 +  U_Category  = 'HR' ;
18507 +  END;
18508 +ELSE DO;
18509 +  IF  NOT MISSING(TextCluster11_SVD6 ) AND
18510 +    TextCluster11_SVD6  <    -0.24286093887231 THEN DO;
18511 +    IF  NOT MISSING(TextCluster11_SVD9 ) AND
18512 +          0.13101413665189 <= TextCluster11_SVD9  THEN DO;
18513 +      _NODE_  =                    9;
18514 +      _LEAF_  =                    2;
18515 +      P_CategoryHR  =                    0;
18516 +      P_CategoryDESIGNER  =                  0.4;
18517 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18518 +      P_CategoryTEACHER  =                    0;
18519 +      P_CategoryADVOCATE  =                    0;
18520 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18521 +      P_CategoryHEALTHCARE  =                    0;
18522 +      P_CategoryFITNESS  =                    0;
18523 +      P_CategoryOTHER  =                    0;
18524 +      P_CategorySALES  =                    0;
18525 +      P_CategoryCONSULTANT  =                    0;
18526 +      P_CategoryDIGITAL_MEDIA  =                  0.6;
18527 +      Q_CategoryHR  =                    0;
18528 +      Q_CategoryDESIGNER  =                  0.4;
18529 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18530 +      Q_CategoryTEACHER  =                    0;
18531 +      Q_CategoryADVOCATE  =                    0;
18532 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18533 +      Q_CategoryHEALTHCARE  =                    0;
18534 +      Q_CategoryFITNESS  =                    0;
18535 +      Q_CategoryOTHER  =                    0;
18536 +      Q_CategorySALES  =                    0;
18537 +      Q_CategoryCONSULTANT  =                    0;
18538 +      Q_CategoryDIGITAL_MEDIA  =                  0.6;
18539 +      V_CategoryHR  =                    0;
18540 +      V_CategoryDESIGNER  =                 0.25;
18541 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18542 +      V_CategoryTEACHER  =                    0;
18543 +      V_CategoryADVOCATE  =                 0.25;
18544 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18545 +      V_CategoryHEALTHCARE  =                    0;
18546 +      V_CategoryFITNESS  =                    0;
18547 +      V_CategoryOTHER  =                    0;
18548 +      V_CategorySALES  =                    0;
18549 +      V_CategoryCONSULTANT  =                    0;
18550 +      V_CategoryDIGITAL_MEDIA  =                  0.5;
18551 +      I_Category  = 'DIGITAL-MEDIA' ;
18552 +      U_Category  = 'DIGITAL-MEDIA' ;
18553 +      END;
18554 +    ELSE DO;
18555 +      _NODE_  =                    8;
18556 +      _LEAF_  =                    1;
18557 +      P_CategoryHR  =                    0;
18558 +      P_CategoryDESIGNER  =     0.93333333333333;
18559 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18560 +      P_CategoryTEACHER  =                    0;
18561 +      P_CategoryADVOCATE  =                    0;
18562 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18563 +      P_CategoryHEALTHCARE  =                    0;
18564 +      P_CategoryFITNESS  =                    0;
18565 +      P_CategoryOTHER  =                    0;
18566 +      P_CategorySALES  =     0.04444444444444;
18567 +      P_CategoryCONSULTANT  =                    0;
18568 +      P_CategoryDIGITAL_MEDIA  =                    0;
18569 +      Q_CategoryHR  =                    0;
18570 +      Q_CategoryDESIGNER  =     0.93333333333333;
18571 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18572 +      Q_CategoryTEACHER  =                    0;
18573 +      Q_CategoryADVOCATE  =                    0;
18574 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18575 +      Q_CategoryHEALTHCARE  =                    0;
18576 +      Q_CategoryFITNESS  =                    0;
18577 +      Q_CategoryOTHER  =                    0;
18578 +      Q_CategorySALES  =     0.04444444444444;
18579 +      Q_CategoryCONSULTANT  =                    0;
18580 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18581 +      V_CategoryHR  =                    0;
18582 +      V_CategoryDESIGNER  =     0.86666666666666;
18583 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18584 +      V_CategoryTEACHER  =     0.06666666666666;
18585 +      V_CategoryADVOCATE  =                    0;
18586 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18587 +      V_CategoryHEALTHCARE  =                    0;
18588 +      V_CategoryFITNESS  =                    0;
18589 +      V_CategoryOTHER  =                    0;
18590 +      V_CategorySALES  =     0.06666666666666;
18591 +      V_CategoryCONSULTANT  =                    0;
18592 +      V_CategoryDIGITAL_MEDIA  =                    0;
18593 +      I_Category  = 'DESIGNER' ;
18594 +      U_Category  = 'DESIGNER' ;
18595 +      END;
18596 +    END;
18597 +  ELSE DO;
18598 +    IF  NOT MISSING(TextCluster11_SVD3 ) AND
18599 +      TextCluster11_SVD3  <    -0.42848187206424 THEN DO;
18600 +      _NODE_  =                   10;
18601 +      _LEAF_  =                    3;
18602 +      P_CategoryHR  =                    0;
18603 +      P_CategoryDESIGNER  =                    0;
18604 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
18605 +      P_CategoryTEACHER  =     0.84313725490196;
18606 +      P_CategoryADVOCATE  =     0.05882352941176;
18607 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18608 +      P_CategoryHEALTHCARE  =     0.01960784313725;
18609 +      P_CategoryFITNESS  =     0.05882352941176;
18610 +      P_CategoryOTHER  =                    0;
18611 +      P_CategorySALES  =                    0;
18612 +      P_CategoryCONSULTANT  =                    0;
18613 +      P_CategoryDIGITAL_MEDIA  =                    0;
18614 +      Q_CategoryHR  =                    0;
18615 +      Q_CategoryDESIGNER  =                    0;
18616 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
18617 +      Q_CategoryTEACHER  =     0.84313725490196;
18618 +      Q_CategoryADVOCATE  =     0.05882352941176;
18619 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18620 +      Q_CategoryHEALTHCARE  =     0.01960784313725;
18621 +      Q_CategoryFITNESS  =     0.05882352941176;
18622 +      Q_CategoryOTHER  =                    0;
18623 +      Q_CategorySALES  =                    0;
18624 +      Q_CategoryCONSULTANT  =                    0;
18625 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18626 +      V_CategoryHR  =                    0;
18627 +      V_CategoryDESIGNER  =                    0;
18628 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
18629 +      V_CategoryTEACHER  =     0.71794871794871;
18630 +      V_CategoryADVOCATE  =     0.05128205128205;
18631 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18632 +      V_CategoryHEALTHCARE  =     0.02564102564102;
18633 +      V_CategoryFITNESS  =     0.05128205128205;
18634 +      V_CategoryOTHER  =      0.1025641025641;
18635 +      V_CategorySALES  =     0.02564102564102;
18636 +      V_CategoryCONSULTANT  =                    0;
18637 +      V_CategoryDIGITAL_MEDIA  =                    0;
18638 +      I_Category  = 'TEACHER' ;
18639 +      U_Category  = 'TEACHER' ;
18640 +      END;
18641 +    ELSE DO;
18642 +      IF  NOT MISSING(TextCluster11_SVD8 ) AND
18643 +            0.12070736690043 <= TextCluster11_SVD8  THEN DO;
18644 +        _NODE_  =                   15;
18645 +        _LEAF_  =                    7;
18646 +        P_CategoryHR  =                    0;
18647 +        P_CategoryDESIGNER  =                    0;
18648 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18649 +        P_CategoryTEACHER  =                    0;
18650 +        P_CategoryADVOCATE  =     0.06521739130434;
18651 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18652 +        P_CategoryHEALTHCARE  =                    0;
18653 +        P_CategoryFITNESS  =     0.89130434782608;
18654 +        P_CategoryOTHER  =     0.02173913043478;
18655 +        P_CategorySALES  =                    0;
18656 +        P_CategoryCONSULTANT  =                    0;
18657 +        P_CategoryDIGITAL_MEDIA  =                    0;
18658 +        Q_CategoryHR  =                    0;
18659 +        Q_CategoryDESIGNER  =                    0;
18660 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18661 +        Q_CategoryTEACHER  =                    0;
18662 +        Q_CategoryADVOCATE  =     0.06521739130434;
18663 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18664 +        Q_CategoryHEALTHCARE  =                    0;
18665 +        Q_CategoryFITNESS  =     0.89130434782608;
18666 +        Q_CategoryOTHER  =     0.02173913043478;
18667 +        Q_CategorySALES  =                    0;
18668 +        Q_CategoryCONSULTANT  =                    0;
18669 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18670 +        V_CategoryHR  =                    0;
18671 +        V_CategoryDESIGNER  =     0.03225806451612;
18672 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18673 +        V_CategoryTEACHER  =                    0;
18674 +        V_CategoryADVOCATE  =                    0;
18675 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18676 +        V_CategoryHEALTHCARE  =     0.03225806451612;
18677 +        V_CategoryFITNESS  =     0.80645161290322;
18678 +        V_CategoryOTHER  =     0.03225806451612;
18679 +        V_CategorySALES  =     0.03225806451612;
18680 +        V_CategoryCONSULTANT  =     0.03225806451612;
18681 +        V_CategoryDIGITAL_MEDIA  =     0.03225806451612;
18682 +        I_Category  = 'FITNESS' ;
18683 +        U_Category  = 'FITNESS' ;
18684 +        END;
18685 +      ELSE DO;
18686 +        IF  NOT MISSING(TextCluster11_SVD2 ) AND
18687 +              0.23324615863228 <= TextCluster11_SVD2  THEN DO;
18688 +          _NODE_  =                   17;
18689 +          _LEAF_  =                    6;
18690 +          P_CategoryHR  =                    0;
18691 +          P_CategoryDESIGNER  =     0.01162790697674;
18692 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
18693 +          P_CategoryTEACHER  =                    0;
18694 +          P_CategoryADVOCATE  =     0.02325581395348;
18695 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
18696 +          P_CategoryHEALTHCARE  =     0.03488372093023;
18697 +          P_CategoryFITNESS  =                    0;
18698 +          P_CategoryOTHER  =     0.04651162790697;
18699 +          P_CategorySALES  =     0.01162790697674;
18700 +          P_CategoryCONSULTANT  =     0.23255813953488;
18701 +          P_CategoryDIGITAL_MEDIA  =     0.04651162790697;
18702 +          Q_CategoryHR  =                    0;
18703 +          Q_CategoryDESIGNER  =     0.01162790697674;
18704 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
18705 +          Q_CategoryTEACHER  =                    0;
18706 +          Q_CategoryADVOCATE  =     0.02325581395348;
18707 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
18708 +          Q_CategoryHEALTHCARE  =     0.03488372093023;
18709 +          Q_CategoryFITNESS  =                    0;
18710 +          Q_CategoryOTHER  =     0.04651162790697;
18711 +          Q_CategorySALES  =     0.01162790697674;
18712 +          Q_CategoryCONSULTANT  =     0.23255813953488;
18713 +          Q_CategoryDIGITAL_MEDIA  =     0.04651162790697;
18714 +          V_CategoryHR  =                    0;
18715 +          V_CategoryDESIGNER  =                    0;
18716 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.63461538461538;
18717 +          V_CategoryTEACHER  =                    0;
18718 +          V_CategoryADVOCATE  =     0.01923076923076;
18719 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.03846153846153;
18720 +          V_CategoryHEALTHCARE  =     0.01923076923076;
18721 +          V_CategoryFITNESS  =                    0;
18722 +          V_CategoryOTHER  =      0.0576923076923;
18723 +          V_CategorySALES  =     0.01923076923076;
18724 +          V_CategoryCONSULTANT  =     0.13461538461538;
18725 +          V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
18726 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18727 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18728 +          END;
18729 +        ELSE DO;
18730 +          IF  NOT MISSING(TextCluster11_SVD5 ) AND
18731 +                 0.0876603538126 <= TextCluster11_SVD5  THEN DO;
18732 +            _NODE_  =                   19;
18733 +            _LEAF_  =                    5;
18734 +            P_CategoryHR  =     0.03333333333333;
18735 +            P_CategoryDESIGNER  =     0.01666666666666;
18736 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
18737 +            P_CategoryTEACHER  =     0.01666666666666;
18738 +            P_CategoryADVOCATE  =                    0;
18739 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
18740 +            P_CategoryHEALTHCARE  =     0.03333333333333;
18741 +            P_CategoryFITNESS  =                    0;
18742 +            P_CategoryOTHER  =     0.08333333333333;
18743 +            P_CategorySALES  =                    0;
18744 +            P_CategoryCONSULTANT  =                  0.1;
18745 +            P_CategoryDIGITAL_MEDIA  =     0.58333333333333;
18746 +            Q_CategoryHR  =     0.03333333333333;
18747 +            Q_CategoryDESIGNER  =     0.01666666666666;
18748 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
18749 +            Q_CategoryTEACHER  =     0.01666666666666;
18750 +            Q_CategoryADVOCATE  =                    0;
18751 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
18752 +            Q_CategoryHEALTHCARE  =     0.03333333333333;
18753 +            Q_CategoryFITNESS  =                    0;
18754 +            Q_CategoryOTHER  =     0.08333333333333;
18755 +            Q_CategorySALES  =                    0;
18756 +            Q_CategoryCONSULTANT  =                  0.1;
18757 +            Q_CategoryDIGITAL_MEDIA  =     0.58333333333333;
18758 +            V_CategoryHR  =     0.03333333333333;
18759 +            V_CategoryDESIGNER  =     0.03333333333333;
18760 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18761 +            V_CategoryTEACHER  =                    0;
18762 +            V_CategoryADVOCATE  =                    0;
18763 +            V_CategoryBUSINESS_DEVELOPMENT  =                  0.1;
18764 +            V_CategoryHEALTHCARE  =                    0;
18765 +            V_CategoryFITNESS  =                    0;
18766 +            V_CategoryOTHER  =                    0;
18767 +            V_CategorySALES  =     0.06666666666666;
18768 +            V_CategoryCONSULTANT  =                  0.2;
18769 +            V_CategoryDIGITAL_MEDIA  =     0.56666666666666;
18770 +            I_Category  = 'DIGITAL-MEDIA' ;
18771 +            U_Category  = 'DIGITAL-MEDIA' ;
18772 +            END;
18773 +          ELSE DO;
18774 +            _NODE_  =                   18;
18775 +            _LEAF_  =                    4;
18776 +            P_CategoryHR  =     0.01234567901234;
18777 +            P_CategoryDESIGNER  =      0.0216049382716;
18778 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18779 +            P_CategoryTEACHER  =     0.01851851851851;
18780 +            P_CategoryADVOCATE  =     0.14506172839506;
18781 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18782 +            P_CategoryHEALTHCARE  =     0.15123456790123;
18783 +            P_CategoryFITNESS  =     0.04012345679012;
18784 +            P_CategoryOTHER  =     0.16049382716049;
18785 +            P_CategorySALES  =     0.16975308641975;
18786 +            P_CategoryCONSULTANT  =     0.09259259259259;
18787 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18788 +            Q_CategoryHR  =     0.01234567901234;
18789 +            Q_CategoryDESIGNER  =      0.0216049382716;
18790 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18791 +            Q_CategoryTEACHER  =     0.01851851851851;
18792 +            Q_CategoryADVOCATE  =     0.14506172839506;
18793 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18794 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
18795 +            Q_CategoryFITNESS  =     0.04012345679012;
18796 +            Q_CategoryOTHER  =     0.16049382716049;
18797 +            Q_CategorySALES  =     0.16975308641975;
18798 +            Q_CategoryCONSULTANT  =     0.09259259259259;
18799 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18800 +            V_CategoryHR  =     0.01098901098901;
18801 +            V_CategoryDESIGNER  =     0.01098901098901;
18802 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01098901098901;
18803 +            V_CategoryTEACHER  =      0.0054945054945;
18804 +            V_CategoryADVOCATE  =     0.17032967032967;
18805 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16483516483516;
18806 +            V_CategoryHEALTHCARE  =     0.14835164835164;
18807 +            V_CategoryFITNESS  =     0.03846153846153;
18808 +            V_CategoryOTHER  =     0.16483516483516;
18809 +            V_CategorySALES  =     0.14835164835164;
18810 +            V_CategoryCONSULTANT  =      0.1043956043956;
18811 +            V_CategoryDIGITAL_MEDIA  =     0.02197802197802;
18812 +            I_Category  = 'SALES' ;
18813 +            U_Category  = 'SALES' ;
18814 +            END;
18815 +          END;
18816 +        END;
18817 +      END;
18818 +    END;
18819 +  END;
18820 +
18821 +*****  RESIDUALS R_ *************;
18822 +IF  F_Category  NE 'HR'
18823 +AND F_Category  NE 'DESIGNER'
18824 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18825 +AND F_Category  NE 'TEACHER'
18826 +AND F_Category  NE 'ADVOCATE'
18827 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18828 +AND F_Category  NE 'HEALTHCARE'
18829 +AND F_Category  NE 'FITNESS'
18830 +AND F_Category  NE 'OTHER'
18831 +AND F_Category  NE 'SALES'
18832 +AND F_Category  NE 'CONSULTANT'
18833 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18834 +        R_CategoryHR  = .;
18835 +        R_CategoryDESIGNER  = .;
18836 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18837 +        R_CategoryTEACHER  = .;
18838 +        R_CategoryADVOCATE  = .;
18839 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18840 +        R_CategoryHEALTHCARE  = .;
18841 +        R_CategoryFITNESS  = .;
18842 +        R_CategoryOTHER  = .;
18843 +        R_CategorySALES  = .;
18844 +        R_CategoryCONSULTANT  = .;
18845 +        R_CategoryDIGITAL_MEDIA  = .;
18846 + END;
18847 + ELSE DO;
18848 +       R_CategoryHR  =  -P_CategoryHR ;
18849 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18850 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18851 +         ;
18852 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18853 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18854 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18855 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18856 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18857 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18858 +       R_CategorySALES  =  -P_CategorySALES ;
18859 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18860 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18861 +       SELECT( F_Category  );
18862 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18863 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18864 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18865 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18866 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18867 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18868 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18869 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18870 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18871 +          +1;
18872 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18873 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18874 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18875 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18876 +          +1;
18877 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18878 +        R_CategoryDIGITAL_MEDIA  +1;
18879 +       END;
18880 + END;
18881 +
18882 +****************************************************************;
18883 +******          END OF DECISION TREE SCORING CODE         ******;
18884 +****************************************************************;
18885 +
18886 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18887  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18888  quit;
18889  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18890  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas";
18891  *------------------------------------------------------------*;
18892  * Tree7: Scoring TEST data;
18893  *------------------------------------------------------------*;
18894  data EMWS3.Tree7_TEST
18895  / view=EMWS3.Tree7_TEST
18896  ;
18897  set EMWS3.TextCluster11_TEST
18898  ;
18899  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree7\EMFLOWSCORE.sas.
18900 +****************************************************************;
18901 +******             DECISION TREE SCORING CODE             ******;
18902 +****************************************************************;
18903 +
18904 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18905 +LENGTH F_Category  $   22;
18906 +LENGTH I_Category  $   22;
18907 +LENGTH U_Category  $   22;
18908 +LENGTH _WARN_  $    4;
18909 +
18910 +******              LABELS FOR NEW VARIABLES              ******;
18911 +label _NODE_ = 'Node' ;
18912 +label _LEAF_ = 'Leaf' ;
18913 +label P_CategoryHR = 'Predicted: Category=HR' ;
18914 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18915 +label P_CategoryINFORMATION_TECHNOLOGY =
18916 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18917 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18918 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18919 +label P_CategoryBUSINESS_DEVELOPMENT =
18920 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18921 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18922 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18923 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18924 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18925 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18926 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18927 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18928 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18929 +label Q_CategoryINFORMATION_TECHNOLOGY =
18930 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18931 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18932 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18933 +label Q_CategoryBUSINESS_DEVELOPMENT =
18934 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18935 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18936 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18937 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18938 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18939 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18940 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18941 +label V_CategoryHR = 'Validated: Category=HR' ;
18942 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18943 +label V_CategoryINFORMATION_TECHNOLOGY =
18944 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18945 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18946 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18947 +label V_CategoryBUSINESS_DEVELOPMENT =
18948 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18949 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18950 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18951 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18952 +label V_CategorySALES = 'Validated: Category=SALES' ;
18953 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18954 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18955 +label R_CategoryHR = 'Residual: Category=HR' ;
18956 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18957 +label R_CategoryINFORMATION_TECHNOLOGY =
18958 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18959 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18960 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18961 +label R_CategoryBUSINESS_DEVELOPMENT =
18962 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18963 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18964 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18965 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18966 +label R_CategorySALES = 'Residual: Category=SALES' ;
18967 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18968 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18969 +label F_Category = 'From: Category' ;
18970 +label I_Category = 'Into: Category' ;
18971 +label U_Category = 'Unnormalized Into: Category' ;
18972 +label _WARN_ = 'Warnings' ;
18973 +
18974 +
18975 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18976 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18977 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18978 +
18979 +
18980 +_ARBFMT_22 = PUT( Category , $22.);
18981 + %DMNORMCP( _ARBFMT_22, F_Category );
18982 +
18983 +******             ASSIGN OBSERVATION TO NODE             ******;
18984 +IF  NOT MISSING(TextCluster11_SVD3 ) AND
18985 +      0.28196358819982 <= TextCluster11_SVD3  THEN DO;
18986 +  _NODE_  =                    3;
18987 +  _LEAF_  =                    8;
18988 +  P_CategoryHR  =     0.85964912280701;
18989 +  P_CategoryDESIGNER  =                    0;
18990 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18991 +  P_CategoryTEACHER  =                    0;
18992 +  P_CategoryADVOCATE  =     0.03508771929824;
18993 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18994 +  P_CategoryHEALTHCARE  =     0.03508771929824;
18995 +  P_CategoryFITNESS  =     0.01754385964912;
18996 +  P_CategoryOTHER  =     0.01754385964912;
18997 +  P_CategorySALES  =                    0;
18998 +  P_CategoryCONSULTANT  =     0.01754385964912;
18999 +  P_CategoryDIGITAL_MEDIA  =                    0;
19000 +  Q_CategoryHR  =     0.85964912280701;
19001 +  Q_CategoryDESIGNER  =                    0;
19002 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19003 +  Q_CategoryTEACHER  =                    0;
19004 +  Q_CategoryADVOCATE  =     0.03508771929824;
19005 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
19006 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
19007 +  Q_CategoryFITNESS  =     0.01754385964912;
19008 +  Q_CategoryOTHER  =     0.01754385964912;
19009 +  Q_CategorySALES  =                    0;
19010 +  Q_CategoryCONSULTANT  =     0.01754385964912;
19011 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19012 +  V_CategoryHR  =     0.78378378378378;
19013 +  V_CategoryDESIGNER  =                    0;
19014 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19015 +  V_CategoryTEACHER  =                    0;
19016 +  V_CategoryADVOCATE  =                    0;
19017 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02702702702702;
19018 +  V_CategoryHEALTHCARE  =     0.08108108108108;
19019 +  V_CategoryFITNESS  =     0.02702702702702;
19020 +  V_CategoryOTHER  =                    0;
19021 +  V_CategorySALES  =                    0;
19022 +  V_CategoryCONSULTANT  =     0.05405405405405;
19023 +  V_CategoryDIGITAL_MEDIA  =     0.02702702702702;
19024 +  I_Category  = 'HR' ;
19025 +  U_Category  = 'HR' ;
19026 +  END;
19027 +ELSE DO;
19028 +  IF  NOT MISSING(TextCluster11_SVD6 ) AND
19029 +    TextCluster11_SVD6  <    -0.24286093887231 THEN DO;
19030 +    IF  NOT MISSING(TextCluster11_SVD9 ) AND
19031 +          0.13101413665189 <= TextCluster11_SVD9  THEN DO;
19032 +      _NODE_  =                    9;
19033 +      _LEAF_  =                    2;
19034 +      P_CategoryHR  =                    0;
19035 +      P_CategoryDESIGNER  =                  0.4;
19036 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19037 +      P_CategoryTEACHER  =                    0;
19038 +      P_CategoryADVOCATE  =                    0;
19039 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19040 +      P_CategoryHEALTHCARE  =                    0;
19041 +      P_CategoryFITNESS  =                    0;
19042 +      P_CategoryOTHER  =                    0;
19043 +      P_CategorySALES  =                    0;
19044 +      P_CategoryCONSULTANT  =                    0;
19045 +      P_CategoryDIGITAL_MEDIA  =                  0.6;
19046 +      Q_CategoryHR  =                    0;
19047 +      Q_CategoryDESIGNER  =                  0.4;
19048 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19049 +      Q_CategoryTEACHER  =                    0;
19050 +      Q_CategoryADVOCATE  =                    0;
19051 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19052 +      Q_CategoryHEALTHCARE  =                    0;
19053 +      Q_CategoryFITNESS  =                    0;
19054 +      Q_CategoryOTHER  =                    0;
19055 +      Q_CategorySALES  =                    0;
19056 +      Q_CategoryCONSULTANT  =                    0;
19057 +      Q_CategoryDIGITAL_MEDIA  =                  0.6;
19058 +      V_CategoryHR  =                    0;
19059 +      V_CategoryDESIGNER  =                 0.25;
19060 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19061 +      V_CategoryTEACHER  =                    0;
19062 +      V_CategoryADVOCATE  =                 0.25;
19063 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19064 +      V_CategoryHEALTHCARE  =                    0;
19065 +      V_CategoryFITNESS  =                    0;
19066 +      V_CategoryOTHER  =                    0;
19067 +      V_CategorySALES  =                    0;
19068 +      V_CategoryCONSULTANT  =                    0;
19069 +      V_CategoryDIGITAL_MEDIA  =                  0.5;
19070 +      I_Category  = 'DIGITAL-MEDIA' ;
19071 +      U_Category  = 'DIGITAL-MEDIA' ;
19072 +      END;
19073 +    ELSE DO;
19074 +      _NODE_  =                    8;
19075 +      _LEAF_  =                    1;
19076 +      P_CategoryHR  =                    0;
19077 +      P_CategoryDESIGNER  =     0.93333333333333;
19078 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19079 +      P_CategoryTEACHER  =                    0;
19080 +      P_CategoryADVOCATE  =                    0;
19081 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19082 +      P_CategoryHEALTHCARE  =                    0;
19083 +      P_CategoryFITNESS  =                    0;
19084 +      P_CategoryOTHER  =                    0;
19085 +      P_CategorySALES  =     0.04444444444444;
19086 +      P_CategoryCONSULTANT  =                    0;
19087 +      P_CategoryDIGITAL_MEDIA  =                    0;
19088 +      Q_CategoryHR  =                    0;
19089 +      Q_CategoryDESIGNER  =     0.93333333333333;
19090 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19091 +      Q_CategoryTEACHER  =                    0;
19092 +      Q_CategoryADVOCATE  =                    0;
19093 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19094 +      Q_CategoryHEALTHCARE  =                    0;
19095 +      Q_CategoryFITNESS  =                    0;
19096 +      Q_CategoryOTHER  =                    0;
19097 +      Q_CategorySALES  =     0.04444444444444;
19098 +      Q_CategoryCONSULTANT  =                    0;
19099 +      Q_CategoryDIGITAL_MEDIA  =                    0;
19100 +      V_CategoryHR  =                    0;
19101 +      V_CategoryDESIGNER  =     0.86666666666666;
19102 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19103 +      V_CategoryTEACHER  =     0.06666666666666;
19104 +      V_CategoryADVOCATE  =                    0;
19105 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19106 +      V_CategoryHEALTHCARE  =                    0;
19107 +      V_CategoryFITNESS  =                    0;
19108 +      V_CategoryOTHER  =                    0;
19109 +      V_CategorySALES  =     0.06666666666666;
19110 +      V_CategoryCONSULTANT  =                    0;
19111 +      V_CategoryDIGITAL_MEDIA  =                    0;
19112 +      I_Category  = 'DESIGNER' ;
19113 +      U_Category  = 'DESIGNER' ;
19114 +      END;
19115 +    END;
19116 +  ELSE DO;
19117 +    IF  NOT MISSING(TextCluster11_SVD3 ) AND
19118 +      TextCluster11_SVD3  <    -0.42848187206424 THEN DO;
19119 +      _NODE_  =                   10;
19120 +      _LEAF_  =                    3;
19121 +      P_CategoryHR  =                    0;
19122 +      P_CategoryDESIGNER  =                    0;
19123 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
19124 +      P_CategoryTEACHER  =     0.84313725490196;
19125 +      P_CategoryADVOCATE  =     0.05882352941176;
19126 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19127 +      P_CategoryHEALTHCARE  =     0.01960784313725;
19128 +      P_CategoryFITNESS  =     0.05882352941176;
19129 +      P_CategoryOTHER  =                    0;
19130 +      P_CategorySALES  =                    0;
19131 +      P_CategoryCONSULTANT  =                    0;
19132 +      P_CategoryDIGITAL_MEDIA  =                    0;
19133 +      Q_CategoryHR  =                    0;
19134 +      Q_CategoryDESIGNER  =                    0;
19135 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01960784313725;
19136 +      Q_CategoryTEACHER  =     0.84313725490196;
19137 +      Q_CategoryADVOCATE  =     0.05882352941176;
19138 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19139 +      Q_CategoryHEALTHCARE  =     0.01960784313725;
19140 +      Q_CategoryFITNESS  =     0.05882352941176;
19141 +      Q_CategoryOTHER  =                    0;
19142 +      Q_CategorySALES  =                    0;
19143 +      Q_CategoryCONSULTANT  =                    0;
19144 +      Q_CategoryDIGITAL_MEDIA  =                    0;
19145 +      V_CategoryHR  =                    0;
19146 +      V_CategoryDESIGNER  =                    0;
19147 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02564102564102;
19148 +      V_CategoryTEACHER  =     0.71794871794871;
19149 +      V_CategoryADVOCATE  =     0.05128205128205;
19150 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19151 +      V_CategoryHEALTHCARE  =     0.02564102564102;
19152 +      V_CategoryFITNESS  =     0.05128205128205;
19153 +      V_CategoryOTHER  =      0.1025641025641;
19154 +      V_CategorySALES  =     0.02564102564102;
19155 +      V_CategoryCONSULTANT  =                    0;
19156 +      V_CategoryDIGITAL_MEDIA  =                    0;
19157 +      I_Category  = 'TEACHER' ;
19158 +      U_Category  = 'TEACHER' ;
19159 +      END;
19160 +    ELSE DO;
19161 +      IF  NOT MISSING(TextCluster11_SVD8 ) AND
19162 +            0.12070736690043 <= TextCluster11_SVD8  THEN DO;
19163 +        _NODE_  =                   15;
19164 +        _LEAF_  =                    7;
19165 +        P_CategoryHR  =                    0;
19166 +        P_CategoryDESIGNER  =                    0;
19167 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19168 +        P_CategoryTEACHER  =                    0;
19169 +        P_CategoryADVOCATE  =     0.06521739130434;
19170 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19171 +        P_CategoryHEALTHCARE  =                    0;
19172 +        P_CategoryFITNESS  =     0.89130434782608;
19173 +        P_CategoryOTHER  =     0.02173913043478;
19174 +        P_CategorySALES  =                    0;
19175 +        P_CategoryCONSULTANT  =                    0;
19176 +        P_CategoryDIGITAL_MEDIA  =                    0;
19177 +        Q_CategoryHR  =                    0;
19178 +        Q_CategoryDESIGNER  =                    0;
19179 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19180 +        Q_CategoryTEACHER  =                    0;
19181 +        Q_CategoryADVOCATE  =     0.06521739130434;
19182 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19183 +        Q_CategoryHEALTHCARE  =                    0;
19184 +        Q_CategoryFITNESS  =     0.89130434782608;
19185 +        Q_CategoryOTHER  =     0.02173913043478;
19186 +        Q_CategorySALES  =                    0;
19187 +        Q_CategoryCONSULTANT  =                    0;
19188 +        Q_CategoryDIGITAL_MEDIA  =                    0;
19189 +        V_CategoryHR  =                    0;
19190 +        V_CategoryDESIGNER  =     0.03225806451612;
19191 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19192 +        V_CategoryTEACHER  =                    0;
19193 +        V_CategoryADVOCATE  =                    0;
19194 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19195 +        V_CategoryHEALTHCARE  =     0.03225806451612;
19196 +        V_CategoryFITNESS  =     0.80645161290322;
19197 +        V_CategoryOTHER  =     0.03225806451612;
19198 +        V_CategorySALES  =     0.03225806451612;
19199 +        V_CategoryCONSULTANT  =     0.03225806451612;
19200 +        V_CategoryDIGITAL_MEDIA  =     0.03225806451612;
19201 +        I_Category  = 'FITNESS' ;
19202 +        U_Category  = 'FITNESS' ;
19203 +        END;
19204 +      ELSE DO;
19205 +        IF  NOT MISSING(TextCluster11_SVD2 ) AND
19206 +              0.23324615863228 <= TextCluster11_SVD2  THEN DO;
19207 +          _NODE_  =                   17;
19208 +          _LEAF_  =                    6;
19209 +          P_CategoryHR  =                    0;
19210 +          P_CategoryDESIGNER  =     0.01162790697674;
19211 +          P_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
19212 +          P_CategoryTEACHER  =                    0;
19213 +          P_CategoryADVOCATE  =     0.02325581395348;
19214 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
19215 +          P_CategoryHEALTHCARE  =     0.03488372093023;
19216 +          P_CategoryFITNESS  =                    0;
19217 +          P_CategoryOTHER  =     0.04651162790697;
19218 +          P_CategorySALES  =     0.01162790697674;
19219 +          P_CategoryCONSULTANT  =     0.23255813953488;
19220 +          P_CategoryDIGITAL_MEDIA  =     0.04651162790697;
19221 +          Q_CategoryHR  =                    0;
19222 +          Q_CategoryDESIGNER  =     0.01162790697674;
19223 +          Q_CategoryINFORMATION_TECHNOLOGY  =      0.5813953488372;
19224 +          Q_CategoryTEACHER  =                    0;
19225 +          Q_CategoryADVOCATE  =     0.02325581395348;
19226 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01162790697674;
19227 +          Q_CategoryHEALTHCARE  =     0.03488372093023;
19228 +          Q_CategoryFITNESS  =                    0;
19229 +          Q_CategoryOTHER  =     0.04651162790697;
19230 +          Q_CategorySALES  =     0.01162790697674;
19231 +          Q_CategoryCONSULTANT  =     0.23255813953488;
19232 +          Q_CategoryDIGITAL_MEDIA  =     0.04651162790697;
19233 +          V_CategoryHR  =                    0;
19234 +          V_CategoryDESIGNER  =                    0;
19235 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.63461538461538;
19236 +          V_CategoryTEACHER  =                    0;
19237 +          V_CategoryADVOCATE  =     0.01923076923076;
19238 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.03846153846153;
19239 +          V_CategoryHEALTHCARE  =     0.01923076923076;
19240 +          V_CategoryFITNESS  =                    0;
19241 +          V_CategoryOTHER  =      0.0576923076923;
19242 +          V_CategorySALES  =     0.01923076923076;
19243 +          V_CategoryCONSULTANT  =     0.13461538461538;
19244 +          V_CategoryDIGITAL_MEDIA  =     0.07692307692307;
19245 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
19246 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
19247 +          END;
19248 +        ELSE DO;
19249 +          IF  NOT MISSING(TextCluster11_SVD5 ) AND
19250 +                 0.0876603538126 <= TextCluster11_SVD5  THEN DO;
19251 +            _NODE_  =                   19;
19252 +            _LEAF_  =                    5;
19253 +            P_CategoryHR  =     0.03333333333333;
19254 +            P_CategoryDESIGNER  =     0.01666666666666;
19255 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
19256 +            P_CategoryTEACHER  =     0.01666666666666;
19257 +            P_CategoryADVOCATE  =                    0;
19258 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
19259 +            P_CategoryHEALTHCARE  =     0.03333333333333;
19260 +            P_CategoryFITNESS  =                    0;
19261 +            P_CategoryOTHER  =     0.08333333333333;
19262 +            P_CategorySALES  =                    0;
19263 +            P_CategoryCONSULTANT  =                  0.1;
19264 +            P_CategoryDIGITAL_MEDIA  =     0.58333333333333;
19265 +            Q_CategoryHR  =     0.03333333333333;
19266 +            Q_CategoryDESIGNER  =     0.01666666666666;
19267 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01666666666666;
19268 +            Q_CategoryTEACHER  =     0.01666666666666;
19269 +            Q_CategoryADVOCATE  =                    0;
19270 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.11666666666666;
19271 +            Q_CategoryHEALTHCARE  =     0.03333333333333;
19272 +            Q_CategoryFITNESS  =                    0;
19273 +            Q_CategoryOTHER  =     0.08333333333333;
19274 +            Q_CategorySALES  =                    0;
19275 +            Q_CategoryCONSULTANT  =                  0.1;
19276 +            Q_CategoryDIGITAL_MEDIA  =     0.58333333333333;
19277 +            V_CategoryHR  =     0.03333333333333;
19278 +            V_CategoryDESIGNER  =     0.03333333333333;
19279 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19280 +            V_CategoryTEACHER  =                    0;
19281 +            V_CategoryADVOCATE  =                    0;
19282 +            V_CategoryBUSINESS_DEVELOPMENT  =                  0.1;
19283 +            V_CategoryHEALTHCARE  =                    0;
19284 +            V_CategoryFITNESS  =                    0;
19285 +            V_CategoryOTHER  =                    0;
19286 +            V_CategorySALES  =     0.06666666666666;
19287 +            V_CategoryCONSULTANT  =                  0.2;
19288 +            V_CategoryDIGITAL_MEDIA  =     0.56666666666666;
19289 +            I_Category  = 'DIGITAL-MEDIA' ;
19290 +            U_Category  = 'DIGITAL-MEDIA' ;
19291 +            END;
19292 +          ELSE DO;
19293 +            _NODE_  =                   18;
19294 +            _LEAF_  =                    4;
19295 +            P_CategoryHR  =     0.01234567901234;
19296 +            P_CategoryDESIGNER  =      0.0216049382716;
19297 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
19298 +            P_CategoryTEACHER  =     0.01851851851851;
19299 +            P_CategoryADVOCATE  =     0.14506172839506;
19300 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
19301 +            P_CategoryHEALTHCARE  =     0.15123456790123;
19302 +            P_CategoryFITNESS  =     0.04012345679012;
19303 +            P_CategoryOTHER  =     0.16049382716049;
19304 +            P_CategorySALES  =     0.16975308641975;
19305 +            P_CategoryCONSULTANT  =     0.09259259259259;
19306 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
19307 +            Q_CategoryHR  =     0.01234567901234;
19308 +            Q_CategoryDESIGNER  =      0.0216049382716;
19309 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
19310 +            Q_CategoryTEACHER  =     0.01851851851851;
19311 +            Q_CategoryADVOCATE  =     0.14506172839506;
19312 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
19313 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
19314 +            Q_CategoryFITNESS  =     0.04012345679012;
19315 +            Q_CategoryOTHER  =     0.16049382716049;
19316 +            Q_CategorySALES  =     0.16975308641975;
19317 +            Q_CategoryCONSULTANT  =     0.09259259259259;
19318 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
19319 +            V_CategoryHR  =     0.01098901098901;
19320 +            V_CategoryDESIGNER  =     0.01098901098901;
19321 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01098901098901;
19322 +            V_CategoryTEACHER  =      0.0054945054945;
19323 +            V_CategoryADVOCATE  =     0.17032967032967;
19324 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16483516483516;
19325 +            V_CategoryHEALTHCARE  =     0.14835164835164;
19326 +            V_CategoryFITNESS  =     0.03846153846153;
19327 +            V_CategoryOTHER  =     0.16483516483516;
19328 +            V_CategorySALES  =     0.14835164835164;
19329 +            V_CategoryCONSULTANT  =      0.1043956043956;
19330 +            V_CategoryDIGITAL_MEDIA  =     0.02197802197802;
19331 +            I_Category  = 'SALES' ;
19332 +            U_Category  = 'SALES' ;
19333 +            END;
19334 +          END;
19335 +        END;
19336 +      END;
19337 +    END;
19338 +  END;
19339 +
19340 +*****  RESIDUALS R_ *************;
19341 +IF  F_Category  NE 'HR'
19342 +AND F_Category  NE 'DESIGNER'
19343 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19344 +AND F_Category  NE 'TEACHER'
19345 +AND F_Category  NE 'ADVOCATE'
19346 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19347 +AND F_Category  NE 'HEALTHCARE'
19348 +AND F_Category  NE 'FITNESS'
19349 +AND F_Category  NE 'OTHER'
19350 +AND F_Category  NE 'SALES'
19351 +AND F_Category  NE 'CONSULTANT'
19352 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19353 +        R_CategoryHR  = .;
19354 +        R_CategoryDESIGNER  = .;
19355 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19356 +        R_CategoryTEACHER  = .;
19357 +        R_CategoryADVOCATE  = .;
19358 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19359 +        R_CategoryHEALTHCARE  = .;
19360 +        R_CategoryFITNESS  = .;
19361 +        R_CategoryOTHER  = .;
19362 +        R_CategorySALES  = .;
19363 +        R_CategoryCONSULTANT  = .;
19364 +        R_CategoryDIGITAL_MEDIA  = .;
19365 + END;
19366 + ELSE DO;
19367 +       R_CategoryHR  =  -P_CategoryHR ;
19368 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19369 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19370 +         ;
19371 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19372 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19373 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19374 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19375 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19376 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19377 +       R_CategorySALES  =  -P_CategorySALES ;
19378 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19379 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19380 +       SELECT( F_Category  );
19381 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19382 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19383 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19384 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19385 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19386 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19387 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19388 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19389 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19390 +          +1;
19391 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19392 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19393 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19394 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19395 +          +1;
19396 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19397 +        R_CategoryDIGITAL_MEDIA  +1;
19398 +       END;
19399 + END;
19400 +
19401 +****************************************************************;
19402 +******          END OF DECISION TREE SCORING CODE         ******;
19403 +****************************************************************;
19404 +
19405 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19406  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE7_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19407  quit;
19408  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
19410  proc sort data=WORK.EM_USER_REPORT;
19411  by ID VIEW;
19412  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19413  *------------------------------------------------------------*;
19414  * Tree7: Computing metadata for TRAIN data;
19415  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
20045  data WORK.MODELTEMP_INFO;
20046  set EMWS3.Tree7_EMINFO;
20047  where DATA='Tree7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20048  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE7_EMINFO.
      WHERE (DATA='Tree7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20049  data EMWS3.Tree7_EMINFO;
20050  length TARGET KEY $32 DATA $43;
20051  input TARGET KEY DATA $;
20052  cards;
 
NOTE: The data set EMWS3.TREE7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20056  run;
20057  data EMWS3.Tree7_EMINFO;
20058  set EMWS3.Tree7_EMINFO WORK.MODELTEMP_INFO;
20059  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20060  proc sort data = EMWS3.Tree7_EMINFO NOTHREADS;
20061  by TARGET KEY;
20062  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE7_EMINFO.
NOTE: The data set EMWS3.TREE7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20063  proc sort data = EMWS3.TextCluster11_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20064  by TARGET KEY;
20065  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER11_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20066  proc sort data = EMWS3.Tree7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20067  by TARGET KEY;
20068  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20069  data EMWS3.Tree7_EMINFO;
20070  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20071  by TARGET KEY;
20072  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE7_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20073  proc datasets lib=work nolist;
20074  delete TEMP_INFO SORTEDEMINFO;
20075  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20076  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE7_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE7_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:11
*------------------------------------------------------------*
20100  data EMWS3.Tree7_EMOUTFIT;
20101  set EMWS3.Tree7_EMOUTFIT;
20102  length TargetLabel $200;
20103  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20104  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20105  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_EMOUTFIT.
NOTE: The data set EMWS3.TREE7_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20106  proc sort data=EMWS3.Tree7_EMREPORTFIT nothreads;
20107  by TARGET;
20108  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE7_EMREPORTFIT.
NOTE: The data set EMWS3.TREE7_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20109  %let _EMwarndup = 0;
20110  %let _EMtargetdup =;
20111  %let _EMASEtargetdup =;
20112  data _null_;
20113  set EMWS3.Tree7_EMOUTFIT;
20114  if .<_ASE_<0.000001 then do;
20115  call symput('_EMwarndup', '1');
20116  call symput('_EMtargetdup', target);
20117  call symput('_EMASEtargetdup', put(_ASE_, best.));
20118  end;
20119  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20120  %let EMEXCEPTIONSTRING=;
20121  *------------------------------------------------------------*;
20122  * REPORT: Tree7;
20123  *------------------------------------------------------------*;
20124  %let EM_ACTION = REPORT;
20125  %let syscc = 0;
20126  %macro main;
20127
20128    %if %upcase(&EM_ACTION) = CREATE %then %do;
20129      filename temp catalog 'sashelp.emmodl.tree_create.source';
20130      %include temp;
20131      filename temp;
20132
20133      %em_tree_create;
20134    %end;
20135
20136     %else
20137     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20138
20139         filename temp catalog 'sashelp.emmodl.tree_train.source';
20140         %include temp;
20141         filename temp;
20142         %em_tree_train;
20143     %end;
20144
20145    %else
20146    %if %upcase(&EM_ACTION) = SCORE %then %do;
20147      filename temp catalog 'sashelp.emmodl.tree_score.source';
20148      %include temp;
20149      filename temp;
20150
20151      %em_tree_score;
20152
20153    %end;
20154
20155    %else
20156    %if %upcase(&EM_ACTION) = REPORT %then %do;
20157
20158         filename temp catalog 'sashelp.emmodl.tree_report.source';
20159         %include temp;
20160         filename temp;
20161
20162         %em_tree_report;
20163     %end;
20164
20165    %else
20166    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20167
20168         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20169         %include temp;
20170         filename temp;
20171         %EM_TREE_OPENTREEVIEWER;
20172
20173     %end;
20174
20175    %else
20176    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20177
20178         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20179         %include temp;
20180         filename temp;
20181         %EM_TREE_CLOSETREEVIEWER;
20182
20183     %end;
20184
20185
20186     %doendm:
20187  %mend main;
20188
20189  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20191 +%macro em_tree_makePlotDs( multipleTar= );
20193 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20194 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20195 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20196 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20198 +  /* determine if validation statistics will be displayed */
20199 +  %let validflag=N;
20200 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20201 +    /* determine if validation data exists */
20202 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20203 +      %let validflag=Y;
20204 +    %end;
20205 +  %end;
20207 +   /* retrieve name of decmeta even in presence of multiple targets */
20208 +   %let decmeta = ;
20209 +   %if &EM_DEC_DECMETA eq %then %do;
20210 +     data _Target;
20211 +       set &em_data_variableset;
20212 +       where ROLE='TARGET' and USE in('D', 'Y');
20213 +       keep NAME;
20214 +     run;
20215 +     proc sort data=_Target;
20216 +       by NAME;
20217 +     run;
20218 +     proc sort data=EM_TARGETDECINFO;
20219 +       by TARGET;
20220 +     run;
20221 +     data _Target;
20222 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20223 +       by NAME;
20224 +       if _a then do;
20225 +         call symput('decmeta', trim(DECMETA));
20226 +       end;
20227 +     run;
20228 +     proc delete data=_Target;run;
20229 +   %end;
20230 +   %else %let decmeta = &EM_DEC_DECMETA;
20233 +  /* retrieve targetEvent from decmeta */
20234 +  %let targetEvent=;
20235 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20236 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20237 +      data _null_;
20238 +       set &DECMETA(where=(_TYPE_="TARGET"));
20239 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20240 +      run;
20241 +    %end;
20242 +  %end;
20244 +  /* retrieve predicted var for targetEvent from decmeta */
20245 +  %let predTarget=;
20246 +  %let predLvl=;
20247 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20248 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20249 +      data _null_;
20250 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20251 +       call symput('predTarget', strip(VARIABLE));
20252 +       call symput('predLvl', strip(LEVEL));
20253 +      run;
20254 +    %end;
20255 +  %end;
20256 +  %else %do;
20257 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20258 +      data _null_;
20259 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20260 +       call symput('predTarget', strip(VARIABLE));
20261 +      run;
20262 +    %end;
20263 +  %end;
20265 +  /* create BelowText value */
20266 +  data belowtext;
20267 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20268 +    keep node belowtext;
20269 +  run;
20271 +  /* replace belowtext with variable label if it exists */
20272 +  data belowtext2;
20273 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20274 +    keep node belowtextlbl;
20275 +  run;
20277 +  proc sort data=belowtext; by node; run;
20278 +  proc sort data=belowtext2; by node; run;
20280 +  data belowtext;
20281 +    merge belowtext belowtext2(in=_a);
20282 +    by node;
20283 +    if _a then belowtext=belowtextlbl;
20284 +    keep node belowtext;
20285 +  run;
20287 +  /* create AboveText value */
20288 +  data abovetext;
20289 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20290 +  run;
20291 +  proc sort data=abovetext; by node numeric_value; run;
20293 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20294 +  data abovetext;
20295 +    set abovetext(rename=(node=parent));
20296 +    by parent numeric_value;
20297 +    retain abovetext tempstring flag branch origval origchar ;
20298 +    length abovetext $256;
20299 +    length tempstring origchar $64;
20301 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20302 +      if first.parent then do;
20303 +        if missing(character_value) then do;
20304 +          numeric_value = round(numeric_value, &sp_precision);
20305 +          abovetext = "< "||strip(NUMERIC_VALUE);
20306 +          branch = 1;
20307 +          origval = numeric_value;
20308 +          output;
20309 +        end;
20310 +        else do;
20311 +          abovetext = "< "||strip(CHARACTER_VALUE);
20312 +          branch = 1;
20313 +          origchar = character_value;
20314 +          output;
20315 +        end;
20317 +        if first.parent AND last.parent then do;
20318 +          if missing(character_value) then do;
20319 +            numeric_value = round(numeric_value, &sp_precision);
20320 +            branch = branch + 1;
20321 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20322 +            output;
20323 +          end;
20324 +          else do;
20325 +            branch = branch + 1;
20326 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20327 +            output;
20328 +          end;
20329 +        end;
20330 +      end;
20331 +      else if last.parent then do;
20332 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20333 +          if missing(character_value) then do;
20334 +            numeric_value = round(numeric_value, &sp_precision);
20335 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20336 +          end;
20337 +          else do;
20338 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20339 +          end;
20340 +          branch = branch + 1;
20341 +          output;
20343 +          if missing(character_value) then do;
20344 +            numeric_value = round(numeric_value, &sp_precision);
20345 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20346 +          end;
20347 +          else do;
20348 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20349 +          end;
20350 +          branch = branch + 1;
20351 +          output;
20352 +        end;
20353 +        else do;
20354 +          if missing(character_value) then do;
20355 +            numeric_value = round(numeric_value, &sp_precision);
20356 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20357 +          end;
20358 +          else do;
20359 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20360 +          end;
20361 +          branch = branch + 1;
20362 +          output;
20363 +        end;
20364 +      end;
20365 +      else do;
20366 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20367 +          if missing(character_value) then do;
20368 +            numeric_value = round(numeric_value,&sp_precision);
20369 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20370 +            origval = numeric_value;
20371 +          end;
20372 +          else do;
20373 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20374 +            origchar = character_value;
20375 +          end;
20376 +          branch = branch + 1;
20377 +          output;
20379 +        end;
20380 +        else do;
20381 +          if missing(character_value) then do;
20382 +            numeric_value = round(numeric_value, &sp_precision);
20383 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20384 +            origval = numeric_value;
20385 +          end;
20386 +          else do;
20387 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20388 +            origval = character_value;
20389 +          end;
20390 +          branch = branch + 1;
20391 +          output;
20392 +        end;
20393 +      end;
20394 +    end;
20395 +    else do;
20396 +       if first.numeric_value then do;
20397 +         flag = 0;
20398 +         abovetext = strip(CHARACTER_VALUE);
20399 +         branch = numeric_value;
20400 +         if first.numeric_value AND last.numeric_value then do;
20401 +           output;
20402 +         end;
20403 +       end;
20404 +       else if last.numeric_value then do;
20405 +         if flag=0 then do;
20406 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20407 +           length = length(strip(tempstring));
20408 +           if length < 32 then do;
20409 +             abovetext = strip(tempstring);
20410 +           end;
20411 +           else do;
20412 +             abovetext = strip(abovetext)||", ...";
20413 +             flag = 1;
20414 +           end;
20415 +         end;
20416 +         branch = numeric_value;
20417 +         output;
20418 +       end;
20419 +       else do;
20420 +         if flag=0 then do;
20421 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20422 +           length = length(strip(tempstring));
20423 +           if length < 32 then do;
20424 +             abovetext = strip(tempstring);
20425 +           end;
20426 +           else do;
20427 +             abovetext = strip(abovetext)||", ...";
20428 +             flag=1;
20429 +           end;
20430 +         end;
20431 +         branch = numeric_value;
20432 +       end;
20433 +    end;
20434 +    keep parent branch abovetext;
20435 +  run;
20437 +  /* Missing value to abovetext */
20438 +  data tempmissing;
20439 +    set &EM_USER_OUTRULES;
20440 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20441 +    rename node=parent numeric_value=branch character_value=misschar;
20442 +  run;
20445 +  proc sort data=abovetext; by parent branch; run;
20446 +  proc sort data=tempmissing; by parent branch; run;
20447 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20449 +  data tempoutnodes;
20450 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20451 +    by parent branch;
20452 +    length traintotal validtotal 8;
20453 +    retain traintotal validtotal;
20455 +    if _a then do;
20456 +      if ^MISSING(abovetext) then do;
20457 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20458 +      end;
20459 +      else do;
20460 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20461 +      end;
20462 +    end;
20463 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20465 +    if node=1 then do;
20466 +      traintotal = N;
20467 +      validtotal=VN;
20468 +    end;
20470 +    drop role rank stat misschar belowtext;
20471 +  run;
20472 +  proc sort data=tempoutnodes; by node; run;
20473 +  proc sort data=belowtext; by node; run;
20475 +  data tempoutnodes;
20476 +    merge tempoutnodes belowtext;
20477 +    by node;
20479 +  run;
20481 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20482 +  %let adjusted = N;
20483 +  %let npriors = 0;
20484 +  data _null_ ;
20485 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20486 +    if eof then do ;
20487 +      call symput("npriors" , strip(put(_N_,best.))) ;
20488 +    end;
20489 +  run;
20490 +  %if &npriors gt 0 %then %let adjusted=Y;
20493 +  /* create a table with targetUsed and targetLevel columns for each node */
20494 +  data temptarmeta;
20495 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20496 +    %if &multipleTar eq N %then %do;
20497 +      AND USE in ('D', 'Y')
20498 +    %end;
20499 +    ));
20500 +    length TARGET $32;
20501 +    Target=name;
20502 +    keep target level;
20503 +  run;
20505 +  %if &multipleTar eq Y %then %do;
20506 +    data temptargetused;
20507 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20508 +      keep node target;
20509 +    run;
20510 +    proc sort data=temptargetused; by target; run;
20511 +    proc sort data=temptarmeta; by target; run;
20512 +    data temptargetused;
20513 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20514 +      by target;
20515 +      if _a and _b;
20516 +    run;
20517 +  %end;
20518 +  %else %do;
20519 +    data temptargetused;
20520 +      set &EM_USER_OUTSTATS;
20521 +      length target $32 tarlevel $10;
20522 +      target="%EM_TARGET";
20523 +      tarlevel="%EM_TARGET_LEVEL";
20524 +      keep node target tarlevel;
20525 +    run;
20526 +    proc sort data=temptargetused nodupkey; by node; run;
20527 +  %end;
20529 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20530 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20531 +  proc sort data=temptargetused; by node; run;
20534 +  /* create tables for all interval targets as well as all class targets */
20535 +  data tempinterval tempclass;
20536 +    merge tempoutstats temptargetused( rename=(target=targetused));
20537 +    by node;
20538 +    %if "&multipleTar" eq "Y" %then %do;
20539 +      if ((missing(Target)) OR (target=targetused ));
20540 +    %end;
20542 +    if tarlevel="INTERVAL" then output tempinterval;
20543 +    else output tempclass;
20544 +  run;
20546 +  /* initialize intTarget and classTarget flags */
20547 +  %let em_intNobs =0;
20548 +  %let em_classNobs = 0;
20549 +  %let em_intTarget= N;
20550 +  %let em_classTarget= N;
20552 +  proc sql;
20553 +    reset noprint;
20554 +    select count(*) into :em_intNobs from tempinterval;
20555 +  quit;
20556 +  proc sql;
20557 +    reset noprint;
20558 +    select count(*) into :em_classNobs from tempclass;
20559 +  quit;
20561 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20562 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20564 +  /* retrieve all information for interval targets */
20565 +  %if &em_intTarget eq Y %then %do;
20567 +    /* determine if leaf variable exists */
20568 +    %let dsid=%sysfunc(open(tempinterval,i));
20569 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20570 +    %let rc=%sysfunc(close(&dsid));
20572 +    proc transpose data=tempinterval
20573 +      %if &leafexists %then %do;
20574 +        (drop=leaf)
20575 +      %end;
20576 +      %if &validexist %then %do;
20577 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20578 +      %end;
20579 +      %else %do;
20580 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20581 +      %end;
20582 +      by node;
20583 +      id statname;
20584 +    run;
20585 +    data tempinterval;
20586 +      set tempinterval;
20587 +      if missing(N) then delete;
20588 +    run;
20589 +  %end;
20591 +  /* retrieve all information for class targets */
20592 +  %if &em_classTarget eq Y %then %do;
20593 +    proc sort data=tempclass; by node category; run;
20594 +    %if &validflag eq N %then %do;
20595 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20596 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20597 +    %end;
20598 +    %else %do;
20599 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20600 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20601 +    %end;
20602 +      set tempclass;
20604 +      %if &validflag eq N %then %do;
20605 +        %if "&adjusted" eq "N" %then %do;
20606 +          if statname="N" then output tempn;
20607 +        %end;
20608 +        %else %do;
20609 +          if statname="NPRIORS" then output tempn;
20610 +        %end;
20611 +        else if statname="PREDICTION" then output temppredict;
20612 +        else if statname="PROBABILITY" then output tempprob;
20613 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20614 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20615 +      %end;
20616 +      %else %do;
20617 +        %if "&adjusted" eq "N" %then %do;
20618 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20619 +        %end;
20620 +        %else %do;
20621 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20622 +        %end;
20623 +        else if statname="PREDICTION" then output temppredict;
20624 +        else if statname="PROBABILITY" then output tempprob;
20625 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20626 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20627 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20628 +      %end;
20629 +    run;
20632 +    /* determine if profit/loss exists in tempprofit */
20633 +    %let em_profitflag=0;
20634 +    %let em_lossflag=0;
20635 +    proc sql;
20636 +      reset noprint;
20637 +      select count(*) into :em_profitflag from tempprofit;
20638 +    quit;
20639 +    proc sql;
20640 +      reset noprint;
20641 +      select count(*) into :em_lossflag from temploss;
20642 +    quit;
20644 +    %if &validFlag eq Y %then %do;
20645 +      proc transpose data=tempn
20646 +        %if "&adjusted" eq "N" %then %do;
20647 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20648 +        %end;
20649 +        %else %do;
20650 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20651 +        %end;
20652 +        by node;
20653 +        id statname;
20654 +      run;
20655 +      %if &em_profitflag ne 0 %then %do;
20656 +        proc transpose data=tempprofit out=tempprofit;
20657 +          by node category;
20658 +          id statname ;
20659 +        run;
20660 +      %end;
20661 +      %if &em_lossflag ne 0 %then %do;
20662 +        proc transpose data=temploss out=temploss;
20663 +          by node category;
20664 +          id statname ;
20665 +        run;
20666 +      %end;
20667 +      data tempprob;
20668 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20669 +        by node
20670 +        %if &multipleTar eq Y %then %do;
20671 +          target
20672 +        %end;
20673 +        category;
20674 +      run;
20675 +    %end;
20677 +    /* store percentcorrect value */
20678 +    data temppredict;
20679 +      merge tempprob temppredict(in=_a);
20680 +      by node category;
20681 +      if _a then do;
20682 +        percentCorrect = statvalue;
20683 +        %if &validFlag eq Y %then %do;
20684 +          vpercentCorrect= vstatvalue;
20685 +        %end;
20686 +      end;
20687 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20688 +      %if &validFlag eq Y %then %do;
20689 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20690 +      %end;
20691 +      ;
20692 +      if missing(percentCorrect) then delete;
20693 +      drop target;
20694 +    run;
20696 +    /* build profittext */
20697 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20698 +      data tempprofittext(keep= node profittext profitloss);
20699 +        length profittext $800 profitloss 8.;
20700 +        retain profittext profitloss;
20702 +        merge tempprob
20703 +        %if &em_profitflag ne 0 %then %do;
20704 +          tempprofit
20705 +        %end;
20706 +        %else %if &em_lossflag ne 0 %then %do;
20707 +          temploss
20708 +        %end;
20709 +        ;
20710 +        by node category;
20712 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20713 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20714 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20715 +          %let profittype = ALL;
20716 +        %end;
20718 +        /* create the profitloss variable for nodecolor if selected */
20719 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20721 +        %if "&profittype" eq "ALL" %then %do;
20722 +          if strip(CATEGORY)="&targetEvent" then do;
20723 +            profitloss=statvalue;
20724 +          end;
20725 +          if first.node then do;
20726 +            %if &validFlag eq N %then %do;
20727 +             %if &em_profitflag ne 0 %then %do;
20728 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20729 +             %end;
20730 +             %if &em_lossflag ne 0 %then %do;
20731 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20732 +             %end;
20733 +            %end;
20734 +            %else %do;
20735 +             %if &em_profitflag ne 0 %then %do;
20736 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20736!+;
20737 +             %end;
20738 +             %if &em_lossflag ne 0 %then %do;
20739 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20740 +             %end;
20741 +            %end;
20742 +          end;
20743 +          else if last.node then do;
20744 +            %if &validFlag eq N %then %do;
20745 +             %if &em_profitflag ne 0 %then %do;
20746 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20747 +             %end;
20748 +             %if &em_lossflag ne 0 %then %do;
20749 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20750 +             %end;
20751 +             /*if CATEGORY="&targetEvent" then do;
20752 +               profitloss=statvalue;
20753 +             end;*/
20754 +            %end;
20755 +            %else %do;
20756 +             %if &em_profitflag ne 0 %then %do;
20757 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20757!+14.&EM_PROPERTY_SPLITPRECISION);
20758 +                if CATEGORY="&targetEvent" then do;
20759 +                 profitloss=ALTERNATIVE_PROFIT;
20760 +                end;
20761 +             %end;
20762 +             %if &em_lossflag ne 0 %then %do;
20763 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20763!+14.&EM_PROPERTY_SPLITPRECISION);
20764 +                if CATEGORY="&targetEvent" then do;
20765 +                  profitloss=ALTERNATIVE_LOSS;
20766 +                end;
20767 +             %end;
20768 +            %end;
20769 +            output;
20770 +          end;
20771 +          else do;
20772 +            %if &validFlag eq N %then %do;
20773 +             %if &em_profitflag ne 0 %then %do;
20774 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20775 +             %end;
20776 +             %if &em_lossflag ne 0 %then %do;
20777 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20778 +             %end;
20779 +            %end;
20780 +            %else %do;
20781 +             %if &em_profitflag ne 0 %then %do;
20782 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20782!+14.&EM_PROPERTY_SPLITPRECISION);
20783 +             %end;
20784 +             %if &em_lossflag ne 0 %then %do;
20785 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20785!+14.&EM_PROPERTY_SPLITPRECISION);
20786 +             %end;
20787 +            %end;
20788 +          end;
20789 +        %end;
20790 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20791 +          if strip(CATEGORY) = "&targetevent" then do;
20792 +            %if &validFlag eq N %then %do;
20793 +             %if &em_profitflag ne 0 %then %do;
20794 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20795 +             %end;
20796 +             %if &em_lossflag ne 0 %then %do;
20797 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20798 +             %end;
20799 +             profitloss=statvalue;
20800 +            %end;
20801 +            %else %do;
20802 +             %if &em_profitflag ne 0 %then %do;
20803 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20803!+;
20804 +                profitloss=ALTERNATIVE_PROFIT;
20805 +             %end;
20806 +             %if &em_lossflag ne 0 %then %do;
20807 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20808 +                profitloss=ALTERNATIVE_LOSS;
20809 +             %end;
20810 +            %end;
20811 +            output;
20812 +          end;
20813 +        %end;
20814 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
20815 +          if strip(CATEGORY) = "&targetevent" then do;
20816 +            %if &validFlag eq N %then %do;
20817 +             profitloss=statvalue;
20818 +            %end;
20819 +            %else %do;
20820 +             %if &em_profitflag ne 0 %then %do;
20821 +                profitloss=ALTERNATIVE_PROFIT;
20822 +             %end;
20823 +             %if &em_lossflag ne 0 %then %do;
20824 +                profitloss=ALTERNATIVE_LOSS;
20825 +             %end;
20826 +            %end;
20827 +            output;
20828 +          end;
20829 +        %end;
20830 +      run;
20831 +    %end;
20833 +    data tempprob(keep= node probtext);
20834 +      length probtext $800;
20835 +      retain probtext;
20836 +      set tempprob ;
20837 +      by node;
20839 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20840 +      %let probtype = &EM_PROPERTY_TARGET;
20841 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
20842 +        %let probtype = ALL;
20843 +      %end;
20845 +      %if "&probtype" eq "ALL" %then %do;
20846 +        if first.node then do;
20847 +          %if &validFlag eq N %then %do;
20848 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20849 +          %end;
20850 +          %else %do;
20851 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20852 +          %end;
20853 +        end;
20854 +        else if last.node then do;
20855 +          %if &validFlag eq N %then %do;
20856 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20857 +          %end;
20858 +          %else %do;
20859 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20860 +          %end;
20861 +          output;
20862 +        end;
20863 +        else do;
20864 +          %if &validFlag eq N %then %do;
20865 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20866 +          %end;
20867 +          %else %do;
20868 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20869 +          %end;
20870 +        end;
20871 +      %end;
20872 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20873 +        if strip(CATEGORY) = "&targetevent" then do;
20874 +          %if &validFlag eq N %then %do;
20875 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20876 +          %end;
20877 +          %else %do;
20878 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20879 +          %end;
20880 +          output;
20881 +        end;
20882 +      %end;
20883 +      %else %if "&probtype" eq "NONE" %then %do;
20884 +        if last.node then do;
20885 +          output;
20886 +        end;
20887 +      %end;
20888 +    run;
20889 +  %end;
20891 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
20893 +  %let oldexists=0;
20894 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
20895 +     data old_tree_plot;
20896 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
20897 +        rename nodecolor=oldnodecolor;
20898 +     run;
20900 +     proc sort data=old_tree_plot;
20901 +        by node;
20902 +     run;
20904 +     %let oldexists=1;
20905 +  %end;
20907 +  data &EM_USER_TREE_PLOT;
20908 +    length textall $800;
20909 +    merge tempoutnodes temptargetused
20911 +    %if &em_intTarget eq Y %then %do;
20912 +      tempinterval
20913 +    %end;
20915 +    %if &em_classTarget eq Y %then %do;
20917 +      %if &validFlag eq N %then %do;
20918 +        tempn(rename=(statvalue=N))
20919 +      %end;
20920 +      %else %do;
20921 +        tempn
20922 +      %end;
20924 +      temppredict tempprob
20926 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20927 +        tempprofittext
20928 +      %end;
20929 +    %end;
20930 +    ;
20931 +    by node;
20933 +    /* build nodetext based on user selection */
20934 +    textall="";
20936 +    %if &em_intTarget eq Y %then %do;
20937 +    if tarlevel="INTERVAL" then do;
20938 +      /* Nodeid */
20939 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
20940 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
20941 +      %end;
20943 +      /* Target identifier if multiple targets are used */
20944 +      %if "&multipleTar" eq "Y" %then %do;
20945 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
20946 +      %end;
20948 +      %if &validFlag eq Y %then %do;
20949 +         /* Column labels displayed in validflag eq Y only */
20950 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
20951 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
20951!+noquote ))";
20952 +         %end;
20954 +         /* Average values */
20955 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20956 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20957 +         %end;
20959 +         /* RASE */
20960 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20961 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
20962 +         %end;
20964 +         /* Count */
20965 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20966 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
20967 +         %end;
20968 +      %end;
20969 +      %else %do;
20970 +         /* Average values */
20971 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20972 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20973 +         %end;
20975 +         /* RASE */
20976 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20977 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
20978 +         %end;
20980 +         /* Count */
20981 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20982 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
20983 +         %end;
20984 +      %end;
20986 +      /* nodecolor */
20987 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
20988 +        nodecolor=PREDICTION;
20989 +      %end;
20990 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
20991 +        nodecolor=RASE;
20992 +      %end;
20993 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
20994 +        nodecolor=1;
20995 +      %end;
20997 +    end;
20998 +    %end;
20999 +    %if &em_classTarget eq Y %then %do;
21000 +    if tarlevel^="INTERVAL" then  do;
21002 +      /* Nodeid */
21003 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21004 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21005 +      %end;
21006 +      /* Target identifier if multiple targets are used */
21007 +      %if "&multipleTar" eq "Y" %then %do;
21008 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21009 +      %end;
21011 +      /* Predicted values */
21012 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21013 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21014 +      %end;
21016 +      /* Column labels displayed in validflag eq Y only */
21017 +      %if "&ValidFlag" eq "Y" %then %do;
21018 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21019 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21019!+noquote ))";
21020 +        %end;
21021 +      %end;
21023 +      /* Target Values */
21024 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21025 +        textall=strip(textall)||"0A"x||strip(probtext);
21026 +      %end;
21028 +      /* include profit or loss for all target levels */
21029 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21030 +        textall=strip(textall)||"0A"x||strip(profittext);
21031 +      %end;
21033 +      %if &validFlag eq N %then %do;
21034 +        /* Percent Correct */
21035 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21036 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21037 +        %end;
21039 +         /* Count */
21040 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21041 +          %if "&adjusted" eq "N" %then %do;
21042 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21043 +          %end;
21044 +          %else %do;
21045 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21046 +          %end;
21047 +         %end;
21048 +      %end;
21049 +      %else %do;
21050 +        /* Percent Correct */
21051 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21052 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21053 +        %end;
21055 +         /* Count */
21056 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21057 +          %if "&adjusted" eq "N" %then %do;
21058 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21059 +          %end;
21060 +          %else %do;
21061 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21062 +          %end;
21063 +         %end;
21064 +      %end;
21066 +      /* nodecolor */
21067 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21068 +       %if &multipleTar ne Y %then %do;
21069 +        nodecolor=&predTarget;
21070 +       %end;
21071 +       %else %do;
21072 +         nodecolor=percentcorrect;
21073 +       %end;
21074 +      %end;
21075 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21076 +        nodecolor=percentcorrect;
21077 +      %end;
21078 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21079 +        nodecolor=1;
21080 +      %end;
21081 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21082 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21083 +          nodecolor=percentcorrect;
21084 +        %end;
21085 +        %else %do;
21086 +          nodecolor=profitloss;
21087 +        %end;
21088 +      %end;
21090 +    end;
21091 +    %end;
21092 +    %if &em_intTarget eq Y %then %do;
21093 +     drop  PREDICTION  TARGET TARLEVEL
21094 +     %if &ValidFlag eq Y %then %do;
21095 +         VPREDICTION
21096 +     %end;
21097 +     ;
21098 +    %end;
21099 +    %if &em_classTarget eq Y %then %do;
21100 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21101 +     %if &ValidFlag eq Y %then %do;
21102 +         VSTATVALUE
21103 +     %end;
21104 +     ;
21105 +    %end;
21107 +  run;
21109 +  /* add leaf index information to plotds - based on primary target only*/
21110 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21111 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21112 +      set &EM_USER_OUTSTATS;
21113 +      if ((statname="PROBABILITY"
21114 +      %if &validexist %then %do;
21115 +       or statname="VALID: PROBABILITY"
21116 +      %end;
21117 +      ) AND (CATEGORY="&TARGETEVENT")
21118 +      %if "&multipleTar" eq "Y" %then %do;
21119 +        AND (Target="%EM_TARGET")
21120 +      %end;
21121 +      );
21122 +    run;
21124 +    %if &validexist %then %do;
21125 +      proc sort data=tempprob; by node; run;
21126 +      %let vpredTarget = V%substr(&predTarget, 2);
21127 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21128 +         by node;
21129 +         id statname;
21130 +      run;
21131 +    %end;
21132 +  %end;
21133 +  %else %do;
21134 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21135 +      set &EM_USER_OUTSTATS;
21136 +      if ((statname="PREDICTION"
21137 +      %if &validexist %then %do;
21138 +       or statname="VALID: PREDICTION"
21139 +      %end;
21140 +      )
21141 +      %if "&multipleTar" eq "Y" %then %do;
21142 +        AND (Target="%EM_TARGET")
21143 +      %end;
21144 +      );
21145 +    run;
21146 +    %if &validexist %then %do;
21147 +      proc sort data=tempprob; by node; run;
21148 +      %let vpredTarget = V%substr(&predTarget, 2);
21149 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21150 +         by node;
21151 +         id statname;
21152 +      run;
21153 +    %end;
21154 +  %end;
21156 +  proc sort data=tempprob; by node; run;
21157 +  data tempoutnodes;
21158 +    merge tempoutnodes tempprob;
21159 +    by node;
21160 +  run;
21162 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21163 +  data tempnodes;
21164 +    retain traintotal validtotal;
21165 +    set tempnodes(where=(leaf ne . ));
21166 +    tprob=round(&predTarget, .01);
21167 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21168 +      percevent_train=round(tprob*100, .01);
21169 +    %end;
21170 +    %else %do;
21171 +      percevent_train=tprob;
21172 +    %end;
21174 +    perc_train=round((n/traintotal)*100, 0.01);
21175 +    /* leafwidth already has a *10 multiplier */
21176 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21178 +    %if &validexist %then %do;
21179 +      %let vpredTarget = V%substr(&predTarget,2);
21180 +      vprob=round(&vpredTarget, .01);
21181 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21182 +        percevent_valid=round(vprob*100, .01);
21183 +      %end;
21184 +      %else %do;
21185 +        percevent_valid=vprob;
21186 +      %end;
21187 +      perc_valid=round((vn/validtotal)*100, .01);
21188 +    %end;
21190 +    index=_N_;
21191 +    keep node index tprob perc_train percevent_train
21192 +    %if &validexist %then %do;
21193 +        vprob percevent_valid perc_valid
21194 +    %end;
21195 +    ;
21196 +  run;
21197 +  proc sort data=tempnodes; by node; run;
21198 +  data &EM_USER_TREE_PLOT;
21199 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21200 +    by node;
21201 +    if missing(node) then delete;
21202 +    %if &oldexists %then %do;
21203 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21204 +      drop oldnodecolor;
21205 +    %end;
21206 +    abovetext = compbl(abovetext);
21208 +    /* add variable labels */
21209 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21210 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21211 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21212 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21213 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21214 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21216 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21217 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21218 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21219 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21220 +          %end;
21221 +          %else %do;
21222 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21223 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21224 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21225 +          %end;
21226 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21228 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21229 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21230 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21231 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21232 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21233 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21234 +          %end;
21235 +          %else %do;
21236 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21237 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21238 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21239 +          %end;
21240 +    ;
21241 +  run;
21243 +  /* delete temporary tables */
21244 +  proc datasets lib=work nolist;
21245 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21246 +  run;
21248 +%mend em_tree_makePlotDs;
21252 +%macro em_tree_report;
21254 +   /* report properties */
21255 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21256 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21257 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21258 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21259 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21260 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21261 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21262 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21263 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21264 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21265 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21266 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21267 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21269 +   %let validexist=0;
21270 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21271 +     %let validexist=1;
21272 +   %end;
21274 +   /* determine if multiple targets will be processed */
21275 +   %let em_tree_multipleTargets=N;
21276 +   %let em_tree_numTarget=1;
21277 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21278 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21279 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21280 +         %let em_tree_multipleTargets=N;
21281 +      %end;
21282 +      %else %do;
21283 +        data _null_;
21284 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21285 +          if eof then
21286 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21287 +        run;
21289 +        %if &em_tree_numTarget gt 1 %then %do;
21290 +           %let em_tree_multipleTargets=Y;
21291 +        %end;
21292 +     %end;
21293 +   %end;
21295 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21297 +   /* variable importance */
21298 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21299 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21301 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21302 +     /* and the columns may not be generated                                                                                 */
21303 +     %let em_tree_cvexists=;
21304 +     %let em_tree_surrexists=.;
21305 +     data _null_;
21306 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21307 +       if eof then do ;
21308 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21309 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21310 +       end;
21311 +     run;
21313 +     data &EM_USER_OUTIMPORT;
21314 +         set &EM_USER_OUTIMPORT;
21315 +         /* format columns based on Precison value specified */
21316 +         format importance 15.&EM_PROPERTY_PRECISION
21317 +              %if &validexist %then %do;
21318 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21319 +              %end;
21320 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21321 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21322 +              %end;
21323 +         ;
21324 +     run;
21326 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21327 +     proc print data=&EM_USER_OUTIMPORT
21328 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21329 +          (where=((nrules>0) OR (nsurrogates>0)))
21330 +        %end;
21331 +        %else %do;
21332 +           (where=(nrules>0))
21333 +        %end;
21334 +        label noobs
21335 +        ;
21336 +     run;
21337 +     title10;
21339 +   %end;
21341 +   /* Sequence */
21342 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21343 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21344 +   data _null_ ;
21345 +      set &EM_USER_outseq (obs=2) end=eof ;
21346 +      if eof then do ;
21347 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21348 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21349 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21350 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21351 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21352 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21353 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21354 +      end;
21355 +    run;
21357 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21358 +      data &EM_USER_OUTSEQ;
21359 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21360 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21361 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21362 +           _XMISC_=_VMISC_
21363 +        %end;
21364 +        %if "&em_tree_aprof" ne "."  %then %do;
21365 +           _XAPROF_=_VAPROF_
21366 +           _XPROF_ = _VPROF_
21367 +        %end;
21368 +        %if "&em_tree_aloss" ne "."  %then %do;
21369 +           _XALOSS_=_VALOSS_
21370 +        %end;
21371 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21372 +           _XPASE_ = _VPASE_
21373 +           _XPMISC_ = _VPMISC_
21374 +        %end;
21376 +        ));
21377 +     %end;
21378 +     %else %do;
21379 +        set &EM_USER_OUTSEQ;
21380 +     %end;
21382 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21383 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21384 +            _MISC_   15.&EM_PROPERTY_PRECISION
21385 +         %end;
21386 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21387 +            _PASE_  15.&EM_PROPERTY_PRECISION
21388 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21389 +         %end;
21390 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21391 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21392 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21393 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21394 +            %end;
21395 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21396 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21397 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21398 +            %end;
21399 +         %end;
21400 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21401 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21402 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21403 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21404 +            %end;
21405 +         %end;
21406 +         %if "&em_tree_seq" ne "." %then %do;
21407 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21408 +         %end;
21409 +         %if "&em_tree_vseq" ne "." %then %do;
21410 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21411 +         %end;
21412 +         %if "&em_tree_aprof" ne "." %then %do;
21413 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21414 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21415 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21416 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21417 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21418 +           %end;
21419 +         %end;
21420 +         %else %if "&em_tree_aloss" ne "." %then %do;
21421 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21422 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21423 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21424 +           %end;
21425 +         %end;
21426 +      ;
21427 +    run;
21428 +   %end;
21430 +   /* Observation Based Importance */
21431 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21433 +      /* need to check for 0 obs */
21434 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21435 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21436 +      %let rc=%sysfunc(close(&dsid));
21438 +      %if &onobs %then %do;
21439 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21440 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21442 +         data &EM_USER_OUTOBSIMP;
21443 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21444 +           if _a;
21445 +           by _INPUT1_;
21446 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21447 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21448 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21449 +                   %end;
21450 +                   ;
21451 +         run;
21452 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21453 +      %end;
21454 +   %end;
21456 +  %end;
21458 +  /* create dataset to support tree diagram and icicle plot */
21459 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21460 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21462 +  /* display tree diagram */
21463 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21464 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21466 +  /* display icicle diagram */
21467 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21468 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21470 +  /* Leaf Statistics Plot */
21471 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21473 +  /* print leaf information to output window */
21474 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21476 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21477 +       by descending N;
21478 +     run;
21480 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21481 +     %local vn;
21482 +     data _null_;
21483 +       set t (obs=2) end=eof;
21484 +       if eof then do;
21485 +         call symput("vn", strip(put(vn, best.)));
21486 +       end;
21487 +     run;
21489 +     data t;
21490 +       set t;
21491 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21492 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21493 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21494 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21495 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21496 +       %end;
21497 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21498 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21499 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21500 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21501 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21502 +          %end;
21503 +       %end;
21504 +       ;
21505 +     run;
21507 +     /* determine if rase is found in t */
21508 +    %let dsid=%sysfunc(open(t,i));
21509 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21510 +    %let rc=%sysfunc(close(&dsid));
21512 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21513 +     proc print data=t noobs label;
21514 +       where tprob ne .;
21515 +       var node depth N tprob
21516 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21517 +         %if "&vn" ne "." %then %do;
21518 +           VN
21519 +         %end;
21520 +         vprob
21521 +       %end;
21522 +       %if &raseexists %then %do;
21523 +            RASE
21524 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21525 +              VRASE
21526 +            %end;
21527 +       %end;
21528 +       ;
21529 +     run;
21530 +     title10;
21531 +  %end;
21533 +  /* create plots that are done during training of node */
21534 +  /* display iterative plot, including reference line */
21535 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21536 +   /* %if &nleaves eq  %then %do; */
21537 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21538 +      data _null_;
21539 +        set &EM_USER_OUTTOPOLOGY end=eof;
21540 +        if eof then do;
21541 +          call symput('nleaves', LEAF);
21542 +        end;
21543 +      run;
21544 +   /* %end; */
21546 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21547 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21548 +  %end;
21550 +  /* display leaf statistics */
21551 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21553 +  /* stats by node if multiple targets = Y */
21554 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21555 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21556 +    data &EM_USER_OUTSTATS;
21557 +      set &EM_USER_OUTSTATS;
21559 +     * if STATNAME="TARGET" then delete;
21560 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21561 +      drop leaf;
21562 +    run;
21563 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21565 +  %end;
21566 +  %else %do;
21567 +    /* add outstats and outdescribe to spk but not results */
21568 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21569 +  %end;
21571 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE7_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 61 observations read from the data set EMWS3.TREE7_OUTIMPORT.
NOTE: The data set EMWS3.TREE7_OUTIMPORT has 61 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE7_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE7_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS3.TREE7_OUTSEQ.
NOTE: The data set EMWS3.TREE7_OUTSEQ has 11 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE7_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE7_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE7_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 227 observations read from the data set EMWS3.TREE7_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE7_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE7_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE7_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE7_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 405 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 390 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE7_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 405 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 30 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 180 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 180 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 15 observations read from the data set WORK.TEMPN.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE7_TREE_PLOT has 15 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE7_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE7_TREE_PLOT.
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE7_TREE_PLOT has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE7_TREE_PLOT.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 15 observations read from the data set EMWS3.TREE7_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
21572
21573  *------------------------------------------------------------*;
21574  * End REPORT: Tree7;
21575  *------------------------------------------------------------*;
 
21576  /* Reset EM Options */
21577  options formchar="|----|+|---+=|-/\<>*";
21578  options nocenter ls=256 ps=10000;
21579  goptions reset=all device=GIF NODISPLAY;
 
21580  proc sort data=WORK.EM_USER_REPORT;
21581  by ID VIEW;
21582  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21583  proc sort data=EMWS3.TextCluster11_CMeta_TRAIN out=WORK.SUBSETINMETA;
21584  by NAME;
21585  run;
 
NOTE: There were 74 observations read from the data set EMWS3.TEXTCLUSTER11_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 74 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21586  proc sort data=EMWS3.Tree7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21587  by NAME;
21588  run;
 
NOTE: There were 74 observations read from the data set EMWS3.TREE7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 74 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21589  data WORK.ASSESS_META;
21590  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21591  by NAME;
21592  run;
 
NOTE: There were 74 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 74 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 74 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21593  data EM_temp_assessMeta;
21594  set EMWS3.Tree7_CMeta_TRAIN;
21595  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21596  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21597  data EM_temp_assessdata;
21598  set EMWS3.Tree7_TRAIN(keep=
21599  F_Category
21600  I_Category
21601  P_CategoryADVOCATE
21602  P_CategoryBUSINESS_DEVELOPMENT
21603  P_CategoryCONSULTANT
21604  P_CategoryDESIGNER
21605  P_CategoryDIGITAL_MEDIA
21606  P_CategoryFITNESS
21607  P_CategoryHEALTHCARE
21608  P_CategoryHR
21609  P_CategoryINFORMATION_TECHNOLOGY
21610  P_CategoryOTHER
21611  P_CategorySALES
21612  P_CategoryTEACHER
21613  Q_CategoryADVOCATE
21614  Q_CategoryBUSINESS_DEVELOPMENT
21615  Q_CategoryCONSULTANT
21616  Q_CategoryDESIGNER
21617  Q_CategoryDIGITAL_MEDIA
21618  Q_CategoryFITNESS
21619  Q_CategoryHEALTHCARE
21620  Q_CategoryHR
21621  Q_CategoryINFORMATION_TECHNOLOGY
21622  Q_CategoryOTHER
21623  Q_CategorySALES
21624  Q_CategoryTEACHER
21625  R_CategoryADVOCATE
21626  R_CategoryBUSINESS_DEVELOPMENT
21627  R_CategoryCONSULTANT
21628  R_CategoryDESIGNER
21629  R_CategoryDIGITAL_MEDIA
21630  R_CategoryFITNESS
21631  R_CategoryHEALTHCARE
21632  R_CategoryHR
21633  R_CategoryINFORMATION_TECHNOLOGY
21634  R_CategoryOTHER
21635  R_CategorySALES
21636  R_CategoryTEACHER
21637  U_Category
21638  V_CategoryADVOCATE
21639  V_CategoryBUSINESS_DEVELOPMENT
21640  V_CategoryCONSULTANT
21641  V_CategoryDESIGNER
21642  V_CategoryDIGITAL_MEDIA
21643  V_CategoryFITNESS
21644  V_CategoryHEALTHCARE
21645  V_CategoryHR
21646  V_CategoryINFORMATION_TECHNOLOGY
21647  V_CategoryOTHER
21648  V_CategorySALES
21649  V_CategoryTEACHER
21650  _WARN_
21651  Category
21652  );
21653  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER11_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
25935   data EM_temp_assessMeta;
25936   set EMWS3.Tree7_CMeta_TRAIN;
25937   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
25938   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25939   data EM_temp_assessdata;
25940   set EMWS3.Tree7_VALIDATE(keep=
25941   F_Category
25942   I_Category
25943   P_CategoryADVOCATE
25944   P_CategoryBUSINESS_DEVELOPMENT
25945   P_CategoryCONSULTANT
25946   P_CategoryDESIGNER
25947   P_CategoryDIGITAL_MEDIA
25948   P_CategoryFITNESS
25949   P_CategoryHEALTHCARE
25950   P_CategoryHR
25951   P_CategoryINFORMATION_TECHNOLOGY
25952   P_CategoryOTHER
25953   P_CategorySALES
25954   P_CategoryTEACHER
25955   Q_CategoryADVOCATE
25956   Q_CategoryBUSINESS_DEVELOPMENT
25957   Q_CategoryCONSULTANT
25958   Q_CategoryDESIGNER
25959   Q_CategoryDIGITAL_MEDIA
25960   Q_CategoryFITNESS
25961   Q_CategoryHEALTHCARE
25962   Q_CategoryHR
25963   Q_CategoryINFORMATION_TECHNOLOGY
25964   Q_CategoryOTHER
25965   Q_CategorySALES
25966   Q_CategoryTEACHER
25967   R_CategoryADVOCATE
25968   R_CategoryBUSINESS_DEVELOPMENT
25969   R_CategoryCONSULTANT
25970   R_CategoryDESIGNER
25971   R_CategoryDIGITAL_MEDIA
25972   R_CategoryFITNESS
25973   R_CategoryHEALTHCARE
25974   R_CategoryHR
25975   R_CategoryINFORMATION_TECHNOLOGY
25976   R_CategoryOTHER
25977   R_CategorySALES
25978   R_CategoryTEACHER
25979   U_Category
25980   V_CategoryADVOCATE
25981   V_CategoryBUSINESS_DEVELOPMENT
25982   V_CategoryCONSULTANT
25983   V_CategoryDESIGNER
25984   V_CategoryDIGITAL_MEDIA
25985   V_CategoryFITNESS
25986   V_CategoryHEALTHCARE
25987   V_CategoryHR
25988   V_CategoryINFORMATION_TECHNOLOGY
25989   V_CategoryOTHER
25990   V_CategorySALES
25991   V_CategoryTEACHER
25992   _WARN_
25993   Category
25994   );
25995   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE7_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER11_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE7_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30286   %let _cn = %sysfunc(getoption(CENTER));
30287   options nocenter;
30288   proc print data=EMWS3.Tree7_EMREPORTFIT noobs label;
30289   var STAT LABEL TRAIN
30290   VALIDATE
30291   TEST
30292   ;
30293   by TARGET TARGETLABEL;
30294   title9 ' ';
30295   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30296   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30297   title10;
30298   options &_cn;
 
30299   proc sort data=EMWS3.Tree7_EMCLASSIFICATION nothreads;
30300   by DATAROLE TARGET TARGETLABEL;
30301   run;
 
NOTE: There were 99 observations read from the data set EMWS3.TREE7_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE7_EMCLASSIFICATION has 99 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30302   %let _cn = %sysfunc(getoption(CENTER));
30303   options nocenter;
30304   proc print data=EMWS3.Tree7_EMCLASSIFICATION noobs label;
30305   var from into pct_row pct_col count percent
30306   ;
30307   by DATAROLE TARGET TARGETLABEL;
30308   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30309   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30310   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30311   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30312   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30313   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30314   where _TYPE_='PREDICTION';
30315   title9 ' ';
30316   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30317   run;
 
NOTE: There were 99 observations read from the data set EMWS3.TREE7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30318   title9;
30319   title10;
30320   options &_cn;
 
30321   %let _cn = %sysfunc(getoption(CENTER));
30322   options nocenter;
30323   data EMWS3.Tree7_EMEVENTREPORT;
30324   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30325   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30325 ! FALSEEVENT
30326   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30327      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30328   FALSEEVENT=0;
30329   FALSENEVENT=0;
30330   TRUEEVENT=0;
30331   TRUENEVENT=0;
30332   set EMWS3.Tree7_EMEVENTREPORT;
30333   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE7_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE7_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30334   proc print data=EMWS3.Tree7_EMEVENTREPORT noobs label;
30335   title9 ' ';
30336   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30337   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30338   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE7_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30339   title10;
30340   options &_cn;
 
30341   proc datasets library=EMWS3 nolist;
30342   modify Tree7_EMRANK;
30343   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30344   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30345   run;
 
NOTE: MODIFY was successful for EMWS3.TREE7_EMRANK.DATA.
30346   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
30347   %let _cn = %sysfunc(getoption(CENTER));
30348   options nocenter;
30349   proc print data=EMWS3.Tree7_EMRANK label noobs;
30350   var
30351   decile gain lift liftc resp respc N _meanP_;
30352   by
30353   notsorted DATAROLE
30354   notsorted TARGET
30355   notsorted TARGETLABEL
30356   ;
30357   title9 ' ';
30358   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30359   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30360   title10;
30361   options &_cn;
 
30362   proc datasets library=EMWS3 nolist;
30363   modify Tree7_EMSCOREDIST;
30364   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30365   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30366   run;
 
NOTE: MODIFY was successful for EMWS3.TREE7_EMSCOREDIST.DATA.
30367   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
 
 
