*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:21
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:13
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree8_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree8META;
15227  run;
 
NOTE: There were 114 observations read from the data set EMWS3.TREE8_VARIABLESET.
NOTE: The data set WORK.TREE8META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.Tree8META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE8META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster12_TRAIN EMWS3.TextCluster12_TRAIN
EMWS3.TextCluster12_TRAIN EMWS3.TextCluster12_TRAIN EMWS3 TextCluster12_TRAIN
EMWS3.TextCluster12_TRAIN EMWS3.TextCluster12_TRAIN
EMWS3.TextCluster12_TRAIN EMWS3.TextCluster12_TRAIN EMWS3 TextCluster12_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE8_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE8_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree8_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE8_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree8_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
16005  *------------------------------------------------------------*;
16006  * Tree8: Generation of macros and macro variables;
16007  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
16008  *------------------------------------------------------------*;
 
16009  %let EMEXCEPTIONSTRING=;
16010  *------------------------------------------------------------*;
16011  * TRAIN: Tree8;
16012  *------------------------------------------------------------*;
16013  %let EM_ACTION = TRAIN;
16014  %let syscc = 0;
16015  %macro main;
16016
16017    %if %upcase(&EM_ACTION) = CREATE %then %do;
16018      filename temp catalog 'sashelp.emmodl.tree_create.source';
16019      %include temp;
16020      filename temp;
16021
16022      %em_tree_create;
16023    %end;
16024
16025     %else
16026     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16027
16028         filename temp catalog 'sashelp.emmodl.tree_train.source';
16029         %include temp;
16030         filename temp;
16031         %em_tree_train;
16032     %end;
16033
16034    %else
16035    %if %upcase(&EM_ACTION) = SCORE %then %do;
16036      filename temp catalog 'sashelp.emmodl.tree_score.source';
16037      %include temp;
16038      filename temp;
16039
16040      %em_tree_score;
16041
16042    %end;
16043
16044    %else
16045    %if %upcase(&EM_ACTION) = REPORT %then %do;
16046
16047         filename temp catalog 'sashelp.emmodl.tree_report.source';
16048         %include temp;
16049         filename temp;
16050
16051         %em_tree_report;
16052     %end;
16053
16054    %else
16055    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16056
16057         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16058         %include temp;
16059         filename temp;
16060         %EM_TREE_OPENTREEVIEWER;
16061
16062     %end;
16063
16064    %else
16065    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16066
16067         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16068         %include temp;
16069         filename temp;
16070         %EM_TREE_CLOSETREEVIEWER;
16071
16072     %end;
16073
16074
16075     %doendm:
16076  %mend main;
16077
16078  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16080 +%macro em_tree_train;
16082 +   %if &EM_IMPORT_DATA eq %then %do;
16083 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16084 +       %put &em_codebar;
16085 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16086 +       %put &errormsg;
16087 +       %put &em_codebar;
16088 +       %goto doendm;
16089 +   %end;
16090 +   %else
16091 +       %let EMEXCEPTIONSTRING =;
16093 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16094 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16095 +        %put &em_codebar;
16096 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16097 +        %put &errormsg;
16098 +        %put &em_codebar;
16099 +        %goto doendm;
16100 +   %end;
16102 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16103 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16104 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16105 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16106 +        %put &em_codebar;
16107 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16108 +        %put &errormsg;
16109 +        %put &em_codebar;
16110 +        %goto doendm;
16111 +   %end;
16113 +   /* Initialize property macro variables */
16114 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16115 +   %include temp;
16116 +   filename temp;
16118 +   %EM_SetProperties;
16120 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16121 +   %EM_GETNAME(key=EMTREE, type=DATA);
16122 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16123 +     /* if import eq Y and no importtable defined, throw an exception */
16124 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16125 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16126 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16127 +         %put &em_codebar;
16128 +         %put &errmsg;
16129 +         %put &em_codebar;
16130 +         %goto doendm;
16131 +      %end;
16132 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16133 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16134 +         %put &em_codebar;
16135 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16136 +         %put &errormsg;
16137 +         %put &em_codebar;
16138 +         %goto doendm;
16139 +      %end;
16140 +      %else %do;
16141 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16142 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16143 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16144 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16145 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16146 +         %let dsid = %sysfunc(close(&dsid));
16147 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16148 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16149 +            %put &em_codebar;
16150 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16151 +            %put &errormsg;
16152 +            %put &em_codebar;
16153 +            %goto doendm;
16154 +         %end;
16155 +      %end;
16156 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16157 +         proc delete data=&EM_USER_EMTREE;
16158 +         run;
16159 +      %end;
16160 +   %end;
16161 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16162 +      proc delete data=&EM_USER_EMTREE;
16163 +      run;
16164 +   %end;
16166 +   /* load tree macros */
16167 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16168 +   %include temp;
16169 +   filename temp;
16171 +   /* data sets */
16172 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16173 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16174 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16176 +   /* files */
16177 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16179 +   /* check actual num of target levels */
16180 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16181 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16182 +                              nLevel=_nTargetLevel );
16183 +      %if &_nTargetLevel  > 2 %then %do;
16184 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16185 +        %put &em_codebar;
16186 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16187 +        %put &errormsg;
16188 +        %put &em_codebar;
16189 +        %goto doendm;
16190 +      %end;
16191 +   %end;
16193 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16194 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16195 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16196 +        %let costflag=0;
16197 +        data _null_;
16198 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16199 +          if eof then call symput("costflag", _N_);
16200 +        run;
16201 +        %if &costflag gt 0 %then %do;
16202 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16203 +          %put &em_codebar;
16204 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16205 +          %put &errormsg;
16206 +          %put &em_codebar;
16207 +          %goto doendm;
16208 +       %end;
16209 +     %end;
16210 +   %end;
16212 +   /* determine if multiple targets will be processed */
16213 +   %let em_tree_multipleTargets=N;
16214 +   %let em_tree_numTarget = 1;
16215 +   %let em_tree_targetVars=;
16217 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16218 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16219 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16220 +         %let em_tree_multipleTargets=N;
16221 +      %end;
16222 +      %else %do;
16223 +         /* create macro array of targets  */
16224 +         data _null_;
16225 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16226 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16227 +           if eof then
16228 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16229 +        run;
16231 +        %if &em_tree_numTarget gt 1 %then %do;
16232 +           %let em_tree_multipleTargets=Y;
16233 +        %end;
16234 +      %end;
16235 +   %end;
16237 +   /* create view of only necessary variable for performance reasons */
16238 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16239 +   data &tempData / view=&tempData;
16240 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16241 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16242 +       %EM_TARGET
16243 +     %end;
16244 +     %else %do;
16245 +       %if &em_tree_numTarget ne 0 %then %do;
16246 +         %do i=1 %to &em_tree_numTarget;
16247 +            &&em_tree_targetVars&i
16248 +         %end;
16249 +       %end;
16250 +     %end;
16251 +     );
16252 +   run;
16254 +   /* run Tree procedure */
16255 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16257 +   /* Check return code and throw exception if error is detected */
16258 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16259 +   %if &syserr %then %do;
16260 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16261 +     %goto doendm;
16262 +   %end;
16264 +   /* add decision score code if multiple targets are processed */
16265 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16266 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16267 +   %end;
16269 +   /* create outfit dataset if multiple score statements have been executed */
16270 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16272 +   /* create English Rules */
16273 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16274 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16275 +       %em_tree_makeEnglishRules;
16277 +       /* English Rules */
16278 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16280 +     %end;
16281 +   filename x;
16283 +   %doendm:
16284 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16285 +%macro EM_SetProperties;
16287 +   /* train properties */
16288 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16289 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16290 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16293 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16294 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16295 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16296 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16297 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16298 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16299 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16300 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16301 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16302 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16303 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16304 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16309 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16310 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16311 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16313 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16314 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16315 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16316 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16317 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16318 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16319 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16320 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16321 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16322 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16323 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16324 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16325 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16326 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16327 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16328 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16330 +   /* properties for interactive sample */
16331 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16332 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16333 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16334 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16336 +   /* report properties */
16337 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16338 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16339 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16340 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16341 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16342 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16343 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16344 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16345 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16346 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16347 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16348 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16349 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16351 +   /* score properties */
16352 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16353 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16355 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE8_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16357 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16358 +  %global &nLevel;
16359 +  proc dmdb batch data=&indata
16360 +    classout=_tmp_dmdbout;
16361 +    class &target;
16362 +  run;
16363 +  data _tmp_dmdbout;
16364 +    set _tmp_dmdbout;
16365 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16366 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16367 +  run;
16368 +  data _null_;
16369 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16370 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16371 +    %let dsid = %sysfunc(close(&dsid));
16372 +     call symput("&nLevel", put(&_obs, Best12.));
16373 +  run;
16375 +  proc datasets lib=work nolist;
16376 +     delete _tmp_dmdbout;
16377 +  run;
16378 +  quit;
16379 +%Mend EM_CheckBinaryTargetLevel;
16382 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16384 +  /* determine the number of obs in training data */
16385 +  proc sql;
16386 +    reset noprint;
16387 +    select count(*) into :em_nobs from &indata;
16388 +  quit;
16390 +  /* determine the number of input variables */
16391 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16392 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16394 +  /* retrieve targetEvent from decmeta */
16395 +  %let targetEvent=;
16396 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16397 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16398 +      data _null_;
16399 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16400 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16401 +      run;
16402 +    %end;
16403 +  %end;
16405 +  /* create targetTable if multipleTar eq Y */
16406 +  data temptarget;
16407 +    set &EM_DATA_VARIABLESET;
16408 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16409 +  run;
16411 + /* data sets */
16412 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16413 + %EM_GETNAME(key=EMTREE,        type=DATA);
16414 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16415 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16416 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16417 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16418 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16419 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16420 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16421 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16423 + /* files */
16424 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16425 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16427 + /* turn on pmml if requested */
16428 + %let nnpmml=0;
16429 + %if %symexist(EM_PMML) %then %do;
16430 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16431 +       %let nnpmml=1;
16433 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16434 +   %end;
16435 +%end;
16437 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16439 +%if &nnpmml or &numClassTarget %then %do;
16441 +    /* create dmdb needed for pmml generation */
16442 +    %let tree_maxlevel = 512;
16443 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16444 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16445 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16446 +      %end;
16447 +    %end;
16448 +    %if &tree_maxlevel gt 0 %then %do;
16449 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16450 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16451 +    %end;
16453 +    %let targetOrderString =;
16454 +    %let targetString = ;
16455 +    data _null_;
16456 +       length orderString nameString $10000;
16457 +       retain orderString nameString;
16458 +       set &em_data_variableset end=eof;
16459 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16460 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16461 +       %end;
16462 +       %else %do;
16463 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16464 +       %end;          select(order);
16465 +         when('')        order ='DESC';
16466 +         when('FMTASC')  order='ASCFMT';
16467 +         when('FMTDESC') order='DESFMT';
16468 +         otherwise;
16469 +       end;
16470 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16471 +       nameString = trim(nameString)!!' '!!trim(NAME);
16473 +       if eof then do;
16474 +          call symput('targetOrderString', trim(orderString));
16475 +          call symput('targetString', trim(nameString));
16476 +       end;
16477 +    run;
16479 +    %let arborkluge= "work._treeDMDB";
16481 +    proc dmdb batch data=&indata
16482 +    %if &nnpmml %then %do;
16483 +        PMML
16484 +    %end;
16485 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16487 +      %if &nnpmml %then %do;
16488 +           %if "%EM_ID" ne "" %then %do;
16489 +             id %EM_ID;
16490 +           %end;
16491 +           %if &EM_NUM_CLASS gt 0 %then %do;
16492 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16493 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16494 +                  &targetOrderString;
16495 +           %end;
16496 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16497 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16498 +           %end;
16499 +           target &targetString %EM_INTERVAL_TARGET;
16500 +           %if "%EM_FREQ" ne "" %then %do;
16501 +             freq %EM_FREQ;
16502 +           %end;
16503 +      %end;
16504 +      %else %do;
16505 +         class  &targetOrderString;
16506 +         target &targetString %EM_INTERVAL_TARGET;
16507 +      %end;
16508 +    run;
16509 +    quit;
16511 +    proc datasets lib=work nolist;
16512 +       delete classout varout;
16513 +    run;
16514 +    quit;
16516 + %end;
16519 + /* run Arbor procedure */
16520 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16521 +  proc arbor data=&INDATA
16523 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16524 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16525 +  %end;
16527 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16528 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16529 +  %end;
16531 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16532 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16533 +  %end;
16535 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16536 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16537 +  %end;
16539 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16540 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16541 +  %end;
16543 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16544 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16545 +  %end;
16546 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16547 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16548 +  %end;
16549 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16550 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16551 +  %end;
16553 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16554 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16555 +      alpha = &EM_PROPERTY_SIGLEVEL
16556 +    %end;
16557 +  %end;
16559 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16560 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16561 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16562 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16563 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16565 +        padjust =
16566 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16567 +          &chaid
16568 +        %end;
16569 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16570 +          DEPTH
16571 +        %end;
16572 +      %end;
16573 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16574 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16575 +         pvars = &num_inputs
16576 +      %end;
16577 +    %end;
16578 +  %end;
16579 +  %else %do;
16580 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16581 +         padjust = NONE
16582 +      %end;
16583 +  %end;
16585 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16586 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16587 +    Maxrules = &num_nrules
16588 +  %end;
16590 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16591 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16592 +    Maxsurrs = &num_nsurrs
16593 +  %end;
16595 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16596 +     Missing=&EM_PROPERTY_MISSINGVALUE
16597 +  %end;
16599 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16600 +     USEVARONCE
16601 +  %end;
16603 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16604 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16605 +  %end;
16608 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16609 +    event = "&targetEvent"
16610 +  %end;
16612 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16613 +     DECSEARCH
16614 +  %end;
16616 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16617 +     PRIORSSEARCH
16618 +  %end;
16620 +  %if &arbor_1 ne %then %do;
16621 +    &arbor_1
16622 +  %end;
16624 +  %if &em_arbor ne %then %do;
16625 +     &em_arbor
16626 +  %end;
16627 +  ;
16628 + %end;
16629 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16630 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16631 +       Performance &EM_PROPERTY_PERFORMANCE
16632 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16633 +         nodesize=&EM_PROPERTY_NODESAMPLE
16634 +       %end;
16635 +       ;
16636 +       interact;
16637 + %end;
16638 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16639 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16640 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16641 +    %put &em_codebar;
16642 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16643 +    %put &errormsg;
16644 +    %put &em_codebar;
16645 +    %goto doendm;
16646 +   %end;
16647 +   %else %do;
16648 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16649 +       Performance &EM_PROPERTY_PERFORMANCE
16650 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16651 +         nodesize=&EM_PROPERTY_NODESAMPLE
16652 +       %end;
16653 +       ;
16654 +       interact;
16655 +   %end;
16656 + %end;
16658 + %else %do;
16659 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16660 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16661 +    %put &em_codebar;
16662 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16663 +    %put &errormsg;
16664 +    %put &em_codebar;
16665 +    %goto doendm;
16666 +   %end;
16667 +   %else %do;
16668 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16669 +       Performance &EM_PROPERTY_PERFORMANCE
16670 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16671 +         nodesize=&EM_PROPERTY_NODESAMPLE
16672 +       %end;
16673 +       ;
16674 +        interact;
16675 +   %end;
16676 + %end;
16678 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16679 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16680 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16681 +    %end;
16683 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16684 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16685 +    %end;
16687 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16688 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16689 +    %end;
16691 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16692 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16693 +    %end;
16695 +    %if "%EM_FREQ" ne "" %then %do;
16696 +       freq %EM_FREQ;
16697 +    %end;
16699 +    %if "&multipleTar" eq "Y" %then %do;
16700 +       /* cycle through all target vars in variableset */
16701 +       %let tdsid = %sysfunc(open(temptarget));
16702 +       %if &tdsid %then %do;
16703 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16704 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16705 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16706 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16707 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16708 +             target &var / level = &lvl
16709 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16710 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16711 +             %end;
16712 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16713 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16714 +             %end;
16715 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16716 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16717 +             %end;
16718 +          %end;
16719 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16720 +       %end;
16721 +       useTarget variable = %EM_TARGET;
16722 +    %end;
16723 +    %else %do;
16724 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16725 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16726 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16727 +      %end;
16728 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16729 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16730 +      %end;
16731 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16732 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16733 +      %end;
16734 +    %end;
16736 +    %if "&multipleTar" eq "N" %then %do;
16737 +      &EM_DEC_STATEMENT;
16738 +    %end;
16740 +    Performance &EM_PROPERTY_PERFORMANCE
16741 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16742 +      nodesize=&EM_PROPERTY_NODESAMPLE
16743 +    %end;
16744 +    ;
16746 +    %if "&intFlag" eq "Y" %then %do;
16747 +       INTERACT Largest;
16748 +       Train maxnewdepth=0;
16749 +    %end;
16751 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16752 +         Assess
16753 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16754 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16755 +              %put &em_codebar;
16756 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16757 +              %put &errormsg;
16758 +              %put &em_codebar;
16759 +            %end;
16760 +            %else %do;
16761 +               Validata=&EM_IMPORT_VALIDATE
16762 +            %end;
16763 +         %end;
16764 +         %else %do;
16765 +           NoValidata
16766 +         %end;
16767 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16768 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16769 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16770 +               %if &dsid %then %do;
16771 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16772 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16773 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16774 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16775 +                   %else %do;
16776 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16777 +                      %else %let measure= MISC;
16778 +                   %end;
16779 +                 %end;
16780 +               %end;
16781 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16782 +            %end;
16783 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16784 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16785 +                 %let measure=ASE;
16786 +              %end;
16787 +              %else %do;
16788 +                 %let measure=MISC;
16789 +              %end;
16790 +            %end;
16791 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16792 +              %let measure=ASE;
16793 +            %end;
16794 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16795 +               %let measure = LIFT;
16796 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16797 +               %if &dsid %then %do;
16798 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16799 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16800 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16801 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16802 +                 %end;
16803 +               %end;
16804 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16805 +            %end;
16806 +            measure=&measure
16807 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16808 +               event = "&targetEvent"
16809 +            %end;
16810 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16811 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16812 +            %end;
16813 +         %end;
16814 +         %if "&multipleTar" eq "N" %then %do;
16815 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16816 +               CV
16817 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16818 +                 CVNITer = &EM_PROPERTY_CVNITER
16819 +               %end;
16820 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16821 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16822 +               %end;
16823 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16824 +                 CVSeed = &EM_PROPERTY_CVSEED
16825 +               %end;
16826 +            %end;
16827 +         %end;
16828 +       %end;
16829 +      ;
16831 +      %if "&intFlag" ne "Y" %then %do;
16832 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16833 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16834 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16835 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16837 +          SUBTREE &subtree
16838 +          %if "&subtree" eq "NLEAVES" %then %do;
16839 +            =&EM_PROPERTY_NSUBTREE
16840 +          %end;
16841 +          ;
16842 +        %end;
16844 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16845 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16846 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16847 +          %end;
16848 +       %end;
16849 +      %end;
16850 + %end;
16853 + MakeMacro nleaves = nleaves;
16854 + save
16855 + %if "&EM_USER_EMTREE" ne "" %then %do;
16856 +   MODEL=&EM_USER_EMTREE
16857 + %end;
16858 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16859 +   SEQUENCE=&EM_USER_OUTSEQ
16860 + %end;
16861 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16862 +   IMPORTANCE=&EM_USER_OUTIMPORT
16863 + %end;
16864 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16865 +   NODESTAT=&EM_USER_OUTNODES
16866 + %end;
16867 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16868 +   SUMMARY=&EM_USER_OUTSUMMARY
16869 + %end;
16870 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16871 +   STATSBYNODE=&EM_USER_OUTSTATS
16872 + %end;
16873 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16874 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16875 + %end;
16876 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16877 +   Pathlistnonmissing=&EM_USER_OUTPATH
16878 + %end;
16879 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16880 +   RULES = &EM_USER_OUTRULES
16881 + %end;
16882 + ;
16884 + %if "&intFlag" ne "Y" %then %do;
16886 +   %let lookupString = ;
16887 +   %if ^%symexist(EM_OPTION) %then
16888 +      %let EM_OPTION=;
16890 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16891 +      %let lookupString = LOOKUP=SELECT;
16892 +   %end;
16894 +   %let codetext=;
16895 +   %let norescodetxt=;
16897 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16898 +     %let codetext=&codetext DUMMY;
16899 +     %let norescodetxt=&norescodetxt DUMMY;
16900 +   %end;
16901 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16902 +     %let codetext=&codetext NOLEAFID;
16903 +     %let norescodetxt=&norescodetxt NOLEAFID;
16904 +   %end;
16905 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16906 +     %let norescodetxt=&norescodetxt NOPRED;
16907 +   %end;
16909 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16910 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16912 +   %if &nnpmml %then %do;
16913 +     code pmml;
16914 +   %end;
16916 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16917 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16918 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16919 +   %end;
16920 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16921 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16922 +   %end;
16923 + %end;
16925 + run;
16926 + quit;
16928 + /*%em_checkerror(); */
16929 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16930 +   /* Delete DMDB catalog */
16931 +   proc datasets lib=work nolist;
16932 +       delete _treeDMDB / mt=cat;
16933 +  run;
16934 +  %end;
16936 + %if &nnpmml %then %do;
16937 +    ods pmml close;
16938 + %end;
16940 +  %doendm:
16942 +%mend em_tree_runTreeProcedure;
16944 +%macro em_tree_createFitStats( multipleTar= );
16947 +  /* create targetTable is multipleTar eq Y */
16948 +  data temptarget;
16949 +    set &EM_DATA_VARIABLESET;
16950 +    where ROLE="TARGET";
16951 +  run;
16953 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16954 +   data &EM_USER_EMOUTFIT;
16955 +     length target $32;
16956 +     merge work.fit_train
16957 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16958 +       work.fit_valid
16959 +     %end;
16960 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16961 +       work.fit_test
16962 +     %end;
16963 +     ;
16964 +     %if "&multipleTar" eq "N" %then %do;
16965 +       target="%EM_TARGET";
16966 +     %end;
16967 +     %else %do;
16968 +       target = _TARGET_;
16969 +     %end;
16970 +     drop _NW_ _SUMW_
16971 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16972 +        _VSUMW_
16973 +     %end;
16974 +     ;
16975 +   run;
16977 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16978 +     proc datasets library=work nolist;
16979 +       delete fit_valid;
16980 +     run;
16981 +   %end;
16982 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16983 +     proc datasets library=work nolist;
16984 +       delete fit_test;
16985 +     run;
16986 +   %end;
16988 +%mend em_tree_createFitStats;
16991 +%macro em_tree_makeEnglishRules;
16993 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16994 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16996 +  /* verify that necessary tables exist and if not, skip processing */
16997 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16998 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16999 +    %goto doendm;
17000 +  %end;
17001 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
17002 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
17003 +    %goto doendm;
17004 +  %end;
17006 +  /* determine length of variable in outpath dataset */
17007 +  %let vlength= ;
17008 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
17009 +  %if &dsid ne %then %do;
17010 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
17011 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
17012 +  %end;
17013 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
17015 +  data tempoutpath;
17016 +    length varname $&vlength;
17017 +    retain varname;
17018 +    set &EM_USER_OUTPATH;
17020 +    if ^missing(variable) then varname=variable;
17021 +    else if ^missing(var_name) then varname=var_name;
17022 +    output;
17023 +  run;
17025 +  /* create an array of generated predicted variable names */
17026 +  %let tree_pred_vars = ;
17027 +  %let tree_pred_label = ;
17028 +  %let numpred= 0;
17029 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17031 +    data _null_;
17032 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17033 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17034 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
17035 +     if eof then
17036 +       call symput('numpred', strip(put(_N_, BEST.)));
17037 +    run;
17038 +  %end;
17040 +  /* determine if NPRIORS exists in outnodes  */
17041 +  %local nprior_flag;
17042 +  data _null_;
17043 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17044 +    if eof then do;
17045 +      call symput('nprior_flag', strip(put(npriors, best.)));
17046 +    end;
17047 +  run;
17049 +  proc sort data=tempoutpath; by node; run;
17050 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17052 +  data tempoutpath;
17053 +    merge tempoutpath(in=_a) outnodes(keep= node
17054 +    %if "&nprior_flag" ne "." %then %do;
17055 +      NPRIORS
17056 +    %end;
17057 +    %else %do;
17058 +      N
17059 +    %end;
17060 +    %if &numpred gt 0 %then %do;
17061 +      %do i=1 %to &numpred;
17062 +        &&tree_pred_vars&i
17063 +      %end;
17064 +    %end;
17065 +    );
17066 +    by node;
17067 +    if _a;
17068 +  run;
17070 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17072 +  data _null_;
17073 +    file x;
17074 +    set tempoutpath;
17075 +    by node descending varname;
17076 +    retain origvar oldnode string;
17077 +    length origvar $32 oldnode 8 string $5000;
17079 +    if _N_ = 1 then do;
17080 +      origvar = varname;
17081 +      oldnode = node;
17082 +    end;
17084 +    if first.node then do;
17085 +       put "&EM_CODEBAR";
17086 +       put " Node = " node;
17087 +       put "&EM_CODEBAR";
17088 +    end;
17090 +      if first.varname then do;
17091 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17092 +            if MISSING(CHARACTER_VALUE) then do;
17093 +             if NUMERIC_VALUE ne .  then do;
17094 +              if ^first.node then do;
17095 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17096 +              end;
17097 +              else do;
17098 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17099 +              end;
17100 +             end;
17101 +            end;
17102 +            else do;
17103 +              if ^first.node then do;
17104 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17105 +              end;
17106 +              else do;
17107 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17108 +              end;
17109 +             end;
17110 +         end;
17111 +         else if RELATION in ("=") then do;
17112 +            if ^first.node then do;
17113 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17114 +            end;
17115 +            else do;
17116 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17117 +            end;
17118 +         end;
17119 +         else if RELATION in ("ISMISSING") then do;
17120 +            if ^first.node then do;
17121 +              string = " AND "|| strip(varname) || " equals Missing";
17122 +            end;
17123 +            else do;
17124 +              string = "if "|| strip(varname) ||" equals Missing";
17125 +            end;
17126 +         end;
17127 +         else if RELATION in ("ISNOTMISSING") then do;
17128 +            if ^first.node then do;
17129 +              string = " AND "|| strip(varname) || " equals All Values";
17130 +            end;
17131 +            else do;
17132 +              string = "if "|| strip(varname) ||" equals All Values";
17133 +            end;
17134 +         end;
17135 +         if ^missing(varname) then origvar = varname;
17136 +         oldnode=node;
17138 +      end;
17139 +      else do;
17140 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17141 +          if MISSING(CHARACTER_VALUE) then do;
17142 +           if  NUMERIC_VALUE ne .  then do;
17143 +            if ^MISSING(string) then
17144 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17145 +            else
17146 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17147 +           end;
17148 +          end;
17149 +          else do;
17150 +            if ^MISSING(string) then
17151 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17152 +            else
17153 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17154 +          end;
17156 +         end;
17157 +         else if RELATION in ("=") then do;
17158 +           string = strip(string)||", "||strip(character_value);
17159 +         end;
17160 +         else if RELATION in ("ISMISSING") then do;
17162 +         end;
17163 +         if ^missing(varname) then origvar = varname;
17164 +         oldnode=node;
17165 +      end;
17166 +      if last.varname then do;
17167 +         if RELATION in ("ISMISSING") then do;
17168 +           if ^first.varname then do;
17169 +             string = strip(string) || " or MISSING";
17170 +           end;
17171 +         end;
17172 +         put string;
17173 +         if ^missing(varname) then origvar = varname;
17174 +         oldnode=node;
17175 +      end;
17177 +      if last.node then do;
17178 +         put "then ";
17179 +         put " Tree Node Identifier   = " node;
17181 +         %if "&nprior_flag" ne "." %then %do;
17182 +           put " Number of Observations = " NPRIORS;
17183 +         %end;
17184 +         %else %do;
17185 +           put " Number of Observations = " N;
17186 +         %end;
17188 +         %if &numpred gt 0 %then %do;
17189 +           %do i=1 %to &numpred;
17190 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17191 +           %end;
17192 +         %end;
17194 +         put " ";
17195 +         if ^missing(varname) then origvar = varname;
17196 +         oldnode=node;
17197 +      end;
17199 +  run;
17201 +  proc datasets lib=work nolist;
17202 +    delete tempoutpath outnodes;
17203 +  run;
17205 +  %doendm:
17206 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE8.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE8.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER12_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE8.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER12_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE8.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595084 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 95209472 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1806064 bytes of work memory.
NOTE: The subtree sequence contains 11 subtrees. The largest has 21 nodes and 11 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Created macro variable NLEAVES equal to 7.
NOTE: The data set EMWS3.TREE8_OUTIMPORT has 100 observations and 6 variables.
NOTE: The data set EMWS3.TREE8_EMTREE has 2052 observations and 4 variables.
NOTE: The data set EMWS3.TREE8_OUTNODES has 13 observations and 54 variables.
NOTE: The data set EMWS3.TREE8_OUTPATH has 57 observations and 7 variables.
NOTE: The data set EMWS3.TREE8_OUTRULES has 221 observations and 6 variables.
NOTE: The data set EMWS3.TREE8_OUTSEQ has 11 observations and 20 variables.
NOTE: The data set EMWS3.TREE8_OUTSTATS has 351 observations and 5 variables.
NOTE: The data set EMWS3.TREE8_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE8_OUTTOPOLOGY has 13 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE8.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER12_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE8.VIEW used (Total process time):
      real time           0.47 seconds
      cpu time            0.12 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER12_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE8.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.48 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE8_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set EMWS3.TREE8_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 57 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE8_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 57 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE8_OUTNODES.
NOTE: The data set WORK.OUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 13 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 57 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 57 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:15,
      Create Time=23Nov2023:22:13:15
 
NOTE: 154 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: There were 57 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
17208
17209  *------------------------------------------------------------*;
17210  * End TRAIN: Tree8;
17211  *------------------------------------------------------------*;
 
17212  *------------------------------------------------------------*;
17213  * Close any missing semi colons;
17214  *------------------------------------------------------------*;
17215  ;
17216  ;
17217  ;
17218  ;
17219  quit;
17220  *------------------------------------------------------------*;
17221  * Close any unbalanced quotes;
17222  *------------------------------------------------------------*;
17223  /*; *"; *'; */
17224  ;
17225  run;
17226  quit;
17227  /* Reset EM Options */
17228  options formchar="|----|+|---+=|-/\<>*";
17229  options nocenter ls=256 ps=10000;
17230  goptions reset=all device=GIF NODISPLAY;
 
17231  proc sort data=WORK.EM_USER_REPORT;
17232  by ID VIEW;
17233  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:16
*------------------------------------------------------------*
17335  %let EMEXCEPTIONSTRING=;
17336  *------------------------------------------------------------*;
17337  * SCORE: Tree8;
17338  *------------------------------------------------------------*;
17339  %let EM_ACTION = SCORE;
17340  %let syscc = 0;
17341  %macro main;
17342
17343    %if %upcase(&EM_ACTION) = CREATE %then %do;
17344      filename temp catalog 'sashelp.emmodl.tree_create.source';
17345      %include temp;
17346      filename temp;
17347
17348      %em_tree_create;
17349    %end;
17350
17351     %else
17352     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17353
17354         filename temp catalog 'sashelp.emmodl.tree_train.source';
17355         %include temp;
17356         filename temp;
17357         %em_tree_train;
17358     %end;
17359
17360    %else
17361    %if %upcase(&EM_ACTION) = SCORE %then %do;
17362      filename temp catalog 'sashelp.emmodl.tree_score.source';
17363      %include temp;
17364      filename temp;
17365
17366      %em_tree_score;
17367
17368    %end;
17369
17370    %else
17371    %if %upcase(&EM_ACTION) = REPORT %then %do;
17372
17373         filename temp catalog 'sashelp.emmodl.tree_report.source';
17374         %include temp;
17375         filename temp;
17376
17377         %em_tree_report;
17378     %end;
17379
17380    %else
17381    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17382
17383         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17384         %include temp;
17385         filename temp;
17386         %EM_TREE_OPENTREEVIEWER;
17387
17388     %end;
17389
17390    %else
17391    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17392
17393         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17394         %include temp;
17395         filename temp;
17396         %EM_TREE_CLOSETREEVIEWER;
17397
17398     %end;
17399
17400
17401     %doendm:
17402  %mend main;
17403
17404  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17406 +%macro em_tree_score;
17408 +   /* determine if multiple targets will be processed */
17409 +   %let em_tree_multipleTargets=N;
17410 +   %let em_tree_numTarget=1;
17411 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17412 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17413 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17414 +         %let em_tree_multipleTargets=N;
17415 +      %end;
17416 +      %else %do;
17417 +         /* create macro array of targets  */
17418 +         data _null_;
17419 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17420 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17421 +           if eof then
17422 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17423 +        run;
17425 +        %if &em_tree_numTarget gt 1 %then %do;
17426 +           %let em_tree_multipleTargets=Y;
17427 +        %end;
17428 +      %end;
17429 +   %end;
17431 +   /* build flow and publish scoring code */
17432 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17433 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17435 +   filename treeflow "&EM_USER_TREEFLOW";
17436 +   filename treepub "&EM_USER_TREEPUBLISH";
17438 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17439 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17441 +   %em_copyfile(infref=treeflow, outfref=flowref);
17442 +   %em_copyfile(infref=treepub, outfref=pubref);
17444 +   filename treeflow;
17445 +   filename treepub;
17447 +   /* if priors are used, add code to generate unadjusted residuals in export */
17448 +   %let useAdjPriors = N;
17449 +   data _null_;
17450 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17451 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17452 +   run;
17453 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17454 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17455 +      %include temp;
17456 +      filename temp;
17458 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17459 +      filename adjref "&EM_USER_adjResidualCode";
17460 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17462 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17464 +      filename adjref;
17465 +   %end;
17467 +   /* LEAF */
17468 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17469 +      data _null_;
17470 +        file flowref mod;
17471 +        put 'drop _LEAF_;';
17472 +      run;
17474 +      data _null_;
17475 +        file pubref mod;
17476 +        put 'drop _LEAF_;';
17477 +      run;
17479 +   %end;
17481 +   filename flowref;
17482 +   filename pubref;
17484 +   /* em_metachange code */
17485 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17486 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17487 +   %end;
17489 +   /* variable selection based on importance stat    */
17490 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17491 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17492 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17493 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17494 +     %let obs = %sysfunc(fetch(&dsid));
17495 +     %do %while(&obs=0);
17496 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17497 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17498 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17499 +       %let obs = %sysfunc(fetch(&dsid));
17500 +     %end;
17501 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17502 +   %end;
17504 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17505 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17506 +    %let tree_pred_vars = ;
17507 +    %let tree_pred_lvl =;
17508 +    %let numpred= 0;
17510 +    data _null_;
17511 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17512 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17513 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17514 +     if eof then
17515 +       call symput('numpred', strip(put(_N_, BEST.)));
17516 +    run;
17517 +   %end;
17519 +   %if &numpred ne 0 %then %do;
17520 +    %do i=1 %to &numpred;
17521 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17522 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17523 +    %end;
17524 +   %end;
17526 +   /* determine if multiple targets will be processed */
17527 +   %let em_tree_multipleTargets=N;
17528 +   %let em_tree_numTarget=1;
17529 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17530 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17531 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17532 +         %let em_tree_multipleTargets=N;
17533 +      %end;
17534 +      %else %do;
17535 +        data _null_;
17536 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17537 +          if eof then
17538 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17539 +        run;
17541 +        %if &em_tree_numTarget gt 1 %then %do;
17542 +           %let em_tree_multipleTargets=Y;
17543 +        %end;
17544 +     %end;
17545 +   %end;
17547 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17548 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17550 +      /* variable importance */
17551 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17552 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17554 +         %let validexist=0;
17555 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17556 +           %let validexist=1;
17557 +         %end;
17559 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17560 +         /* and the columns may not be generated                                                                                 */
17561 +         %let em_tree_cvexists=;
17562 +         %let em_tree_surrexists=.;
17563 +         data _null_;
17564 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17565 +            if eof then do ;
17566 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17567 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17568 +            end;
17569 +         run;
17571 +         data &EM_USER_OUTIMPORT;
17572 +            set &EM_USER_OUTIMPORT;
17574 +            /* format columns based on Precison value specified */
17575 +            format importance 15.&EM_PROPERTY_PRECISION
17576 +                 %if &validexist %then %do;
17577 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17578 +                 %end;
17579 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17580 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17581 +                 %end;
17582 +            ;
17583 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17584 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17585 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17586 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17587 +                 %if "&em_tree_surrexists" ne "" %then %do;
17588 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17589 +                 %end;
17590 +                 %if &validexist %then %do;
17591 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17592 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17593 +                 %end;
17594 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17595 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17596 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17597 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17598 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17599 +                 %end;
17600 +            ;
17601 +         run;
17603 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17604 +      %end;
17605 +   %end;
17607 +   %doendm:
17608 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:15,
      Create Time=23Nov2023:22:13:15
 
NOTE: 460 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:15,
      Create Time=23Nov2023:22:13:15
 
NOTE: 380 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=22684,
      Last Modified=23Nov2023:22:13:15,
      Create Time=23Nov2023:22:13:15
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19111,
      Last Modified=23Nov2023:22:13:15,
      Create Time=23Nov2023:22:13:15
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 69 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 70 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 71 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 71 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 72 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 73 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 73 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 74 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 75 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 76 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 76 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 77 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 77 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 78 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 78 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 79 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 79 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 80 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 80 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 81 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 81 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 82 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 82 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 83 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 83 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 84 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 84 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 85 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 85 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 86 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 86 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 87 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 87 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 88 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 89 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 90 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 90 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 91 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 91 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 92 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 92 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 93 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 93 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 94 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 94 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 95 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 96 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 96 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 97 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 97 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 98 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 99 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 99 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 100 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 100 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 101 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 101 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 102 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 102 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 103 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 103 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 104 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 104 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 105 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 105 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 106 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 106 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 107 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 107 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 108 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE8_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 100 observations read from the data set EMWS3.TREE8_OUTIMPORT.
NOTE: The data set EMWS3.TREE8_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
17609
17610  *------------------------------------------------------------*;
17611  * End SCORE: Tree8;
17612  *------------------------------------------------------------*;
 
17613  proc sort data=WORK.EM_METACHANGE;
17614  by key uname;
17615  run;
 
NOTE: There were 108 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 108 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17616  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\CDELTA_TRAIN.sas";
17617  data _null_;
17618  file x;
17619  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17620  put 'ROLE = "ASSESS";';
17621  put 'end;';
17622  put 'else ';
17623  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17624  put 'ROLE = "ASSESS";';
17625  put 'end;';
17626  put 'else ';
17627  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17628  put 'ROLE = "ASSESS";';
17629  put 'end;';
17630  put 'else ';
17631  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17632  put 'ROLE = "ASSESS";';
17633  put 'end;';
17634  put 'else ';
17635  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17636  put 'ROLE = "ASSESS";';
17637  put 'end;';
17638  put 'else ';
17639  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17640  put 'ROLE = "ASSESS";';
17641  put 'end;';
17642  put 'else ';
17643  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17644  put 'ROLE = "ASSESS";';
17645  put 'end;';
17646  put 'else ';
17647  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17648  put 'ROLE = "ASSESS";';
17649  put 'end;';
17650  put 'else ';
17651  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17652  put 'ROLE = "ASSESS";';
17653  put 'end;';
17654  put 'else ';
17655  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17656  put 'ROLE = "ASSESS";';
17657  put 'end;';
17658  put 'else ';
17659  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17660  put 'ROLE = "ASSESS";';
17661  put 'end;';
17662  put 'else ';
17663  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17664  put 'ROLE = "ASSESS";';
17665  put 'end;';
17666  put 'else ';
17667  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD1" then do;';
17668  put 'ROLE = "REJECTED";';
17669  put 'end;';
17670  put 'else ';
17671  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD10" then do;';
17672  put 'ROLE = "REJECTED";';
17673  put 'end;';
17674  put 'else ';
17675  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD100" then do;';
17676  put 'ROLE = "REJECTED";';
17677  put 'end;';
17678  put 'else ';
17679  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD11" then do;';
17680  put 'ROLE = "REJECTED";';
17681  put 'end;';
17682  put 'else ';
17683  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD12" then do;';
17684  put 'ROLE = "REJECTED";';
17685  put 'end;';
17686  put 'else ';
17687  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD13" then do;';
17688  put 'ROLE = "REJECTED";';
17689  put 'end;';
17690  put 'else ';
17691  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD14" then do;';
17692  put 'ROLE = "REJECTED";';
17693  put 'end;';
17694  put 'else ';
17695  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD15" then do;';
17696  put 'ROLE = "REJECTED";';
17697  put 'end;';
17698  put 'else ';
17699  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD16" then do;';
17700  put 'ROLE = "REJECTED";';
17701  put 'end;';
17702  put 'else ';
17703  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD17" then do;';
17704  put 'ROLE = "REJECTED";';
17705  put 'end;';
17706  put 'else ';
17707  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD18" then do;';
17708  put 'ROLE = "REJECTED";';
17709  put 'end;';
17710  put 'else ';
17711  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD19" then do;';
17712  put 'ROLE = "REJECTED";';
17713  put 'end;';
17714  put 'else ';
17715  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD20" then do;';
17716  put 'ROLE = "REJECTED";';
17717  put 'end;';
17718  put 'else ';
17719  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD21" then do;';
17720  put 'ROLE = "REJECTED";';
17721  put 'end;';
17722  put 'else ';
17723  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD22" then do;';
17724  put 'ROLE = "REJECTED";';
17725  put 'end;';
17726  put 'else ';
17727  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD23" then do;';
17728  put 'ROLE = "REJECTED";';
17729  put 'end;';
17730  put 'else ';
17731  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD24" then do;';
17732  put 'ROLE = "REJECTED";';
17733  put 'end;';
17734  put 'else ';
17735  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD25" then do;';
17736  put 'ROLE = "REJECTED";';
17737  put 'end;';
17738  put 'else ';
17739  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD26" then do;';
17740  put 'ROLE = "REJECTED";';
17741  put 'end;';
17742  put 'else ';
17743  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD27" then do;';
17744  put 'ROLE = "REJECTED";';
17745  put 'end;';
17746  put 'else ';
17747  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD28" then do;';
17748  put 'ROLE = "REJECTED";';
17749  put 'end;';
17750  put 'else ';
17751  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD29" then do;';
17752  put 'ROLE = "REJECTED";';
17753  put 'end;';
17754  put 'else ';
17755  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD30" then do;';
17756  put 'ROLE = "REJECTED";';
17757  put 'end;';
17758  put 'else ';
17759  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD31" then do;';
17760  put 'ROLE = "REJECTED";';
17761  put 'end;';
17762  put 'else ';
17763  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD32" then do;';
17764  put 'ROLE = "REJECTED";';
17765  put 'end;';
17766  put 'else ';
17767  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD33" then do;';
17768  put 'ROLE = "REJECTED";';
17769  put 'end;';
17770  put 'else ';
17771  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD34" then do;';
17772  put 'ROLE = "REJECTED";';
17773  put 'end;';
17774  put 'else ';
17775  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD35" then do;';
17776  put 'ROLE = "REJECTED";';
17777  put 'end;';
17778  put 'else ';
17779  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD36" then do;';
17780  put 'ROLE = "REJECTED";';
17781  put 'end;';
17782  put 'else ';
17783  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD37" then do;';
17784  put 'ROLE = "REJECTED";';
17785  put 'end;';
17786  put 'else ';
17787  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD38" then do;';
17788  put 'ROLE = "REJECTED";';
17789  put 'end;';
17790  put 'else ';
17791  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD39" then do;';
17792  put 'ROLE = "REJECTED";';
17793  put 'end;';
17794  put 'else ';
17795  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD4" then do;';
17796  put 'ROLE = "REJECTED";';
17797  put 'end;';
17798  put 'else ';
17799  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD40" then do;';
17800  put 'ROLE = "REJECTED";';
17801  put 'end;';
17802  put 'else ';
17803  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD41" then do;';
17804  put 'ROLE = "REJECTED";';
17805  put 'end;';
17806  put 'else ';
17807  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD42" then do;';
17808  put 'ROLE = "REJECTED";';
17809  put 'end;';
17810  put 'else ';
17811  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD43" then do;';
17812  put 'ROLE = "REJECTED";';
17813  put 'end;';
17814  put 'else ';
17815  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD44" then do;';
17816  put 'ROLE = "REJECTED";';
17817  put 'end;';
17818  put 'else ';
17819  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD45" then do;';
17820  put 'ROLE = "REJECTED";';
17821  put 'end;';
17822  put 'else ';
17823  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD46" then do;';
17824  put 'ROLE = "REJECTED";';
17825  put 'end;';
17826  put 'else ';
17827  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD47" then do;';
17828  put 'ROLE = "REJECTED";';
17829  put 'end;';
17830  put 'else ';
17831  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD48" then do;';
17832  put 'ROLE = "REJECTED";';
17833  put 'end;';
17834  put 'else ';
17835  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD49" then do;';
17836  put 'ROLE = "REJECTED";';
17837  put 'end;';
17838  put 'else ';
17839  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD50" then do;';
17840  put 'ROLE = "REJECTED";';
17841  put 'end;';
17842  put 'else ';
17843  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD51" then do;';
17844  put 'ROLE = "REJECTED";';
17845  put 'end;';
17846  put 'else ';
17847  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD52" then do;';
17848  put 'ROLE = "REJECTED";';
17849  put 'end;';
17850  put 'else ';
17851  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD53" then do;';
17852  put 'ROLE = "REJECTED";';
17853  put 'end;';
17854  put 'else ';
17855  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD54" then do;';
17856  put 'ROLE = "REJECTED";';
17857  put 'end;';
17858  put 'else ';
17859  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD55" then do;';
17860  put 'ROLE = "REJECTED";';
17861  put 'end;';
17862  put 'else ';
17863  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD56" then do;';
17864  put 'ROLE = "REJECTED";';
17865  put 'end;';
17866  put 'else ';
17867  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD57" then do;';
17868  put 'ROLE = "REJECTED";';
17869  put 'end;';
17870  put 'else ';
17871  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD58" then do;';
17872  put 'ROLE = "REJECTED";';
17873  put 'end;';
17874  put 'else ';
17875  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD59" then do;';
17876  put 'ROLE = "REJECTED";';
17877  put 'end;';
17878  put 'else ';
17879  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD60" then do;';
17880  put 'ROLE = "REJECTED";';
17881  put 'end;';
17882  put 'else ';
17883  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD61" then do;';
17884  put 'ROLE = "REJECTED";';
17885  put 'end;';
17886  put 'else ';
17887  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD62" then do;';
17888  put 'ROLE = "REJECTED";';
17889  put 'end;';
17890  put 'else ';
17891  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD63" then do;';
17892  put 'ROLE = "REJECTED";';
17893  put 'end;';
17894  put 'else ';
17895  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD64" then do;';
17896  put 'ROLE = "REJECTED";';
17897  put 'end;';
17898  put 'else ';
17899  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD65" then do;';
17900  put 'ROLE = "REJECTED";';
17901  put 'end;';
17902  put 'else ';
17903  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD66" then do;';
17904  put 'ROLE = "REJECTED";';
17905  put 'end;';
17906  put 'else ';
17907  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD67" then do;';
17908  put 'ROLE = "REJECTED";';
17909  put 'end;';
17910  put 'else ';
17911  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD68" then do;';
17912  put 'ROLE = "REJECTED";';
17913  put 'end;';
17914  put 'else ';
17915  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD69" then do;';
17916  put 'ROLE = "REJECTED";';
17917  put 'end;';
17918  put 'else ';
17919  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD7" then do;';
17920  put 'ROLE = "REJECTED";';
17921  put 'end;';
17922  put 'else ';
17923  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD70" then do;';
17924  put 'ROLE = "REJECTED";';
17925  put 'end;';
17926  put 'else ';
17927  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD71" then do;';
17928  put 'ROLE = "REJECTED";';
17929  put 'end;';
17930  put 'else ';
17931  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD72" then do;';
17932  put 'ROLE = "REJECTED";';
17933  put 'end;';
17934  put 'else ';
17935  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD73" then do;';
17936  put 'ROLE = "REJECTED";';
17937  put 'end;';
17938  put 'else ';
17939  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD74" then do;';
17940  put 'ROLE = "REJECTED";';
17941  put 'end;';
17942  put 'else ';
17943  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD75" then do;';
17944  put 'ROLE = "REJECTED";';
17945  put 'end;';
17946  put 'else ';
17947  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD76" then do;';
17948  put 'ROLE = "REJECTED";';
17949  put 'end;';
17950  put 'else ';
17951  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD77" then do;';
17952  put 'ROLE = "REJECTED";';
17953  put 'end;';
17954  put 'else ';
17955  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD78" then do;';
17956  put 'ROLE = "REJECTED";';
17957  put 'end;';
17958  put 'else ';
17959  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD79" then do;';
17960  put 'ROLE = "REJECTED";';
17961  put 'end;';
17962  put 'else ';
17963  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD80" then do;';
17964  put 'ROLE = "REJECTED";';
17965  put 'end;';
17966  put 'else ';
17967  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD81" then do;';
17968  put 'ROLE = "REJECTED";';
17969  put 'end;';
17970  put 'else ';
17971  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD82" then do;';
17972  put 'ROLE = "REJECTED";';
17973  put 'end;';
17974  put 'else ';
17975  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD83" then do;';
17976  put 'ROLE = "REJECTED";';
17977  put 'end;';
17978  put 'else ';
17979  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD84" then do;';
17980  put 'ROLE = "REJECTED";';
17981  put 'end;';
17982  put 'else ';
17983  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD85" then do;';
17984  put 'ROLE = "REJECTED";';
17985  put 'end;';
17986  put 'else ';
17987  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD86" then do;';
17988  put 'ROLE = "REJECTED";';
17989  put 'end;';
17990  put 'else ';
17991  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD87" then do;';
17992  put 'ROLE = "REJECTED";';
17993  put 'end;';
17994  put 'else ';
17995  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD88" then do;';
17996  put 'ROLE = "REJECTED";';
17997  put 'end;';
17998  put 'else ';
17999  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD89" then do;';
18000  put 'ROLE = "REJECTED";';
18001  put 'end;';
18002  put 'else ';
18003  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD9" then do;';
18004  put 'ROLE = "REJECTED";';
18005  put 'end;';
18006  put 'else ';
18007  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD90" then do;';
18008  put 'ROLE = "REJECTED";';
18009  put 'end;';
18010  put 'else ';
18011  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD91" then do;';
18012  put 'ROLE = "REJECTED";';
18013  put 'end;';
18014  put 'else ';
18015  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD92" then do;';
18016  put 'ROLE = "REJECTED";';
18017  put 'end;';
18018  put 'else ';
18019  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD93" then do;';
18020  put 'ROLE = "REJECTED";';
18021  put 'end;';
18022  put 'else ';
18023  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD94" then do;';
18024  put 'ROLE = "REJECTED";';
18025  put 'end;';
18026  put 'else ';
18027  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD95" then do;';
18028  put 'ROLE = "REJECTED";';
18029  put 'end;';
18030  put 'else ';
18031  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD96" then do;';
18032  put 'ROLE = "REJECTED";';
18033  put 'end;';
18034  put 'else ';
18035  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD97" then do;';
18036  put 'ROLE = "REJECTED";';
18037  put 'end;';
18038  put 'else ';
18039  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD98" then do;';
18040  put 'ROLE = "REJECTED";';
18041  put 'end;';
18042  put 'else ';
18043  put 'if upcase(NAME) = "TEXTCLUSTER12_SVD99" then do;';
18044  put 'ROLE = "REJECTED";';
18045  put 'end;';
18046  put 'else ';
18047  put 'if upcase(NAME) = "_NODE_" then do;';
18048  put 'ROLE = "SEGMENT";';
18049  put 'LEVEL = "NOMINAL";';
18050  put 'end;';
18051  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:17,
      Create Time=19Nov2023:19:24:26
 
NOTE: 432 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18052  filename x;
NOTE: Fileref X has been deassigned.
 
18053  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas";
18054  *------------------------------------------------------------*;
18055  * Tree8: Scoring DATA data;
18056  *------------------------------------------------------------*;
18057  data EMWS3.Tree8_TRAIN
18058  / view=EMWS3.Tree8_TRAIN
18059  ;
18060  set EMWS3.TextCluster12_TRAIN
18061  ;
18062  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas.
18063 +****************************************************************;
18064 +******             DECISION TREE SCORING CODE             ******;
18065 +****************************************************************;
18066 +
18067 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18068 +LENGTH F_Category  $   22;
18069 +LENGTH I_Category  $   22;
18070 +LENGTH U_Category  $   22;
18071 +LENGTH _WARN_  $    4;
18072 +
18073 +******              LABELS FOR NEW VARIABLES              ******;
18074 +label _NODE_ = 'Node' ;
18075 +label _LEAF_ = 'Leaf' ;
18076 +label P_CategoryHR = 'Predicted: Category=HR' ;
18077 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18078 +label P_CategoryINFORMATION_TECHNOLOGY =
18079 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18080 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18081 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18082 +label P_CategoryBUSINESS_DEVELOPMENT =
18083 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18084 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18085 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18086 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18087 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18088 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18089 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18090 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18091 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18092 +label Q_CategoryINFORMATION_TECHNOLOGY =
18093 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18094 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18095 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18096 +label Q_CategoryBUSINESS_DEVELOPMENT =
18097 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18098 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18099 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18100 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18101 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18102 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18103 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18104 +label V_CategoryHR = 'Validated: Category=HR' ;
18105 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18106 +label V_CategoryINFORMATION_TECHNOLOGY =
18107 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18108 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18109 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18110 +label V_CategoryBUSINESS_DEVELOPMENT =
18111 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18112 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18113 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18114 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18115 +label V_CategorySALES = 'Validated: Category=SALES' ;
18116 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18117 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18118 +label R_CategoryHR = 'Residual: Category=HR' ;
18119 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18120 +label R_CategoryINFORMATION_TECHNOLOGY =
18121 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18122 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18123 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18124 +label R_CategoryBUSINESS_DEVELOPMENT =
18125 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18126 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18127 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18128 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18129 +label R_CategorySALES = 'Residual: Category=SALES' ;
18130 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18131 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18132 +label F_Category = 'From: Category' ;
18133 +label I_Category = 'Into: Category' ;
18134 +label U_Category = 'Unnormalized Into: Category' ;
18135 +label _WARN_ = 'Warnings' ;
18136 +
18137 +
18138 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18139 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18140 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18141 +
18142 +
18143 +_ARBFMT_22 = PUT( Category , $22.);
18144 + %DMNORMCP( _ARBFMT_22, F_Category );
18145 +
18146 +******             ASSIGN OBSERVATION TO NODE             ******;
18147 +IF  NOT MISSING(TextCluster12_SVD3 ) AND
18148 +      0.25711392323257 <= TextCluster12_SVD3  THEN DO;
18149 +  _NODE_  =                    3;
18150 +  _LEAF_  =                    7;
18151 +  P_CategoryHR  =     0.85964912280701;
18152 +  P_CategoryDESIGNER  =                    0;
18153 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18154 +  P_CategoryTEACHER  =                    0;
18155 +  P_CategoryADVOCATE  =     0.03508771929824;
18156 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18157 +  P_CategoryHEALTHCARE  =     0.03508771929824;
18158 +  P_CategoryFITNESS  =     0.01754385964912;
18159 +  P_CategoryOTHER  =     0.01754385964912;
18160 +  P_CategorySALES  =                    0;
18161 +  P_CategoryCONSULTANT  =     0.01754385964912;
18162 +  P_CategoryDIGITAL_MEDIA  =                    0;
18163 +  Q_CategoryHR  =     0.85964912280701;
18164 +  Q_CategoryDESIGNER  =                    0;
18165 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18166 +  Q_CategoryTEACHER  =                    0;
18167 +  Q_CategoryADVOCATE  =     0.03508771929824;
18168 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18169 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
18170 +  Q_CategoryFITNESS  =     0.01754385964912;
18171 +  Q_CategoryOTHER  =     0.01754385964912;
18172 +  Q_CategorySALES  =                    0;
18173 +  Q_CategoryCONSULTANT  =     0.01754385964912;
18174 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18175 +  V_CategoryHR  =                 0.75;
18176 +  V_CategoryDESIGNER  =                    0;
18177 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18178 +  V_CategoryTEACHER  =                    0;
18179 +  V_CategoryADVOCATE  =                    0;
18180 +  V_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18181 +  V_CategoryHEALTHCARE  =                0.075;
18182 +  V_CategoryFITNESS  =                0.025;
18183 +  V_CategoryOTHER  =                0.025;
18184 +  V_CategorySALES  =                0.025;
18185 +  V_CategoryCONSULTANT  =                 0.05;
18186 +  V_CategoryDIGITAL_MEDIA  =                0.025;
18187 +  I_Category  = 'HR' ;
18188 +  U_Category  = 'HR' ;
18189 +  END;
18190 +ELSE DO;
18191 +  IF  NOT MISSING(TextCluster12_SVD3 ) AND
18192 +    TextCluster12_SVD3  <    -0.37652252477467 THEN DO;
18193 +    _NODE_  =                    4;
18194 +    _LEAF_  =                    1;
18195 +    P_CategoryHR  =                    0;
18196 +    P_CategoryDESIGNER  =                    0;
18197 +    P_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18198 +    P_CategoryTEACHER  =     0.82692307692307;
18199 +    P_CategoryADVOCATE  =      0.0576923076923;
18200 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18201 +    P_CategoryHEALTHCARE  =     0.01923076923076;
18202 +    P_CategoryFITNESS  =     0.07692307692307;
18203 +    P_CategoryOTHER  =                    0;
18204 +    P_CategorySALES  =                    0;
18205 +    P_CategoryCONSULTANT  =                    0;
18206 +    P_CategoryDIGITAL_MEDIA  =                    0;
18207 +    Q_CategoryHR  =                    0;
18208 +    Q_CategoryDESIGNER  =                    0;
18209 +    Q_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18210 +    Q_CategoryTEACHER  =     0.82692307692307;
18211 +    Q_CategoryADVOCATE  =      0.0576923076923;
18212 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18213 +    Q_CategoryHEALTHCARE  =     0.01923076923076;
18214 +    Q_CategoryFITNESS  =     0.07692307692307;
18215 +    Q_CategoryOTHER  =                    0;
18216 +    Q_CategorySALES  =                    0;
18217 +    Q_CategoryCONSULTANT  =                    0;
18218 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18219 +    V_CategoryHR  =                    0;
18220 +    V_CategoryDESIGNER  =     0.02380952380952;
18221 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18222 +    V_CategoryTEACHER  =     0.69047619047619;
18223 +    V_CategoryADVOCATE  =     0.09523809523809;
18224 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18225 +    V_CategoryHEALTHCARE  =     0.02380952380952;
18226 +    V_CategoryFITNESS  =     0.04761904761904;
18227 +    V_CategoryOTHER  =     0.09523809523809;
18228 +    V_CategorySALES  =     0.02380952380952;
18229 +    V_CategoryCONSULTANT  =                    0;
18230 +    V_CategoryDIGITAL_MEDIA  =                    0;
18231 +    I_Category  = 'TEACHER' ;
18232 +    U_Category  = 'TEACHER' ;
18233 +    END;
18234 +  ELSE DO;
18235 +    IF  NOT MISSING(TextCluster12_SVD6 ) AND
18236 +      TextCluster12_SVD6  <    -0.26079411679026 THEN DO;
18237 +      _NODE_  =                   10;
18238 +      _LEAF_  =                    2;
18239 +      P_CategoryHR  =                    0;
18240 +      P_CategoryDESIGNER  =     0.91111111111111;
18241 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18242 +      P_CategoryTEACHER  =                    0;
18243 +      P_CategoryADVOCATE  =                    0;
18244 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18245 +      P_CategoryHEALTHCARE  =                    0;
18246 +      P_CategoryFITNESS  =                    0;
18247 +      P_CategoryOTHER  =                    0;
18248 +      P_CategorySALES  =     0.04444444444444;
18249 +      P_CategoryCONSULTANT  =                    0;
18250 +      P_CategoryDIGITAL_MEDIA  =     0.02222222222222;
18251 +      Q_CategoryHR  =                    0;
18252 +      Q_CategoryDESIGNER  =     0.91111111111111;
18253 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18254 +      Q_CategoryTEACHER  =                    0;
18255 +      Q_CategoryADVOCATE  =                    0;
18256 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18257 +      Q_CategoryHEALTHCARE  =                    0;
18258 +      Q_CategoryFITNESS  =                    0;
18259 +      Q_CategoryOTHER  =                    0;
18260 +      Q_CategorySALES  =     0.04444444444444;
18261 +      Q_CategoryCONSULTANT  =                    0;
18262 +      Q_CategoryDIGITAL_MEDIA  =     0.02222222222222;
18263 +      V_CategoryHR  =                    0;
18264 +      V_CategoryDESIGNER  =     0.89655172413793;
18265 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18266 +      V_CategoryTEACHER  =     0.03448275862068;
18267 +      V_CategoryADVOCATE  =                    0;
18268 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18269 +      V_CategoryHEALTHCARE  =                    0;
18270 +      V_CategoryFITNESS  =                    0;
18271 +      V_CategoryOTHER  =                    0;
18272 +      V_CategorySALES  =     0.06896551724137;
18273 +      V_CategoryCONSULTANT  =                    0;
18274 +      V_CategoryDIGITAL_MEDIA  =                    0;
18275 +      I_Category  = 'DESIGNER' ;
18276 +      U_Category  = 'DESIGNER' ;
18277 +      END;
18278 +    ELSE DO;
18279 +      IF  NOT MISSING(TextCluster12_SVD8 ) AND
18280 +             0.1076144602139 <= TextCluster12_SVD8  THEN DO;
18281 +        _NODE_  =                   15;
18282 +        _LEAF_  =                    6;
18283 +        P_CategoryHR  =                    0;
18284 +        P_CategoryDESIGNER  =     0.02173913043478;
18285 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18286 +        P_CategoryTEACHER  =                    0;
18287 +        P_CategoryADVOCATE  =     0.06521739130434;
18288 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18289 +        P_CategoryHEALTHCARE  =                    0;
18290 +        P_CategoryFITNESS  =      0.8695652173913;
18291 +        P_CategoryOTHER  =     0.02173913043478;
18292 +        P_CategorySALES  =                    0;
18293 +        P_CategoryCONSULTANT  =                    0;
18294 +        P_CategoryDIGITAL_MEDIA  =                    0;
18295 +        Q_CategoryHR  =                    0;
18296 +        Q_CategoryDESIGNER  =     0.02173913043478;
18297 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18298 +        Q_CategoryTEACHER  =                    0;
18299 +        Q_CategoryADVOCATE  =     0.06521739130434;
18300 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18301 +        Q_CategoryHEALTHCARE  =                    0;
18302 +        Q_CategoryFITNESS  =      0.8695652173913;
18303 +        Q_CategoryOTHER  =     0.02173913043478;
18304 +        Q_CategorySALES  =                    0;
18305 +        Q_CategoryCONSULTANT  =                    0;
18306 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18307 +        V_CategoryHR  =                    0;
18308 +        V_CategoryDESIGNER  =              0.03125;
18309 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18310 +        V_CategoryTEACHER  =                    0;
18311 +        V_CategoryADVOCATE  =                    0;
18312 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18313 +        V_CategoryHEALTHCARE  =              0.03125;
18314 +        V_CategoryFITNESS  =               0.8125;
18315 +        V_CategoryOTHER  =              0.03125;
18316 +        V_CategorySALES  =              0.03125;
18317 +        V_CategoryCONSULTANT  =              0.03125;
18318 +        V_CategoryDIGITAL_MEDIA  =              0.03125;
18319 +        I_Category  = 'FITNESS' ;
18320 +        U_Category  = 'FITNESS' ;
18321 +        END;
18322 +      ELSE DO;
18323 +        IF  NOT MISSING(TextCluster12_SVD2 ) AND
18324 +              0.21011149346228 <= TextCluster12_SVD2  THEN DO;
18325 +          _NODE_  =                   17;
18326 +          _LEAF_  =                    5;
18327 +          P_CategoryHR  =                    0;
18328 +          P_CategoryDESIGNER  =     0.01176470588235;
18329 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
18330 +          P_CategoryTEACHER  =                    0;
18331 +          P_CategoryADVOCATE  =      0.0235294117647;
18332 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
18333 +          P_CategoryHEALTHCARE  =     0.03529411764705;
18334 +          P_CategoryFITNESS  =                    0;
18335 +          P_CategoryOTHER  =     0.04705882352941;
18336 +          P_CategorySALES  =     0.01176470588235;
18337 +          P_CategoryCONSULTANT  =      0.2235294117647;
18338 +          P_CategoryDIGITAL_MEDIA  =     0.04705882352941;
18339 +          Q_CategoryHR  =                    0;
18340 +          Q_CategoryDESIGNER  =     0.01176470588235;
18341 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
18342 +          Q_CategoryTEACHER  =                    0;
18343 +          Q_CategoryADVOCATE  =      0.0235294117647;
18344 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
18345 +          Q_CategoryHEALTHCARE  =     0.03529411764705;
18346 +          Q_CategoryFITNESS  =                    0;
18347 +          Q_CategoryOTHER  =     0.04705882352941;
18348 +          Q_CategorySALES  =     0.01176470588235;
18349 +          Q_CategoryCONSULTANT  =      0.2235294117647;
18350 +          Q_CategoryDIGITAL_MEDIA  =     0.04705882352941;
18351 +          V_CategoryHR  =                    0;
18352 +          V_CategoryDESIGNER  =                    0;
18353 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.62264150943396;
18354 +          V_CategoryTEACHER  =                    0;
18355 +          V_CategoryADVOCATE  =      0.0188679245283;
18356 +          V_CategoryBUSINESS_DEVELOPMENT  =      0.0377358490566;
18357 +          V_CategoryHEALTHCARE  =      0.0188679245283;
18358 +          V_CategoryFITNESS  =                    0;
18359 +          V_CategoryOTHER  =      0.0566037735849;
18360 +          V_CategorySALES  =      0.0188679245283;
18361 +          V_CategoryCONSULTANT  =     0.15094339622641;
18362 +          V_CategoryDIGITAL_MEDIA  =      0.0754716981132;
18363 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18364 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18365 +          END;
18366 +        ELSE DO;
18367 +          IF  NOT MISSING(TextCluster12_SVD5 ) AND
18368 +                0.07714439436214 <= TextCluster12_SVD5  THEN DO;
18369 +            _NODE_  =                   19;
18370 +            _LEAF_  =                    4;
18371 +            P_CategoryHR  =     0.03076923076923;
18372 +            P_CategoryDESIGNER  =     0.04615384615384;
18373 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
18374 +            P_CategoryTEACHER  =     0.01538461538461;
18375 +            P_CategoryADVOCATE  =                    0;
18376 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
18377 +            P_CategoryHEALTHCARE  =     0.03076923076923;
18378 +            P_CategoryFITNESS  =                    0;
18379 +            P_CategoryOTHER  =     0.07692307692307;
18380 +            P_CategorySALES  =                    0;
18381 +            P_CategoryCONSULTANT  =      0.1076923076923;
18382 +            P_CategoryDIGITAL_MEDIA  =     0.56923076923076;
18383 +            Q_CategoryHR  =     0.03076923076923;
18384 +            Q_CategoryDESIGNER  =     0.04615384615384;
18385 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
18386 +            Q_CategoryTEACHER  =     0.01538461538461;
18387 +            Q_CategoryADVOCATE  =                    0;
18388 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
18389 +            Q_CategoryHEALTHCARE  =     0.03076923076923;
18390 +            Q_CategoryFITNESS  =                    0;
18391 +            Q_CategoryOTHER  =     0.07692307692307;
18392 +            Q_CategorySALES  =                    0;
18393 +            Q_CategoryCONSULTANT  =      0.1076923076923;
18394 +            Q_CategoryDIGITAL_MEDIA  =     0.56923076923076;
18395 +            V_CategoryHR  =     0.03030303030303;
18396 +            V_CategoryDESIGNER  =     0.03030303030303;
18397 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18398 +            V_CategoryTEACHER  =                    0;
18399 +            V_CategoryADVOCATE  =                    0;
18400 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.12121212121212;
18401 +            V_CategoryHEALTHCARE  =                    0;
18402 +            V_CategoryFITNESS  =                    0;
18403 +            V_CategoryOTHER  =                    0;
18404 +            V_CategorySALES  =     0.06060606060606;
18405 +            V_CategoryCONSULTANT  =     0.15151515151515;
18406 +            V_CategoryDIGITAL_MEDIA  =      0.6060606060606;
18407 +            I_Category  = 'DIGITAL-MEDIA' ;
18408 +            U_Category  = 'DIGITAL-MEDIA' ;
18409 +            END;
18410 +          ELSE DO;
18411 +            _NODE_  =                   18;
18412 +            _LEAF_  =                    3;
18413 +            P_CategoryHR  =     0.01234567901234;
18414 +            P_CategoryDESIGNER  =      0.0216049382716;
18415 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18416 +            P_CategoryTEACHER  =     0.01851851851851;
18417 +            P_CategoryADVOCATE  =     0.14506172839506;
18418 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18419 +            P_CategoryHEALTHCARE  =     0.15123456790123;
18420 +            P_CategoryFITNESS  =     0.04012345679012;
18421 +            P_CategoryOTHER  =     0.16049382716049;
18422 +            P_CategorySALES  =     0.16975308641975;
18423 +            P_CategoryCONSULTANT  =     0.09259259259259;
18424 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18425 +            Q_CategoryHR  =     0.01234567901234;
18426 +            Q_CategoryDESIGNER  =      0.0216049382716;
18427 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18428 +            Q_CategoryTEACHER  =     0.01851851851851;
18429 +            Q_CategoryADVOCATE  =     0.14506172839506;
18430 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18431 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
18432 +            Q_CategoryFITNESS  =     0.04012345679012;
18433 +            Q_CategoryOTHER  =     0.16049382716049;
18434 +            Q_CategorySALES  =     0.16975308641975;
18435 +            Q_CategoryCONSULTANT  =     0.09259259259259;
18436 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18437 +            V_CategoryHR  =     0.00568181818181;
18438 +            V_CategoryDESIGNER  =     0.01136363636363;
18439 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01704545454545;
18440 +            V_CategoryTEACHER  =     0.00568181818181;
18441 +            V_CategoryADVOCATE  =     0.17045454545454;
18442 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16477272727272;
18443 +            V_CategoryHEALTHCARE  =     0.15340909090909;
18444 +            V_CategoryFITNESS  =      0.0340909090909;
18445 +            V_CategoryOTHER  =     0.16477272727272;
18446 +            V_CategorySALES  =     0.14772727272727;
18447 +            V_CategoryCONSULTANT  =     0.10795454545454;
18448 +            V_CategoryDIGITAL_MEDIA  =     0.01704545454545;
18449 +            I_Category  = 'SALES' ;
18450 +            U_Category  = 'SALES' ;
18451 +            END;
18452 +          END;
18453 +        END;
18454 +      END;
18455 +    END;
18456 +  END;
18457 +
18458 +*****  RESIDUALS R_ *************;
18459 +IF  F_Category  NE 'HR'
18460 +AND F_Category  NE 'DESIGNER'
18461 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18462 +AND F_Category  NE 'TEACHER'
18463 +AND F_Category  NE 'ADVOCATE'
18464 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18465 +AND F_Category  NE 'HEALTHCARE'
18466 +AND F_Category  NE 'FITNESS'
18467 +AND F_Category  NE 'OTHER'
18468 +AND F_Category  NE 'SALES'
18469 +AND F_Category  NE 'CONSULTANT'
18470 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18471 +        R_CategoryHR  = .;
18472 +        R_CategoryDESIGNER  = .;
18473 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18474 +        R_CategoryTEACHER  = .;
18475 +        R_CategoryADVOCATE  = .;
18476 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18477 +        R_CategoryHEALTHCARE  = .;
18478 +        R_CategoryFITNESS  = .;
18479 +        R_CategoryOTHER  = .;
18480 +        R_CategorySALES  = .;
18481 +        R_CategoryCONSULTANT  = .;
18482 +        R_CategoryDIGITAL_MEDIA  = .;
18483 + END;
18484 + ELSE DO;
18485 +       R_CategoryHR  =  -P_CategoryHR ;
18486 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18487 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18488 +         ;
18489 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18490 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18491 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18492 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18493 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18494 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18495 +       R_CategorySALES  =  -P_CategorySALES ;
18496 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18497 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18498 +       SELECT( F_Category  );
18499 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18500 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18501 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18502 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18503 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18504 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18505 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18506 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18507 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18508 +          +1;
18509 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18510 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18511 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18512 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18513 +          +1;
18514 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18515 +        R_CategoryDIGITAL_MEDIA  +1;
18516 +       END;
18517 + END;
18518 +
18519 +****************************************************************;
18520 +******          END OF DECISION TREE SCORING CODE         ******;
18521 +****************************************************************;
18522 +
18523 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18524  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE8_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18525  quit;
18526  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18527  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas";
18528  *------------------------------------------------------------*;
18529  * Tree8: Scoring VALIDATE data;
18530  *------------------------------------------------------------*;
18531  data EMWS3.Tree8_VALIDATE
18532  / view=EMWS3.Tree8_VALIDATE
18533  ;
18534  set EMWS3.TextCluster12_VALIDATE
18535  ;
18536  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas.
18537 +****************************************************************;
18538 +******             DECISION TREE SCORING CODE             ******;
18539 +****************************************************************;
18540 +
18541 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18542 +LENGTH F_Category  $   22;
18543 +LENGTH I_Category  $   22;
18544 +LENGTH U_Category  $   22;
18545 +LENGTH _WARN_  $    4;
18546 +
18547 +******              LABELS FOR NEW VARIABLES              ******;
18548 +label _NODE_ = 'Node' ;
18549 +label _LEAF_ = 'Leaf' ;
18550 +label P_CategoryHR = 'Predicted: Category=HR' ;
18551 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18552 +label P_CategoryINFORMATION_TECHNOLOGY =
18553 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18554 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18555 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18556 +label P_CategoryBUSINESS_DEVELOPMENT =
18557 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18558 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18559 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18560 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18561 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18562 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18563 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18564 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18565 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18566 +label Q_CategoryINFORMATION_TECHNOLOGY =
18567 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18568 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18569 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18570 +label Q_CategoryBUSINESS_DEVELOPMENT =
18571 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18572 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18573 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18574 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18575 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18576 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18577 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18578 +label V_CategoryHR = 'Validated: Category=HR' ;
18579 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18580 +label V_CategoryINFORMATION_TECHNOLOGY =
18581 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18582 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18583 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18584 +label V_CategoryBUSINESS_DEVELOPMENT =
18585 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18586 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18587 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18588 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18589 +label V_CategorySALES = 'Validated: Category=SALES' ;
18590 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18591 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18592 +label R_CategoryHR = 'Residual: Category=HR' ;
18593 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18594 +label R_CategoryINFORMATION_TECHNOLOGY =
18595 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18596 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18597 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18598 +label R_CategoryBUSINESS_DEVELOPMENT =
18599 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18600 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18601 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18602 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18603 +label R_CategorySALES = 'Residual: Category=SALES' ;
18604 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18605 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18606 +label F_Category = 'From: Category' ;
18607 +label I_Category = 'Into: Category' ;
18608 +label U_Category = 'Unnormalized Into: Category' ;
18609 +label _WARN_ = 'Warnings' ;
18610 +
18611 +
18612 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18613 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18614 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18615 +
18616 +
18617 +_ARBFMT_22 = PUT( Category , $22.);
18618 + %DMNORMCP( _ARBFMT_22, F_Category );
18619 +
18620 +******             ASSIGN OBSERVATION TO NODE             ******;
18621 +IF  NOT MISSING(TextCluster12_SVD3 ) AND
18622 +      0.25711392323257 <= TextCluster12_SVD3  THEN DO;
18623 +  _NODE_  =                    3;
18624 +  _LEAF_  =                    7;
18625 +  P_CategoryHR  =     0.85964912280701;
18626 +  P_CategoryDESIGNER  =                    0;
18627 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18628 +  P_CategoryTEACHER  =                    0;
18629 +  P_CategoryADVOCATE  =     0.03508771929824;
18630 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18631 +  P_CategoryHEALTHCARE  =     0.03508771929824;
18632 +  P_CategoryFITNESS  =     0.01754385964912;
18633 +  P_CategoryOTHER  =     0.01754385964912;
18634 +  P_CategorySALES  =                    0;
18635 +  P_CategoryCONSULTANT  =     0.01754385964912;
18636 +  P_CategoryDIGITAL_MEDIA  =                    0;
18637 +  Q_CategoryHR  =     0.85964912280701;
18638 +  Q_CategoryDESIGNER  =                    0;
18639 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18640 +  Q_CategoryTEACHER  =                    0;
18641 +  Q_CategoryADVOCATE  =     0.03508771929824;
18642 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
18643 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
18644 +  Q_CategoryFITNESS  =     0.01754385964912;
18645 +  Q_CategoryOTHER  =     0.01754385964912;
18646 +  Q_CategorySALES  =                    0;
18647 +  Q_CategoryCONSULTANT  =     0.01754385964912;
18648 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18649 +  V_CategoryHR  =                 0.75;
18650 +  V_CategoryDESIGNER  =                    0;
18651 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18652 +  V_CategoryTEACHER  =                    0;
18653 +  V_CategoryADVOCATE  =                    0;
18654 +  V_CategoryBUSINESS_DEVELOPMENT  =                0.025;
18655 +  V_CategoryHEALTHCARE  =                0.075;
18656 +  V_CategoryFITNESS  =                0.025;
18657 +  V_CategoryOTHER  =                0.025;
18658 +  V_CategorySALES  =                0.025;
18659 +  V_CategoryCONSULTANT  =                 0.05;
18660 +  V_CategoryDIGITAL_MEDIA  =                0.025;
18661 +  I_Category  = 'HR' ;
18662 +  U_Category  = 'HR' ;
18663 +  END;
18664 +ELSE DO;
18665 +  IF  NOT MISSING(TextCluster12_SVD3 ) AND
18666 +    TextCluster12_SVD3  <    -0.37652252477467 THEN DO;
18667 +    _NODE_  =                    4;
18668 +    _LEAF_  =                    1;
18669 +    P_CategoryHR  =                    0;
18670 +    P_CategoryDESIGNER  =                    0;
18671 +    P_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18672 +    P_CategoryTEACHER  =     0.82692307692307;
18673 +    P_CategoryADVOCATE  =      0.0576923076923;
18674 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18675 +    P_CategoryHEALTHCARE  =     0.01923076923076;
18676 +    P_CategoryFITNESS  =     0.07692307692307;
18677 +    P_CategoryOTHER  =                    0;
18678 +    P_CategorySALES  =                    0;
18679 +    P_CategoryCONSULTANT  =                    0;
18680 +    P_CategoryDIGITAL_MEDIA  =                    0;
18681 +    Q_CategoryHR  =                    0;
18682 +    Q_CategoryDESIGNER  =                    0;
18683 +    Q_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18684 +    Q_CategoryTEACHER  =     0.82692307692307;
18685 +    Q_CategoryADVOCATE  =      0.0576923076923;
18686 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18687 +    Q_CategoryHEALTHCARE  =     0.01923076923076;
18688 +    Q_CategoryFITNESS  =     0.07692307692307;
18689 +    Q_CategoryOTHER  =                    0;
18690 +    Q_CategorySALES  =                    0;
18691 +    Q_CategoryCONSULTANT  =                    0;
18692 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18693 +    V_CategoryHR  =                    0;
18694 +    V_CategoryDESIGNER  =     0.02380952380952;
18695 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18696 +    V_CategoryTEACHER  =     0.69047619047619;
18697 +    V_CategoryADVOCATE  =     0.09523809523809;
18698 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18699 +    V_CategoryHEALTHCARE  =     0.02380952380952;
18700 +    V_CategoryFITNESS  =     0.04761904761904;
18701 +    V_CategoryOTHER  =     0.09523809523809;
18702 +    V_CategorySALES  =     0.02380952380952;
18703 +    V_CategoryCONSULTANT  =                    0;
18704 +    V_CategoryDIGITAL_MEDIA  =                    0;
18705 +    I_Category  = 'TEACHER' ;
18706 +    U_Category  = 'TEACHER' ;
18707 +    END;
18708 +  ELSE DO;
18709 +    IF  NOT MISSING(TextCluster12_SVD6 ) AND
18710 +      TextCluster12_SVD6  <    -0.26079411679026 THEN DO;
18711 +      _NODE_  =                   10;
18712 +      _LEAF_  =                    2;
18713 +      P_CategoryHR  =                    0;
18714 +      P_CategoryDESIGNER  =     0.91111111111111;
18715 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18716 +      P_CategoryTEACHER  =                    0;
18717 +      P_CategoryADVOCATE  =                    0;
18718 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18719 +      P_CategoryHEALTHCARE  =                    0;
18720 +      P_CategoryFITNESS  =                    0;
18721 +      P_CategoryOTHER  =                    0;
18722 +      P_CategorySALES  =     0.04444444444444;
18723 +      P_CategoryCONSULTANT  =                    0;
18724 +      P_CategoryDIGITAL_MEDIA  =     0.02222222222222;
18725 +      Q_CategoryHR  =                    0;
18726 +      Q_CategoryDESIGNER  =     0.91111111111111;
18727 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18728 +      Q_CategoryTEACHER  =                    0;
18729 +      Q_CategoryADVOCATE  =                    0;
18730 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18731 +      Q_CategoryHEALTHCARE  =                    0;
18732 +      Q_CategoryFITNESS  =                    0;
18733 +      Q_CategoryOTHER  =                    0;
18734 +      Q_CategorySALES  =     0.04444444444444;
18735 +      Q_CategoryCONSULTANT  =                    0;
18736 +      Q_CategoryDIGITAL_MEDIA  =     0.02222222222222;
18737 +      V_CategoryHR  =                    0;
18738 +      V_CategoryDESIGNER  =     0.89655172413793;
18739 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18740 +      V_CategoryTEACHER  =     0.03448275862068;
18741 +      V_CategoryADVOCATE  =                    0;
18742 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18743 +      V_CategoryHEALTHCARE  =                    0;
18744 +      V_CategoryFITNESS  =                    0;
18745 +      V_CategoryOTHER  =                    0;
18746 +      V_CategorySALES  =     0.06896551724137;
18747 +      V_CategoryCONSULTANT  =                    0;
18748 +      V_CategoryDIGITAL_MEDIA  =                    0;
18749 +      I_Category  = 'DESIGNER' ;
18750 +      U_Category  = 'DESIGNER' ;
18751 +      END;
18752 +    ELSE DO;
18753 +      IF  NOT MISSING(TextCluster12_SVD8 ) AND
18754 +             0.1076144602139 <= TextCluster12_SVD8  THEN DO;
18755 +        _NODE_  =                   15;
18756 +        _LEAF_  =                    6;
18757 +        P_CategoryHR  =                    0;
18758 +        P_CategoryDESIGNER  =     0.02173913043478;
18759 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18760 +        P_CategoryTEACHER  =                    0;
18761 +        P_CategoryADVOCATE  =     0.06521739130434;
18762 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18763 +        P_CategoryHEALTHCARE  =                    0;
18764 +        P_CategoryFITNESS  =      0.8695652173913;
18765 +        P_CategoryOTHER  =     0.02173913043478;
18766 +        P_CategorySALES  =                    0;
18767 +        P_CategoryCONSULTANT  =                    0;
18768 +        P_CategoryDIGITAL_MEDIA  =                    0;
18769 +        Q_CategoryHR  =                    0;
18770 +        Q_CategoryDESIGNER  =     0.02173913043478;
18771 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18772 +        Q_CategoryTEACHER  =                    0;
18773 +        Q_CategoryADVOCATE  =     0.06521739130434;
18774 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18775 +        Q_CategoryHEALTHCARE  =                    0;
18776 +        Q_CategoryFITNESS  =      0.8695652173913;
18777 +        Q_CategoryOTHER  =     0.02173913043478;
18778 +        Q_CategorySALES  =                    0;
18779 +        Q_CategoryCONSULTANT  =                    0;
18780 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18781 +        V_CategoryHR  =                    0;
18782 +        V_CategoryDESIGNER  =              0.03125;
18783 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18784 +        V_CategoryTEACHER  =                    0;
18785 +        V_CategoryADVOCATE  =                    0;
18786 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18787 +        V_CategoryHEALTHCARE  =              0.03125;
18788 +        V_CategoryFITNESS  =               0.8125;
18789 +        V_CategoryOTHER  =              0.03125;
18790 +        V_CategorySALES  =              0.03125;
18791 +        V_CategoryCONSULTANT  =              0.03125;
18792 +        V_CategoryDIGITAL_MEDIA  =              0.03125;
18793 +        I_Category  = 'FITNESS' ;
18794 +        U_Category  = 'FITNESS' ;
18795 +        END;
18796 +      ELSE DO;
18797 +        IF  NOT MISSING(TextCluster12_SVD2 ) AND
18798 +              0.21011149346228 <= TextCluster12_SVD2  THEN DO;
18799 +          _NODE_  =                   17;
18800 +          _LEAF_  =                    5;
18801 +          P_CategoryHR  =                    0;
18802 +          P_CategoryDESIGNER  =     0.01176470588235;
18803 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
18804 +          P_CategoryTEACHER  =                    0;
18805 +          P_CategoryADVOCATE  =      0.0235294117647;
18806 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
18807 +          P_CategoryHEALTHCARE  =     0.03529411764705;
18808 +          P_CategoryFITNESS  =                    0;
18809 +          P_CategoryOTHER  =     0.04705882352941;
18810 +          P_CategorySALES  =     0.01176470588235;
18811 +          P_CategoryCONSULTANT  =      0.2235294117647;
18812 +          P_CategoryDIGITAL_MEDIA  =     0.04705882352941;
18813 +          Q_CategoryHR  =                    0;
18814 +          Q_CategoryDESIGNER  =     0.01176470588235;
18815 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
18816 +          Q_CategoryTEACHER  =                    0;
18817 +          Q_CategoryADVOCATE  =      0.0235294117647;
18818 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
18819 +          Q_CategoryHEALTHCARE  =     0.03529411764705;
18820 +          Q_CategoryFITNESS  =                    0;
18821 +          Q_CategoryOTHER  =     0.04705882352941;
18822 +          Q_CategorySALES  =     0.01176470588235;
18823 +          Q_CategoryCONSULTANT  =      0.2235294117647;
18824 +          Q_CategoryDIGITAL_MEDIA  =     0.04705882352941;
18825 +          V_CategoryHR  =                    0;
18826 +          V_CategoryDESIGNER  =                    0;
18827 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.62264150943396;
18828 +          V_CategoryTEACHER  =                    0;
18829 +          V_CategoryADVOCATE  =      0.0188679245283;
18830 +          V_CategoryBUSINESS_DEVELOPMENT  =      0.0377358490566;
18831 +          V_CategoryHEALTHCARE  =      0.0188679245283;
18832 +          V_CategoryFITNESS  =                    0;
18833 +          V_CategoryOTHER  =      0.0566037735849;
18834 +          V_CategorySALES  =      0.0188679245283;
18835 +          V_CategoryCONSULTANT  =     0.15094339622641;
18836 +          V_CategoryDIGITAL_MEDIA  =      0.0754716981132;
18837 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18838 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18839 +          END;
18840 +        ELSE DO;
18841 +          IF  NOT MISSING(TextCluster12_SVD5 ) AND
18842 +                0.07714439436214 <= TextCluster12_SVD5  THEN DO;
18843 +            _NODE_  =                   19;
18844 +            _LEAF_  =                    4;
18845 +            P_CategoryHR  =     0.03076923076923;
18846 +            P_CategoryDESIGNER  =     0.04615384615384;
18847 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
18848 +            P_CategoryTEACHER  =     0.01538461538461;
18849 +            P_CategoryADVOCATE  =                    0;
18850 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
18851 +            P_CategoryHEALTHCARE  =     0.03076923076923;
18852 +            P_CategoryFITNESS  =                    0;
18853 +            P_CategoryOTHER  =     0.07692307692307;
18854 +            P_CategorySALES  =                    0;
18855 +            P_CategoryCONSULTANT  =      0.1076923076923;
18856 +            P_CategoryDIGITAL_MEDIA  =     0.56923076923076;
18857 +            Q_CategoryHR  =     0.03076923076923;
18858 +            Q_CategoryDESIGNER  =     0.04615384615384;
18859 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
18860 +            Q_CategoryTEACHER  =     0.01538461538461;
18861 +            Q_CategoryADVOCATE  =                    0;
18862 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
18863 +            Q_CategoryHEALTHCARE  =     0.03076923076923;
18864 +            Q_CategoryFITNESS  =                    0;
18865 +            Q_CategoryOTHER  =     0.07692307692307;
18866 +            Q_CategorySALES  =                    0;
18867 +            Q_CategoryCONSULTANT  =      0.1076923076923;
18868 +            Q_CategoryDIGITAL_MEDIA  =     0.56923076923076;
18869 +            V_CategoryHR  =     0.03030303030303;
18870 +            V_CategoryDESIGNER  =     0.03030303030303;
18871 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18872 +            V_CategoryTEACHER  =                    0;
18873 +            V_CategoryADVOCATE  =                    0;
18874 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.12121212121212;
18875 +            V_CategoryHEALTHCARE  =                    0;
18876 +            V_CategoryFITNESS  =                    0;
18877 +            V_CategoryOTHER  =                    0;
18878 +            V_CategorySALES  =     0.06060606060606;
18879 +            V_CategoryCONSULTANT  =     0.15151515151515;
18880 +            V_CategoryDIGITAL_MEDIA  =      0.6060606060606;
18881 +            I_Category  = 'DIGITAL-MEDIA' ;
18882 +            U_Category  = 'DIGITAL-MEDIA' ;
18883 +            END;
18884 +          ELSE DO;
18885 +            _NODE_  =                   18;
18886 +            _LEAF_  =                    3;
18887 +            P_CategoryHR  =     0.01234567901234;
18888 +            P_CategoryDESIGNER  =      0.0216049382716;
18889 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18890 +            P_CategoryTEACHER  =     0.01851851851851;
18891 +            P_CategoryADVOCATE  =     0.14506172839506;
18892 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18893 +            P_CategoryHEALTHCARE  =     0.15123456790123;
18894 +            P_CategoryFITNESS  =     0.04012345679012;
18895 +            P_CategoryOTHER  =     0.16049382716049;
18896 +            P_CategorySALES  =     0.16975308641975;
18897 +            P_CategoryCONSULTANT  =     0.09259259259259;
18898 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18899 +            Q_CategoryHR  =     0.01234567901234;
18900 +            Q_CategoryDESIGNER  =      0.0216049382716;
18901 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
18902 +            Q_CategoryTEACHER  =     0.01851851851851;
18903 +            Q_CategoryADVOCATE  =     0.14506172839506;
18904 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
18905 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
18906 +            Q_CategoryFITNESS  =     0.04012345679012;
18907 +            Q_CategoryOTHER  =     0.16049382716049;
18908 +            Q_CategorySALES  =     0.16975308641975;
18909 +            Q_CategoryCONSULTANT  =     0.09259259259259;
18910 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
18911 +            V_CategoryHR  =     0.00568181818181;
18912 +            V_CategoryDESIGNER  =     0.01136363636363;
18913 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01704545454545;
18914 +            V_CategoryTEACHER  =     0.00568181818181;
18915 +            V_CategoryADVOCATE  =     0.17045454545454;
18916 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16477272727272;
18917 +            V_CategoryHEALTHCARE  =     0.15340909090909;
18918 +            V_CategoryFITNESS  =      0.0340909090909;
18919 +            V_CategoryOTHER  =     0.16477272727272;
18920 +            V_CategorySALES  =     0.14772727272727;
18921 +            V_CategoryCONSULTANT  =     0.10795454545454;
18922 +            V_CategoryDIGITAL_MEDIA  =     0.01704545454545;
18923 +            I_Category  = 'SALES' ;
18924 +            U_Category  = 'SALES' ;
18925 +            END;
18926 +          END;
18927 +        END;
18928 +      END;
18929 +    END;
18930 +  END;
18931 +
18932 +*****  RESIDUALS R_ *************;
18933 +IF  F_Category  NE 'HR'
18934 +AND F_Category  NE 'DESIGNER'
18935 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18936 +AND F_Category  NE 'TEACHER'
18937 +AND F_Category  NE 'ADVOCATE'
18938 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18939 +AND F_Category  NE 'HEALTHCARE'
18940 +AND F_Category  NE 'FITNESS'
18941 +AND F_Category  NE 'OTHER'
18942 +AND F_Category  NE 'SALES'
18943 +AND F_Category  NE 'CONSULTANT'
18944 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18945 +        R_CategoryHR  = .;
18946 +        R_CategoryDESIGNER  = .;
18947 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18948 +        R_CategoryTEACHER  = .;
18949 +        R_CategoryADVOCATE  = .;
18950 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18951 +        R_CategoryHEALTHCARE  = .;
18952 +        R_CategoryFITNESS  = .;
18953 +        R_CategoryOTHER  = .;
18954 +        R_CategorySALES  = .;
18955 +        R_CategoryCONSULTANT  = .;
18956 +        R_CategoryDIGITAL_MEDIA  = .;
18957 + END;
18958 + ELSE DO;
18959 +       R_CategoryHR  =  -P_CategoryHR ;
18960 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18961 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18962 +         ;
18963 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18964 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18965 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18966 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18967 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18968 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18969 +       R_CategorySALES  =  -P_CategorySALES ;
18970 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18971 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18972 +       SELECT( F_Category  );
18973 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18974 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18975 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18976 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18977 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18978 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18979 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18980 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18981 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18982 +          +1;
18983 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18984 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18985 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18986 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18987 +          +1;
18988 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18989 +        R_CategoryDIGITAL_MEDIA  +1;
18990 +       END;
18991 + END;
18992 +
18993 +****************************************************************;
18994 +******          END OF DECISION TREE SCORING CODE         ******;
18995 +****************************************************************;
18996 +
18997 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18998  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE8_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18999  quit;
19000  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
19001  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas";
19002  *------------------------------------------------------------*;
19003  * Tree8: Scoring TEST data;
19004  *------------------------------------------------------------*;
19005  data EMWS3.Tree8_TEST
19006  / view=EMWS3.Tree8_TEST
19007  ;
19008  set EMWS3.TextCluster12_TEST
19009  ;
19010  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree8\EMFLOWSCORE.sas.
19011 +****************************************************************;
19012 +******             DECISION TREE SCORING CODE             ******;
19013 +****************************************************************;
19014 +
19015 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
19016 +LENGTH F_Category  $   22;
19017 +LENGTH I_Category  $   22;
19018 +LENGTH U_Category  $   22;
19019 +LENGTH _WARN_  $    4;
19020 +
19021 +******              LABELS FOR NEW VARIABLES              ******;
19022 +label _NODE_ = 'Node' ;
19023 +label _LEAF_ = 'Leaf' ;
19024 +label P_CategoryHR = 'Predicted: Category=HR' ;
19025 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
19026 +label P_CategoryINFORMATION_TECHNOLOGY =
19027 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
19028 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
19029 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
19030 +label P_CategoryBUSINESS_DEVELOPMENT =
19031 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
19032 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
19033 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
19034 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
19035 +label P_CategorySALES = 'Predicted: Category=SALES' ;
19036 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
19037 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
19038 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
19039 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
19040 +label Q_CategoryINFORMATION_TECHNOLOGY =
19041 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
19042 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
19043 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
19044 +label Q_CategoryBUSINESS_DEVELOPMENT =
19045 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
19046 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
19047 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
19048 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
19049 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
19050 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
19051 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
19052 +label V_CategoryHR = 'Validated: Category=HR' ;
19053 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
19054 +label V_CategoryINFORMATION_TECHNOLOGY =
19055 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
19056 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
19057 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
19058 +label V_CategoryBUSINESS_DEVELOPMENT =
19059 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
19060 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
19061 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
19062 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
19063 +label V_CategorySALES = 'Validated: Category=SALES' ;
19064 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
19065 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
19066 +label R_CategoryHR = 'Residual: Category=HR' ;
19067 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
19068 +label R_CategoryINFORMATION_TECHNOLOGY =
19069 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
19070 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19071 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19072 +label R_CategoryBUSINESS_DEVELOPMENT =
19073 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19074 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19075 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19076 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19077 +label R_CategorySALES = 'Residual: Category=SALES' ;
19078 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19079 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19080 +label F_Category = 'From: Category' ;
19081 +label I_Category = 'Into: Category' ;
19082 +label U_Category = 'Unnormalized Into: Category' ;
19083 +label _WARN_ = 'Warnings' ;
19084 +
19085 +
19086 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19087 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19088 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19089 +
19090 +
19091 +_ARBFMT_22 = PUT( Category , $22.);
19092 + %DMNORMCP( _ARBFMT_22, F_Category );
19093 +
19094 +******             ASSIGN OBSERVATION TO NODE             ******;
19095 +IF  NOT MISSING(TextCluster12_SVD3 ) AND
19096 +      0.25711392323257 <= TextCluster12_SVD3  THEN DO;
19097 +  _NODE_  =                    3;
19098 +  _LEAF_  =                    7;
19099 +  P_CategoryHR  =     0.85964912280701;
19100 +  P_CategoryDESIGNER  =                    0;
19101 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19102 +  P_CategoryTEACHER  =                    0;
19103 +  P_CategoryADVOCATE  =     0.03508771929824;
19104 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
19105 +  P_CategoryHEALTHCARE  =     0.03508771929824;
19106 +  P_CategoryFITNESS  =     0.01754385964912;
19107 +  P_CategoryOTHER  =     0.01754385964912;
19108 +  P_CategorySALES  =                    0;
19109 +  P_CategoryCONSULTANT  =     0.01754385964912;
19110 +  P_CategoryDIGITAL_MEDIA  =                    0;
19111 +  Q_CategoryHR  =     0.85964912280701;
19112 +  Q_CategoryDESIGNER  =                    0;
19113 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19114 +  Q_CategoryTEACHER  =                    0;
19115 +  Q_CategoryADVOCATE  =     0.03508771929824;
19116 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01754385964912;
19117 +  Q_CategoryHEALTHCARE  =     0.03508771929824;
19118 +  Q_CategoryFITNESS  =     0.01754385964912;
19119 +  Q_CategoryOTHER  =     0.01754385964912;
19120 +  Q_CategorySALES  =                    0;
19121 +  Q_CategoryCONSULTANT  =     0.01754385964912;
19122 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19123 +  V_CategoryHR  =                 0.75;
19124 +  V_CategoryDESIGNER  =                    0;
19125 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19126 +  V_CategoryTEACHER  =                    0;
19127 +  V_CategoryADVOCATE  =                    0;
19128 +  V_CategoryBUSINESS_DEVELOPMENT  =                0.025;
19129 +  V_CategoryHEALTHCARE  =                0.075;
19130 +  V_CategoryFITNESS  =                0.025;
19131 +  V_CategoryOTHER  =                0.025;
19132 +  V_CategorySALES  =                0.025;
19133 +  V_CategoryCONSULTANT  =                 0.05;
19134 +  V_CategoryDIGITAL_MEDIA  =                0.025;
19135 +  I_Category  = 'HR' ;
19136 +  U_Category  = 'HR' ;
19137 +  END;
19138 +ELSE DO;
19139 +  IF  NOT MISSING(TextCluster12_SVD3 ) AND
19140 +    TextCluster12_SVD3  <    -0.37652252477467 THEN DO;
19141 +    _NODE_  =                    4;
19142 +    _LEAF_  =                    1;
19143 +    P_CategoryHR  =                    0;
19144 +    P_CategoryDESIGNER  =                    0;
19145 +    P_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
19146 +    P_CategoryTEACHER  =     0.82692307692307;
19147 +    P_CategoryADVOCATE  =      0.0576923076923;
19148 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19149 +    P_CategoryHEALTHCARE  =     0.01923076923076;
19150 +    P_CategoryFITNESS  =     0.07692307692307;
19151 +    P_CategoryOTHER  =                    0;
19152 +    P_CategorySALES  =                    0;
19153 +    P_CategoryCONSULTANT  =                    0;
19154 +    P_CategoryDIGITAL_MEDIA  =                    0;
19155 +    Q_CategoryHR  =                    0;
19156 +    Q_CategoryDESIGNER  =                    0;
19157 +    Q_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
19158 +    Q_CategoryTEACHER  =     0.82692307692307;
19159 +    Q_CategoryADVOCATE  =      0.0576923076923;
19160 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19161 +    Q_CategoryHEALTHCARE  =     0.01923076923076;
19162 +    Q_CategoryFITNESS  =     0.07692307692307;
19163 +    Q_CategoryOTHER  =                    0;
19164 +    Q_CategorySALES  =                    0;
19165 +    Q_CategoryCONSULTANT  =                    0;
19166 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19167 +    V_CategoryHR  =                    0;
19168 +    V_CategoryDESIGNER  =     0.02380952380952;
19169 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19170 +    V_CategoryTEACHER  =     0.69047619047619;
19171 +    V_CategoryADVOCATE  =     0.09523809523809;
19172 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19173 +    V_CategoryHEALTHCARE  =     0.02380952380952;
19174 +    V_CategoryFITNESS  =     0.04761904761904;
19175 +    V_CategoryOTHER  =     0.09523809523809;
19176 +    V_CategorySALES  =     0.02380952380952;
19177 +    V_CategoryCONSULTANT  =                    0;
19178 +    V_CategoryDIGITAL_MEDIA  =                    0;
19179 +    I_Category  = 'TEACHER' ;
19180 +    U_Category  = 'TEACHER' ;
19181 +    END;
19182 +  ELSE DO;
19183 +    IF  NOT MISSING(TextCluster12_SVD6 ) AND
19184 +      TextCluster12_SVD6  <    -0.26079411679026 THEN DO;
19185 +      _NODE_  =                   10;
19186 +      _LEAF_  =                    2;
19187 +      P_CategoryHR  =                    0;
19188 +      P_CategoryDESIGNER  =     0.91111111111111;
19189 +      P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19190 +      P_CategoryTEACHER  =                    0;
19191 +      P_CategoryADVOCATE  =                    0;
19192 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19193 +      P_CategoryHEALTHCARE  =                    0;
19194 +      P_CategoryFITNESS  =                    0;
19195 +      P_CategoryOTHER  =                    0;
19196 +      P_CategorySALES  =     0.04444444444444;
19197 +      P_CategoryCONSULTANT  =                    0;
19198 +      P_CategoryDIGITAL_MEDIA  =     0.02222222222222;
19199 +      Q_CategoryHR  =                    0;
19200 +      Q_CategoryDESIGNER  =     0.91111111111111;
19201 +      Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19202 +      Q_CategoryTEACHER  =                    0;
19203 +      Q_CategoryADVOCATE  =                    0;
19204 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19205 +      Q_CategoryHEALTHCARE  =                    0;
19206 +      Q_CategoryFITNESS  =                    0;
19207 +      Q_CategoryOTHER  =                    0;
19208 +      Q_CategorySALES  =     0.04444444444444;
19209 +      Q_CategoryCONSULTANT  =                    0;
19210 +      Q_CategoryDIGITAL_MEDIA  =     0.02222222222222;
19211 +      V_CategoryHR  =                    0;
19212 +      V_CategoryDESIGNER  =     0.89655172413793;
19213 +      V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19214 +      V_CategoryTEACHER  =     0.03448275862068;
19215 +      V_CategoryADVOCATE  =                    0;
19216 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19217 +      V_CategoryHEALTHCARE  =                    0;
19218 +      V_CategoryFITNESS  =                    0;
19219 +      V_CategoryOTHER  =                    0;
19220 +      V_CategorySALES  =     0.06896551724137;
19221 +      V_CategoryCONSULTANT  =                    0;
19222 +      V_CategoryDIGITAL_MEDIA  =                    0;
19223 +      I_Category  = 'DESIGNER' ;
19224 +      U_Category  = 'DESIGNER' ;
19225 +      END;
19226 +    ELSE DO;
19227 +      IF  NOT MISSING(TextCluster12_SVD8 ) AND
19228 +             0.1076144602139 <= TextCluster12_SVD8  THEN DO;
19229 +        _NODE_  =                   15;
19230 +        _LEAF_  =                    6;
19231 +        P_CategoryHR  =                    0;
19232 +        P_CategoryDESIGNER  =     0.02173913043478;
19233 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19234 +        P_CategoryTEACHER  =                    0;
19235 +        P_CategoryADVOCATE  =     0.06521739130434;
19236 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19237 +        P_CategoryHEALTHCARE  =                    0;
19238 +        P_CategoryFITNESS  =      0.8695652173913;
19239 +        P_CategoryOTHER  =     0.02173913043478;
19240 +        P_CategorySALES  =                    0;
19241 +        P_CategoryCONSULTANT  =                    0;
19242 +        P_CategoryDIGITAL_MEDIA  =                    0;
19243 +        Q_CategoryHR  =                    0;
19244 +        Q_CategoryDESIGNER  =     0.02173913043478;
19245 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19246 +        Q_CategoryTEACHER  =                    0;
19247 +        Q_CategoryADVOCATE  =     0.06521739130434;
19248 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19249 +        Q_CategoryHEALTHCARE  =                    0;
19250 +        Q_CategoryFITNESS  =      0.8695652173913;
19251 +        Q_CategoryOTHER  =     0.02173913043478;
19252 +        Q_CategorySALES  =                    0;
19253 +        Q_CategoryCONSULTANT  =                    0;
19254 +        Q_CategoryDIGITAL_MEDIA  =                    0;
19255 +        V_CategoryHR  =                    0;
19256 +        V_CategoryDESIGNER  =              0.03125;
19257 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19258 +        V_CategoryTEACHER  =                    0;
19259 +        V_CategoryADVOCATE  =                    0;
19260 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19261 +        V_CategoryHEALTHCARE  =              0.03125;
19262 +        V_CategoryFITNESS  =               0.8125;
19263 +        V_CategoryOTHER  =              0.03125;
19264 +        V_CategorySALES  =              0.03125;
19265 +        V_CategoryCONSULTANT  =              0.03125;
19266 +        V_CategoryDIGITAL_MEDIA  =              0.03125;
19267 +        I_Category  = 'FITNESS' ;
19268 +        U_Category  = 'FITNESS' ;
19269 +        END;
19270 +      ELSE DO;
19271 +        IF  NOT MISSING(TextCluster12_SVD2 ) AND
19272 +              0.21011149346228 <= TextCluster12_SVD2  THEN DO;
19273 +          _NODE_  =                   17;
19274 +          _LEAF_  =                    5;
19275 +          P_CategoryHR  =                    0;
19276 +          P_CategoryDESIGNER  =     0.01176470588235;
19277 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
19278 +          P_CategoryTEACHER  =                    0;
19279 +          P_CategoryADVOCATE  =      0.0235294117647;
19280 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
19281 +          P_CategoryHEALTHCARE  =     0.03529411764705;
19282 +          P_CategoryFITNESS  =                    0;
19283 +          P_CategoryOTHER  =     0.04705882352941;
19284 +          P_CategorySALES  =     0.01176470588235;
19285 +          P_CategoryCONSULTANT  =      0.2235294117647;
19286 +          P_CategoryDIGITAL_MEDIA  =     0.04705882352941;
19287 +          Q_CategoryHR  =                    0;
19288 +          Q_CategoryDESIGNER  =     0.01176470588235;
19289 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.58823529411764;
19290 +          Q_CategoryTEACHER  =                    0;
19291 +          Q_CategoryADVOCATE  =      0.0235294117647;
19292 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01176470588235;
19293 +          Q_CategoryHEALTHCARE  =     0.03529411764705;
19294 +          Q_CategoryFITNESS  =                    0;
19295 +          Q_CategoryOTHER  =     0.04705882352941;
19296 +          Q_CategorySALES  =     0.01176470588235;
19297 +          Q_CategoryCONSULTANT  =      0.2235294117647;
19298 +          Q_CategoryDIGITAL_MEDIA  =     0.04705882352941;
19299 +          V_CategoryHR  =                    0;
19300 +          V_CategoryDESIGNER  =                    0;
19301 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.62264150943396;
19302 +          V_CategoryTEACHER  =                    0;
19303 +          V_CategoryADVOCATE  =      0.0188679245283;
19304 +          V_CategoryBUSINESS_DEVELOPMENT  =      0.0377358490566;
19305 +          V_CategoryHEALTHCARE  =      0.0188679245283;
19306 +          V_CategoryFITNESS  =                    0;
19307 +          V_CategoryOTHER  =      0.0566037735849;
19308 +          V_CategorySALES  =      0.0188679245283;
19309 +          V_CategoryCONSULTANT  =     0.15094339622641;
19310 +          V_CategoryDIGITAL_MEDIA  =      0.0754716981132;
19311 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
19312 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
19313 +          END;
19314 +        ELSE DO;
19315 +          IF  NOT MISSING(TextCluster12_SVD5 ) AND
19316 +                0.07714439436214 <= TextCluster12_SVD5  THEN DO;
19317 +            _NODE_  =                   19;
19318 +            _LEAF_  =                    4;
19319 +            P_CategoryHR  =     0.03076923076923;
19320 +            P_CategoryDESIGNER  =     0.04615384615384;
19321 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
19322 +            P_CategoryTEACHER  =     0.01538461538461;
19323 +            P_CategoryADVOCATE  =                    0;
19324 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
19325 +            P_CategoryHEALTHCARE  =     0.03076923076923;
19326 +            P_CategoryFITNESS  =                    0;
19327 +            P_CategoryOTHER  =     0.07692307692307;
19328 +            P_CategorySALES  =                    0;
19329 +            P_CategoryCONSULTANT  =      0.1076923076923;
19330 +            P_CategoryDIGITAL_MEDIA  =     0.56923076923076;
19331 +            Q_CategoryHR  =     0.03076923076923;
19332 +            Q_CategoryDESIGNER  =     0.04615384615384;
19333 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01538461538461;
19334 +            Q_CategoryTEACHER  =     0.01538461538461;
19335 +            Q_CategoryADVOCATE  =                    0;
19336 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1076923076923;
19337 +            Q_CategoryHEALTHCARE  =     0.03076923076923;
19338 +            Q_CategoryFITNESS  =                    0;
19339 +            Q_CategoryOTHER  =     0.07692307692307;
19340 +            Q_CategorySALES  =                    0;
19341 +            Q_CategoryCONSULTANT  =      0.1076923076923;
19342 +            Q_CategoryDIGITAL_MEDIA  =     0.56923076923076;
19343 +            V_CategoryHR  =     0.03030303030303;
19344 +            V_CategoryDESIGNER  =     0.03030303030303;
19345 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19346 +            V_CategoryTEACHER  =                    0;
19347 +            V_CategoryADVOCATE  =                    0;
19348 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.12121212121212;
19349 +            V_CategoryHEALTHCARE  =                    0;
19350 +            V_CategoryFITNESS  =                    0;
19351 +            V_CategoryOTHER  =                    0;
19352 +            V_CategorySALES  =     0.06060606060606;
19353 +            V_CategoryCONSULTANT  =     0.15151515151515;
19354 +            V_CategoryDIGITAL_MEDIA  =      0.6060606060606;
19355 +            I_Category  = 'DIGITAL-MEDIA' ;
19356 +            U_Category  = 'DIGITAL-MEDIA' ;
19357 +            END;
19358 +          ELSE DO;
19359 +            _NODE_  =                   18;
19360 +            _LEAF_  =                    3;
19361 +            P_CategoryHR  =     0.01234567901234;
19362 +            P_CategoryDESIGNER  =      0.0216049382716;
19363 +            P_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
19364 +            P_CategoryTEACHER  =     0.01851851851851;
19365 +            P_CategoryADVOCATE  =     0.14506172839506;
19366 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
19367 +            P_CategoryHEALTHCARE  =     0.15123456790123;
19368 +            P_CategoryFITNESS  =     0.04012345679012;
19369 +            P_CategoryOTHER  =     0.16049382716049;
19370 +            P_CategorySALES  =     0.16975308641975;
19371 +            P_CategoryCONSULTANT  =     0.09259259259259;
19372 +            P_CategoryDIGITAL_MEDIA  =     0.01543209876543;
19373 +            Q_CategoryHR  =     0.01234567901234;
19374 +            Q_CategoryDESIGNER  =      0.0216049382716;
19375 +            Q_CategoryINFORMATION_TECHNOLOGY  =      0.0216049382716;
19376 +            Q_CategoryTEACHER  =     0.01851851851851;
19377 +            Q_CategoryADVOCATE  =     0.14506172839506;
19378 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15123456790123;
19379 +            Q_CategoryHEALTHCARE  =     0.15123456790123;
19380 +            Q_CategoryFITNESS  =     0.04012345679012;
19381 +            Q_CategoryOTHER  =     0.16049382716049;
19382 +            Q_CategorySALES  =     0.16975308641975;
19383 +            Q_CategoryCONSULTANT  =     0.09259259259259;
19384 +            Q_CategoryDIGITAL_MEDIA  =     0.01543209876543;
19385 +            V_CategoryHR  =     0.00568181818181;
19386 +            V_CategoryDESIGNER  =     0.01136363636363;
19387 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01704545454545;
19388 +            V_CategoryTEACHER  =     0.00568181818181;
19389 +            V_CategoryADVOCATE  =     0.17045454545454;
19390 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.16477272727272;
19391 +            V_CategoryHEALTHCARE  =     0.15340909090909;
19392 +            V_CategoryFITNESS  =      0.0340909090909;
19393 +            V_CategoryOTHER  =     0.16477272727272;
19394 +            V_CategorySALES  =     0.14772727272727;
19395 +            V_CategoryCONSULTANT  =     0.10795454545454;
19396 +            V_CategoryDIGITAL_MEDIA  =     0.01704545454545;
19397 +            I_Category  = 'SALES' ;
19398 +            U_Category  = 'SALES' ;
19399 +            END;
19400 +          END;
19401 +        END;
19402 +      END;
19403 +    END;
19404 +  END;
19405 +
19406 +*****  RESIDUALS R_ *************;
19407 +IF  F_Category  NE 'HR'
19408 +AND F_Category  NE 'DESIGNER'
19409 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19410 +AND F_Category  NE 'TEACHER'
19411 +AND F_Category  NE 'ADVOCATE'
19412 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19413 +AND F_Category  NE 'HEALTHCARE'
19414 +AND F_Category  NE 'FITNESS'
19415 +AND F_Category  NE 'OTHER'
19416 +AND F_Category  NE 'SALES'
19417 +AND F_Category  NE 'CONSULTANT'
19418 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19419 +        R_CategoryHR  = .;
19420 +        R_CategoryDESIGNER  = .;
19421 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19422 +        R_CategoryTEACHER  = .;
19423 +        R_CategoryADVOCATE  = .;
19424 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19425 +        R_CategoryHEALTHCARE  = .;
19426 +        R_CategoryFITNESS  = .;
19427 +        R_CategoryOTHER  = .;
19428 +        R_CategorySALES  = .;
19429 +        R_CategoryCONSULTANT  = .;
19430 +        R_CategoryDIGITAL_MEDIA  = .;
19431 + END;
19432 + ELSE DO;
19433 +       R_CategoryHR  =  -P_CategoryHR ;
19434 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19435 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19436 +         ;
19437 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19438 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19439 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19440 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19441 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19442 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19443 +       R_CategorySALES  =  -P_CategorySALES ;
19444 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19445 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19446 +       SELECT( F_Category  );
19447 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19448 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19449 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19450 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19451 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19452 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19453 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19454 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19455 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19456 +          +1;
19457 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19458 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19459 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19460 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19461 +          +1;
19462 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19463 +        R_CategoryDIGITAL_MEDIA  +1;
19464 +       END;
19465 + END;
19466 +
19467 +****************************************************************;
19468 +******          END OF DECISION TREE SCORING CODE         ******;
19469 +****************************************************************;
19470 +
19471 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19472  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE8_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19473  quit;
19474  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE8_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
19476  proc sort data=WORK.EM_USER_REPORT;
19477  by ID VIEW;
19478  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19479  *------------------------------------------------------------*;
19480  * Tree8: Computing metadata for TRAIN data;
19481  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE8_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
20271  data WORK.MODELTEMP_INFO;
20272  set EMWS3.Tree8_EMINFO;
20273  where DATA='Tree8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20274  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE8_EMINFO.
      WHERE (DATA='Tree8') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20275  data EMWS3.Tree8_EMINFO;
20276  length TARGET KEY $32 DATA $43;
20277  input TARGET KEY DATA $;
20278  cards;
 
NOTE: The data set EMWS3.TREE8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20282  run;
20283  data EMWS3.Tree8_EMINFO;
20284  set EMWS3.Tree8_EMINFO WORK.MODELTEMP_INFO;
20285  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE8_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20286  proc sort data = EMWS3.Tree8_EMINFO NOTHREADS;
20287  by TARGET KEY;
20288  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE8_EMINFO.
NOTE: The data set EMWS3.TREE8_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20289  proc sort data = EMWS3.TextCluster12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20290  by TARGET KEY;
20291  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER12_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20292  proc sort data = EMWS3.Tree8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20293  by TARGET KEY;
20294  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE8_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20295  data EMWS3.Tree8_EMINFO;
20296  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20297  by TARGET KEY;
20298  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE8_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20299  proc datasets lib=work nolist;
20300  delete TEMP_INFO SORTEDEMINFO;
20301  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20302  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE8_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
NOTE: View EMWS3.TREE8_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE8_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:18
*------------------------------------------------------------*
20326  data EMWS3.Tree8_EMOUTFIT;
20327  set EMWS3.Tree8_EMOUTFIT;
20328  length TargetLabel $200;
20329  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20330  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20331  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_EMOUTFIT.
NOTE: The data set EMWS3.TREE8_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20332  proc sort data=EMWS3.Tree8_EMREPORTFIT nothreads;
20333  by TARGET;
20334  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE8_EMREPORTFIT.
NOTE: The data set EMWS3.TREE8_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20335  %let _EMwarndup = 0;
20336  %let _EMtargetdup =;
20337  %let _EMASEtargetdup =;
20338  data _null_;
20339  set EMWS3.Tree8_EMOUTFIT;
20340  if .<_ASE_<0.000001 then do;
20341  call symput('_EMwarndup', '1');
20342  call symput('_EMtargetdup', target);
20343  call symput('_EMASEtargetdup', put(_ASE_, best.));
20344  end;
20345  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20346  %let EMEXCEPTIONSTRING=;
20347  *------------------------------------------------------------*;
20348  * REPORT: Tree8;
20349  *------------------------------------------------------------*;
20350  %let EM_ACTION = REPORT;
20351  %let syscc = 0;
20352  %macro main;
20353
20354    %if %upcase(&EM_ACTION) = CREATE %then %do;
20355      filename temp catalog 'sashelp.emmodl.tree_create.source';
20356      %include temp;
20357      filename temp;
20358
20359      %em_tree_create;
20360    %end;
20361
20362     %else
20363     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20364
20365         filename temp catalog 'sashelp.emmodl.tree_train.source';
20366         %include temp;
20367         filename temp;
20368         %em_tree_train;
20369     %end;
20370
20371    %else
20372    %if %upcase(&EM_ACTION) = SCORE %then %do;
20373      filename temp catalog 'sashelp.emmodl.tree_score.source';
20374      %include temp;
20375      filename temp;
20376
20377      %em_tree_score;
20378
20379    %end;
20380
20381    %else
20382    %if %upcase(&EM_ACTION) = REPORT %then %do;
20383
20384         filename temp catalog 'sashelp.emmodl.tree_report.source';
20385         %include temp;
20386         filename temp;
20387
20388         %em_tree_report;
20389     %end;
20390
20391    %else
20392    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20393
20394         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20395         %include temp;
20396         filename temp;
20397         %EM_TREE_OPENTREEVIEWER;
20398
20399     %end;
20400
20401    %else
20402    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20403
20404         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20405         %include temp;
20406         filename temp;
20407         %EM_TREE_CLOSETREEVIEWER;
20408
20409     %end;
20410
20411
20412     %doendm:
20413  %mend main;
20414
20415  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20417 +%macro em_tree_makePlotDs( multipleTar= );
20419 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20420 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20421 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20422 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20424 +  /* determine if validation statistics will be displayed */
20425 +  %let validflag=N;
20426 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20427 +    /* determine if validation data exists */
20428 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20429 +      %let validflag=Y;
20430 +    %end;
20431 +  %end;
20433 +   /* retrieve name of decmeta even in presence of multiple targets */
20434 +   %let decmeta = ;
20435 +   %if &EM_DEC_DECMETA eq %then %do;
20436 +     data _Target;
20437 +       set &em_data_variableset;
20438 +       where ROLE='TARGET' and USE in('D', 'Y');
20439 +       keep NAME;
20440 +     run;
20441 +     proc sort data=_Target;
20442 +       by NAME;
20443 +     run;
20444 +     proc sort data=EM_TARGETDECINFO;
20445 +       by TARGET;
20446 +     run;
20447 +     data _Target;
20448 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20449 +       by NAME;
20450 +       if _a then do;
20451 +         call symput('decmeta', trim(DECMETA));
20452 +       end;
20453 +     run;
20454 +     proc delete data=_Target;run;
20455 +   %end;
20456 +   %else %let decmeta = &EM_DEC_DECMETA;
20459 +  /* retrieve targetEvent from decmeta */
20460 +  %let targetEvent=;
20461 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20462 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20463 +      data _null_;
20464 +       set &DECMETA(where=(_TYPE_="TARGET"));
20465 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20466 +      run;
20467 +    %end;
20468 +  %end;
20470 +  /* retrieve predicted var for targetEvent from decmeta */
20471 +  %let predTarget=;
20472 +  %let predLvl=;
20473 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20474 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20475 +      data _null_;
20476 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20477 +       call symput('predTarget', strip(VARIABLE));
20478 +       call symput('predLvl', strip(LEVEL));
20479 +      run;
20480 +    %end;
20481 +  %end;
20482 +  %else %do;
20483 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20484 +      data _null_;
20485 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20486 +       call symput('predTarget', strip(VARIABLE));
20487 +      run;
20488 +    %end;
20489 +  %end;
20491 +  /* create BelowText value */
20492 +  data belowtext;
20493 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20494 +    keep node belowtext;
20495 +  run;
20497 +  /* replace belowtext with variable label if it exists */
20498 +  data belowtext2;
20499 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20500 +    keep node belowtextlbl;
20501 +  run;
20503 +  proc sort data=belowtext; by node; run;
20504 +  proc sort data=belowtext2; by node; run;
20506 +  data belowtext;
20507 +    merge belowtext belowtext2(in=_a);
20508 +    by node;
20509 +    if _a then belowtext=belowtextlbl;
20510 +    keep node belowtext;
20511 +  run;
20513 +  /* create AboveText value */
20514 +  data abovetext;
20515 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20516 +  run;
20517 +  proc sort data=abovetext; by node numeric_value; run;
20519 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20520 +  data abovetext;
20521 +    set abovetext(rename=(node=parent));
20522 +    by parent numeric_value;
20523 +    retain abovetext tempstring flag branch origval origchar ;
20524 +    length abovetext $256;
20525 +    length tempstring origchar $64;
20527 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20528 +      if first.parent then do;
20529 +        if missing(character_value) then do;
20530 +          numeric_value = round(numeric_value, &sp_precision);
20531 +          abovetext = "< "||strip(NUMERIC_VALUE);
20532 +          branch = 1;
20533 +          origval = numeric_value;
20534 +          output;
20535 +        end;
20536 +        else do;
20537 +          abovetext = "< "||strip(CHARACTER_VALUE);
20538 +          branch = 1;
20539 +          origchar = character_value;
20540 +          output;
20541 +        end;
20543 +        if first.parent AND last.parent then do;
20544 +          if missing(character_value) then do;
20545 +            numeric_value = round(numeric_value, &sp_precision);
20546 +            branch = branch + 1;
20547 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20548 +            output;
20549 +          end;
20550 +          else do;
20551 +            branch = branch + 1;
20552 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20553 +            output;
20554 +          end;
20555 +        end;
20556 +      end;
20557 +      else if last.parent then do;
20558 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20559 +          if missing(character_value) then do;
20560 +            numeric_value = round(numeric_value, &sp_precision);
20561 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20562 +          end;
20563 +          else do;
20564 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20565 +          end;
20566 +          branch = branch + 1;
20567 +          output;
20569 +          if missing(character_value) then do;
20570 +            numeric_value = round(numeric_value, &sp_precision);
20571 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20572 +          end;
20573 +          else do;
20574 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20575 +          end;
20576 +          branch = branch + 1;
20577 +          output;
20578 +        end;
20579 +        else do;
20580 +          if missing(character_value) then do;
20581 +            numeric_value = round(numeric_value, &sp_precision);
20582 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20583 +          end;
20584 +          else do;
20585 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20586 +          end;
20587 +          branch = branch + 1;
20588 +          output;
20589 +        end;
20590 +      end;
20591 +      else do;
20592 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20593 +          if missing(character_value) then do;
20594 +            numeric_value = round(numeric_value,&sp_precision);
20595 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20596 +            origval = numeric_value;
20597 +          end;
20598 +          else do;
20599 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20600 +            origchar = character_value;
20601 +          end;
20602 +          branch = branch + 1;
20603 +          output;
20605 +        end;
20606 +        else do;
20607 +          if missing(character_value) then do;
20608 +            numeric_value = round(numeric_value, &sp_precision);
20609 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20610 +            origval = numeric_value;
20611 +          end;
20612 +          else do;
20613 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20614 +            origval = character_value;
20615 +          end;
20616 +          branch = branch + 1;
20617 +          output;
20618 +        end;
20619 +      end;
20620 +    end;
20621 +    else do;
20622 +       if first.numeric_value then do;
20623 +         flag = 0;
20624 +         abovetext = strip(CHARACTER_VALUE);
20625 +         branch = numeric_value;
20626 +         if first.numeric_value AND last.numeric_value then do;
20627 +           output;
20628 +         end;
20629 +       end;
20630 +       else if last.numeric_value then do;
20631 +         if flag=0 then do;
20632 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20633 +           length = length(strip(tempstring));
20634 +           if length < 32 then do;
20635 +             abovetext = strip(tempstring);
20636 +           end;
20637 +           else do;
20638 +             abovetext = strip(abovetext)||", ...";
20639 +             flag = 1;
20640 +           end;
20641 +         end;
20642 +         branch = numeric_value;
20643 +         output;
20644 +       end;
20645 +       else do;
20646 +         if flag=0 then do;
20647 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20648 +           length = length(strip(tempstring));
20649 +           if length < 32 then do;
20650 +             abovetext = strip(tempstring);
20651 +           end;
20652 +           else do;
20653 +             abovetext = strip(abovetext)||", ...";
20654 +             flag=1;
20655 +           end;
20656 +         end;
20657 +         branch = numeric_value;
20658 +       end;
20659 +    end;
20660 +    keep parent branch abovetext;
20661 +  run;
20663 +  /* Missing value to abovetext */
20664 +  data tempmissing;
20665 +    set &EM_USER_OUTRULES;
20666 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20667 +    rename node=parent numeric_value=branch character_value=misschar;
20668 +  run;
20671 +  proc sort data=abovetext; by parent branch; run;
20672 +  proc sort data=tempmissing; by parent branch; run;
20673 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20675 +  data tempoutnodes;
20676 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20677 +    by parent branch;
20678 +    length traintotal validtotal 8;
20679 +    retain traintotal validtotal;
20681 +    if _a then do;
20682 +      if ^MISSING(abovetext) then do;
20683 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20684 +      end;
20685 +      else do;
20686 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20687 +      end;
20688 +    end;
20689 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20691 +    if node=1 then do;
20692 +      traintotal = N;
20693 +      validtotal=VN;
20694 +    end;
20696 +    drop role rank stat misschar belowtext;
20697 +  run;
20698 +  proc sort data=tempoutnodes; by node; run;
20699 +  proc sort data=belowtext; by node; run;
20701 +  data tempoutnodes;
20702 +    merge tempoutnodes belowtext;
20703 +    by node;
20705 +  run;
20707 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20708 +  %let adjusted = N;
20709 +  %let npriors = 0;
20710 +  data _null_ ;
20711 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20712 +    if eof then do ;
20713 +      call symput("npriors" , strip(put(_N_,best.))) ;
20714 +    end;
20715 +  run;
20716 +  %if &npriors gt 0 %then %let adjusted=Y;
20719 +  /* create a table with targetUsed and targetLevel columns for each node */
20720 +  data temptarmeta;
20721 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20722 +    %if &multipleTar eq N %then %do;
20723 +      AND USE in ('D', 'Y')
20724 +    %end;
20725 +    ));
20726 +    length TARGET $32;
20727 +    Target=name;
20728 +    keep target level;
20729 +  run;
20731 +  %if &multipleTar eq Y %then %do;
20732 +    data temptargetused;
20733 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20734 +      keep node target;
20735 +    run;
20736 +    proc sort data=temptargetused; by target; run;
20737 +    proc sort data=temptarmeta; by target; run;
20738 +    data temptargetused;
20739 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20740 +      by target;
20741 +      if _a and _b;
20742 +    run;
20743 +  %end;
20744 +  %else %do;
20745 +    data temptargetused;
20746 +      set &EM_USER_OUTSTATS;
20747 +      length target $32 tarlevel $10;
20748 +      target="%EM_TARGET";
20749 +      tarlevel="%EM_TARGET_LEVEL";
20750 +      keep node target tarlevel;
20751 +    run;
20752 +    proc sort data=temptargetused nodupkey; by node; run;
20753 +  %end;
20755 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20756 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20757 +  proc sort data=temptargetused; by node; run;
20760 +  /* create tables for all interval targets as well as all class targets */
20761 +  data tempinterval tempclass;
20762 +    merge tempoutstats temptargetused( rename=(target=targetused));
20763 +    by node;
20764 +    %if "&multipleTar" eq "Y" %then %do;
20765 +      if ((missing(Target)) OR (target=targetused ));
20766 +    %end;
20768 +    if tarlevel="INTERVAL" then output tempinterval;
20769 +    else output tempclass;
20770 +  run;
20772 +  /* initialize intTarget and classTarget flags */
20773 +  %let em_intNobs =0;
20774 +  %let em_classNobs = 0;
20775 +  %let em_intTarget= N;
20776 +  %let em_classTarget= N;
20778 +  proc sql;
20779 +    reset noprint;
20780 +    select count(*) into :em_intNobs from tempinterval;
20781 +  quit;
20782 +  proc sql;
20783 +    reset noprint;
20784 +    select count(*) into :em_classNobs from tempclass;
20785 +  quit;
20787 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20788 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20790 +  /* retrieve all information for interval targets */
20791 +  %if &em_intTarget eq Y %then %do;
20793 +    /* determine if leaf variable exists */
20794 +    %let dsid=%sysfunc(open(tempinterval,i));
20795 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20796 +    %let rc=%sysfunc(close(&dsid));
20798 +    proc transpose data=tempinterval
20799 +      %if &leafexists %then %do;
20800 +        (drop=leaf)
20801 +      %end;
20802 +      %if &validexist %then %do;
20803 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20804 +      %end;
20805 +      %else %do;
20806 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20807 +      %end;
20808 +      by node;
20809 +      id statname;
20810 +    run;
20811 +    data tempinterval;
20812 +      set tempinterval;
20813 +      if missing(N) then delete;
20814 +    run;
20815 +  %end;
20817 +  /* retrieve all information for class targets */
20818 +  %if &em_classTarget eq Y %then %do;
20819 +    proc sort data=tempclass; by node category; run;
20820 +    %if &validflag eq N %then %do;
20821 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20822 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20823 +    %end;
20824 +    %else %do;
20825 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20826 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20827 +    %end;
20828 +      set tempclass;
20830 +      %if &validflag eq N %then %do;
20831 +        %if "&adjusted" eq "N" %then %do;
20832 +          if statname="N" then output tempn;
20833 +        %end;
20834 +        %else %do;
20835 +          if statname="NPRIORS" then output tempn;
20836 +        %end;
20837 +        else if statname="PREDICTION" then output temppredict;
20838 +        else if statname="PROBABILITY" then output tempprob;
20839 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20840 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20841 +      %end;
20842 +      %else %do;
20843 +        %if "&adjusted" eq "N" %then %do;
20844 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20845 +        %end;
20846 +        %else %do;
20847 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20848 +        %end;
20849 +        else if statname="PREDICTION" then output temppredict;
20850 +        else if statname="PROBABILITY" then output tempprob;
20851 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20852 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20853 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20854 +      %end;
20855 +    run;
20858 +    /* determine if profit/loss exists in tempprofit */
20859 +    %let em_profitflag=0;
20860 +    %let em_lossflag=0;
20861 +    proc sql;
20862 +      reset noprint;
20863 +      select count(*) into :em_profitflag from tempprofit;
20864 +    quit;
20865 +    proc sql;
20866 +      reset noprint;
20867 +      select count(*) into :em_lossflag from temploss;
20868 +    quit;
20870 +    %if &validFlag eq Y %then %do;
20871 +      proc transpose data=tempn
20872 +        %if "&adjusted" eq "N" %then %do;
20873 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20874 +        %end;
20875 +        %else %do;
20876 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20877 +        %end;
20878 +        by node;
20879 +        id statname;
20880 +      run;
20881 +      %if &em_profitflag ne 0 %then %do;
20882 +        proc transpose data=tempprofit out=tempprofit;
20883 +          by node category;
20884 +          id statname ;
20885 +        run;
20886 +      %end;
20887 +      %if &em_lossflag ne 0 %then %do;
20888 +        proc transpose data=temploss out=temploss;
20889 +          by node category;
20890 +          id statname ;
20891 +        run;
20892 +      %end;
20893 +      data tempprob;
20894 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20895 +        by node
20896 +        %if &multipleTar eq Y %then %do;
20897 +          target
20898 +        %end;
20899 +        category;
20900 +      run;
20901 +    %end;
20903 +    /* store percentcorrect value */
20904 +    data temppredict;
20905 +      merge tempprob temppredict(in=_a);
20906 +      by node category;
20907 +      if _a then do;
20908 +        percentCorrect = statvalue;
20909 +        %if &validFlag eq Y %then %do;
20910 +          vpercentCorrect= vstatvalue;
20911 +        %end;
20912 +      end;
20913 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20914 +      %if &validFlag eq Y %then %do;
20915 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20916 +      %end;
20917 +      ;
20918 +      if missing(percentCorrect) then delete;
20919 +      drop target;
20920 +    run;
20922 +    /* build profittext */
20923 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20924 +      data tempprofittext(keep= node profittext profitloss);
20925 +        length profittext $800 profitloss 8.;
20926 +        retain profittext profitloss;
20928 +        merge tempprob
20929 +        %if &em_profitflag ne 0 %then %do;
20930 +          tempprofit
20931 +        %end;
20932 +        %else %if &em_lossflag ne 0 %then %do;
20933 +          temploss
20934 +        %end;
20935 +        ;
20936 +        by node category;
20938 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20939 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20940 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20941 +          %let profittype = ALL;
20942 +        %end;
20944 +        /* create the profitloss variable for nodecolor if selected */
20945 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20947 +        %if "&profittype" eq "ALL" %then %do;
20948 +          if strip(CATEGORY)="&targetEvent" then do;
20949 +            profitloss=statvalue;
20950 +          end;
20951 +          if first.node then do;
20952 +            %if &validFlag eq N %then %do;
20953 +             %if &em_profitflag ne 0 %then %do;
20954 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20955 +             %end;
20956 +             %if &em_lossflag ne 0 %then %do;
20957 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20958 +             %end;
20959 +            %end;
20960 +            %else %do;
20961 +             %if &em_profitflag ne 0 %then %do;
20962 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20962!+;
20963 +             %end;
20964 +             %if &em_lossflag ne 0 %then %do;
20965 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20966 +             %end;
20967 +            %end;
20968 +          end;
20969 +          else if last.node then do;
20970 +            %if &validFlag eq N %then %do;
20971 +             %if &em_profitflag ne 0 %then %do;
20972 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20973 +             %end;
20974 +             %if &em_lossflag ne 0 %then %do;
20975 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20976 +             %end;
20977 +             /*if CATEGORY="&targetEvent" then do;
20978 +               profitloss=statvalue;
20979 +             end;*/
20980 +            %end;
20981 +            %else %do;
20982 +             %if &em_profitflag ne 0 %then %do;
20983 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20983!+14.&EM_PROPERTY_SPLITPRECISION);
20984 +                if CATEGORY="&targetEvent" then do;
20985 +                 profitloss=ALTERNATIVE_PROFIT;
20986 +                end;
20987 +             %end;
20988 +             %if &em_lossflag ne 0 %then %do;
20989 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20989!+14.&EM_PROPERTY_SPLITPRECISION);
20990 +                if CATEGORY="&targetEvent" then do;
20991 +                  profitloss=ALTERNATIVE_LOSS;
20992 +                end;
20993 +             %end;
20994 +            %end;
20995 +            output;
20996 +          end;
20997 +          else do;
20998 +            %if &validFlag eq N %then %do;
20999 +             %if &em_profitflag ne 0 %then %do;
21000 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21001 +             %end;
21002 +             %if &em_lossflag ne 0 %then %do;
21003 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21004 +             %end;
21005 +            %end;
21006 +            %else %do;
21007 +             %if &em_profitflag ne 0 %then %do;
21008 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
21008!+14.&EM_PROPERTY_SPLITPRECISION);
21009 +             %end;
21010 +             %if &em_lossflag ne 0 %then %do;
21011 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
21011!+14.&EM_PROPERTY_SPLITPRECISION);
21012 +             %end;
21013 +            %end;
21014 +          end;
21015 +        %end;
21016 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21017 +          if strip(CATEGORY) = "&targetevent" then do;
21018 +            %if &validFlag eq N %then %do;
21019 +             %if &em_profitflag ne 0 %then %do;
21020 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21021 +             %end;
21022 +             %if &em_lossflag ne 0 %then %do;
21023 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21024 +             %end;
21025 +             profitloss=statvalue;
21026 +            %end;
21027 +            %else %do;
21028 +             %if &em_profitflag ne 0 %then %do;
21029 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
21029!+;
21030 +                profitloss=ALTERNATIVE_PROFIT;
21031 +             %end;
21032 +             %if &em_lossflag ne 0 %then %do;
21033 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
21034 +                profitloss=ALTERNATIVE_LOSS;
21035 +             %end;
21036 +            %end;
21037 +            output;
21038 +          end;
21039 +        %end;
21040 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
21041 +          if strip(CATEGORY) = "&targetevent" then do;
21042 +            %if &validFlag eq N %then %do;
21043 +             profitloss=statvalue;
21044 +            %end;
21045 +            %else %do;
21046 +             %if &em_profitflag ne 0 %then %do;
21047 +                profitloss=ALTERNATIVE_PROFIT;
21048 +             %end;
21049 +             %if &em_lossflag ne 0 %then %do;
21050 +                profitloss=ALTERNATIVE_LOSS;
21051 +             %end;
21052 +            %end;
21053 +            output;
21054 +          end;
21055 +        %end;
21056 +      run;
21057 +    %end;
21059 +    data tempprob(keep= node probtext);
21060 +      length probtext $800;
21061 +      retain probtext;
21062 +      set tempprob ;
21063 +      by node;
21065 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
21066 +      %let probtype = &EM_PROPERTY_TARGET;
21067 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
21068 +        %let probtype = ALL;
21069 +      %end;
21071 +      %if "&probtype" eq "ALL" %then %do;
21072 +        if first.node then do;
21073 +          %if &validFlag eq N %then %do;
21074 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21075 +          %end;
21076 +          %else %do;
21077 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21078 +          %end;
21079 +        end;
21080 +        else if last.node then do;
21081 +          %if &validFlag eq N %then %do;
21082 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21083 +          %end;
21084 +          %else %do;
21085 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21086 +          %end;
21087 +          output;
21088 +        end;
21089 +        else do;
21090 +          %if &validFlag eq N %then %do;
21091 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21092 +          %end;
21093 +          %else %do;
21094 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21095 +          %end;
21096 +        end;
21097 +      %end;
21098 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21099 +        if strip(CATEGORY) = "&targetevent" then do;
21100 +          %if &validFlag eq N %then %do;
21101 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21102 +          %end;
21103 +          %else %do;
21104 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21105 +          %end;
21106 +          output;
21107 +        end;
21108 +      %end;
21109 +      %else %if "&probtype" eq "NONE" %then %do;
21110 +        if last.node then do;
21111 +          output;
21112 +        end;
21113 +      %end;
21114 +    run;
21115 +  %end;
21117 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
21119 +  %let oldexists=0;
21120 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
21121 +     data old_tree_plot;
21122 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
21123 +        rename nodecolor=oldnodecolor;
21124 +     run;
21126 +     proc sort data=old_tree_plot;
21127 +        by node;
21128 +     run;
21130 +     %let oldexists=1;
21131 +  %end;
21133 +  data &EM_USER_TREE_PLOT;
21134 +    length textall $800;
21135 +    merge tempoutnodes temptargetused
21137 +    %if &em_intTarget eq Y %then %do;
21138 +      tempinterval
21139 +    %end;
21141 +    %if &em_classTarget eq Y %then %do;
21143 +      %if &validFlag eq N %then %do;
21144 +        tempn(rename=(statvalue=N))
21145 +      %end;
21146 +      %else %do;
21147 +        tempn
21148 +      %end;
21150 +      temppredict tempprob
21152 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21153 +        tempprofittext
21154 +      %end;
21155 +    %end;
21156 +    ;
21157 +    by node;
21159 +    /* build nodetext based on user selection */
21160 +    textall="";
21162 +    %if &em_intTarget eq Y %then %do;
21163 +    if tarlevel="INTERVAL" then do;
21164 +      /* Nodeid */
21165 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21166 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21167 +      %end;
21169 +      /* Target identifier if multiple targets are used */
21170 +      %if "&multipleTar" eq "Y" %then %do;
21171 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21172 +      %end;
21174 +      %if &validFlag eq Y %then %do;
21175 +         /* Column labels displayed in validflag eq Y only */
21176 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21177 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21177!+noquote ))";
21178 +         %end;
21180 +         /* Average values */
21181 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21182 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21183 +         %end;
21185 +         /* RASE */
21186 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21187 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21188 +         %end;
21190 +         /* Count */
21191 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21192 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21193 +         %end;
21194 +      %end;
21195 +      %else %do;
21196 +         /* Average values */
21197 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21198 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21199 +         %end;
21201 +         /* RASE */
21202 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21203 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21204 +         %end;
21206 +         /* Count */
21207 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21208 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21209 +         %end;
21210 +      %end;
21212 +      /* nodecolor */
21213 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21214 +        nodecolor=PREDICTION;
21215 +      %end;
21216 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21217 +        nodecolor=RASE;
21218 +      %end;
21219 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21220 +        nodecolor=1;
21221 +      %end;
21223 +    end;
21224 +    %end;
21225 +    %if &em_classTarget eq Y %then %do;
21226 +    if tarlevel^="INTERVAL" then  do;
21228 +      /* Nodeid */
21229 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21230 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21231 +      %end;
21232 +      /* Target identifier if multiple targets are used */
21233 +      %if "&multipleTar" eq "Y" %then %do;
21234 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21235 +      %end;
21237 +      /* Predicted values */
21238 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21239 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21240 +      %end;
21242 +      /* Column labels displayed in validflag eq Y only */
21243 +      %if "&ValidFlag" eq "Y" %then %do;
21244 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21245 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21245!+noquote ))";
21246 +        %end;
21247 +      %end;
21249 +      /* Target Values */
21250 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21251 +        textall=strip(textall)||"0A"x||strip(probtext);
21252 +      %end;
21254 +      /* include profit or loss for all target levels */
21255 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21256 +        textall=strip(textall)||"0A"x||strip(profittext);
21257 +      %end;
21259 +      %if &validFlag eq N %then %do;
21260 +        /* Percent Correct */
21261 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21262 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21263 +        %end;
21265 +         /* Count */
21266 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21267 +          %if "&adjusted" eq "N" %then %do;
21268 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21269 +          %end;
21270 +          %else %do;
21271 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21272 +          %end;
21273 +         %end;
21274 +      %end;
21275 +      %else %do;
21276 +        /* Percent Correct */
21277 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21278 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21279 +        %end;
21281 +         /* Count */
21282 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21283 +          %if "&adjusted" eq "N" %then %do;
21284 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21285 +          %end;
21286 +          %else %do;
21287 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21288 +          %end;
21289 +         %end;
21290 +      %end;
21292 +      /* nodecolor */
21293 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21294 +       %if &multipleTar ne Y %then %do;
21295 +        nodecolor=&predTarget;
21296 +       %end;
21297 +       %else %do;
21298 +         nodecolor=percentcorrect;
21299 +       %end;
21300 +      %end;
21301 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21302 +        nodecolor=percentcorrect;
21303 +      %end;
21304 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21305 +        nodecolor=1;
21306 +      %end;
21307 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21308 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21309 +          nodecolor=percentcorrect;
21310 +        %end;
21311 +        %else %do;
21312 +          nodecolor=profitloss;
21313 +        %end;
21314 +      %end;
21316 +    end;
21317 +    %end;
21318 +    %if &em_intTarget eq Y %then %do;
21319 +     drop  PREDICTION  TARGET TARLEVEL
21320 +     %if &ValidFlag eq Y %then %do;
21321 +         VPREDICTION
21322 +     %end;
21323 +     ;
21324 +    %end;
21325 +    %if &em_classTarget eq Y %then %do;
21326 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21327 +     %if &ValidFlag eq Y %then %do;
21328 +         VSTATVALUE
21329 +     %end;
21330 +     ;
21331 +    %end;
21333 +  run;
21335 +  /* add leaf index information to plotds - based on primary target only*/
21336 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21337 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21338 +      set &EM_USER_OUTSTATS;
21339 +      if ((statname="PROBABILITY"
21340 +      %if &validexist %then %do;
21341 +       or statname="VALID: PROBABILITY"
21342 +      %end;
21343 +      ) AND (CATEGORY="&TARGETEVENT")
21344 +      %if "&multipleTar" eq "Y" %then %do;
21345 +        AND (Target="%EM_TARGET")
21346 +      %end;
21347 +      );
21348 +    run;
21350 +    %if &validexist %then %do;
21351 +      proc sort data=tempprob; by node; run;
21352 +      %let vpredTarget = V%substr(&predTarget, 2);
21353 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21354 +         by node;
21355 +         id statname;
21356 +      run;
21357 +    %end;
21358 +  %end;
21359 +  %else %do;
21360 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21361 +      set &EM_USER_OUTSTATS;
21362 +      if ((statname="PREDICTION"
21363 +      %if &validexist %then %do;
21364 +       or statname="VALID: PREDICTION"
21365 +      %end;
21366 +      )
21367 +      %if "&multipleTar" eq "Y" %then %do;
21368 +        AND (Target="%EM_TARGET")
21369 +      %end;
21370 +      );
21371 +    run;
21372 +    %if &validexist %then %do;
21373 +      proc sort data=tempprob; by node; run;
21374 +      %let vpredTarget = V%substr(&predTarget, 2);
21375 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21376 +         by node;
21377 +         id statname;
21378 +      run;
21379 +    %end;
21380 +  %end;
21382 +  proc sort data=tempprob; by node; run;
21383 +  data tempoutnodes;
21384 +    merge tempoutnodes tempprob;
21385 +    by node;
21386 +  run;
21388 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21389 +  data tempnodes;
21390 +    retain traintotal validtotal;
21391 +    set tempnodes(where=(leaf ne . ));
21392 +    tprob=round(&predTarget, .01);
21393 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21394 +      percevent_train=round(tprob*100, .01);
21395 +    %end;
21396 +    %else %do;
21397 +      percevent_train=tprob;
21398 +    %end;
21400 +    perc_train=round((n/traintotal)*100, 0.01);
21401 +    /* leafwidth already has a *10 multiplier */
21402 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21404 +    %if &validexist %then %do;
21405 +      %let vpredTarget = V%substr(&predTarget,2);
21406 +      vprob=round(&vpredTarget, .01);
21407 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21408 +        percevent_valid=round(vprob*100, .01);
21409 +      %end;
21410 +      %else %do;
21411 +        percevent_valid=vprob;
21412 +      %end;
21413 +      perc_valid=round((vn/validtotal)*100, .01);
21414 +    %end;
21416 +    index=_N_;
21417 +    keep node index tprob perc_train percevent_train
21418 +    %if &validexist %then %do;
21419 +        vprob percevent_valid perc_valid
21420 +    %end;
21421 +    ;
21422 +  run;
21423 +  proc sort data=tempnodes; by node; run;
21424 +  data &EM_USER_TREE_PLOT;
21425 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21426 +    by node;
21427 +    if missing(node) then delete;
21428 +    %if &oldexists %then %do;
21429 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21430 +      drop oldnodecolor;
21431 +    %end;
21432 +    abovetext = compbl(abovetext);
21434 +    /* add variable labels */
21435 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21436 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21437 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21438 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21439 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21440 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21442 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21443 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21444 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21445 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21446 +          %end;
21447 +          %else %do;
21448 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21449 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21450 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21451 +          %end;
21452 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21454 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21455 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21456 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21457 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21458 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21459 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21460 +          %end;
21461 +          %else %do;
21462 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21463 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21464 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21465 +          %end;
21466 +    ;
21467 +  run;
21469 +  /* delete temporary tables */
21470 +  proc datasets lib=work nolist;
21471 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21472 +  run;
21474 +%mend em_tree_makePlotDs;
21478 +%macro em_tree_report;
21480 +   /* report properties */
21481 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21482 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21483 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21484 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21485 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21486 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21487 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21488 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21489 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21490 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21491 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21492 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21493 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21495 +   %let validexist=0;
21496 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21497 +     %let validexist=1;
21498 +   %end;
21500 +   /* determine if multiple targets will be processed */
21501 +   %let em_tree_multipleTargets=N;
21502 +   %let em_tree_numTarget=1;
21503 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21504 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21505 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21506 +         %let em_tree_multipleTargets=N;
21507 +      %end;
21508 +      %else %do;
21509 +        data _null_;
21510 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21511 +          if eof then
21512 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21513 +        run;
21515 +        %if &em_tree_numTarget gt 1 %then %do;
21516 +           %let em_tree_multipleTargets=Y;
21517 +        %end;
21518 +     %end;
21519 +   %end;
21521 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21523 +   /* variable importance */
21524 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21525 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21527 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21528 +     /* and the columns may not be generated                                                                                 */
21529 +     %let em_tree_cvexists=;
21530 +     %let em_tree_surrexists=.;
21531 +     data _null_;
21532 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21533 +       if eof then do ;
21534 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21535 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21536 +       end;
21537 +     run;
21539 +     data &EM_USER_OUTIMPORT;
21540 +         set &EM_USER_OUTIMPORT;
21541 +         /* format columns based on Precison value specified */
21542 +         format importance 15.&EM_PROPERTY_PRECISION
21543 +              %if &validexist %then %do;
21544 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21545 +              %end;
21546 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21547 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21548 +              %end;
21549 +         ;
21550 +     run;
21552 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21553 +     proc print data=&EM_USER_OUTIMPORT
21554 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21555 +          (where=((nrules>0) OR (nsurrogates>0)))
21556 +        %end;
21557 +        %else %do;
21558 +           (where=(nrules>0))
21559 +        %end;
21560 +        label noobs
21561 +        ;
21562 +     run;
21563 +     title10;
21565 +   %end;
21567 +   /* Sequence */
21568 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21569 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21570 +   data _null_ ;
21571 +      set &EM_USER_outseq (obs=2) end=eof ;
21572 +      if eof then do ;
21573 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21574 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21575 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21576 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21577 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21578 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21579 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21580 +      end;
21581 +    run;
21583 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21584 +      data &EM_USER_OUTSEQ;
21585 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21586 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21587 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21588 +           _XMISC_=_VMISC_
21589 +        %end;
21590 +        %if "&em_tree_aprof" ne "."  %then %do;
21591 +           _XAPROF_=_VAPROF_
21592 +           _XPROF_ = _VPROF_
21593 +        %end;
21594 +        %if "&em_tree_aloss" ne "."  %then %do;
21595 +           _XALOSS_=_VALOSS_
21596 +        %end;
21597 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21598 +           _XPASE_ = _VPASE_
21599 +           _XPMISC_ = _VPMISC_
21600 +        %end;
21602 +        ));
21603 +     %end;
21604 +     %else %do;
21605 +        set &EM_USER_OUTSEQ;
21606 +     %end;
21608 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21609 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21610 +            _MISC_   15.&EM_PROPERTY_PRECISION
21611 +         %end;
21612 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21613 +            _PASE_  15.&EM_PROPERTY_PRECISION
21614 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21615 +         %end;
21616 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21617 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21618 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21619 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21620 +            %end;
21621 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21622 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21623 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21624 +            %end;
21625 +         %end;
21626 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21627 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21628 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21629 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21630 +            %end;
21631 +         %end;
21632 +         %if "&em_tree_seq" ne "." %then %do;
21633 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21634 +         %end;
21635 +         %if "&em_tree_vseq" ne "." %then %do;
21636 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21637 +         %end;
21638 +         %if "&em_tree_aprof" ne "." %then %do;
21639 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21640 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21641 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21642 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21643 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21644 +           %end;
21645 +         %end;
21646 +         %else %if "&em_tree_aloss" ne "." %then %do;
21647 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21648 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21649 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21650 +           %end;
21651 +         %end;
21652 +      ;
21653 +    run;
21654 +   %end;
21656 +   /* Observation Based Importance */
21657 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21659 +      /* need to check for 0 obs */
21660 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21661 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21662 +      %let rc=%sysfunc(close(&dsid));
21664 +      %if &onobs %then %do;
21665 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21666 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21668 +         data &EM_USER_OUTOBSIMP;
21669 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21670 +           if _a;
21671 +           by _INPUT1_;
21672 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21673 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21674 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21675 +                   %end;
21676 +                   ;
21677 +         run;
21678 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21679 +      %end;
21680 +   %end;
21682 +  %end;
21684 +  /* create dataset to support tree diagram and icicle plot */
21685 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21686 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21688 +  /* display tree diagram */
21689 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21690 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21692 +  /* display icicle diagram */
21693 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21694 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21696 +  /* Leaf Statistics Plot */
21697 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21699 +  /* print leaf information to output window */
21700 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21702 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21703 +       by descending N;
21704 +     run;
21706 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21707 +     %local vn;
21708 +     data _null_;
21709 +       set t (obs=2) end=eof;
21710 +       if eof then do;
21711 +         call symput("vn", strip(put(vn, best.)));
21712 +       end;
21713 +     run;
21715 +     data t;
21716 +       set t;
21717 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21718 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21719 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21720 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21721 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21722 +       %end;
21723 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21724 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21725 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21726 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21727 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21728 +          %end;
21729 +       %end;
21730 +       ;
21731 +     run;
21733 +     /* determine if rase is found in t */
21734 +    %let dsid=%sysfunc(open(t,i));
21735 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21736 +    %let rc=%sysfunc(close(&dsid));
21738 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21739 +     proc print data=t noobs label;
21740 +       where tprob ne .;
21741 +       var node depth N tprob
21742 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21743 +         %if "&vn" ne "." %then %do;
21744 +           VN
21745 +         %end;
21746 +         vprob
21747 +       %end;
21748 +       %if &raseexists %then %do;
21749 +            RASE
21750 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21751 +              VRASE
21752 +            %end;
21753 +       %end;
21754 +       ;
21755 +     run;
21756 +     title10;
21757 +  %end;
21759 +  /* create plots that are done during training of node */
21760 +  /* display iterative plot, including reference line */
21761 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21762 +   /* %if &nleaves eq  %then %do; */
21763 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21764 +      data _null_;
21765 +        set &EM_USER_OUTTOPOLOGY end=eof;
21766 +        if eof then do;
21767 +          call symput('nleaves', LEAF);
21768 +        end;
21769 +      run;
21770 +   /* %end; */
21772 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21773 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21774 +  %end;
21776 +  /* display leaf statistics */
21777 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21779 +  /* stats by node if multiple targets = Y */
21780 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21781 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21782 +    data &EM_USER_OUTSTATS;
21783 +      set &EM_USER_OUTSTATS;
21785 +     * if STATNAME="TARGET" then delete;
21786 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21787 +      drop leaf;
21788 +    run;
21789 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21791 +  %end;
21792 +  %else %do;
21793 +    /* add outstats and outdescribe to spk but not results */
21794 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21795 +  %end;
21797 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE8_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 100 observations read from the data set EMWS3.TREE8_OUTIMPORT.
NOTE: The data set EMWS3.TREE8_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set EMWS3.TREE8_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE8_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS3.TREE8_OUTSEQ.
NOTE: The data set EMWS3.TREE8_OUTSEQ has 11 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE8_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE8_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE8_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 221 observations read from the data set EMWS3.TREE8_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE8_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE8_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE8_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE8_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 351 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 338 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE8_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 351 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 26 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 156 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 156 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 13 observations read from the data set WORK.TEMPN.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE8_TREE_PLOT has 13 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE8_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE8_TREE_PLOT.
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE8_TREE_PLOT has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE8_TREE_PLOT.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 13 observations read from the data set EMWS3.TREE8_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
21798
21799  *------------------------------------------------------------*;
21800  * End REPORT: Tree8;
21801  *------------------------------------------------------------*;
 
21802  /* Reset EM Options */
21803  options formchar="|----|+|---+=|-/\<>*";
21804  options nocenter ls=256 ps=10000;
21805  goptions reset=all device=GIF NODISPLAY;
 
21806  proc sort data=WORK.EM_USER_REPORT;
21807  by ID VIEW;
21808  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
21809  proc sort data=EMWS3.TextCluster12_CMeta_TRAIN out=WORK.SUBSETINMETA;
21810  by NAME;
21811  run;
 
NOTE: There were 114 observations read from the data set EMWS3.TEXTCLUSTER12_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 114 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21812  proc sort data=EMWS3.Tree8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21813  by NAME;
21814  run;
 
NOTE: There were 114 observations read from the data set EMWS3.TREE8_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 114 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21815  data WORK.ASSESS_META;
21816  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21817  by NAME;
21818  run;
 
NOTE: There were 114 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 114 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 114 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21819  data EM_temp_assessMeta;
21820  set EMWS3.Tree8_CMeta_TRAIN;
21821  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21822  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE8_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
21823  data EM_temp_assessdata;
21824  set EMWS3.Tree8_TRAIN(keep=
21825  F_Category
21826  I_Category
21827  P_CategoryADVOCATE
21828  P_CategoryBUSINESS_DEVELOPMENT
21829  P_CategoryCONSULTANT
21830  P_CategoryDESIGNER
21831  P_CategoryDIGITAL_MEDIA
21832  P_CategoryFITNESS
21833  P_CategoryHEALTHCARE
21834  P_CategoryHR
21835  P_CategoryINFORMATION_TECHNOLOGY
21836  P_CategoryOTHER
21837  P_CategorySALES
21838  P_CategoryTEACHER
21839  Q_CategoryADVOCATE
21840  Q_CategoryBUSINESS_DEVELOPMENT
21841  Q_CategoryCONSULTANT
21842  Q_CategoryDESIGNER
21843  Q_CategoryDIGITAL_MEDIA
21844  Q_CategoryFITNESS
21845  Q_CategoryHEALTHCARE
21846  Q_CategoryHR
21847  Q_CategoryINFORMATION_TECHNOLOGY
21848  Q_CategoryOTHER
21849  Q_CategorySALES
21850  Q_CategoryTEACHER
21851  R_CategoryADVOCATE
21852  R_CategoryBUSINESS_DEVELOPMENT
21853  R_CategoryCONSULTANT
21854  R_CategoryDESIGNER
21855  R_CategoryDIGITAL_MEDIA
21856  R_CategoryFITNESS
21857  R_CategoryHEALTHCARE
21858  R_CategoryHR
21859  R_CategoryINFORMATION_TECHNOLOGY
21860  R_CategoryOTHER
21861  R_CategorySALES
21862  R_CategoryTEACHER
21863  U_Category
21864  V_CategoryADVOCATE
21865  V_CategoryBUSINESS_DEVELOPMENT
21866  V_CategoryCONSULTANT
21867  V_CategoryDESIGNER
21868  V_CategoryDIGITAL_MEDIA
21869  V_CategoryFITNESS
21870  V_CategoryHEALTHCARE
21871  V_CategoryHR
21872  V_CategoryINFORMATION_TECHNOLOGY
21873  V_CategoryOTHER
21874  V_CategorySALES
21875  V_CategoryTEACHER
21876  _WARN_
21877  Category
21878  );
21879  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE8_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER12_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE8_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26161   data EM_temp_assessMeta;
26162   set EMWS3.Tree8_CMeta_TRAIN;
26163   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26164   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE8_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
26165   data EM_temp_assessdata;
26166   set EMWS3.Tree8_VALIDATE(keep=
26167   F_Category
26168   I_Category
26169   P_CategoryADVOCATE
26170   P_CategoryBUSINESS_DEVELOPMENT
26171   P_CategoryCONSULTANT
26172   P_CategoryDESIGNER
26173   P_CategoryDIGITAL_MEDIA
26174   P_CategoryFITNESS
26175   P_CategoryHEALTHCARE
26176   P_CategoryHR
26177   P_CategoryINFORMATION_TECHNOLOGY
26178   P_CategoryOTHER
26179   P_CategorySALES
26180   P_CategoryTEACHER
26181   Q_CategoryADVOCATE
26182   Q_CategoryBUSINESS_DEVELOPMENT
26183   Q_CategoryCONSULTANT
26184   Q_CategoryDESIGNER
26185   Q_CategoryDIGITAL_MEDIA
26186   Q_CategoryFITNESS
26187   Q_CategoryHEALTHCARE
26188   Q_CategoryHR
26189   Q_CategoryINFORMATION_TECHNOLOGY
26190   Q_CategoryOTHER
26191   Q_CategorySALES
26192   Q_CategoryTEACHER
26193   R_CategoryADVOCATE
26194   R_CategoryBUSINESS_DEVELOPMENT
26195   R_CategoryCONSULTANT
26196   R_CategoryDESIGNER
26197   R_CategoryDIGITAL_MEDIA
26198   R_CategoryFITNESS
26199   R_CategoryHEALTHCARE
26200   R_CategoryHR
26201   R_CategoryINFORMATION_TECHNOLOGY
26202   R_CategoryOTHER
26203   R_CategorySALES
26204   R_CategoryTEACHER
26205   U_Category
26206   V_CategoryADVOCATE
26207   V_CategoryBUSINESS_DEVELOPMENT
26208   V_CategoryCONSULTANT
26209   V_CategoryDESIGNER
26210   V_CategoryDIGITAL_MEDIA
26211   V_CategoryFITNESS
26212   V_CategoryHEALTHCARE
26213   V_CategoryHR
26214   V_CategoryINFORMATION_TECHNOLOGY
26215   V_CategoryOTHER
26216   V_CategorySALES
26217   V_CategoryTEACHER
26218   _WARN_
26219   Category
26220   );
26221   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE8_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER12_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE8_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30512   %let _cn = %sysfunc(getoption(CENTER));
30513   options nocenter;
30514   proc print data=EMWS3.Tree8_EMREPORTFIT noobs label;
30515   var STAT LABEL TRAIN
30516   VALIDATE
30517   TEST
30518   ;
30519   by TARGET TARGETLABEL;
30520   title9 ' ';
30521   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30522   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE8_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30523   title10;
30524   options &_cn;
 
30525   proc sort data=EMWS3.Tree8_EMCLASSIFICATION nothreads;
30526   by DATAROLE TARGET TARGETLABEL;
30527   run;
 
NOTE: There were 102 observations read from the data set EMWS3.TREE8_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE8_EMCLASSIFICATION has 102 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30528   %let _cn = %sysfunc(getoption(CENTER));
30529   options nocenter;
30530   proc print data=EMWS3.Tree8_EMCLASSIFICATION noobs label;
30531   var from into pct_row pct_col count percent
30532   ;
30533   by DATAROLE TARGET TARGETLABEL;
30534   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30535   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30536   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30537   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30538   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30539   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30540   where _TYPE_='PREDICTION';
30541   title9 ' ';
30542   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30543   run;
 
NOTE: There were 102 observations read from the data set EMWS3.TREE8_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30544   title9;
30545   title10;
30546   options &_cn;
 
30547   %let _cn = %sysfunc(getoption(CENTER));
30548   options nocenter;
30549   data EMWS3.Tree8_EMEVENTREPORT;
30550   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30551   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30551 ! FALSEEVENT
30552   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30553      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30554   FALSEEVENT=0;
30555   FALSENEVENT=0;
30556   TRUEEVENT=0;
30557   TRUENEVENT=0;
30558   set EMWS3.Tree8_EMEVENTREPORT;
30559   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE8_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE8_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30560   proc print data=EMWS3.Tree8_EMEVENTREPORT noobs label;
30561   title9 ' ';
30562   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30563   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30564   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE8_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30565   title10;
30566   options &_cn;
 
30567   proc datasets library=EMWS3 nolist;
30568   modify Tree8_EMRANK;
30569   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30570   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30571   run;
 
NOTE: MODIFY was successful for EMWS3.TREE8_EMRANK.DATA.
30572   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
30573   %let _cn = %sysfunc(getoption(CENTER));
30574   options nocenter;
30575   proc print data=EMWS3.Tree8_EMRANK label noobs;
30576   var
30577   decile gain lift liftc resp respc N _meanP_;
30578   by
30579   notsorted DATAROLE
30580   notsorted TARGET
30581   notsorted TARGETLABEL
30582   ;
30583   title9 ' ';
30584   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30585   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE8_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30586   title10;
30587   options &_cn;
 
30588   proc datasets library=EMWS3 nolist;
30589   modify Tree8_EMSCOREDIST;
30590   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30591   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30592   run;
 
NOTE: MODIFY was successful for EMWS3.TREE8_EMSCOREDIST.DATA.
30593   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
