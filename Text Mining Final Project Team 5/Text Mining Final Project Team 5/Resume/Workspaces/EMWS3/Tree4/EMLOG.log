*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:43
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:35
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree4_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree4META;
15227  run;
 
NOTE: There were 80 observations read from the data set EMWS3.TREE4_VARIABLESET.
NOTE: The data set WORK.TREE4META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
15228  proc print data=WORK.Tree4META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE4META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster7_TRAIN EMWS3.TextCluster7_TRAIN
EMWS3.TextCluster7_TRAIN EMWS3.TextCluster7_TRAIN EMWS3 TextCluster7_TRAIN
EMWS3.TextCluster7_TRAIN EMWS3.TextCluster7_TRAIN
EMWS3.TextCluster7_TRAIN EMWS3.TextCluster7_TRAIN EMWS3 TextCluster7_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE4_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE4_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree4_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE4_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree4_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15972  *------------------------------------------------------------*;
15973  * Tree4: Generation of macros and macro variables;
15974  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15975  *------------------------------------------------------------*;
 
15976  %let EMEXCEPTIONSTRING=;
15977  *------------------------------------------------------------*;
15978  * TRAIN: Tree4;
15979  *------------------------------------------------------------*;
15980  %let EM_ACTION = TRAIN;
15981  %let syscc = 0;
15982  %macro main;
15983
15984    %if %upcase(&EM_ACTION) = CREATE %then %do;
15985      filename temp catalog 'sashelp.emmodl.tree_create.source';
15986      %include temp;
15987      filename temp;
15988
15989      %em_tree_create;
15990    %end;
15991
15992     %else
15993     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15994
15995         filename temp catalog 'sashelp.emmodl.tree_train.source';
15996         %include temp;
15997         filename temp;
15998         %em_tree_train;
15999     %end;
16000
16001    %else
16002    %if %upcase(&EM_ACTION) = SCORE %then %do;
16003      filename temp catalog 'sashelp.emmodl.tree_score.source';
16004      %include temp;
16005      filename temp;
16006
16007      %em_tree_score;
16008
16009    %end;
16010
16011    %else
16012    %if %upcase(&EM_ACTION) = REPORT %then %do;
16013
16014         filename temp catalog 'sashelp.emmodl.tree_report.source';
16015         %include temp;
16016         filename temp;
16017
16018         %em_tree_report;
16019     %end;
16020
16021    %else
16022    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16023
16024         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16025         %include temp;
16026         filename temp;
16027         %EM_TREE_OPENTREEVIEWER;
16028
16029     %end;
16030
16031    %else
16032    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16033
16034         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16035         %include temp;
16036         filename temp;
16037         %EM_TREE_CLOSETREEVIEWER;
16038
16039     %end;
16040
16041
16042     %doendm:
16043  %mend main;
16044
16045  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16047 +%macro em_tree_train;
16049 +   %if &EM_IMPORT_DATA eq %then %do;
16050 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16051 +       %put &em_codebar;
16052 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16053 +       %put &errormsg;
16054 +       %put &em_codebar;
16055 +       %goto doendm;
16056 +   %end;
16057 +   %else
16058 +       %let EMEXCEPTIONSTRING =;
16060 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16061 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16062 +        %put &em_codebar;
16063 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16064 +        %put &errormsg;
16065 +        %put &em_codebar;
16066 +        %goto doendm;
16067 +   %end;
16069 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16070 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16071 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16072 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16073 +        %put &em_codebar;
16074 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16075 +        %put &errormsg;
16076 +        %put &em_codebar;
16077 +        %goto doendm;
16078 +   %end;
16080 +   /* Initialize property macro variables */
16081 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16082 +   %include temp;
16083 +   filename temp;
16085 +   %EM_SetProperties;
16087 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16088 +   %EM_GETNAME(key=EMTREE, type=DATA);
16089 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16090 +     /* if import eq Y and no importtable defined, throw an exception */
16091 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16092 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16093 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16094 +         %put &em_codebar;
16095 +         %put &errmsg;
16096 +         %put &em_codebar;
16097 +         %goto doendm;
16098 +      %end;
16099 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16100 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16101 +         %put &em_codebar;
16102 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16103 +         %put &errormsg;
16104 +         %put &em_codebar;
16105 +         %goto doendm;
16106 +      %end;
16107 +      %else %do;
16108 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16109 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16110 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16111 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16112 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16113 +         %let dsid = %sysfunc(close(&dsid));
16114 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16115 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16116 +            %put &em_codebar;
16117 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16118 +            %put &errormsg;
16119 +            %put &em_codebar;
16120 +            %goto doendm;
16121 +         %end;
16122 +      %end;
16123 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16124 +         proc delete data=&EM_USER_EMTREE;
16125 +         run;
16126 +      %end;
16127 +   %end;
16128 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16129 +      proc delete data=&EM_USER_EMTREE;
16130 +      run;
16131 +   %end;
16133 +   /* load tree macros */
16134 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16135 +   %include temp;
16136 +   filename temp;
16138 +   /* data sets */
16139 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16140 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16141 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16143 +   /* files */
16144 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16146 +   /* check actual num of target levels */
16147 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16148 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16149 +                              nLevel=_nTargetLevel );
16150 +      %if &_nTargetLevel  > 2 %then %do;
16151 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16152 +        %put &em_codebar;
16153 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16154 +        %put &errormsg;
16155 +        %put &em_codebar;
16156 +        %goto doendm;
16157 +      %end;
16158 +   %end;
16160 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16161 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16162 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16163 +        %let costflag=0;
16164 +        data _null_;
16165 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16166 +          if eof then call symput("costflag", _N_);
16167 +        run;
16168 +        %if &costflag gt 0 %then %do;
16169 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16170 +          %put &em_codebar;
16171 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16172 +          %put &errormsg;
16173 +          %put &em_codebar;
16174 +          %goto doendm;
16175 +       %end;
16176 +     %end;
16177 +   %end;
16179 +   /* determine if multiple targets will be processed */
16180 +   %let em_tree_multipleTargets=N;
16181 +   %let em_tree_numTarget = 1;
16182 +   %let em_tree_targetVars=;
16184 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16185 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16186 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16187 +         %let em_tree_multipleTargets=N;
16188 +      %end;
16189 +      %else %do;
16190 +         /* create macro array of targets  */
16191 +         data _null_;
16192 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16193 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16194 +           if eof then
16195 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16196 +        run;
16198 +        %if &em_tree_numTarget gt 1 %then %do;
16199 +           %let em_tree_multipleTargets=Y;
16200 +        %end;
16201 +      %end;
16202 +   %end;
16204 +   /* create view of only necessary variable for performance reasons */
16205 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16206 +   data &tempData / view=&tempData;
16207 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16208 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16209 +       %EM_TARGET
16210 +     %end;
16211 +     %else %do;
16212 +       %if &em_tree_numTarget ne 0 %then %do;
16213 +         %do i=1 %to &em_tree_numTarget;
16214 +            &&em_tree_targetVars&i
16215 +         %end;
16216 +       %end;
16217 +     %end;
16218 +     );
16219 +   run;
16221 +   /* run Tree procedure */
16222 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16224 +   /* Check return code and throw exception if error is detected */
16225 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16226 +   %if &syserr %then %do;
16227 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16228 +     %goto doendm;
16229 +   %end;
16231 +   /* add decision score code if multiple targets are processed */
16232 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16233 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16234 +   %end;
16236 +   /* create outfit dataset if multiple score statements have been executed */
16237 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16239 +   /* create English Rules */
16240 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16241 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16242 +       %em_tree_makeEnglishRules;
16244 +       /* English Rules */
16245 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16247 +     %end;
16248 +   filename x;
16250 +   %doendm:
16251 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16252 +%macro EM_SetProperties;
16254 +   /* train properties */
16255 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16260 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16261 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16262 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16266 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16267 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16268 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16269 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16270 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16274 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16275 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16276 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16281 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16282 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16283 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16289 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16290 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16293 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16294 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16295 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16297 +   /* properties for interactive sample */
16298 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16299 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16300 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16301 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16303 +   /* report properties */
16304 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16309 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16310 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16311 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16313 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16314 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16315 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16316 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16318 +   /* score properties */
16319 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16320 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16322 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE4_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16324 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16325 +  %global &nLevel;
16326 +  proc dmdb batch data=&indata
16327 +    classout=_tmp_dmdbout;
16328 +    class &target;
16329 +  run;
16330 +  data _tmp_dmdbout;
16331 +    set _tmp_dmdbout;
16332 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16333 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16334 +  run;
16335 +  data _null_;
16336 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16337 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16338 +    %let dsid = %sysfunc(close(&dsid));
16339 +     call symput("&nLevel", put(&_obs, Best12.));
16340 +  run;
16342 +  proc datasets lib=work nolist;
16343 +     delete _tmp_dmdbout;
16344 +  run;
16345 +  quit;
16346 +%Mend EM_CheckBinaryTargetLevel;
16349 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16351 +  /* determine the number of obs in training data */
16352 +  proc sql;
16353 +    reset noprint;
16354 +    select count(*) into :em_nobs from &indata;
16355 +  quit;
16357 +  /* determine the number of input variables */
16358 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16359 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16361 +  /* retrieve targetEvent from decmeta */
16362 +  %let targetEvent=;
16363 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16364 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16365 +      data _null_;
16366 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16367 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16368 +      run;
16369 +    %end;
16370 +  %end;
16372 +  /* create targetTable if multipleTar eq Y */
16373 +  data temptarget;
16374 +    set &EM_DATA_VARIABLESET;
16375 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16376 +  run;
16378 + /* data sets */
16379 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16380 + %EM_GETNAME(key=EMTREE,        type=DATA);
16381 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16382 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16383 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16384 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16385 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16386 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16387 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16388 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16390 + /* files */
16391 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16392 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16394 + /* turn on pmml if requested */
16395 + %let nnpmml=0;
16396 + %if %symexist(EM_PMML) %then %do;
16397 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16398 +       %let nnpmml=1;
16400 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16401 +   %end;
16402 +%end;
16404 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16406 +%if &nnpmml or &numClassTarget %then %do;
16408 +    /* create dmdb needed for pmml generation */
16409 +    %let tree_maxlevel = 512;
16410 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16411 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16412 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16413 +      %end;
16414 +    %end;
16415 +    %if &tree_maxlevel gt 0 %then %do;
16416 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16417 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16418 +    %end;
16420 +    %let targetOrderString =;
16421 +    %let targetString = ;
16422 +    data _null_;
16423 +       length orderString nameString $10000;
16424 +       retain orderString nameString;
16425 +       set &em_data_variableset end=eof;
16426 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16427 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16428 +       %end;
16429 +       %else %do;
16430 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16431 +       %end;          select(order);
16432 +         when('')        order ='DESC';
16433 +         when('FMTASC')  order='ASCFMT';
16434 +         when('FMTDESC') order='DESFMT';
16435 +         otherwise;
16436 +       end;
16437 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16438 +       nameString = trim(nameString)!!' '!!trim(NAME);
16440 +       if eof then do;
16441 +          call symput('targetOrderString', trim(orderString));
16442 +          call symput('targetString', trim(nameString));
16443 +       end;
16444 +    run;
16446 +    %let arborkluge= "work._treeDMDB";
16448 +    proc dmdb batch data=&indata
16449 +    %if &nnpmml %then %do;
16450 +        PMML
16451 +    %end;
16452 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16454 +      %if &nnpmml %then %do;
16455 +           %if "%EM_ID" ne "" %then %do;
16456 +             id %EM_ID;
16457 +           %end;
16458 +           %if &EM_NUM_CLASS gt 0 %then %do;
16459 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16460 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16461 +                  &targetOrderString;
16462 +           %end;
16463 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16464 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16465 +           %end;
16466 +           target &targetString %EM_INTERVAL_TARGET;
16467 +           %if "%EM_FREQ" ne "" %then %do;
16468 +             freq %EM_FREQ;
16469 +           %end;
16470 +      %end;
16471 +      %else %do;
16472 +         class  &targetOrderString;
16473 +         target &targetString %EM_INTERVAL_TARGET;
16474 +      %end;
16475 +    run;
16476 +    quit;
16478 +    proc datasets lib=work nolist;
16479 +       delete classout varout;
16480 +    run;
16481 +    quit;
16483 + %end;
16486 + /* run Arbor procedure */
16487 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16488 +  proc arbor data=&INDATA
16490 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16491 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16492 +  %end;
16494 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16495 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16496 +  %end;
16498 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16499 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16500 +  %end;
16502 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16503 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16504 +  %end;
16506 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16507 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16508 +  %end;
16510 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16511 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16512 +  %end;
16513 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16514 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16515 +  %end;
16516 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16517 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16518 +  %end;
16520 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16521 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16522 +      alpha = &EM_PROPERTY_SIGLEVEL
16523 +    %end;
16524 +  %end;
16526 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16527 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16528 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16529 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16530 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16532 +        padjust =
16533 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16534 +          &chaid
16535 +        %end;
16536 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16537 +          DEPTH
16538 +        %end;
16539 +      %end;
16540 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16541 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16542 +         pvars = &num_inputs
16543 +      %end;
16544 +    %end;
16545 +  %end;
16546 +  %else %do;
16547 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16548 +         padjust = NONE
16549 +      %end;
16550 +  %end;
16552 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16553 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16554 +    Maxrules = &num_nrules
16555 +  %end;
16557 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16558 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16559 +    Maxsurrs = &num_nsurrs
16560 +  %end;
16562 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16563 +     Missing=&EM_PROPERTY_MISSINGVALUE
16564 +  %end;
16566 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16567 +     USEVARONCE
16568 +  %end;
16570 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16571 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16572 +  %end;
16575 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16576 +    event = "&targetEvent"
16577 +  %end;
16579 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16580 +     DECSEARCH
16581 +  %end;
16583 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16584 +     PRIORSSEARCH
16585 +  %end;
16587 +  %if &arbor_1 ne %then %do;
16588 +    &arbor_1
16589 +  %end;
16591 +  %if &em_arbor ne %then %do;
16592 +     &em_arbor
16593 +  %end;
16594 +  ;
16595 + %end;
16596 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16597 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16598 +       Performance &EM_PROPERTY_PERFORMANCE
16599 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16600 +         nodesize=&EM_PROPERTY_NODESAMPLE
16601 +       %end;
16602 +       ;
16603 +       interact;
16604 + %end;
16605 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16606 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16607 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16608 +    %put &em_codebar;
16609 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16610 +    %put &errormsg;
16611 +    %put &em_codebar;
16612 +    %goto doendm;
16613 +   %end;
16614 +   %else %do;
16615 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16616 +       Performance &EM_PROPERTY_PERFORMANCE
16617 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16618 +         nodesize=&EM_PROPERTY_NODESAMPLE
16619 +       %end;
16620 +       ;
16621 +       interact;
16622 +   %end;
16623 + %end;
16625 + %else %do;
16626 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16627 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16628 +    %put &em_codebar;
16629 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16630 +    %put &errormsg;
16631 +    %put &em_codebar;
16632 +    %goto doendm;
16633 +   %end;
16634 +   %else %do;
16635 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16636 +       Performance &EM_PROPERTY_PERFORMANCE
16637 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16638 +         nodesize=&EM_PROPERTY_NODESAMPLE
16639 +       %end;
16640 +       ;
16641 +        interact;
16642 +   %end;
16643 + %end;
16645 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16646 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16647 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16648 +    %end;
16650 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16651 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16652 +    %end;
16654 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16655 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16656 +    %end;
16658 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16659 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16660 +    %end;
16662 +    %if "%EM_FREQ" ne "" %then %do;
16663 +       freq %EM_FREQ;
16664 +    %end;
16666 +    %if "&multipleTar" eq "Y" %then %do;
16667 +       /* cycle through all target vars in variableset */
16668 +       %let tdsid = %sysfunc(open(temptarget));
16669 +       %if &tdsid %then %do;
16670 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16671 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16672 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16673 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16674 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16675 +             target &var / level = &lvl
16676 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16677 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16678 +             %end;
16679 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16680 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16681 +             %end;
16682 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16683 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16684 +             %end;
16685 +          %end;
16686 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16687 +       %end;
16688 +       useTarget variable = %EM_TARGET;
16689 +    %end;
16690 +    %else %do;
16691 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16692 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16693 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16694 +      %end;
16695 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16696 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16697 +      %end;
16698 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16699 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16700 +      %end;
16701 +    %end;
16703 +    %if "&multipleTar" eq "N" %then %do;
16704 +      &EM_DEC_STATEMENT;
16705 +    %end;
16707 +    Performance &EM_PROPERTY_PERFORMANCE
16708 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16709 +      nodesize=&EM_PROPERTY_NODESAMPLE
16710 +    %end;
16711 +    ;
16713 +    %if "&intFlag" eq "Y" %then %do;
16714 +       INTERACT Largest;
16715 +       Train maxnewdepth=0;
16716 +    %end;
16718 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16719 +         Assess
16720 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16721 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16722 +              %put &em_codebar;
16723 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16724 +              %put &errormsg;
16725 +              %put &em_codebar;
16726 +            %end;
16727 +            %else %do;
16728 +               Validata=&EM_IMPORT_VALIDATE
16729 +            %end;
16730 +         %end;
16731 +         %else %do;
16732 +           NoValidata
16733 +         %end;
16734 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16735 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16736 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16737 +               %if &dsid %then %do;
16738 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16739 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16740 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16741 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16742 +                   %else %do;
16743 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16744 +                      %else %let measure= MISC;
16745 +                   %end;
16746 +                 %end;
16747 +               %end;
16748 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16749 +            %end;
16750 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16751 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16752 +                 %let measure=ASE;
16753 +              %end;
16754 +              %else %do;
16755 +                 %let measure=MISC;
16756 +              %end;
16757 +            %end;
16758 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16759 +              %let measure=ASE;
16760 +            %end;
16761 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16762 +               %let measure = LIFT;
16763 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16764 +               %if &dsid %then %do;
16765 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16766 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16767 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16768 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16769 +                 %end;
16770 +               %end;
16771 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16772 +            %end;
16773 +            measure=&measure
16774 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16775 +               event = "&targetEvent"
16776 +            %end;
16777 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16778 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16779 +            %end;
16780 +         %end;
16781 +         %if "&multipleTar" eq "N" %then %do;
16782 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16783 +               CV
16784 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16785 +                 CVNITer = &EM_PROPERTY_CVNITER
16786 +               %end;
16787 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16788 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16789 +               %end;
16790 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16791 +                 CVSeed = &EM_PROPERTY_CVSEED
16792 +               %end;
16793 +            %end;
16794 +         %end;
16795 +       %end;
16796 +      ;
16798 +      %if "&intFlag" ne "Y" %then %do;
16799 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16800 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16801 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16802 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16804 +          SUBTREE &subtree
16805 +          %if "&subtree" eq "NLEAVES" %then %do;
16806 +            =&EM_PROPERTY_NSUBTREE
16807 +          %end;
16808 +          ;
16809 +        %end;
16811 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16812 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16813 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16814 +          %end;
16815 +       %end;
16816 +      %end;
16817 + %end;
16820 + MakeMacro nleaves = nleaves;
16821 + save
16822 + %if "&EM_USER_EMTREE" ne "" %then %do;
16823 +   MODEL=&EM_USER_EMTREE
16824 + %end;
16825 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16826 +   SEQUENCE=&EM_USER_OUTSEQ
16827 + %end;
16828 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16829 +   IMPORTANCE=&EM_USER_OUTIMPORT
16830 + %end;
16831 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16832 +   NODESTAT=&EM_USER_OUTNODES
16833 + %end;
16834 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16835 +   SUMMARY=&EM_USER_OUTSUMMARY
16836 + %end;
16837 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16838 +   STATSBYNODE=&EM_USER_OUTSTATS
16839 + %end;
16840 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16841 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16842 + %end;
16843 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16844 +   Pathlistnonmissing=&EM_USER_OUTPATH
16845 + %end;
16846 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16847 +   RULES = &EM_USER_OUTRULES
16848 + %end;
16849 + ;
16851 + %if "&intFlag" ne "Y" %then %do;
16853 +   %let lookupString = ;
16854 +   %if ^%symexist(EM_OPTION) %then
16855 +      %let EM_OPTION=;
16857 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16858 +      %let lookupString = LOOKUP=SELECT;
16859 +   %end;
16861 +   %let codetext=;
16862 +   %let norescodetxt=;
16864 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16865 +     %let codetext=&codetext DUMMY;
16866 +     %let norescodetxt=&norescodetxt DUMMY;
16867 +   %end;
16868 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16869 +     %let codetext=&codetext NOLEAFID;
16870 +     %let norescodetxt=&norescodetxt NOLEAFID;
16871 +   %end;
16872 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16873 +     %let norescodetxt=&norescodetxt NOPRED;
16874 +   %end;
16876 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16877 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16879 +   %if &nnpmml %then %do;
16880 +     code pmml;
16881 +   %end;
16883 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16884 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16885 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16886 +   %end;
16887 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16888 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16889 +   %end;
16890 + %end;
16892 + run;
16893 + quit;
16895 + /*%em_checkerror(); */
16896 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16897 +   /* Delete DMDB catalog */
16898 +   proc datasets lib=work nolist;
16899 +       delete _treeDMDB / mt=cat;
16900 +  run;
16901 +  %end;
16903 + %if &nnpmml %then %do;
16904 +    ods pmml close;
16905 + %end;
16907 +  %doendm:
16909 +%mend em_tree_runTreeProcedure;
16911 +%macro em_tree_createFitStats( multipleTar= );
16914 +  /* create targetTable is multipleTar eq Y */
16915 +  data temptarget;
16916 +    set &EM_DATA_VARIABLESET;
16917 +    where ROLE="TARGET";
16918 +  run;
16920 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16921 +   data &EM_USER_EMOUTFIT;
16922 +     length target $32;
16923 +     merge work.fit_train
16924 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16925 +       work.fit_valid
16926 +     %end;
16927 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16928 +       work.fit_test
16929 +     %end;
16930 +     ;
16931 +     %if "&multipleTar" eq "N" %then %do;
16932 +       target="%EM_TARGET";
16933 +     %end;
16934 +     %else %do;
16935 +       target = _TARGET_;
16936 +     %end;
16937 +     drop _NW_ _SUMW_
16938 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16939 +        _VSUMW_
16940 +     %end;
16941 +     ;
16942 +   run;
16944 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16945 +     proc datasets library=work nolist;
16946 +       delete fit_valid;
16947 +     run;
16948 +   %end;
16949 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16950 +     proc datasets library=work nolist;
16951 +       delete fit_test;
16952 +     run;
16953 +   %end;
16955 +%mend em_tree_createFitStats;
16958 +%macro em_tree_makeEnglishRules;
16960 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16961 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16963 +  /* verify that necessary tables exist and if not, skip processing */
16964 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16965 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16966 +    %goto doendm;
16967 +  %end;
16968 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16969 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16970 +    %goto doendm;
16971 +  %end;
16973 +  /* determine length of variable in outpath dataset */
16974 +  %let vlength= ;
16975 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16976 +  %if &dsid ne %then %do;
16977 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16978 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16979 +  %end;
16980 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16982 +  data tempoutpath;
16983 +    length varname $&vlength;
16984 +    retain varname;
16985 +    set &EM_USER_OUTPATH;
16987 +    if ^missing(variable) then varname=variable;
16988 +    else if ^missing(var_name) then varname=var_name;
16989 +    output;
16990 +  run;
16992 +  /* create an array of generated predicted variable names */
16993 +  %let tree_pred_vars = ;
16994 +  %let tree_pred_label = ;
16995 +  %let numpred= 0;
16996 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16998 +    data _null_;
16999 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17000 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17001 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
17002 +     if eof then
17003 +       call symput('numpred', strip(put(_N_, BEST.)));
17004 +    run;
17005 +  %end;
17007 +  /* determine if NPRIORS exists in outnodes  */
17008 +  %local nprior_flag;
17009 +  data _null_;
17010 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17011 +    if eof then do;
17012 +      call symput('nprior_flag', strip(put(npriors, best.)));
17013 +    end;
17014 +  run;
17016 +  proc sort data=tempoutpath; by node; run;
17017 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17019 +  data tempoutpath;
17020 +    merge tempoutpath(in=_a) outnodes(keep= node
17021 +    %if "&nprior_flag" ne "." %then %do;
17022 +      NPRIORS
17023 +    %end;
17024 +    %else %do;
17025 +      N
17026 +    %end;
17027 +    %if &numpred gt 0 %then %do;
17028 +      %do i=1 %to &numpred;
17029 +        &&tree_pred_vars&i
17030 +      %end;
17031 +    %end;
17032 +    );
17033 +    by node;
17034 +    if _a;
17035 +  run;
17037 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17039 +  data _null_;
17040 +    file x;
17041 +    set tempoutpath;
17042 +    by node descending varname;
17043 +    retain origvar oldnode string;
17044 +    length origvar $32 oldnode 8 string $5000;
17046 +    if _N_ = 1 then do;
17047 +      origvar = varname;
17048 +      oldnode = node;
17049 +    end;
17051 +    if first.node then do;
17052 +       put "&EM_CODEBAR";
17053 +       put " Node = " node;
17054 +       put "&EM_CODEBAR";
17055 +    end;
17057 +      if first.varname then do;
17058 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17059 +            if MISSING(CHARACTER_VALUE) then do;
17060 +             if NUMERIC_VALUE ne .  then do;
17061 +              if ^first.node then do;
17062 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17063 +              end;
17064 +              else do;
17065 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17066 +              end;
17067 +             end;
17068 +            end;
17069 +            else do;
17070 +              if ^first.node then do;
17071 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17072 +              end;
17073 +              else do;
17074 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17075 +              end;
17076 +             end;
17077 +         end;
17078 +         else if RELATION in ("=") then do;
17079 +            if ^first.node then do;
17080 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17081 +            end;
17082 +            else do;
17083 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17084 +            end;
17085 +         end;
17086 +         else if RELATION in ("ISMISSING") then do;
17087 +            if ^first.node then do;
17088 +              string = " AND "|| strip(varname) || " equals Missing";
17089 +            end;
17090 +            else do;
17091 +              string = "if "|| strip(varname) ||" equals Missing";
17092 +            end;
17093 +         end;
17094 +         else if RELATION in ("ISNOTMISSING") then do;
17095 +            if ^first.node then do;
17096 +              string = " AND "|| strip(varname) || " equals All Values";
17097 +            end;
17098 +            else do;
17099 +              string = "if "|| strip(varname) ||" equals All Values";
17100 +            end;
17101 +         end;
17102 +         if ^missing(varname) then origvar = varname;
17103 +         oldnode=node;
17105 +      end;
17106 +      else do;
17107 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17108 +          if MISSING(CHARACTER_VALUE) then do;
17109 +           if  NUMERIC_VALUE ne .  then do;
17110 +            if ^MISSING(string) then
17111 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17112 +            else
17113 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17114 +           end;
17115 +          end;
17116 +          else do;
17117 +            if ^MISSING(string) then
17118 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17119 +            else
17120 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17121 +          end;
17123 +         end;
17124 +         else if RELATION in ("=") then do;
17125 +           string = strip(string)||", "||strip(character_value);
17126 +         end;
17127 +         else if RELATION in ("ISMISSING") then do;
17129 +         end;
17130 +         if ^missing(varname) then origvar = varname;
17131 +         oldnode=node;
17132 +      end;
17133 +      if last.varname then do;
17134 +         if RELATION in ("ISMISSING") then do;
17135 +           if ^first.varname then do;
17136 +             string = strip(string) || " or MISSING";
17137 +           end;
17138 +         end;
17139 +         put string;
17140 +         if ^missing(varname) then origvar = varname;
17141 +         oldnode=node;
17142 +      end;
17144 +      if last.node then do;
17145 +         put "then ";
17146 +         put " Tree Node Identifier   = " node;
17148 +         %if "&nprior_flag" ne "." %then %do;
17149 +           put " Number of Observations = " NPRIORS;
17150 +         %end;
17151 +         %else %do;
17152 +           put " Number of Observations = " N;
17153 +         %end;
17155 +         %if &numpred gt 0 %then %do;
17156 +           %do i=1 %to &numpred;
17157 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17158 +           %end;
17159 +         %end;
17161 +         put " ";
17162 +         if ^missing(varname) then origvar = varname;
17163 +         oldnode=node;
17164 +      end;
17166 +  run;
17168 +  proc datasets lib=work nolist;
17169 +    delete tempoutpath outnodes;
17170 +  run;
17172 +  %doendm:
17173 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE4.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS3.EM_TREE4.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER7_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE4.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER7_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE4.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595432 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 660928512 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1265560 bytes of work memory.
NOTE: The subtree sequence contains 13 subtrees. The largest has 25 nodes and 13 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Using subtree with 15 nodes and 8 leaves.
NOTE: Created macro variable NLEAVES equal to 8.
NOTE: The data set EMWS3.TREE4_OUTIMPORT has 69 observations and 6 variables.
NOTE: The data set EMWS3.TREE4_EMTREE has 1997 observations and 4 variables.
NOTE: The data set EMWS3.TREE4_OUTNODES has 15 observations and 54 variables.
NOTE: The data set EMWS3.TREE4_OUTPATH has 88 observations and 7 variables.
NOTE: The data set EMWS3.TREE4_OUTRULES has 212 observations and 6 variables.
NOTE: The data set EMWS3.TREE4_OUTSEQ has 13 observations and 20 variables.
NOTE: The data set EMWS3.TREE4_OUTSTATS has 405 observations and 5 variables.
NOTE: The data set EMWS3.TREE4_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE4_OUTTOPOLOGY has 15 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE4.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER7_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE4.VIEW used (Total process time):
      real time           0.33 seconds
      cpu time            0.14 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER7_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE4.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.33 seconds
      cpu time            0.14 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE4_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set EMWS3.TREE4_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE4_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE4_OUTNODES.
NOTE: The data set WORK.OUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 15 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 88 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:37,
      Create Time=23Nov2023:22:13:37
 
NOTE: 184 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 88 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: Fileref X has been deassigned.
17175
17176  *------------------------------------------------------------*;
17177  * End TRAIN: Tree4;
17178  *------------------------------------------------------------*;
 
17179  *------------------------------------------------------------*;
17180  * Close any missing semi colons;
17181  *------------------------------------------------------------*;
17182  ;
17183  ;
17184  ;
17185  ;
17186  quit;
17187  *------------------------------------------------------------*;
17188  * Close any unbalanced quotes;
17189  *------------------------------------------------------------*;
17190  /*; *"; *'; */
17191  ;
17192  run;
17193  quit;
17194  /* Reset EM Options */
17195  options formchar="|----|+|---+=|-/\<>*";
17196  options nocenter ls=256 ps=10000;
17197  goptions reset=all device=GIF NODISPLAY;
 
17198  proc sort data=WORK.EM_USER_REPORT;
17199  by ID VIEW;
17200  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:38
*------------------------------------------------------------*
17302  %let EMEXCEPTIONSTRING=;
17303  *------------------------------------------------------------*;
17304  * SCORE: Tree4;
17305  *------------------------------------------------------------*;
17306  %let EM_ACTION = SCORE;
17307  %let syscc = 0;
17308  %macro main;
17309
17310    %if %upcase(&EM_ACTION) = CREATE %then %do;
17311      filename temp catalog 'sashelp.emmodl.tree_create.source';
17312      %include temp;
17313      filename temp;
17314
17315      %em_tree_create;
17316    %end;
17317
17318     %else
17319     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17320
17321         filename temp catalog 'sashelp.emmodl.tree_train.source';
17322         %include temp;
17323         filename temp;
17324         %em_tree_train;
17325     %end;
17326
17327    %else
17328    %if %upcase(&EM_ACTION) = SCORE %then %do;
17329      filename temp catalog 'sashelp.emmodl.tree_score.source';
17330      %include temp;
17331      filename temp;
17332
17333      %em_tree_score;
17334
17335    %end;
17336
17337    %else
17338    %if %upcase(&EM_ACTION) = REPORT %then %do;
17339
17340         filename temp catalog 'sashelp.emmodl.tree_report.source';
17341         %include temp;
17342         filename temp;
17343
17344         %em_tree_report;
17345     %end;
17346
17347    %else
17348    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17349
17350         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17351         %include temp;
17352         filename temp;
17353         %EM_TREE_OPENTREEVIEWER;
17354
17355     %end;
17356
17357    %else
17358    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17359
17360         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17361         %include temp;
17362         filename temp;
17363         %EM_TREE_CLOSETREEVIEWER;
17364
17365     %end;
17366
17367
17368     %doendm:
17369  %mend main;
17370
17371  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17373 +%macro em_tree_score;
17375 +   /* determine if multiple targets will be processed */
17376 +   %let em_tree_multipleTargets=N;
17377 +   %let em_tree_numTarget=1;
17378 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17379 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17380 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17381 +         %let em_tree_multipleTargets=N;
17382 +      %end;
17383 +      %else %do;
17384 +         /* create macro array of targets  */
17385 +         data _null_;
17386 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17387 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17388 +           if eof then
17389 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17390 +        run;
17392 +        %if &em_tree_numTarget gt 1 %then %do;
17393 +           %let em_tree_multipleTargets=Y;
17394 +        %end;
17395 +      %end;
17396 +   %end;
17398 +   /* build flow and publish scoring code */
17399 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17400 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17402 +   filename treeflow "&EM_USER_TREEFLOW";
17403 +   filename treepub "&EM_USER_TREEPUBLISH";
17405 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17406 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17408 +   %em_copyfile(infref=treeflow, outfref=flowref);
17409 +   %em_copyfile(infref=treepub, outfref=pubref);
17411 +   filename treeflow;
17412 +   filename treepub;
17414 +   /* if priors are used, add code to generate unadjusted residuals in export */
17415 +   %let useAdjPriors = N;
17416 +   data _null_;
17417 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17418 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17419 +   run;
17420 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17421 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17422 +      %include temp;
17423 +      filename temp;
17425 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17426 +      filename adjref "&EM_USER_adjResidualCode";
17427 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17429 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17431 +      filename adjref;
17432 +   %end;
17434 +   /* LEAF */
17435 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17436 +      data _null_;
17437 +        file flowref mod;
17438 +        put 'drop _LEAF_;';
17439 +      run;
17441 +      data _null_;
17442 +        file pubref mod;
17443 +        put 'drop _LEAF_;';
17444 +      run;
17446 +   %end;
17448 +   filename flowref;
17449 +   filename pubref;
17451 +   /* em_metachange code */
17452 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17453 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17454 +   %end;
17456 +   /* variable selection based on importance stat    */
17457 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17458 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17459 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17460 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17461 +     %let obs = %sysfunc(fetch(&dsid));
17462 +     %do %while(&obs=0);
17463 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17464 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17465 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17466 +       %let obs = %sysfunc(fetch(&dsid));
17467 +     %end;
17468 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17469 +   %end;
17471 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17472 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17473 +    %let tree_pred_vars = ;
17474 +    %let tree_pred_lvl =;
17475 +    %let numpred= 0;
17477 +    data _null_;
17478 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17479 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17480 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17481 +     if eof then
17482 +       call symput('numpred', strip(put(_N_, BEST.)));
17483 +    run;
17484 +   %end;
17486 +   %if &numpred ne 0 %then %do;
17487 +    %do i=1 %to &numpred;
17488 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17489 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17490 +    %end;
17491 +   %end;
17493 +   /* determine if multiple targets will be processed */
17494 +   %let em_tree_multipleTargets=N;
17495 +   %let em_tree_numTarget=1;
17496 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17497 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17498 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17499 +         %let em_tree_multipleTargets=N;
17500 +      %end;
17501 +      %else %do;
17502 +        data _null_;
17503 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17504 +          if eof then
17505 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17506 +        run;
17508 +        %if &em_tree_numTarget gt 1 %then %do;
17509 +           %let em_tree_multipleTargets=Y;
17510 +        %end;
17511 +     %end;
17512 +   %end;
17514 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17515 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17517 +      /* variable importance */
17518 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17519 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17521 +         %let validexist=0;
17522 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17523 +           %let validexist=1;
17524 +         %end;
17526 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17527 +         /* and the columns may not be generated                                                                                 */
17528 +         %let em_tree_cvexists=;
17529 +         %let em_tree_surrexists=.;
17530 +         data _null_;
17531 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17532 +            if eof then do ;
17533 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17534 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17535 +            end;
17536 +         run;
17538 +         data &EM_USER_OUTIMPORT;
17539 +            set &EM_USER_OUTIMPORT;
17541 +            /* format columns based on Precison value specified */
17542 +            format importance 15.&EM_PROPERTY_PRECISION
17543 +                 %if &validexist %then %do;
17544 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17545 +                 %end;
17546 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17547 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17548 +                 %end;
17549 +            ;
17550 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17551 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17552 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17553 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17554 +                 %if "&em_tree_surrexists" ne "" %then %do;
17555 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17556 +                 %end;
17557 +                 %if &validexist %then %do;
17558 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17559 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17560 +                 %end;
17561 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17562 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17563 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17564 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17565 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17566 +                 %end;
17567 +            ;
17568 +         run;
17570 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17571 +      %end;
17572 +   %end;
17574 +   %doendm:
17575 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:38,
      Create Time=23Nov2023:22:13:38
 
NOTE: 505 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:38,
      Create Time=23Nov2023:22:13:38
 
NOTE: 425 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25218,
      Last Modified=23Nov2023:22:13:38,
      Create Time=23Nov2023:22:13:38
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21645,
      Last Modified=23Nov2023:22:13:38,
      Create Time=23Nov2023:22:13:38
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 69 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 70 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 71 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 71 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 72 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 73 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 73 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 74 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 75 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 76 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE4_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 69 observations read from the data set EMWS3.TREE4_OUTIMPORT.
NOTE: The data set EMWS3.TREE4_OUTIMPORT has 69 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
17576
17577  *------------------------------------------------------------*;
17578  * End SCORE: Tree4;
17579  *------------------------------------------------------------*;
 
17580  proc sort data=WORK.EM_METACHANGE;
17581  by key uname;
17582  run;
 
NOTE: There were 76 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 76 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17583  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\CDELTA_TRAIN.sas";
17584  data _null_;
17585  file x;
17586  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17587  put 'ROLE = "ASSESS";';
17588  put 'end;';
17589  put 'else ';
17590  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17591  put 'ROLE = "ASSESS";';
17592  put 'end;';
17593  put 'else ';
17594  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17595  put 'ROLE = "ASSESS";';
17596  put 'end;';
17597  put 'else ';
17598  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17599  put 'ROLE = "ASSESS";';
17600  put 'end;';
17601  put 'else ';
17602  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17603  put 'ROLE = "ASSESS";';
17604  put 'end;';
17605  put 'else ';
17606  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17607  put 'ROLE = "ASSESS";';
17608  put 'end;';
17609  put 'else ';
17610  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17611  put 'ROLE = "ASSESS";';
17612  put 'end;';
17613  put 'else ';
17614  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17615  put 'ROLE = "ASSESS";';
17616  put 'end;';
17617  put 'else ';
17618  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17619  put 'ROLE = "ASSESS";';
17620  put 'end;';
17621  put 'else ';
17622  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17623  put 'ROLE = "ASSESS";';
17624  put 'end;';
17625  put 'else ';
17626  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17627  put 'ROLE = "ASSESS";';
17628  put 'end;';
17629  put 'else ';
17630  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17631  put 'ROLE = "ASSESS";';
17632  put 'end;';
17633  put 'else ';
17634  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD1" then do;';
17635  put 'ROLE = "REJECTED";';
17636  put 'end;';
17637  put 'else ';
17638  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD10" then do;';
17639  put 'ROLE = "REJECTED";';
17640  put 'end;';
17641  put 'else ';
17642  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD12" then do;';
17643  put 'ROLE = "REJECTED";';
17644  put 'end;';
17645  put 'else ';
17646  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD13" then do;';
17647  put 'ROLE = "REJECTED";';
17648  put 'end;';
17649  put 'else ';
17650  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD14" then do;';
17651  put 'ROLE = "REJECTED";';
17652  put 'end;';
17653  put 'else ';
17654  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD15" then do;';
17655  put 'ROLE = "REJECTED";';
17656  put 'end;';
17657  put 'else ';
17658  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD16" then do;';
17659  put 'ROLE = "REJECTED";';
17660  put 'end;';
17661  put 'else ';
17662  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD17" then do;';
17663  put 'ROLE = "REJECTED";';
17664  put 'end;';
17665  put 'else ';
17666  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD18" then do;';
17667  put 'ROLE = "REJECTED";';
17668  put 'end;';
17669  put 'else ';
17670  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD19" then do;';
17671  put 'ROLE = "REJECTED";';
17672  put 'end;';
17673  put 'else ';
17674  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD20" then do;';
17675  put 'ROLE = "REJECTED";';
17676  put 'end;';
17677  put 'else ';
17678  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD21" then do;';
17679  put 'ROLE = "REJECTED";';
17680  put 'end;';
17681  put 'else ';
17682  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD22" then do;';
17683  put 'ROLE = "REJECTED";';
17684  put 'end;';
17685  put 'else ';
17686  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD23" then do;';
17687  put 'ROLE = "REJECTED";';
17688  put 'end;';
17689  put 'else ';
17690  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD24" then do;';
17691  put 'ROLE = "REJECTED";';
17692  put 'end;';
17693  put 'else ';
17694  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD25" then do;';
17695  put 'ROLE = "REJECTED";';
17696  put 'end;';
17697  put 'else ';
17698  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD26" then do;';
17699  put 'ROLE = "REJECTED";';
17700  put 'end;';
17701  put 'else ';
17702  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD27" then do;';
17703  put 'ROLE = "REJECTED";';
17704  put 'end;';
17705  put 'else ';
17706  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD28" then do;';
17707  put 'ROLE = "REJECTED";';
17708  put 'end;';
17709  put 'else ';
17710  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD29" then do;';
17711  put 'ROLE = "REJECTED";';
17712  put 'end;';
17713  put 'else ';
17714  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD30" then do;';
17715  put 'ROLE = "REJECTED";';
17716  put 'end;';
17717  put 'else ';
17718  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD31" then do;';
17719  put 'ROLE = "REJECTED";';
17720  put 'end;';
17721  put 'else ';
17722  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD32" then do;';
17723  put 'ROLE = "REJECTED";';
17724  put 'end;';
17725  put 'else ';
17726  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD33" then do;';
17727  put 'ROLE = "REJECTED";';
17728  put 'end;';
17729  put 'else ';
17730  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD34" then do;';
17731  put 'ROLE = "REJECTED";';
17732  put 'end;';
17733  put 'else ';
17734  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD35" then do;';
17735  put 'ROLE = "REJECTED";';
17736  put 'end;';
17737  put 'else ';
17738  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD36" then do;';
17739  put 'ROLE = "REJECTED";';
17740  put 'end;';
17741  put 'else ';
17742  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD37" then do;';
17743  put 'ROLE = "REJECTED";';
17744  put 'end;';
17745  put 'else ';
17746  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD38" then do;';
17747  put 'ROLE = "REJECTED";';
17748  put 'end;';
17749  put 'else ';
17750  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD39" then do;';
17751  put 'ROLE = "REJECTED";';
17752  put 'end;';
17753  put 'else ';
17754  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD40" then do;';
17755  put 'ROLE = "REJECTED";';
17756  put 'end;';
17757  put 'else ';
17758  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD41" then do;';
17759  put 'ROLE = "REJECTED";';
17760  put 'end;';
17761  put 'else ';
17762  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD42" then do;';
17763  put 'ROLE = "REJECTED";';
17764  put 'end;';
17765  put 'else ';
17766  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD43" then do;';
17767  put 'ROLE = "REJECTED";';
17768  put 'end;';
17769  put 'else ';
17770  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD44" then do;';
17771  put 'ROLE = "REJECTED";';
17772  put 'end;';
17773  put 'else ';
17774  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD45" then do;';
17775  put 'ROLE = "REJECTED";';
17776  put 'end;';
17777  put 'else ';
17778  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD46" then do;';
17779  put 'ROLE = "REJECTED";';
17780  put 'end;';
17781  put 'else ';
17782  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD47" then do;';
17783  put 'ROLE = "REJECTED";';
17784  put 'end;';
17785  put 'else ';
17786  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD48" then do;';
17787  put 'ROLE = "REJECTED";';
17788  put 'end;';
17789  put 'else ';
17790  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD49" then do;';
17791  put 'ROLE = "REJECTED";';
17792  put 'end;';
17793  put 'else ';
17794  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD50" then do;';
17795  put 'ROLE = "REJECTED";';
17796  put 'end;';
17797  put 'else ';
17798  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD51" then do;';
17799  put 'ROLE = "REJECTED";';
17800  put 'end;';
17801  put 'else ';
17802  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD52" then do;';
17803  put 'ROLE = "REJECTED";';
17804  put 'end;';
17805  put 'else ';
17806  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD53" then do;';
17807  put 'ROLE = "REJECTED";';
17808  put 'end;';
17809  put 'else ';
17810  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD54" then do;';
17811  put 'ROLE = "REJECTED";';
17812  put 'end;';
17813  put 'else ';
17814  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD55" then do;';
17815  put 'ROLE = "REJECTED";';
17816  put 'end;';
17817  put 'else ';
17818  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD56" then do;';
17819  put 'ROLE = "REJECTED";';
17820  put 'end;';
17821  put 'else ';
17822  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD57" then do;';
17823  put 'ROLE = "REJECTED";';
17824  put 'end;';
17825  put 'else ';
17826  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD58" then do;';
17827  put 'ROLE = "REJECTED";';
17828  put 'end;';
17829  put 'else ';
17830  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD59" then do;';
17831  put 'ROLE = "REJECTED";';
17832  put 'end;';
17833  put 'else ';
17834  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD6" then do;';
17835  put 'ROLE = "REJECTED";';
17836  put 'end;';
17837  put 'else ';
17838  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD60" then do;';
17839  put 'ROLE = "REJECTED";';
17840  put 'end;';
17841  put 'else ';
17842  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD61" then do;';
17843  put 'ROLE = "REJECTED";';
17844  put 'end;';
17845  put 'else ';
17846  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD62" then do;';
17847  put 'ROLE = "REJECTED";';
17848  put 'end;';
17849  put 'else ';
17850  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD63" then do;';
17851  put 'ROLE = "REJECTED";';
17852  put 'end;';
17853  put 'else ';
17854  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD64" then do;';
17855  put 'ROLE = "REJECTED";';
17856  put 'end;';
17857  put 'else ';
17858  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD65" then do;';
17859  put 'ROLE = "REJECTED";';
17860  put 'end;';
17861  put 'else ';
17862  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD66" then do;';
17863  put 'ROLE = "REJECTED";';
17864  put 'end;';
17865  put 'else ';
17866  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD67" then do;';
17867  put 'ROLE = "REJECTED";';
17868  put 'end;';
17869  put 'else ';
17870  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD68" then do;';
17871  put 'ROLE = "REJECTED";';
17872  put 'end;';
17873  put 'else ';
17874  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD69" then do;';
17875  put 'ROLE = "REJECTED";';
17876  put 'end;';
17877  put 'else ';
17878  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD8" then do;';
17879  put 'ROLE = "REJECTED";';
17880  put 'end;';
17881  put 'else ';
17882  put 'if upcase(NAME) = "TEXTCLUSTER7_SVD9" then do;';
17883  put 'ROLE = "REJECTED";';
17884  put 'end;';
17885  put 'else ';
17886  put 'if upcase(NAME) = "_NODE_" then do;';
17887  put 'ROLE = "SEGMENT";';
17888  put 'LEVEL = "NOMINAL";';
17889  put 'end;';
17890  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:39,
      Create Time=19Nov2023:18:23:27
 
NOTE: 304 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17891  filename x;
NOTE: Fileref X has been deassigned.
 
17892  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas";
17893  *------------------------------------------------------------*;
17894  * Tree4: Scoring DATA data;
17895  *------------------------------------------------------------*;
17896  data EMWS3.Tree4_TRAIN
17897  / view=EMWS3.Tree4_TRAIN
17898  ;
17899  set EMWS3.TextCluster7_TRAIN
17900  ;
17901  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas.
17902 +****************************************************************;
17903 +******             DECISION TREE SCORING CODE             ******;
17904 +****************************************************************;
17905 +
17906 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17907 +LENGTH F_Category  $   22;
17908 +LENGTH I_Category  $   22;
17909 +LENGTH U_Category  $   22;
17910 +LENGTH _WARN_  $    4;
17911 +
17912 +******              LABELS FOR NEW VARIABLES              ******;
17913 +label _NODE_ = 'Node' ;
17914 +label _LEAF_ = 'Leaf' ;
17915 +label P_CategoryHR = 'Predicted: Category=HR' ;
17916 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17917 +label P_CategoryINFORMATION_TECHNOLOGY =
17918 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17919 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17920 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17921 +label P_CategoryBUSINESS_DEVELOPMENT =
17922 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17923 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17924 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17925 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17926 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17927 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17928 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17929 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17930 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17931 +label Q_CategoryINFORMATION_TECHNOLOGY =
17932 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17933 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17934 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17935 +label Q_CategoryBUSINESS_DEVELOPMENT =
17936 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17937 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17938 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17939 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17940 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17941 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17942 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17943 +label V_CategoryHR = 'Validated: Category=HR' ;
17944 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17945 +label V_CategoryINFORMATION_TECHNOLOGY =
17946 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17947 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17948 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17949 +label V_CategoryBUSINESS_DEVELOPMENT =
17950 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17951 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17952 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17953 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17954 +label V_CategorySALES = 'Validated: Category=SALES' ;
17955 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17956 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17957 +label R_CategoryHR = 'Residual: Category=HR' ;
17958 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17959 +label R_CategoryINFORMATION_TECHNOLOGY =
17960 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17961 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17962 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17963 +label R_CategoryBUSINESS_DEVELOPMENT =
17964 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17965 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17966 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17967 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17968 +label R_CategorySALES = 'Residual: Category=SALES' ;
17969 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17970 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17971 +label F_Category = 'From: Category' ;
17972 +label I_Category = 'Into: Category' ;
17973 +label U_Category = 'Unnormalized Into: Category' ;
17974 +label _WARN_ = 'Warnings' ;
17975 +
17976 +
17977 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17978 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17979 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17980 +
17981 +
17982 +_ARBFMT_22 = PUT( Category , $22.);
17983 + %DMNORMCP( _ARBFMT_22, F_Category );
17984 +
17985 +******             ASSIGN OBSERVATION TO NODE             ******;
17986 +IF  NOT MISSING(TextCluster7_SVD4 ) AND
17987 +  TextCluster7_SVD4  <    -0.21960349929217 THEN DO;
17988 +  _NODE_  =                    2;
17989 +  _LEAF_  =                    1;
17990 +  P_CategoryHR  =     0.73134328358208;
17991 +  P_CategoryDESIGNER  =                    0;
17992 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
17993 +  P_CategoryTEACHER  =                    0;
17994 +  P_CategoryADVOCATE  =     0.07462686567164;
17995 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
17996 +  P_CategoryHEALTHCARE  =     0.05970149253731;
17997 +  P_CategoryFITNESS  =     0.01492537313432;
17998 +  P_CategoryOTHER  =     0.01492537313432;
17999 +  P_CategorySALES  =     0.02985074626865;
18000 +  P_CategoryCONSULTANT  =     0.02985074626865;
18001 +  P_CategoryDIGITAL_MEDIA  =                    0;
18002 +  Q_CategoryHR  =     0.73134328358208;
18003 +  Q_CategoryDESIGNER  =                    0;
18004 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
18005 +  Q_CategoryTEACHER  =                    0;
18006 +  Q_CategoryADVOCATE  =     0.07462686567164;
18007 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
18008 +  Q_CategoryHEALTHCARE  =     0.05970149253731;
18009 +  Q_CategoryFITNESS  =     0.01492537313432;
18010 +  Q_CategoryOTHER  =     0.01492537313432;
18011 +  Q_CategorySALES  =     0.02985074626865;
18012 +  Q_CategoryCONSULTANT  =     0.02985074626865;
18013 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18014 +  V_CategoryHR  =     0.73684210526315;
18015 +  V_CategoryDESIGNER  =                    0;
18016 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02631578947368;
18017 +  V_CategoryTEACHER  =                    0;
18018 +  V_CategoryADVOCATE  =     0.02631578947368;
18019 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18020 +  V_CategoryHEALTHCARE  =     0.07894736842105;
18021 +  V_CategoryFITNESS  =     0.02631578947368;
18022 +  V_CategoryOTHER  =     0.02631578947368;
18023 +  V_CategorySALES  =                    0;
18024 +  V_CategoryCONSULTANT  =     0.05263157894736;
18025 +  V_CategoryDIGITAL_MEDIA  =                    0;
18026 +  I_Category  = 'HR' ;
18027 +  U_Category  = 'HR' ;
18028 +  END;
18029 +ELSE DO;
18030 +  IF  NOT MISSING(TextCluster7_SVD5 ) AND
18031 +    TextCluster7_SVD5  <    -0.25134001063195 THEN DO;
18032 +    _NODE_  =                    6;
18033 +    _LEAF_  =                    2;
18034 +    P_CategoryHR  =                    0;
18035 +    P_CategoryDESIGNER  =     0.02380952380952;
18036 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18037 +    P_CategoryTEACHER  =      0.8095238095238;
18038 +    P_CategoryADVOCATE  =     0.07142857142857;
18039 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18040 +    P_CategoryHEALTHCARE  =                    0;
18041 +    P_CategoryFITNESS  =     0.09523809523809;
18042 +    P_CategoryOTHER  =                    0;
18043 +    P_CategorySALES  =                    0;
18044 +    P_CategoryCONSULTANT  =                    0;
18045 +    P_CategoryDIGITAL_MEDIA  =                    0;
18046 +    Q_CategoryHR  =                    0;
18047 +    Q_CategoryDESIGNER  =     0.02380952380952;
18048 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18049 +    Q_CategoryTEACHER  =      0.8095238095238;
18050 +    Q_CategoryADVOCATE  =     0.07142857142857;
18051 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18052 +    Q_CategoryHEALTHCARE  =                    0;
18053 +    Q_CategoryFITNESS  =     0.09523809523809;
18054 +    Q_CategoryOTHER  =                    0;
18055 +    Q_CategorySALES  =                    0;
18056 +    Q_CategoryCONSULTANT  =                    0;
18057 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18058 +    V_CategoryHR  =     0.02439024390243;
18059 +    V_CategoryDESIGNER  =     0.04878048780487;
18060 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18061 +    V_CategoryTEACHER  =     0.56097560975609;
18062 +    V_CategoryADVOCATE  =     0.07317073170731;
18063 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18064 +    V_CategoryHEALTHCARE  =     0.04878048780487;
18065 +    V_CategoryFITNESS  =     0.07317073170731;
18066 +    V_CategoryOTHER  =     0.14634146341463;
18067 +    V_CategorySALES  =                    0;
18068 +    V_CategoryCONSULTANT  =     0.02439024390243;
18069 +    V_CategoryDIGITAL_MEDIA  =                    0;
18070 +    I_Category  = 'TEACHER' ;
18071 +    U_Category  = 'TEACHER' ;
18072 +    END;
18073 +  ELSE DO;
18074 +    IF  NOT MISSING(TextCluster7_SVD2 ) AND
18075 +          0.22658528644565 <= TextCluster7_SVD2  THEN DO;
18076 +      _NODE_  =                   11;
18077 +      _LEAF_  =                    8;
18078 +      P_CategoryHR  =                    0;
18079 +      P_CategoryDESIGNER  =     0.03296703296703;
18080 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
18081 +      P_CategoryTEACHER  =                    0;
18082 +      P_CategoryADVOCATE  =     0.02197802197802;
18083 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
18084 +      P_CategoryHEALTHCARE  =     0.03296703296703;
18085 +      P_CategoryFITNESS  =                    0;
18086 +      P_CategoryOTHER  =     0.06593406593406;
18087 +      P_CategorySALES  =                    0;
18088 +      P_CategoryCONSULTANT  =     0.23076923076923;
18089 +      P_CategoryDIGITAL_MEDIA  =     0.06593406593406;
18090 +      Q_CategoryHR  =                    0;
18091 +      Q_CategoryDESIGNER  =     0.03296703296703;
18092 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
18093 +      Q_CategoryTEACHER  =                    0;
18094 +      Q_CategoryADVOCATE  =     0.02197802197802;
18095 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
18096 +      Q_CategoryHEALTHCARE  =     0.03296703296703;
18097 +      Q_CategoryFITNESS  =                    0;
18098 +      Q_CategoryOTHER  =     0.06593406593406;
18099 +      Q_CategorySALES  =                    0;
18100 +      Q_CategoryCONSULTANT  =     0.23076923076923;
18101 +      Q_CategoryDIGITAL_MEDIA  =     0.06593406593406;
18102 +      V_CategoryHR  =                    0;
18103 +      V_CategoryDESIGNER  =      0.0377358490566;
18104 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
18105 +      V_CategoryTEACHER  =                    0;
18106 +      V_CategoryADVOCATE  =      0.0188679245283;
18107 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
18108 +      V_CategoryHEALTHCARE  =      0.0188679245283;
18109 +      V_CategoryFITNESS  =                    0;
18110 +      V_CategoryOTHER  =      0.0566037735849;
18111 +      V_CategorySALES  =      0.0188679245283;
18112 +      V_CategoryCONSULTANT  =     0.16981132075471;
18113 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
18114 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18115 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18116 +      END;
18117 +    ELSE DO;
18118 +      IF  NOT MISSING(TextCluster7_SVD11 ) AND
18119 +            0.17462934468944 <= TextCluster7_SVD11  THEN DO;
18120 +        _NODE_  =                   15;
18121 +        _LEAF_  =                    7;
18122 +        P_CategoryHR  =     0.02439024390243;
18123 +        P_CategoryDESIGNER  =                    0;
18124 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18125 +        P_CategoryTEACHER  =                    0;
18126 +        P_CategoryADVOCATE  =     0.07317073170731;
18127 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
18128 +        P_CategoryHEALTHCARE  =                    0;
18129 +        P_CategoryFITNESS  =     0.82926829268292;
18130 +        P_CategoryOTHER  =                    0;
18131 +        P_CategorySALES  =     0.02439024390243;
18132 +        P_CategoryCONSULTANT  =                    0;
18133 +        P_CategoryDIGITAL_MEDIA  =     0.02439024390243;
18134 +        Q_CategoryHR  =     0.02439024390243;
18135 +        Q_CategoryDESIGNER  =                    0;
18136 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18137 +        Q_CategoryTEACHER  =                    0;
18138 +        Q_CategoryADVOCATE  =     0.07317073170731;
18139 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
18140 +        Q_CategoryHEALTHCARE  =                    0;
18141 +        Q_CategoryFITNESS  =     0.82926829268292;
18142 +        Q_CategoryOTHER  =                    0;
18143 +        Q_CategorySALES  =     0.02439024390243;
18144 +        Q_CategoryCONSULTANT  =                    0;
18145 +        Q_CategoryDIGITAL_MEDIA  =     0.02439024390243;
18146 +        V_CategoryHR  =                    0;
18147 +        V_CategoryDESIGNER  =                    0;
18148 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18149 +        V_CategoryTEACHER  =                    0;
18150 +        V_CategoryADVOCATE  =                 0.05;
18151 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18152 +        V_CategoryHEALTHCARE  =                 0.05;
18153 +        V_CategoryFITNESS  =                  0.8;
18154 +        V_CategoryOTHER  =                 0.05;
18155 +        V_CategorySALES  =                    0;
18156 +        V_CategoryCONSULTANT  =                    0;
18157 +        V_CategoryDIGITAL_MEDIA  =                    0;
18158 +        I_Category  = 'FITNESS' ;
18159 +        U_Category  = 'FITNESS' ;
18160 +        END;
18161 +      ELSE DO;
18162 +        IF  NOT MISSING(TextCluster7_SVD7 ) AND
18163 +              0.04979885441801 <= TextCluster7_SVD7  THEN DO;
18164 +          IF  NOT MISSING(TextCluster7_SVD2 ) AND
18165 +            TextCluster7_SVD2  <    -0.15342627742015 THEN DO;
18166 +            _NODE_  =                   24;
18167 +            _LEAF_  =                    5;
18168 +            P_CategoryHR  =     0.04347826086956;
18169 +            P_CategoryDESIGNER  =     0.01449275362318;
18170 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18171 +            P_CategoryTEACHER  =     0.18840579710144;
18172 +            P_CategoryADVOCATE  =     0.08695652173913;
18173 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
18174 +            P_CategoryHEALTHCARE  =     0.01449275362318;
18175 +            P_CategoryFITNESS  =     0.08695652173913;
18176 +            P_CategoryOTHER  =     0.04347826086956;
18177 +            P_CategorySALES  =     0.39130434782608;
18178 +            P_CategoryCONSULTANT  =     0.04347826086956;
18179 +            P_CategoryDIGITAL_MEDIA  =     0.01449275362318;
18180 +            Q_CategoryHR  =     0.04347826086956;
18181 +            Q_CategoryDESIGNER  =     0.01449275362318;
18182 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18183 +            Q_CategoryTEACHER  =     0.18840579710144;
18184 +            Q_CategoryADVOCATE  =     0.08695652173913;
18185 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
18186 +            Q_CategoryHEALTHCARE  =     0.01449275362318;
18187 +            Q_CategoryFITNESS  =     0.08695652173913;
18188 +            Q_CategoryOTHER  =     0.04347826086956;
18189 +            Q_CategorySALES  =     0.39130434782608;
18190 +            Q_CategoryCONSULTANT  =     0.04347826086956;
18191 +            Q_CategoryDIGITAL_MEDIA  =     0.01449275362318;
18192 +            V_CategoryHR  =     0.04761904761904;
18193 +            V_CategoryDESIGNER  =     0.09523809523809;
18194 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18195 +            V_CategoryTEACHER  =     0.11904761904761;
18196 +            V_CategoryADVOCATE  =     0.14285714285714;
18197 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02380952380952;
18198 +            V_CategoryHEALTHCARE  =     0.02380952380952;
18199 +            V_CategoryFITNESS  =     0.09523809523809;
18200 +            V_CategoryOTHER  =     0.04761904761904;
18201 +            V_CategorySALES  =     0.33333333333333;
18202 +            V_CategoryCONSULTANT  =     0.02380952380952;
18203 +            V_CategoryDIGITAL_MEDIA  =     0.04761904761904;
18204 +            I_Category  = 'SALES' ;
18205 +            U_Category  = 'SALES' ;
18206 +            END;
18207 +          ELSE DO;
18208 +            _NODE_  =                   25;
18209 +            _LEAF_  =                    6;
18210 +            P_CategoryHR  =     0.01086956521739;
18211 +            P_CategoryDESIGNER  =     0.46739130434782;
18212 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
18213 +            P_CategoryTEACHER  =     0.01086956521739;
18214 +            P_CategoryADVOCATE  =     0.01086956521739;
18215 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18216 +            P_CategoryHEALTHCARE  =     0.03260869565217;
18217 +            P_CategoryFITNESS  =                    0;
18218 +            P_CategoryOTHER  =     0.02173913043478;
18219 +            P_CategorySALES  =     0.05434782608695;
18220 +            P_CategoryCONSULTANT  =     0.01086956521739;
18221 +            P_CategoryDIGITAL_MEDIA  =     0.31521739130434;
18222 +            Q_CategoryHR  =     0.01086956521739;
18223 +            Q_CategoryDESIGNER  =     0.46739130434782;
18224 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
18225 +            Q_CategoryTEACHER  =     0.01086956521739;
18226 +            Q_CategoryADVOCATE  =     0.01086956521739;
18227 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18228 +            Q_CategoryHEALTHCARE  =     0.03260869565217;
18229 +            Q_CategoryFITNESS  =                    0;
18230 +            Q_CategoryOTHER  =     0.02173913043478;
18231 +            Q_CategorySALES  =     0.05434782608695;
18232 +            Q_CategoryCONSULTANT  =     0.01086956521739;
18233 +            Q_CategoryDIGITAL_MEDIA  =     0.31521739130434;
18234 +            V_CategoryHR  =     0.01923076923076;
18235 +            V_CategoryDESIGNER  =     0.38461538461538;
18236 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18237 +            V_CategoryTEACHER  =     0.01923076923076;
18238 +            V_CategoryADVOCATE  =                    0;
18239 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.0576923076923;
18240 +            V_CategoryHEALTHCARE  =     0.01923076923076;
18241 +            V_CategoryFITNESS  =                    0;
18242 +            V_CategoryOTHER  =     0.03846153846153;
18243 +            V_CategorySALES  =     0.09615384615384;
18244 +            V_CategoryCONSULTANT  =     0.01923076923076;
18245 +            V_CategoryDIGITAL_MEDIA  =     0.32692307692307;
18246 +            I_Category  = 'DESIGNER' ;
18247 +            U_Category  = 'DESIGNER' ;
18248 +            END;
18249 +          END;
18250 +        ELSE DO;
18251 +          IF  NOT MISSING(TextCluster7_SVD3 ) AND
18252 +                0.18533092484376 <= TextCluster7_SVD3  THEN DO;
18253 +            _NODE_  =                   23;
18254 +            _LEAF_  =                    4;
18255 +            P_CategoryHR  =                    0;
18256 +            P_CategoryDESIGNER  =                    0;
18257 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18258 +            P_CategoryTEACHER  =                    0;
18259 +            P_CategoryADVOCATE  =     0.02666666666666;
18260 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
18261 +            P_CategoryHEALTHCARE  =     0.06666666666666;
18262 +            P_CategoryFITNESS  =     0.05333333333333;
18263 +            P_CategoryOTHER  =                 0.08;
18264 +            P_CategorySALES  =     0.09333333333333;
18265 +            P_CategoryCONSULTANT  =                 0.12;
18266 +            P_CategoryDIGITAL_MEDIA  =     0.10666666666666;
18267 +            Q_CategoryHR  =                    0;
18268 +            Q_CategoryDESIGNER  =                    0;
18269 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18270 +            Q_CategoryTEACHER  =                    0;
18271 +            Q_CategoryADVOCATE  =     0.02666666666666;
18272 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
18273 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
18274 +            Q_CategoryFITNESS  =     0.05333333333333;
18275 +            Q_CategoryOTHER  =                 0.08;
18276 +            Q_CategorySALES  =     0.09333333333333;
18277 +            Q_CategoryCONSULTANT  =                 0.12;
18278 +            Q_CategoryDIGITAL_MEDIA  =     0.10666666666666;
18279 +            V_CategoryHR  =                    0;
18280 +            V_CategoryDESIGNER  =                    0;
18281 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18282 +            V_CategoryTEACHER  =                    0;
18283 +            V_CategoryADVOCATE  =     0.03703703703703;
18284 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48148148148148;
18285 +            V_CategoryHEALTHCARE  =     0.12962962962962;
18286 +            V_CategoryFITNESS  =     0.01851851851851;
18287 +            V_CategoryOTHER  =     0.01851851851851;
18288 +            V_CategorySALES  =     0.09259259259259;
18289 +            V_CategoryCONSULTANT  =     0.16666666666666;
18290 +            V_CategoryDIGITAL_MEDIA  =     0.05555555555555;
18291 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18292 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18293 +            END;
18294 +          ELSE DO;
18295 +            _NODE_  =                   22;
18296 +            _LEAF_  =                    3;
18297 +            P_CategoryHR  =     0.00507614213197;
18298 +            P_CategoryDESIGNER  =     0.02538071065989;
18299 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
18300 +            P_CategoryTEACHER  =     0.01015228426395;
18301 +            P_CategoryADVOCATE  =     0.17766497461928;
18302 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
18303 +            P_CategoryHEALTHCARE  =     0.20812182741116;
18304 +            P_CategoryFITNESS  =     0.04568527918781;
18305 +            P_CategoryOTHER  =     0.22842639593908;
18306 +            P_CategorySALES  =     0.08121827411167;
18307 +            P_CategoryCONSULTANT  =     0.10659898477157;
18308 +            P_CategoryDIGITAL_MEDIA  =     0.01015228426395;
18309 +            Q_CategoryHR  =     0.00507614213197;
18310 +            Q_CategoryDESIGNER  =     0.02538071065989;
18311 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
18312 +            Q_CategoryTEACHER  =     0.01015228426395;
18313 +            Q_CategoryADVOCATE  =     0.17766497461928;
18314 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
18315 +            Q_CategoryHEALTHCARE  =     0.20812182741116;
18316 +            Q_CategoryFITNESS  =     0.04568527918781;
18317 +            Q_CategoryOTHER  =     0.22842639593908;
18318 +            Q_CategorySALES  =     0.08121827411167;
18319 +            Q_CategoryCONSULTANT  =     0.10659898477157;
18320 +            Q_CategoryDIGITAL_MEDIA  =     0.01015228426395;
18321 +            V_CategoryHR  =                    0;
18322 +            V_CategoryDESIGNER  =     0.02857142857142;
18323 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
18324 +            V_CategoryTEACHER  =     0.01904761904761;
18325 +            V_CategoryADVOCATE  =                  0.2;
18326 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.03809523809523;
18327 +            V_CategoryHEALTHCARE  =     0.16190476190476;
18328 +            V_CategoryFITNESS  =     0.09523809523809;
18329 +            V_CategoryOTHER  =      0.2095238095238;
18330 +            V_CategorySALES  =     0.08571428571428;
18331 +            V_CategoryCONSULTANT  =     0.11428571428571;
18332 +            V_CategoryDIGITAL_MEDIA  =     0.01904761904761;
18333 +            I_Category  = 'OTHER' ;
18334 +            U_Category  = 'OTHER' ;
18335 +            END;
18336 +          END;
18337 +        END;
18338 +      END;
18339 +    END;
18340 +  END;
18341 +
18342 +*****  RESIDUALS R_ *************;
18343 +IF  F_Category  NE 'HR'
18344 +AND F_Category  NE 'DESIGNER'
18345 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18346 +AND F_Category  NE 'TEACHER'
18347 +AND F_Category  NE 'ADVOCATE'
18348 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18349 +AND F_Category  NE 'HEALTHCARE'
18350 +AND F_Category  NE 'FITNESS'
18351 +AND F_Category  NE 'OTHER'
18352 +AND F_Category  NE 'SALES'
18353 +AND F_Category  NE 'CONSULTANT'
18354 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18355 +        R_CategoryHR  = .;
18356 +        R_CategoryDESIGNER  = .;
18357 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18358 +        R_CategoryTEACHER  = .;
18359 +        R_CategoryADVOCATE  = .;
18360 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18361 +        R_CategoryHEALTHCARE  = .;
18362 +        R_CategoryFITNESS  = .;
18363 +        R_CategoryOTHER  = .;
18364 +        R_CategorySALES  = .;
18365 +        R_CategoryCONSULTANT  = .;
18366 +        R_CategoryDIGITAL_MEDIA  = .;
18367 + END;
18368 + ELSE DO;
18369 +       R_CategoryHR  =  -P_CategoryHR ;
18370 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18371 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18372 +         ;
18373 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18374 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18375 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18376 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18377 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18378 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18379 +       R_CategorySALES  =  -P_CategorySALES ;
18380 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18381 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18382 +       SELECT( F_Category  );
18383 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18384 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18385 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18386 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18387 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18388 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18389 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18390 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18391 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18392 +          +1;
18393 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18394 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18395 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18396 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18397 +          +1;
18398 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18399 +        R_CategoryDIGITAL_MEDIA  +1;
18400 +       END;
18401 + END;
18402 +
18403 +****************************************************************;
18404 +******          END OF DECISION TREE SCORING CODE         ******;
18405 +****************************************************************;
18406 +
18407 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18408  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18409  quit;
18410  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18411  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas";
18412  *------------------------------------------------------------*;
18413  * Tree4: Scoring VALIDATE data;
18414  *------------------------------------------------------------*;
18415  data EMWS3.Tree4_VALIDATE
18416  / view=EMWS3.Tree4_VALIDATE
18417  ;
18418  set EMWS3.TextCluster7_VALIDATE
18419  ;
18420  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas.
18421 +****************************************************************;
18422 +******             DECISION TREE SCORING CODE             ******;
18423 +****************************************************************;
18424 +
18425 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18426 +LENGTH F_Category  $   22;
18427 +LENGTH I_Category  $   22;
18428 +LENGTH U_Category  $   22;
18429 +LENGTH _WARN_  $    4;
18430 +
18431 +******              LABELS FOR NEW VARIABLES              ******;
18432 +label _NODE_ = 'Node' ;
18433 +label _LEAF_ = 'Leaf' ;
18434 +label P_CategoryHR = 'Predicted: Category=HR' ;
18435 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18436 +label P_CategoryINFORMATION_TECHNOLOGY =
18437 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18438 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18439 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18440 +label P_CategoryBUSINESS_DEVELOPMENT =
18441 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18442 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18443 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18444 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18445 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18446 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18447 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18448 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18449 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18450 +label Q_CategoryINFORMATION_TECHNOLOGY =
18451 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18452 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18453 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18454 +label Q_CategoryBUSINESS_DEVELOPMENT =
18455 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18456 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18457 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18458 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18459 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18460 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18461 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18462 +label V_CategoryHR = 'Validated: Category=HR' ;
18463 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18464 +label V_CategoryINFORMATION_TECHNOLOGY =
18465 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18466 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18467 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18468 +label V_CategoryBUSINESS_DEVELOPMENT =
18469 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18470 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18471 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18472 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18473 +label V_CategorySALES = 'Validated: Category=SALES' ;
18474 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18475 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18476 +label R_CategoryHR = 'Residual: Category=HR' ;
18477 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18478 +label R_CategoryINFORMATION_TECHNOLOGY =
18479 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18480 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18481 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18482 +label R_CategoryBUSINESS_DEVELOPMENT =
18483 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18484 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18485 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18486 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18487 +label R_CategorySALES = 'Residual: Category=SALES' ;
18488 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18489 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18490 +label F_Category = 'From: Category' ;
18491 +label I_Category = 'Into: Category' ;
18492 +label U_Category = 'Unnormalized Into: Category' ;
18493 +label _WARN_ = 'Warnings' ;
18494 +
18495 +
18496 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18497 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18498 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18499 +
18500 +
18501 +_ARBFMT_22 = PUT( Category , $22.);
18502 + %DMNORMCP( _ARBFMT_22, F_Category );
18503 +
18504 +******             ASSIGN OBSERVATION TO NODE             ******;
18505 +IF  NOT MISSING(TextCluster7_SVD4 ) AND
18506 +  TextCluster7_SVD4  <    -0.21960349929217 THEN DO;
18507 +  _NODE_  =                    2;
18508 +  _LEAF_  =                    1;
18509 +  P_CategoryHR  =     0.73134328358208;
18510 +  P_CategoryDESIGNER  =                    0;
18511 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
18512 +  P_CategoryTEACHER  =                    0;
18513 +  P_CategoryADVOCATE  =     0.07462686567164;
18514 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
18515 +  P_CategoryHEALTHCARE  =     0.05970149253731;
18516 +  P_CategoryFITNESS  =     0.01492537313432;
18517 +  P_CategoryOTHER  =     0.01492537313432;
18518 +  P_CategorySALES  =     0.02985074626865;
18519 +  P_CategoryCONSULTANT  =     0.02985074626865;
18520 +  P_CategoryDIGITAL_MEDIA  =                    0;
18521 +  Q_CategoryHR  =     0.73134328358208;
18522 +  Q_CategoryDESIGNER  =                    0;
18523 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
18524 +  Q_CategoryTEACHER  =                    0;
18525 +  Q_CategoryADVOCATE  =     0.07462686567164;
18526 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
18527 +  Q_CategoryHEALTHCARE  =     0.05970149253731;
18528 +  Q_CategoryFITNESS  =     0.01492537313432;
18529 +  Q_CategoryOTHER  =     0.01492537313432;
18530 +  Q_CategorySALES  =     0.02985074626865;
18531 +  Q_CategoryCONSULTANT  =     0.02985074626865;
18532 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18533 +  V_CategoryHR  =     0.73684210526315;
18534 +  V_CategoryDESIGNER  =                    0;
18535 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02631578947368;
18536 +  V_CategoryTEACHER  =                    0;
18537 +  V_CategoryADVOCATE  =     0.02631578947368;
18538 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
18539 +  V_CategoryHEALTHCARE  =     0.07894736842105;
18540 +  V_CategoryFITNESS  =     0.02631578947368;
18541 +  V_CategoryOTHER  =     0.02631578947368;
18542 +  V_CategorySALES  =                    0;
18543 +  V_CategoryCONSULTANT  =     0.05263157894736;
18544 +  V_CategoryDIGITAL_MEDIA  =                    0;
18545 +  I_Category  = 'HR' ;
18546 +  U_Category  = 'HR' ;
18547 +  END;
18548 +ELSE DO;
18549 +  IF  NOT MISSING(TextCluster7_SVD5 ) AND
18550 +    TextCluster7_SVD5  <    -0.25134001063195 THEN DO;
18551 +    _NODE_  =                    6;
18552 +    _LEAF_  =                    2;
18553 +    P_CategoryHR  =                    0;
18554 +    P_CategoryDESIGNER  =     0.02380952380952;
18555 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18556 +    P_CategoryTEACHER  =      0.8095238095238;
18557 +    P_CategoryADVOCATE  =     0.07142857142857;
18558 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18559 +    P_CategoryHEALTHCARE  =                    0;
18560 +    P_CategoryFITNESS  =     0.09523809523809;
18561 +    P_CategoryOTHER  =                    0;
18562 +    P_CategorySALES  =                    0;
18563 +    P_CategoryCONSULTANT  =                    0;
18564 +    P_CategoryDIGITAL_MEDIA  =                    0;
18565 +    Q_CategoryHR  =                    0;
18566 +    Q_CategoryDESIGNER  =     0.02380952380952;
18567 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18568 +    Q_CategoryTEACHER  =      0.8095238095238;
18569 +    Q_CategoryADVOCATE  =     0.07142857142857;
18570 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18571 +    Q_CategoryHEALTHCARE  =                    0;
18572 +    Q_CategoryFITNESS  =     0.09523809523809;
18573 +    Q_CategoryOTHER  =                    0;
18574 +    Q_CategorySALES  =                    0;
18575 +    Q_CategoryCONSULTANT  =                    0;
18576 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18577 +    V_CategoryHR  =     0.02439024390243;
18578 +    V_CategoryDESIGNER  =     0.04878048780487;
18579 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18580 +    V_CategoryTEACHER  =     0.56097560975609;
18581 +    V_CategoryADVOCATE  =     0.07317073170731;
18582 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18583 +    V_CategoryHEALTHCARE  =     0.04878048780487;
18584 +    V_CategoryFITNESS  =     0.07317073170731;
18585 +    V_CategoryOTHER  =     0.14634146341463;
18586 +    V_CategorySALES  =                    0;
18587 +    V_CategoryCONSULTANT  =     0.02439024390243;
18588 +    V_CategoryDIGITAL_MEDIA  =                    0;
18589 +    I_Category  = 'TEACHER' ;
18590 +    U_Category  = 'TEACHER' ;
18591 +    END;
18592 +  ELSE DO;
18593 +    IF  NOT MISSING(TextCluster7_SVD2 ) AND
18594 +          0.22658528644565 <= TextCluster7_SVD2  THEN DO;
18595 +      _NODE_  =                   11;
18596 +      _LEAF_  =                    8;
18597 +      P_CategoryHR  =                    0;
18598 +      P_CategoryDESIGNER  =     0.03296703296703;
18599 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
18600 +      P_CategoryTEACHER  =                    0;
18601 +      P_CategoryADVOCATE  =     0.02197802197802;
18602 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
18603 +      P_CategoryHEALTHCARE  =     0.03296703296703;
18604 +      P_CategoryFITNESS  =                    0;
18605 +      P_CategoryOTHER  =     0.06593406593406;
18606 +      P_CategorySALES  =                    0;
18607 +      P_CategoryCONSULTANT  =     0.23076923076923;
18608 +      P_CategoryDIGITAL_MEDIA  =     0.06593406593406;
18609 +      Q_CategoryHR  =                    0;
18610 +      Q_CategoryDESIGNER  =     0.03296703296703;
18611 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
18612 +      Q_CategoryTEACHER  =                    0;
18613 +      Q_CategoryADVOCATE  =     0.02197802197802;
18614 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
18615 +      Q_CategoryHEALTHCARE  =     0.03296703296703;
18616 +      Q_CategoryFITNESS  =                    0;
18617 +      Q_CategoryOTHER  =     0.06593406593406;
18618 +      Q_CategorySALES  =                    0;
18619 +      Q_CategoryCONSULTANT  =     0.23076923076923;
18620 +      Q_CategoryDIGITAL_MEDIA  =     0.06593406593406;
18621 +      V_CategoryHR  =                    0;
18622 +      V_CategoryDESIGNER  =      0.0377358490566;
18623 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
18624 +      V_CategoryTEACHER  =                    0;
18625 +      V_CategoryADVOCATE  =      0.0188679245283;
18626 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
18627 +      V_CategoryHEALTHCARE  =      0.0188679245283;
18628 +      V_CategoryFITNESS  =                    0;
18629 +      V_CategoryOTHER  =      0.0566037735849;
18630 +      V_CategorySALES  =      0.0188679245283;
18631 +      V_CategoryCONSULTANT  =     0.16981132075471;
18632 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
18633 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
18634 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
18635 +      END;
18636 +    ELSE DO;
18637 +      IF  NOT MISSING(TextCluster7_SVD11 ) AND
18638 +            0.17462934468944 <= TextCluster7_SVD11  THEN DO;
18639 +        _NODE_  =                   15;
18640 +        _LEAF_  =                    7;
18641 +        P_CategoryHR  =     0.02439024390243;
18642 +        P_CategoryDESIGNER  =                    0;
18643 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18644 +        P_CategoryTEACHER  =                    0;
18645 +        P_CategoryADVOCATE  =     0.07317073170731;
18646 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
18647 +        P_CategoryHEALTHCARE  =                    0;
18648 +        P_CategoryFITNESS  =     0.82926829268292;
18649 +        P_CategoryOTHER  =                    0;
18650 +        P_CategorySALES  =     0.02439024390243;
18651 +        P_CategoryCONSULTANT  =                    0;
18652 +        P_CategoryDIGITAL_MEDIA  =     0.02439024390243;
18653 +        Q_CategoryHR  =     0.02439024390243;
18654 +        Q_CategoryDESIGNER  =                    0;
18655 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18656 +        Q_CategoryTEACHER  =                    0;
18657 +        Q_CategoryADVOCATE  =     0.07317073170731;
18658 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
18659 +        Q_CategoryHEALTHCARE  =                    0;
18660 +        Q_CategoryFITNESS  =     0.82926829268292;
18661 +        Q_CategoryOTHER  =                    0;
18662 +        Q_CategorySALES  =     0.02439024390243;
18663 +        Q_CategoryCONSULTANT  =                    0;
18664 +        Q_CategoryDIGITAL_MEDIA  =     0.02439024390243;
18665 +        V_CategoryHR  =                    0;
18666 +        V_CategoryDESIGNER  =                    0;
18667 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
18668 +        V_CategoryTEACHER  =                    0;
18669 +        V_CategoryADVOCATE  =                 0.05;
18670 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18671 +        V_CategoryHEALTHCARE  =                 0.05;
18672 +        V_CategoryFITNESS  =                  0.8;
18673 +        V_CategoryOTHER  =                 0.05;
18674 +        V_CategorySALES  =                    0;
18675 +        V_CategoryCONSULTANT  =                    0;
18676 +        V_CategoryDIGITAL_MEDIA  =                    0;
18677 +        I_Category  = 'FITNESS' ;
18678 +        U_Category  = 'FITNESS' ;
18679 +        END;
18680 +      ELSE DO;
18681 +        IF  NOT MISSING(TextCluster7_SVD7 ) AND
18682 +              0.04979885441801 <= TextCluster7_SVD7  THEN DO;
18683 +          IF  NOT MISSING(TextCluster7_SVD2 ) AND
18684 +            TextCluster7_SVD2  <    -0.15342627742015 THEN DO;
18685 +            _NODE_  =                   24;
18686 +            _LEAF_  =                    5;
18687 +            P_CategoryHR  =     0.04347826086956;
18688 +            P_CategoryDESIGNER  =     0.01449275362318;
18689 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18690 +            P_CategoryTEACHER  =     0.18840579710144;
18691 +            P_CategoryADVOCATE  =     0.08695652173913;
18692 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
18693 +            P_CategoryHEALTHCARE  =     0.01449275362318;
18694 +            P_CategoryFITNESS  =     0.08695652173913;
18695 +            P_CategoryOTHER  =     0.04347826086956;
18696 +            P_CategorySALES  =     0.39130434782608;
18697 +            P_CategoryCONSULTANT  =     0.04347826086956;
18698 +            P_CategoryDIGITAL_MEDIA  =     0.01449275362318;
18699 +            Q_CategoryHR  =     0.04347826086956;
18700 +            Q_CategoryDESIGNER  =     0.01449275362318;
18701 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18702 +            Q_CategoryTEACHER  =     0.18840579710144;
18703 +            Q_CategoryADVOCATE  =     0.08695652173913;
18704 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
18705 +            Q_CategoryHEALTHCARE  =     0.01449275362318;
18706 +            Q_CategoryFITNESS  =     0.08695652173913;
18707 +            Q_CategoryOTHER  =     0.04347826086956;
18708 +            Q_CategorySALES  =     0.39130434782608;
18709 +            Q_CategoryCONSULTANT  =     0.04347826086956;
18710 +            Q_CategoryDIGITAL_MEDIA  =     0.01449275362318;
18711 +            V_CategoryHR  =     0.04761904761904;
18712 +            V_CategoryDESIGNER  =     0.09523809523809;
18713 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18714 +            V_CategoryTEACHER  =     0.11904761904761;
18715 +            V_CategoryADVOCATE  =     0.14285714285714;
18716 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02380952380952;
18717 +            V_CategoryHEALTHCARE  =     0.02380952380952;
18718 +            V_CategoryFITNESS  =     0.09523809523809;
18719 +            V_CategoryOTHER  =     0.04761904761904;
18720 +            V_CategorySALES  =     0.33333333333333;
18721 +            V_CategoryCONSULTANT  =     0.02380952380952;
18722 +            V_CategoryDIGITAL_MEDIA  =     0.04761904761904;
18723 +            I_Category  = 'SALES' ;
18724 +            U_Category  = 'SALES' ;
18725 +            END;
18726 +          ELSE DO;
18727 +            _NODE_  =                   25;
18728 +            _LEAF_  =                    6;
18729 +            P_CategoryHR  =     0.01086956521739;
18730 +            P_CategoryDESIGNER  =     0.46739130434782;
18731 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
18732 +            P_CategoryTEACHER  =     0.01086956521739;
18733 +            P_CategoryADVOCATE  =     0.01086956521739;
18734 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18735 +            P_CategoryHEALTHCARE  =     0.03260869565217;
18736 +            P_CategoryFITNESS  =                    0;
18737 +            P_CategoryOTHER  =     0.02173913043478;
18738 +            P_CategorySALES  =     0.05434782608695;
18739 +            P_CategoryCONSULTANT  =     0.01086956521739;
18740 +            P_CategoryDIGITAL_MEDIA  =     0.31521739130434;
18741 +            Q_CategoryHR  =     0.01086956521739;
18742 +            Q_CategoryDESIGNER  =     0.46739130434782;
18743 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
18744 +            Q_CategoryTEACHER  =     0.01086956521739;
18745 +            Q_CategoryADVOCATE  =     0.01086956521739;
18746 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
18747 +            Q_CategoryHEALTHCARE  =     0.03260869565217;
18748 +            Q_CategoryFITNESS  =                    0;
18749 +            Q_CategoryOTHER  =     0.02173913043478;
18750 +            Q_CategorySALES  =     0.05434782608695;
18751 +            Q_CategoryCONSULTANT  =     0.01086956521739;
18752 +            Q_CategoryDIGITAL_MEDIA  =     0.31521739130434;
18753 +            V_CategoryHR  =     0.01923076923076;
18754 +            V_CategoryDESIGNER  =     0.38461538461538;
18755 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
18756 +            V_CategoryTEACHER  =     0.01923076923076;
18757 +            V_CategoryADVOCATE  =                    0;
18758 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.0576923076923;
18759 +            V_CategoryHEALTHCARE  =     0.01923076923076;
18760 +            V_CategoryFITNESS  =                    0;
18761 +            V_CategoryOTHER  =     0.03846153846153;
18762 +            V_CategorySALES  =     0.09615384615384;
18763 +            V_CategoryCONSULTANT  =     0.01923076923076;
18764 +            V_CategoryDIGITAL_MEDIA  =     0.32692307692307;
18765 +            I_Category  = 'DESIGNER' ;
18766 +            U_Category  = 'DESIGNER' ;
18767 +            END;
18768 +          END;
18769 +        ELSE DO;
18770 +          IF  NOT MISSING(TextCluster7_SVD3 ) AND
18771 +                0.18533092484376 <= TextCluster7_SVD3  THEN DO;
18772 +            _NODE_  =                   23;
18773 +            _LEAF_  =                    4;
18774 +            P_CategoryHR  =                    0;
18775 +            P_CategoryDESIGNER  =                    0;
18776 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18777 +            P_CategoryTEACHER  =                    0;
18778 +            P_CategoryADVOCATE  =     0.02666666666666;
18779 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
18780 +            P_CategoryHEALTHCARE  =     0.06666666666666;
18781 +            P_CategoryFITNESS  =     0.05333333333333;
18782 +            P_CategoryOTHER  =                 0.08;
18783 +            P_CategorySALES  =     0.09333333333333;
18784 +            P_CategoryCONSULTANT  =                 0.12;
18785 +            P_CategoryDIGITAL_MEDIA  =     0.10666666666666;
18786 +            Q_CategoryHR  =                    0;
18787 +            Q_CategoryDESIGNER  =                    0;
18788 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18789 +            Q_CategoryTEACHER  =                    0;
18790 +            Q_CategoryADVOCATE  =     0.02666666666666;
18791 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
18792 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
18793 +            Q_CategoryFITNESS  =     0.05333333333333;
18794 +            Q_CategoryOTHER  =                 0.08;
18795 +            Q_CategorySALES  =     0.09333333333333;
18796 +            Q_CategoryCONSULTANT  =                 0.12;
18797 +            Q_CategoryDIGITAL_MEDIA  =     0.10666666666666;
18798 +            V_CategoryHR  =                    0;
18799 +            V_CategoryDESIGNER  =                    0;
18800 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18801 +            V_CategoryTEACHER  =                    0;
18802 +            V_CategoryADVOCATE  =     0.03703703703703;
18803 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48148148148148;
18804 +            V_CategoryHEALTHCARE  =     0.12962962962962;
18805 +            V_CategoryFITNESS  =     0.01851851851851;
18806 +            V_CategoryOTHER  =     0.01851851851851;
18807 +            V_CategorySALES  =     0.09259259259259;
18808 +            V_CategoryCONSULTANT  =     0.16666666666666;
18809 +            V_CategoryDIGITAL_MEDIA  =     0.05555555555555;
18810 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
18811 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
18812 +            END;
18813 +          ELSE DO;
18814 +            _NODE_  =                   22;
18815 +            _LEAF_  =                    3;
18816 +            P_CategoryHR  =     0.00507614213197;
18817 +            P_CategoryDESIGNER  =     0.02538071065989;
18818 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
18819 +            P_CategoryTEACHER  =     0.01015228426395;
18820 +            P_CategoryADVOCATE  =     0.17766497461928;
18821 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
18822 +            P_CategoryHEALTHCARE  =     0.20812182741116;
18823 +            P_CategoryFITNESS  =     0.04568527918781;
18824 +            P_CategoryOTHER  =     0.22842639593908;
18825 +            P_CategorySALES  =     0.08121827411167;
18826 +            P_CategoryCONSULTANT  =     0.10659898477157;
18827 +            P_CategoryDIGITAL_MEDIA  =     0.01015228426395;
18828 +            Q_CategoryHR  =     0.00507614213197;
18829 +            Q_CategoryDESIGNER  =     0.02538071065989;
18830 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
18831 +            Q_CategoryTEACHER  =     0.01015228426395;
18832 +            Q_CategoryADVOCATE  =     0.17766497461928;
18833 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
18834 +            Q_CategoryHEALTHCARE  =     0.20812182741116;
18835 +            Q_CategoryFITNESS  =     0.04568527918781;
18836 +            Q_CategoryOTHER  =     0.22842639593908;
18837 +            Q_CategorySALES  =     0.08121827411167;
18838 +            Q_CategoryCONSULTANT  =     0.10659898477157;
18839 +            Q_CategoryDIGITAL_MEDIA  =     0.01015228426395;
18840 +            V_CategoryHR  =                    0;
18841 +            V_CategoryDESIGNER  =     0.02857142857142;
18842 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
18843 +            V_CategoryTEACHER  =     0.01904761904761;
18844 +            V_CategoryADVOCATE  =                  0.2;
18845 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.03809523809523;
18846 +            V_CategoryHEALTHCARE  =     0.16190476190476;
18847 +            V_CategoryFITNESS  =     0.09523809523809;
18848 +            V_CategoryOTHER  =      0.2095238095238;
18849 +            V_CategorySALES  =     0.08571428571428;
18850 +            V_CategoryCONSULTANT  =     0.11428571428571;
18851 +            V_CategoryDIGITAL_MEDIA  =     0.01904761904761;
18852 +            I_Category  = 'OTHER' ;
18853 +            U_Category  = 'OTHER' ;
18854 +            END;
18855 +          END;
18856 +        END;
18857 +      END;
18858 +    END;
18859 +  END;
18860 +
18861 +*****  RESIDUALS R_ *************;
18862 +IF  F_Category  NE 'HR'
18863 +AND F_Category  NE 'DESIGNER'
18864 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18865 +AND F_Category  NE 'TEACHER'
18866 +AND F_Category  NE 'ADVOCATE'
18867 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18868 +AND F_Category  NE 'HEALTHCARE'
18869 +AND F_Category  NE 'FITNESS'
18870 +AND F_Category  NE 'OTHER'
18871 +AND F_Category  NE 'SALES'
18872 +AND F_Category  NE 'CONSULTANT'
18873 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18874 +        R_CategoryHR  = .;
18875 +        R_CategoryDESIGNER  = .;
18876 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18877 +        R_CategoryTEACHER  = .;
18878 +        R_CategoryADVOCATE  = .;
18879 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18880 +        R_CategoryHEALTHCARE  = .;
18881 +        R_CategoryFITNESS  = .;
18882 +        R_CategoryOTHER  = .;
18883 +        R_CategorySALES  = .;
18884 +        R_CategoryCONSULTANT  = .;
18885 +        R_CategoryDIGITAL_MEDIA  = .;
18886 + END;
18887 + ELSE DO;
18888 +       R_CategoryHR  =  -P_CategoryHR ;
18889 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18890 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18891 +         ;
18892 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18893 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18894 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18895 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18896 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18897 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18898 +       R_CategorySALES  =  -P_CategorySALES ;
18899 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18900 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18901 +       SELECT( F_Category  );
18902 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18903 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18904 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18905 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18906 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18907 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18908 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18909 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18910 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18911 +          +1;
18912 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18913 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18914 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18915 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18916 +          +1;
18917 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18918 +        R_CategoryDIGITAL_MEDIA  +1;
18919 +       END;
18920 + END;
18921 +
18922 +****************************************************************;
18923 +******          END OF DECISION TREE SCORING CODE         ******;
18924 +****************************************************************;
18925 +
18926 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18927  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18928  quit;
18929  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18930  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas";
18931  *------------------------------------------------------------*;
18932  * Tree4: Scoring TEST data;
18933  *------------------------------------------------------------*;
18934  data EMWS3.Tree4_TEST
18935  / view=EMWS3.Tree4_TEST
18936  ;
18937  set EMWS3.TextCluster7_TEST
18938  ;
18939  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree4\EMFLOWSCORE.sas.
18940 +****************************************************************;
18941 +******             DECISION TREE SCORING CODE             ******;
18942 +****************************************************************;
18943 +
18944 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18945 +LENGTH F_Category  $   22;
18946 +LENGTH I_Category  $   22;
18947 +LENGTH U_Category  $   22;
18948 +LENGTH _WARN_  $    4;
18949 +
18950 +******              LABELS FOR NEW VARIABLES              ******;
18951 +label _NODE_ = 'Node' ;
18952 +label _LEAF_ = 'Leaf' ;
18953 +label P_CategoryHR = 'Predicted: Category=HR' ;
18954 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18955 +label P_CategoryINFORMATION_TECHNOLOGY =
18956 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18957 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18958 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18959 +label P_CategoryBUSINESS_DEVELOPMENT =
18960 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18961 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18962 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18963 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18964 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18965 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18966 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18967 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18968 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18969 +label Q_CategoryINFORMATION_TECHNOLOGY =
18970 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18971 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18972 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18973 +label Q_CategoryBUSINESS_DEVELOPMENT =
18974 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18975 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18976 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18977 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18978 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18979 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18980 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18981 +label V_CategoryHR = 'Validated: Category=HR' ;
18982 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18983 +label V_CategoryINFORMATION_TECHNOLOGY =
18984 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18985 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18986 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18987 +label V_CategoryBUSINESS_DEVELOPMENT =
18988 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18989 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18990 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18991 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18992 +label V_CategorySALES = 'Validated: Category=SALES' ;
18993 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18994 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18995 +label R_CategoryHR = 'Residual: Category=HR' ;
18996 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18997 +label R_CategoryINFORMATION_TECHNOLOGY =
18998 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18999 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19000 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19001 +label R_CategoryBUSINESS_DEVELOPMENT =
19002 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19003 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19004 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19005 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19006 +label R_CategorySALES = 'Residual: Category=SALES' ;
19007 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19008 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19009 +label F_Category = 'From: Category' ;
19010 +label I_Category = 'Into: Category' ;
19011 +label U_Category = 'Unnormalized Into: Category' ;
19012 +label _WARN_ = 'Warnings' ;
19013 +
19014 +
19015 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19016 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19017 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19018 +
19019 +
19020 +_ARBFMT_22 = PUT( Category , $22.);
19021 + %DMNORMCP( _ARBFMT_22, F_Category );
19022 +
19023 +******             ASSIGN OBSERVATION TO NODE             ******;
19024 +IF  NOT MISSING(TextCluster7_SVD4 ) AND
19025 +  TextCluster7_SVD4  <    -0.21960349929217 THEN DO;
19026 +  _NODE_  =                    2;
19027 +  _LEAF_  =                    1;
19028 +  P_CategoryHR  =     0.73134328358208;
19029 +  P_CategoryDESIGNER  =                    0;
19030 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
19031 +  P_CategoryTEACHER  =                    0;
19032 +  P_CategoryADVOCATE  =     0.07462686567164;
19033 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
19034 +  P_CategoryHEALTHCARE  =     0.05970149253731;
19035 +  P_CategoryFITNESS  =     0.01492537313432;
19036 +  P_CategoryOTHER  =     0.01492537313432;
19037 +  P_CategorySALES  =     0.02985074626865;
19038 +  P_CategoryCONSULTANT  =     0.02985074626865;
19039 +  P_CategoryDIGITAL_MEDIA  =                    0;
19040 +  Q_CategoryHR  =     0.73134328358208;
19041 +  Q_CategoryDESIGNER  =                    0;
19042 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01492537313432;
19043 +  Q_CategoryTEACHER  =                    0;
19044 +  Q_CategoryADVOCATE  =     0.07462686567164;
19045 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.02985074626865;
19046 +  Q_CategoryHEALTHCARE  =     0.05970149253731;
19047 +  Q_CategoryFITNESS  =     0.01492537313432;
19048 +  Q_CategoryOTHER  =     0.01492537313432;
19049 +  Q_CategorySALES  =     0.02985074626865;
19050 +  Q_CategoryCONSULTANT  =     0.02985074626865;
19051 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19052 +  V_CategoryHR  =     0.73684210526315;
19053 +  V_CategoryDESIGNER  =                    0;
19054 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.02631578947368;
19055 +  V_CategoryTEACHER  =                    0;
19056 +  V_CategoryADVOCATE  =     0.02631578947368;
19057 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02631578947368;
19058 +  V_CategoryHEALTHCARE  =     0.07894736842105;
19059 +  V_CategoryFITNESS  =     0.02631578947368;
19060 +  V_CategoryOTHER  =     0.02631578947368;
19061 +  V_CategorySALES  =                    0;
19062 +  V_CategoryCONSULTANT  =     0.05263157894736;
19063 +  V_CategoryDIGITAL_MEDIA  =                    0;
19064 +  I_Category  = 'HR' ;
19065 +  U_Category  = 'HR' ;
19066 +  END;
19067 +ELSE DO;
19068 +  IF  NOT MISSING(TextCluster7_SVD5 ) AND
19069 +    TextCluster7_SVD5  <    -0.25134001063195 THEN DO;
19070 +    _NODE_  =                    6;
19071 +    _LEAF_  =                    2;
19072 +    P_CategoryHR  =                    0;
19073 +    P_CategoryDESIGNER  =     0.02380952380952;
19074 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19075 +    P_CategoryTEACHER  =      0.8095238095238;
19076 +    P_CategoryADVOCATE  =     0.07142857142857;
19077 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19078 +    P_CategoryHEALTHCARE  =                    0;
19079 +    P_CategoryFITNESS  =     0.09523809523809;
19080 +    P_CategoryOTHER  =                    0;
19081 +    P_CategorySALES  =                    0;
19082 +    P_CategoryCONSULTANT  =                    0;
19083 +    P_CategoryDIGITAL_MEDIA  =                    0;
19084 +    Q_CategoryHR  =                    0;
19085 +    Q_CategoryDESIGNER  =     0.02380952380952;
19086 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19087 +    Q_CategoryTEACHER  =      0.8095238095238;
19088 +    Q_CategoryADVOCATE  =     0.07142857142857;
19089 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19090 +    Q_CategoryHEALTHCARE  =                    0;
19091 +    Q_CategoryFITNESS  =     0.09523809523809;
19092 +    Q_CategoryOTHER  =                    0;
19093 +    Q_CategorySALES  =                    0;
19094 +    Q_CategoryCONSULTANT  =                    0;
19095 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19096 +    V_CategoryHR  =     0.02439024390243;
19097 +    V_CategoryDESIGNER  =     0.04878048780487;
19098 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19099 +    V_CategoryTEACHER  =     0.56097560975609;
19100 +    V_CategoryADVOCATE  =     0.07317073170731;
19101 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19102 +    V_CategoryHEALTHCARE  =     0.04878048780487;
19103 +    V_CategoryFITNESS  =     0.07317073170731;
19104 +    V_CategoryOTHER  =     0.14634146341463;
19105 +    V_CategorySALES  =                    0;
19106 +    V_CategoryCONSULTANT  =     0.02439024390243;
19107 +    V_CategoryDIGITAL_MEDIA  =                    0;
19108 +    I_Category  = 'TEACHER' ;
19109 +    U_Category  = 'TEACHER' ;
19110 +    END;
19111 +  ELSE DO;
19112 +    IF  NOT MISSING(TextCluster7_SVD2 ) AND
19113 +          0.22658528644565 <= TextCluster7_SVD2  THEN DO;
19114 +      _NODE_  =                   11;
19115 +      _LEAF_  =                    8;
19116 +      P_CategoryHR  =                    0;
19117 +      P_CategoryDESIGNER  =     0.03296703296703;
19118 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
19119 +      P_CategoryTEACHER  =                    0;
19120 +      P_CategoryADVOCATE  =     0.02197802197802;
19121 +      P_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
19122 +      P_CategoryHEALTHCARE  =     0.03296703296703;
19123 +      P_CategoryFITNESS  =                    0;
19124 +      P_CategoryOTHER  =     0.06593406593406;
19125 +      P_CategorySALES  =                    0;
19126 +      P_CategoryCONSULTANT  =     0.23076923076923;
19127 +      P_CategoryDIGITAL_MEDIA  =     0.06593406593406;
19128 +      Q_CategoryHR  =                    0;
19129 +      Q_CategoryDESIGNER  =     0.03296703296703;
19130 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.53846153846153;
19131 +      Q_CategoryTEACHER  =                    0;
19132 +      Q_CategoryADVOCATE  =     0.02197802197802;
19133 +      Q_CategoryBUSINESS_DEVELOPMENT  =     0.01098901098901;
19134 +      Q_CategoryHEALTHCARE  =     0.03296703296703;
19135 +      Q_CategoryFITNESS  =                    0;
19136 +      Q_CategoryOTHER  =     0.06593406593406;
19137 +      Q_CategorySALES  =                    0;
19138 +      Q_CategoryCONSULTANT  =     0.23076923076923;
19139 +      Q_CategoryDIGITAL_MEDIA  =     0.06593406593406;
19140 +      V_CategoryHR  =                    0;
19141 +      V_CategoryDESIGNER  =      0.0377358490566;
19142 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.56603773584905;
19143 +      V_CategoryTEACHER  =                    0;
19144 +      V_CategoryADVOCATE  =      0.0188679245283;
19145 +      V_CategoryBUSINESS_DEVELOPMENT  =      0.0188679245283;
19146 +      V_CategoryHEALTHCARE  =      0.0188679245283;
19147 +      V_CategoryFITNESS  =                    0;
19148 +      V_CategoryOTHER  =      0.0566037735849;
19149 +      V_CategorySALES  =      0.0188679245283;
19150 +      V_CategoryCONSULTANT  =     0.16981132075471;
19151 +      V_CategoryDIGITAL_MEDIA  =      0.0943396226415;
19152 +      I_Category  = 'INFORMATION-TECHNOLOGY' ;
19153 +      U_Category  = 'INFORMATION-TECHNOLOGY' ;
19154 +      END;
19155 +    ELSE DO;
19156 +      IF  NOT MISSING(TextCluster7_SVD11 ) AND
19157 +            0.17462934468944 <= TextCluster7_SVD11  THEN DO;
19158 +        _NODE_  =                   15;
19159 +        _LEAF_  =                    7;
19160 +        P_CategoryHR  =     0.02439024390243;
19161 +        P_CategoryDESIGNER  =                    0;
19162 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19163 +        P_CategoryTEACHER  =                    0;
19164 +        P_CategoryADVOCATE  =     0.07317073170731;
19165 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
19166 +        P_CategoryHEALTHCARE  =                    0;
19167 +        P_CategoryFITNESS  =     0.82926829268292;
19168 +        P_CategoryOTHER  =                    0;
19169 +        P_CategorySALES  =     0.02439024390243;
19170 +        P_CategoryCONSULTANT  =                    0;
19171 +        P_CategoryDIGITAL_MEDIA  =     0.02439024390243;
19172 +        Q_CategoryHR  =     0.02439024390243;
19173 +        Q_CategoryDESIGNER  =                    0;
19174 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19175 +        Q_CategoryTEACHER  =                    0;
19176 +        Q_CategoryADVOCATE  =     0.07317073170731;
19177 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02439024390243;
19178 +        Q_CategoryHEALTHCARE  =                    0;
19179 +        Q_CategoryFITNESS  =     0.82926829268292;
19180 +        Q_CategoryOTHER  =                    0;
19181 +        Q_CategorySALES  =     0.02439024390243;
19182 +        Q_CategoryCONSULTANT  =                    0;
19183 +        Q_CategoryDIGITAL_MEDIA  =     0.02439024390243;
19184 +        V_CategoryHR  =                    0;
19185 +        V_CategoryDESIGNER  =                    0;
19186 +        V_CategoryINFORMATION_TECHNOLOGY  =                 0.05;
19187 +        V_CategoryTEACHER  =                    0;
19188 +        V_CategoryADVOCATE  =                 0.05;
19189 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19190 +        V_CategoryHEALTHCARE  =                 0.05;
19191 +        V_CategoryFITNESS  =                  0.8;
19192 +        V_CategoryOTHER  =                 0.05;
19193 +        V_CategorySALES  =                    0;
19194 +        V_CategoryCONSULTANT  =                    0;
19195 +        V_CategoryDIGITAL_MEDIA  =                    0;
19196 +        I_Category  = 'FITNESS' ;
19197 +        U_Category  = 'FITNESS' ;
19198 +        END;
19199 +      ELSE DO;
19200 +        IF  NOT MISSING(TextCluster7_SVD7 ) AND
19201 +              0.04979885441801 <= TextCluster7_SVD7  THEN DO;
19202 +          IF  NOT MISSING(TextCluster7_SVD2 ) AND
19203 +            TextCluster7_SVD2  <    -0.15342627742015 THEN DO;
19204 +            _NODE_  =                   24;
19205 +            _LEAF_  =                    5;
19206 +            P_CategoryHR  =     0.04347826086956;
19207 +            P_CategoryDESIGNER  =     0.01449275362318;
19208 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19209 +            P_CategoryTEACHER  =     0.18840579710144;
19210 +            P_CategoryADVOCATE  =     0.08695652173913;
19211 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
19212 +            P_CategoryHEALTHCARE  =     0.01449275362318;
19213 +            P_CategoryFITNESS  =     0.08695652173913;
19214 +            P_CategoryOTHER  =     0.04347826086956;
19215 +            P_CategorySALES  =     0.39130434782608;
19216 +            P_CategoryCONSULTANT  =     0.04347826086956;
19217 +            P_CategoryDIGITAL_MEDIA  =     0.01449275362318;
19218 +            Q_CategoryHR  =     0.04347826086956;
19219 +            Q_CategoryDESIGNER  =     0.01449275362318;
19220 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19221 +            Q_CategoryTEACHER  =     0.18840579710144;
19222 +            Q_CategoryADVOCATE  =     0.08695652173913;
19223 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07246376811594;
19224 +            Q_CategoryHEALTHCARE  =     0.01449275362318;
19225 +            Q_CategoryFITNESS  =     0.08695652173913;
19226 +            Q_CategoryOTHER  =     0.04347826086956;
19227 +            Q_CategorySALES  =     0.39130434782608;
19228 +            Q_CategoryCONSULTANT  =     0.04347826086956;
19229 +            Q_CategoryDIGITAL_MEDIA  =     0.01449275362318;
19230 +            V_CategoryHR  =     0.04761904761904;
19231 +            V_CategoryDESIGNER  =     0.09523809523809;
19232 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19233 +            V_CategoryTEACHER  =     0.11904761904761;
19234 +            V_CategoryADVOCATE  =     0.14285714285714;
19235 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.02380952380952;
19236 +            V_CategoryHEALTHCARE  =     0.02380952380952;
19237 +            V_CategoryFITNESS  =     0.09523809523809;
19238 +            V_CategoryOTHER  =     0.04761904761904;
19239 +            V_CategorySALES  =     0.33333333333333;
19240 +            V_CategoryCONSULTANT  =     0.02380952380952;
19241 +            V_CategoryDIGITAL_MEDIA  =     0.04761904761904;
19242 +            I_Category  = 'SALES' ;
19243 +            U_Category  = 'SALES' ;
19244 +            END;
19245 +          ELSE DO;
19246 +            _NODE_  =                   25;
19247 +            _LEAF_  =                    6;
19248 +            P_CategoryHR  =     0.01086956521739;
19249 +            P_CategoryDESIGNER  =     0.46739130434782;
19250 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
19251 +            P_CategoryTEACHER  =     0.01086956521739;
19252 +            P_CategoryADVOCATE  =     0.01086956521739;
19253 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19254 +            P_CategoryHEALTHCARE  =     0.03260869565217;
19255 +            P_CategoryFITNESS  =                    0;
19256 +            P_CategoryOTHER  =     0.02173913043478;
19257 +            P_CategorySALES  =     0.05434782608695;
19258 +            P_CategoryCONSULTANT  =     0.01086956521739;
19259 +            P_CategoryDIGITAL_MEDIA  =     0.31521739130434;
19260 +            Q_CategoryHR  =     0.01086956521739;
19261 +            Q_CategoryDESIGNER  =     0.46739130434782;
19262 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.04347826086956;
19263 +            Q_CategoryTEACHER  =     0.01086956521739;
19264 +            Q_CategoryADVOCATE  =     0.01086956521739;
19265 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.02173913043478;
19266 +            Q_CategoryHEALTHCARE  =     0.03260869565217;
19267 +            Q_CategoryFITNESS  =                    0;
19268 +            Q_CategoryOTHER  =     0.02173913043478;
19269 +            Q_CategorySALES  =     0.05434782608695;
19270 +            Q_CategoryCONSULTANT  =     0.01086956521739;
19271 +            Q_CategoryDIGITAL_MEDIA  =     0.31521739130434;
19272 +            V_CategoryHR  =     0.01923076923076;
19273 +            V_CategoryDESIGNER  =     0.38461538461538;
19274 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01923076923076;
19275 +            V_CategoryTEACHER  =     0.01923076923076;
19276 +            V_CategoryADVOCATE  =                    0;
19277 +            V_CategoryBUSINESS_DEVELOPMENT  =      0.0576923076923;
19278 +            V_CategoryHEALTHCARE  =     0.01923076923076;
19279 +            V_CategoryFITNESS  =                    0;
19280 +            V_CategoryOTHER  =     0.03846153846153;
19281 +            V_CategorySALES  =     0.09615384615384;
19282 +            V_CategoryCONSULTANT  =     0.01923076923076;
19283 +            V_CategoryDIGITAL_MEDIA  =     0.32692307692307;
19284 +            I_Category  = 'DESIGNER' ;
19285 +            U_Category  = 'DESIGNER' ;
19286 +            END;
19287 +          END;
19288 +        ELSE DO;
19289 +          IF  NOT MISSING(TextCluster7_SVD3 ) AND
19290 +                0.18533092484376 <= TextCluster7_SVD3  THEN DO;
19291 +            _NODE_  =                   23;
19292 +            _LEAF_  =                    4;
19293 +            P_CategoryHR  =                    0;
19294 +            P_CategoryDESIGNER  =                    0;
19295 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19296 +            P_CategoryTEACHER  =                    0;
19297 +            P_CategoryADVOCATE  =     0.02666666666666;
19298 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
19299 +            P_CategoryHEALTHCARE  =     0.06666666666666;
19300 +            P_CategoryFITNESS  =     0.05333333333333;
19301 +            P_CategoryOTHER  =                 0.08;
19302 +            P_CategorySALES  =     0.09333333333333;
19303 +            P_CategoryCONSULTANT  =                 0.12;
19304 +            P_CategoryDIGITAL_MEDIA  =     0.10666666666666;
19305 +            Q_CategoryHR  =                    0;
19306 +            Q_CategoryDESIGNER  =                    0;
19307 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19308 +            Q_CategoryTEACHER  =                    0;
19309 +            Q_CategoryADVOCATE  =     0.02666666666666;
19310 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.45333333333333;
19311 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
19312 +            Q_CategoryFITNESS  =     0.05333333333333;
19313 +            Q_CategoryOTHER  =                 0.08;
19314 +            Q_CategorySALES  =     0.09333333333333;
19315 +            Q_CategoryCONSULTANT  =                 0.12;
19316 +            Q_CategoryDIGITAL_MEDIA  =     0.10666666666666;
19317 +            V_CategoryHR  =                    0;
19318 +            V_CategoryDESIGNER  =                    0;
19319 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19320 +            V_CategoryTEACHER  =                    0;
19321 +            V_CategoryADVOCATE  =     0.03703703703703;
19322 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.48148148148148;
19323 +            V_CategoryHEALTHCARE  =     0.12962962962962;
19324 +            V_CategoryFITNESS  =     0.01851851851851;
19325 +            V_CategoryOTHER  =     0.01851851851851;
19326 +            V_CategorySALES  =     0.09259259259259;
19327 +            V_CategoryCONSULTANT  =     0.16666666666666;
19328 +            V_CategoryDIGITAL_MEDIA  =     0.05555555555555;
19329 +            I_Category  = 'BUSINESS-DEVELOPMENT' ;
19330 +            U_Category  = 'BUSINESS-DEVELOPMENT' ;
19331 +            END;
19332 +          ELSE DO;
19333 +            _NODE_  =                   22;
19334 +            _LEAF_  =                    3;
19335 +            P_CategoryHR  =     0.00507614213197;
19336 +            P_CategoryDESIGNER  =     0.02538071065989;
19337 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
19338 +            P_CategoryTEACHER  =     0.01015228426395;
19339 +            P_CategoryADVOCATE  =     0.17766497461928;
19340 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
19341 +            P_CategoryHEALTHCARE  =     0.20812182741116;
19342 +            P_CategoryFITNESS  =     0.04568527918781;
19343 +            P_CategoryOTHER  =     0.22842639593908;
19344 +            P_CategorySALES  =     0.08121827411167;
19345 +            P_CategoryCONSULTANT  =     0.10659898477157;
19346 +            P_CategoryDIGITAL_MEDIA  =     0.01015228426395;
19347 +            Q_CategoryHR  =     0.00507614213197;
19348 +            Q_CategoryDESIGNER  =     0.02538071065989;
19349 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02538071065989;
19350 +            Q_CategoryTEACHER  =     0.01015228426395;
19351 +            Q_CategoryADVOCATE  =     0.17766497461928;
19352 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.07614213197969;
19353 +            Q_CategoryHEALTHCARE  =     0.20812182741116;
19354 +            Q_CategoryFITNESS  =     0.04568527918781;
19355 +            Q_CategoryOTHER  =     0.22842639593908;
19356 +            Q_CategorySALES  =     0.08121827411167;
19357 +            Q_CategoryCONSULTANT  =     0.10659898477157;
19358 +            Q_CategoryDIGITAL_MEDIA  =     0.01015228426395;
19359 +            V_CategoryHR  =                    0;
19360 +            V_CategoryDESIGNER  =     0.02857142857142;
19361 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.02857142857142;
19362 +            V_CategoryTEACHER  =     0.01904761904761;
19363 +            V_CategoryADVOCATE  =                  0.2;
19364 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.03809523809523;
19365 +            V_CategoryHEALTHCARE  =     0.16190476190476;
19366 +            V_CategoryFITNESS  =     0.09523809523809;
19367 +            V_CategoryOTHER  =      0.2095238095238;
19368 +            V_CategorySALES  =     0.08571428571428;
19369 +            V_CategoryCONSULTANT  =     0.11428571428571;
19370 +            V_CategoryDIGITAL_MEDIA  =     0.01904761904761;
19371 +            I_Category  = 'OTHER' ;
19372 +            U_Category  = 'OTHER' ;
19373 +            END;
19374 +          END;
19375 +        END;
19376 +      END;
19377 +    END;
19378 +  END;
19379 +
19380 +*****  RESIDUALS R_ *************;
19381 +IF  F_Category  NE 'HR'
19382 +AND F_Category  NE 'DESIGNER'
19383 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19384 +AND F_Category  NE 'TEACHER'
19385 +AND F_Category  NE 'ADVOCATE'
19386 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19387 +AND F_Category  NE 'HEALTHCARE'
19388 +AND F_Category  NE 'FITNESS'
19389 +AND F_Category  NE 'OTHER'
19390 +AND F_Category  NE 'SALES'
19391 +AND F_Category  NE 'CONSULTANT'
19392 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19393 +        R_CategoryHR  = .;
19394 +        R_CategoryDESIGNER  = .;
19395 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19396 +        R_CategoryTEACHER  = .;
19397 +        R_CategoryADVOCATE  = .;
19398 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19399 +        R_CategoryHEALTHCARE  = .;
19400 +        R_CategoryFITNESS  = .;
19401 +        R_CategoryOTHER  = .;
19402 +        R_CategorySALES  = .;
19403 +        R_CategoryCONSULTANT  = .;
19404 +        R_CategoryDIGITAL_MEDIA  = .;
19405 + END;
19406 + ELSE DO;
19407 +       R_CategoryHR  =  -P_CategoryHR ;
19408 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19409 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19410 +         ;
19411 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19412 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19413 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19414 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19415 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19416 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19417 +       R_CategorySALES  =  -P_CategorySALES ;
19418 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19419 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19420 +       SELECT( F_Category  );
19421 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19422 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19423 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19424 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19425 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19426 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19427 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19428 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19429 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19430 +          +1;
19431 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19432 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19433 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19434 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19435 +          +1;
19436 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19437 +        R_CategoryDIGITAL_MEDIA  +1;
19438 +       END;
19439 + END;
19440 +
19441 +****************************************************************;
19442 +******          END OF DECISION TREE SCORING CODE         ******;
19443 +****************************************************************;
19444 +
19445 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19446  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE4_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19447  quit;
19448  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
19450  proc sort data=WORK.EM_USER_REPORT;
19451  by ID VIEW;
19452  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19453  *------------------------------------------------------------*;
19454  * Tree4: Computing metadata for TRAIN data;
19455  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
20117  data WORK.MODELTEMP_INFO;
20118  set EMWS3.Tree4_EMINFO;
20119  where DATA='Tree4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20120  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE4_EMINFO.
      WHERE (DATA='Tree4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20121  data EMWS3.Tree4_EMINFO;
20122  length TARGET KEY $32 DATA $43;
20123  input TARGET KEY DATA $;
20124  cards;
 
NOTE: The data set EMWS3.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20128  run;
20129  data EMWS3.Tree4_EMINFO;
20130  set EMWS3.Tree4_EMINFO WORK.MODELTEMP_INFO;
20131  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20132  proc sort data = EMWS3.Tree4_EMINFO NOTHREADS;
20133  by TARGET KEY;
20134  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE4_EMINFO.
NOTE: The data set EMWS3.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20135  proc sort data = EMWS3.TextCluster7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20136  by TARGET KEY;
20137  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20138  proc sort data = EMWS3.Tree4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20139  by TARGET KEY;
20140  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20141  data EMWS3.Tree4_EMINFO;
20142  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20143  by TARGET KEY;
20144  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE4_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20145  proc datasets lib=work nolist;
20146  delete TEMP_INFO SORTEDEMINFO;
20147  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20148  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE4_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE4_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:40
*------------------------------------------------------------*
20172  data EMWS3.Tree4_EMOUTFIT;
20173  set EMWS3.Tree4_EMOUTFIT;
20174  length TargetLabel $200;
20175  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20176  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20177  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_EMOUTFIT.
NOTE: The data set EMWS3.TREE4_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20178  proc sort data=EMWS3.Tree4_EMREPORTFIT nothreads;
20179  by TARGET;
20180  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE4_EMREPORTFIT.
NOTE: The data set EMWS3.TREE4_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20181  %let _EMwarndup = 0;
20182  %let _EMtargetdup =;
20183  %let _EMASEtargetdup =;
20184  data _null_;
20185  set EMWS3.Tree4_EMOUTFIT;
20186  if .<_ASE_<0.000001 then do;
20187  call symput('_EMwarndup', '1');
20188  call symput('_EMtargetdup', target);
20189  call symput('_EMASEtargetdup', put(_ASE_, best.));
20190  end;
20191  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20192  %let EMEXCEPTIONSTRING=;
20193  *------------------------------------------------------------*;
20194  * REPORT: Tree4;
20195  *------------------------------------------------------------*;
20196  %let EM_ACTION = REPORT;
20197  %let syscc = 0;
20198  %macro main;
20199
20200    %if %upcase(&EM_ACTION) = CREATE %then %do;
20201      filename temp catalog 'sashelp.emmodl.tree_create.source';
20202      %include temp;
20203      filename temp;
20204
20205      %em_tree_create;
20206    %end;
20207
20208     %else
20209     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20210
20211         filename temp catalog 'sashelp.emmodl.tree_train.source';
20212         %include temp;
20213         filename temp;
20214         %em_tree_train;
20215     %end;
20216
20217    %else
20218    %if %upcase(&EM_ACTION) = SCORE %then %do;
20219      filename temp catalog 'sashelp.emmodl.tree_score.source';
20220      %include temp;
20221      filename temp;
20222
20223      %em_tree_score;
20224
20225    %end;
20226
20227    %else
20228    %if %upcase(&EM_ACTION) = REPORT %then %do;
20229
20230         filename temp catalog 'sashelp.emmodl.tree_report.source';
20231         %include temp;
20232         filename temp;
20233
20234         %em_tree_report;
20235     %end;
20236
20237    %else
20238    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20239
20240         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20241         %include temp;
20242         filename temp;
20243         %EM_TREE_OPENTREEVIEWER;
20244
20245     %end;
20246
20247    %else
20248    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20249
20250         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20251         %include temp;
20252         filename temp;
20253         %EM_TREE_CLOSETREEVIEWER;
20254
20255     %end;
20256
20257
20258     %doendm:
20259  %mend main;
20260
20261  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20263 +%macro em_tree_makePlotDs( multipleTar= );
20265 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20266 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20267 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20268 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20270 +  /* determine if validation statistics will be displayed */
20271 +  %let validflag=N;
20272 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20273 +    /* determine if validation data exists */
20274 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20275 +      %let validflag=Y;
20276 +    %end;
20277 +  %end;
20279 +   /* retrieve name of decmeta even in presence of multiple targets */
20280 +   %let decmeta = ;
20281 +   %if &EM_DEC_DECMETA eq %then %do;
20282 +     data _Target;
20283 +       set &em_data_variableset;
20284 +       where ROLE='TARGET' and USE in('D', 'Y');
20285 +       keep NAME;
20286 +     run;
20287 +     proc sort data=_Target;
20288 +       by NAME;
20289 +     run;
20290 +     proc sort data=EM_TARGETDECINFO;
20291 +       by TARGET;
20292 +     run;
20293 +     data _Target;
20294 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20295 +       by NAME;
20296 +       if _a then do;
20297 +         call symput('decmeta', trim(DECMETA));
20298 +       end;
20299 +     run;
20300 +     proc delete data=_Target;run;
20301 +   %end;
20302 +   %else %let decmeta = &EM_DEC_DECMETA;
20305 +  /* retrieve targetEvent from decmeta */
20306 +  %let targetEvent=;
20307 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20308 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20309 +      data _null_;
20310 +       set &DECMETA(where=(_TYPE_="TARGET"));
20311 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20312 +      run;
20313 +    %end;
20314 +  %end;
20316 +  /* retrieve predicted var for targetEvent from decmeta */
20317 +  %let predTarget=;
20318 +  %let predLvl=;
20319 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20320 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20321 +      data _null_;
20322 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20323 +       call symput('predTarget', strip(VARIABLE));
20324 +       call symput('predLvl', strip(LEVEL));
20325 +      run;
20326 +    %end;
20327 +  %end;
20328 +  %else %do;
20329 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20330 +      data _null_;
20331 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20332 +       call symput('predTarget', strip(VARIABLE));
20333 +      run;
20334 +    %end;
20335 +  %end;
20337 +  /* create BelowText value */
20338 +  data belowtext;
20339 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20340 +    keep node belowtext;
20341 +  run;
20343 +  /* replace belowtext with variable label if it exists */
20344 +  data belowtext2;
20345 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20346 +    keep node belowtextlbl;
20347 +  run;
20349 +  proc sort data=belowtext; by node; run;
20350 +  proc sort data=belowtext2; by node; run;
20352 +  data belowtext;
20353 +    merge belowtext belowtext2(in=_a);
20354 +    by node;
20355 +    if _a then belowtext=belowtextlbl;
20356 +    keep node belowtext;
20357 +  run;
20359 +  /* create AboveText value */
20360 +  data abovetext;
20361 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20362 +  run;
20363 +  proc sort data=abovetext; by node numeric_value; run;
20365 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20366 +  data abovetext;
20367 +    set abovetext(rename=(node=parent));
20368 +    by parent numeric_value;
20369 +    retain abovetext tempstring flag branch origval origchar ;
20370 +    length abovetext $256;
20371 +    length tempstring origchar $64;
20373 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20374 +      if first.parent then do;
20375 +        if missing(character_value) then do;
20376 +          numeric_value = round(numeric_value, &sp_precision);
20377 +          abovetext = "< "||strip(NUMERIC_VALUE);
20378 +          branch = 1;
20379 +          origval = numeric_value;
20380 +          output;
20381 +        end;
20382 +        else do;
20383 +          abovetext = "< "||strip(CHARACTER_VALUE);
20384 +          branch = 1;
20385 +          origchar = character_value;
20386 +          output;
20387 +        end;
20389 +        if first.parent AND last.parent then do;
20390 +          if missing(character_value) then do;
20391 +            numeric_value = round(numeric_value, &sp_precision);
20392 +            branch = branch + 1;
20393 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20394 +            output;
20395 +          end;
20396 +          else do;
20397 +            branch = branch + 1;
20398 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20399 +            output;
20400 +          end;
20401 +        end;
20402 +      end;
20403 +      else if last.parent then do;
20404 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20405 +          if missing(character_value) then do;
20406 +            numeric_value = round(numeric_value, &sp_precision);
20407 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20408 +          end;
20409 +          else do;
20410 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20411 +          end;
20412 +          branch = branch + 1;
20413 +          output;
20415 +          if missing(character_value) then do;
20416 +            numeric_value = round(numeric_value, &sp_precision);
20417 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20418 +          end;
20419 +          else do;
20420 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20421 +          end;
20422 +          branch = branch + 1;
20423 +          output;
20424 +        end;
20425 +        else do;
20426 +          if missing(character_value) then do;
20427 +            numeric_value = round(numeric_value, &sp_precision);
20428 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20429 +          end;
20430 +          else do;
20431 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20432 +          end;
20433 +          branch = branch + 1;
20434 +          output;
20435 +        end;
20436 +      end;
20437 +      else do;
20438 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20439 +          if missing(character_value) then do;
20440 +            numeric_value = round(numeric_value,&sp_precision);
20441 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20442 +            origval = numeric_value;
20443 +          end;
20444 +          else do;
20445 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20446 +            origchar = character_value;
20447 +          end;
20448 +          branch = branch + 1;
20449 +          output;
20451 +        end;
20452 +        else do;
20453 +          if missing(character_value) then do;
20454 +            numeric_value = round(numeric_value, &sp_precision);
20455 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20456 +            origval = numeric_value;
20457 +          end;
20458 +          else do;
20459 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20460 +            origval = character_value;
20461 +          end;
20462 +          branch = branch + 1;
20463 +          output;
20464 +        end;
20465 +      end;
20466 +    end;
20467 +    else do;
20468 +       if first.numeric_value then do;
20469 +         flag = 0;
20470 +         abovetext = strip(CHARACTER_VALUE);
20471 +         branch = numeric_value;
20472 +         if first.numeric_value AND last.numeric_value then do;
20473 +           output;
20474 +         end;
20475 +       end;
20476 +       else if last.numeric_value then do;
20477 +         if flag=0 then do;
20478 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20479 +           length = length(strip(tempstring));
20480 +           if length < 32 then do;
20481 +             abovetext = strip(tempstring);
20482 +           end;
20483 +           else do;
20484 +             abovetext = strip(abovetext)||", ...";
20485 +             flag = 1;
20486 +           end;
20487 +         end;
20488 +         branch = numeric_value;
20489 +         output;
20490 +       end;
20491 +       else do;
20492 +         if flag=0 then do;
20493 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20494 +           length = length(strip(tempstring));
20495 +           if length < 32 then do;
20496 +             abovetext = strip(tempstring);
20497 +           end;
20498 +           else do;
20499 +             abovetext = strip(abovetext)||", ...";
20500 +             flag=1;
20501 +           end;
20502 +         end;
20503 +         branch = numeric_value;
20504 +       end;
20505 +    end;
20506 +    keep parent branch abovetext;
20507 +  run;
20509 +  /* Missing value to abovetext */
20510 +  data tempmissing;
20511 +    set &EM_USER_OUTRULES;
20512 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20513 +    rename node=parent numeric_value=branch character_value=misschar;
20514 +  run;
20517 +  proc sort data=abovetext; by parent branch; run;
20518 +  proc sort data=tempmissing; by parent branch; run;
20519 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20521 +  data tempoutnodes;
20522 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20523 +    by parent branch;
20524 +    length traintotal validtotal 8;
20525 +    retain traintotal validtotal;
20527 +    if _a then do;
20528 +      if ^MISSING(abovetext) then do;
20529 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20530 +      end;
20531 +      else do;
20532 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20533 +      end;
20534 +    end;
20535 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20537 +    if node=1 then do;
20538 +      traintotal = N;
20539 +      validtotal=VN;
20540 +    end;
20542 +    drop role rank stat misschar belowtext;
20543 +  run;
20544 +  proc sort data=tempoutnodes; by node; run;
20545 +  proc sort data=belowtext; by node; run;
20547 +  data tempoutnodes;
20548 +    merge tempoutnodes belowtext;
20549 +    by node;
20551 +  run;
20553 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20554 +  %let adjusted = N;
20555 +  %let npriors = 0;
20556 +  data _null_ ;
20557 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20558 +    if eof then do ;
20559 +      call symput("npriors" , strip(put(_N_,best.))) ;
20560 +    end;
20561 +  run;
20562 +  %if &npriors gt 0 %then %let adjusted=Y;
20565 +  /* create a table with targetUsed and targetLevel columns for each node */
20566 +  data temptarmeta;
20567 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20568 +    %if &multipleTar eq N %then %do;
20569 +      AND USE in ('D', 'Y')
20570 +    %end;
20571 +    ));
20572 +    length TARGET $32;
20573 +    Target=name;
20574 +    keep target level;
20575 +  run;
20577 +  %if &multipleTar eq Y %then %do;
20578 +    data temptargetused;
20579 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20580 +      keep node target;
20581 +    run;
20582 +    proc sort data=temptargetused; by target; run;
20583 +    proc sort data=temptarmeta; by target; run;
20584 +    data temptargetused;
20585 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20586 +      by target;
20587 +      if _a and _b;
20588 +    run;
20589 +  %end;
20590 +  %else %do;
20591 +    data temptargetused;
20592 +      set &EM_USER_OUTSTATS;
20593 +      length target $32 tarlevel $10;
20594 +      target="%EM_TARGET";
20595 +      tarlevel="%EM_TARGET_LEVEL";
20596 +      keep node target tarlevel;
20597 +    run;
20598 +    proc sort data=temptargetused nodupkey; by node; run;
20599 +  %end;
20601 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20602 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20603 +  proc sort data=temptargetused; by node; run;
20606 +  /* create tables for all interval targets as well as all class targets */
20607 +  data tempinterval tempclass;
20608 +    merge tempoutstats temptargetused( rename=(target=targetused));
20609 +    by node;
20610 +    %if "&multipleTar" eq "Y" %then %do;
20611 +      if ((missing(Target)) OR (target=targetused ));
20612 +    %end;
20614 +    if tarlevel="INTERVAL" then output tempinterval;
20615 +    else output tempclass;
20616 +  run;
20618 +  /* initialize intTarget and classTarget flags */
20619 +  %let em_intNobs =0;
20620 +  %let em_classNobs = 0;
20621 +  %let em_intTarget= N;
20622 +  %let em_classTarget= N;
20624 +  proc sql;
20625 +    reset noprint;
20626 +    select count(*) into :em_intNobs from tempinterval;
20627 +  quit;
20628 +  proc sql;
20629 +    reset noprint;
20630 +    select count(*) into :em_classNobs from tempclass;
20631 +  quit;
20633 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20634 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20636 +  /* retrieve all information for interval targets */
20637 +  %if &em_intTarget eq Y %then %do;
20639 +    /* determine if leaf variable exists */
20640 +    %let dsid=%sysfunc(open(tempinterval,i));
20641 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20642 +    %let rc=%sysfunc(close(&dsid));
20644 +    proc transpose data=tempinterval
20645 +      %if &leafexists %then %do;
20646 +        (drop=leaf)
20647 +      %end;
20648 +      %if &validexist %then %do;
20649 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20650 +      %end;
20651 +      %else %do;
20652 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20653 +      %end;
20654 +      by node;
20655 +      id statname;
20656 +    run;
20657 +    data tempinterval;
20658 +      set tempinterval;
20659 +      if missing(N) then delete;
20660 +    run;
20661 +  %end;
20663 +  /* retrieve all information for class targets */
20664 +  %if &em_classTarget eq Y %then %do;
20665 +    proc sort data=tempclass; by node category; run;
20666 +    %if &validflag eq N %then %do;
20667 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20668 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20669 +    %end;
20670 +    %else %do;
20671 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20672 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20673 +    %end;
20674 +      set tempclass;
20676 +      %if &validflag eq N %then %do;
20677 +        %if "&adjusted" eq "N" %then %do;
20678 +          if statname="N" then output tempn;
20679 +        %end;
20680 +        %else %do;
20681 +          if statname="NPRIORS" then output tempn;
20682 +        %end;
20683 +        else if statname="PREDICTION" then output temppredict;
20684 +        else if statname="PROBABILITY" then output tempprob;
20685 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20686 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20687 +      %end;
20688 +      %else %do;
20689 +        %if "&adjusted" eq "N" %then %do;
20690 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20691 +        %end;
20692 +        %else %do;
20693 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20694 +        %end;
20695 +        else if statname="PREDICTION" then output temppredict;
20696 +        else if statname="PROBABILITY" then output tempprob;
20697 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20698 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20699 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20700 +      %end;
20701 +    run;
20704 +    /* determine if profit/loss exists in tempprofit */
20705 +    %let em_profitflag=0;
20706 +    %let em_lossflag=0;
20707 +    proc sql;
20708 +      reset noprint;
20709 +      select count(*) into :em_profitflag from tempprofit;
20710 +    quit;
20711 +    proc sql;
20712 +      reset noprint;
20713 +      select count(*) into :em_lossflag from temploss;
20714 +    quit;
20716 +    %if &validFlag eq Y %then %do;
20717 +      proc transpose data=tempn
20718 +        %if "&adjusted" eq "N" %then %do;
20719 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20720 +        %end;
20721 +        %else %do;
20722 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20723 +        %end;
20724 +        by node;
20725 +        id statname;
20726 +      run;
20727 +      %if &em_profitflag ne 0 %then %do;
20728 +        proc transpose data=tempprofit out=tempprofit;
20729 +          by node category;
20730 +          id statname ;
20731 +        run;
20732 +      %end;
20733 +      %if &em_lossflag ne 0 %then %do;
20734 +        proc transpose data=temploss out=temploss;
20735 +          by node category;
20736 +          id statname ;
20737 +        run;
20738 +      %end;
20739 +      data tempprob;
20740 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20741 +        by node
20742 +        %if &multipleTar eq Y %then %do;
20743 +          target
20744 +        %end;
20745 +        category;
20746 +      run;
20747 +    %end;
20749 +    /* store percentcorrect value */
20750 +    data temppredict;
20751 +      merge tempprob temppredict(in=_a);
20752 +      by node category;
20753 +      if _a then do;
20754 +        percentCorrect = statvalue;
20755 +        %if &validFlag eq Y %then %do;
20756 +          vpercentCorrect= vstatvalue;
20757 +        %end;
20758 +      end;
20759 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20760 +      %if &validFlag eq Y %then %do;
20761 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20762 +      %end;
20763 +      ;
20764 +      if missing(percentCorrect) then delete;
20765 +      drop target;
20766 +    run;
20768 +    /* build profittext */
20769 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20770 +      data tempprofittext(keep= node profittext profitloss);
20771 +        length profittext $800 profitloss 8.;
20772 +        retain profittext profitloss;
20774 +        merge tempprob
20775 +        %if &em_profitflag ne 0 %then %do;
20776 +          tempprofit
20777 +        %end;
20778 +        %else %if &em_lossflag ne 0 %then %do;
20779 +          temploss
20780 +        %end;
20781 +        ;
20782 +        by node category;
20784 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20785 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20786 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20787 +          %let profittype = ALL;
20788 +        %end;
20790 +        /* create the profitloss variable for nodecolor if selected */
20791 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20793 +        %if "&profittype" eq "ALL" %then %do;
20794 +          if strip(CATEGORY)="&targetEvent" then do;
20795 +            profitloss=statvalue;
20796 +          end;
20797 +          if first.node then do;
20798 +            %if &validFlag eq N %then %do;
20799 +             %if &em_profitflag ne 0 %then %do;
20800 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20801 +             %end;
20802 +             %if &em_lossflag ne 0 %then %do;
20803 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20804 +             %end;
20805 +            %end;
20806 +            %else %do;
20807 +             %if &em_profitflag ne 0 %then %do;
20808 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20808!+;
20809 +             %end;
20810 +             %if &em_lossflag ne 0 %then %do;
20811 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20812 +             %end;
20813 +            %end;
20814 +          end;
20815 +          else if last.node then do;
20816 +            %if &validFlag eq N %then %do;
20817 +             %if &em_profitflag ne 0 %then %do;
20818 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20819 +             %end;
20820 +             %if &em_lossflag ne 0 %then %do;
20821 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20822 +             %end;
20823 +             /*if CATEGORY="&targetEvent" then do;
20824 +               profitloss=statvalue;
20825 +             end;*/
20826 +            %end;
20827 +            %else %do;
20828 +             %if &em_profitflag ne 0 %then %do;
20829 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20829!+14.&EM_PROPERTY_SPLITPRECISION);
20830 +                if CATEGORY="&targetEvent" then do;
20831 +                 profitloss=ALTERNATIVE_PROFIT;
20832 +                end;
20833 +             %end;
20834 +             %if &em_lossflag ne 0 %then %do;
20835 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20835!+14.&EM_PROPERTY_SPLITPRECISION);
20836 +                if CATEGORY="&targetEvent" then do;
20837 +                  profitloss=ALTERNATIVE_LOSS;
20838 +                end;
20839 +             %end;
20840 +            %end;
20841 +            output;
20842 +          end;
20843 +          else do;
20844 +            %if &validFlag eq N %then %do;
20845 +             %if &em_profitflag ne 0 %then %do;
20846 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20847 +             %end;
20848 +             %if &em_lossflag ne 0 %then %do;
20849 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20850 +             %end;
20851 +            %end;
20852 +            %else %do;
20853 +             %if &em_profitflag ne 0 %then %do;
20854 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20854!+14.&EM_PROPERTY_SPLITPRECISION);
20855 +             %end;
20856 +             %if &em_lossflag ne 0 %then %do;
20857 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20857!+14.&EM_PROPERTY_SPLITPRECISION);
20858 +             %end;
20859 +            %end;
20860 +          end;
20861 +        %end;
20862 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20863 +          if strip(CATEGORY) = "&targetevent" then do;
20864 +            %if &validFlag eq N %then %do;
20865 +             %if &em_profitflag ne 0 %then %do;
20866 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20867 +             %end;
20868 +             %if &em_lossflag ne 0 %then %do;
20869 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20870 +             %end;
20871 +             profitloss=statvalue;
20872 +            %end;
20873 +            %else %do;
20874 +             %if &em_profitflag ne 0 %then %do;
20875 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20875!+;
20876 +                profitloss=ALTERNATIVE_PROFIT;
20877 +             %end;
20878 +             %if &em_lossflag ne 0 %then %do;
20879 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20880 +                profitloss=ALTERNATIVE_LOSS;
20881 +             %end;
20882 +            %end;
20883 +            output;
20884 +          end;
20885 +        %end;
20886 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
20887 +          if strip(CATEGORY) = "&targetevent" then do;
20888 +            %if &validFlag eq N %then %do;
20889 +             profitloss=statvalue;
20890 +            %end;
20891 +            %else %do;
20892 +             %if &em_profitflag ne 0 %then %do;
20893 +                profitloss=ALTERNATIVE_PROFIT;
20894 +             %end;
20895 +             %if &em_lossflag ne 0 %then %do;
20896 +                profitloss=ALTERNATIVE_LOSS;
20897 +             %end;
20898 +            %end;
20899 +            output;
20900 +          end;
20901 +        %end;
20902 +      run;
20903 +    %end;
20905 +    data tempprob(keep= node probtext);
20906 +      length probtext $800;
20907 +      retain probtext;
20908 +      set tempprob ;
20909 +      by node;
20911 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20912 +      %let probtype = &EM_PROPERTY_TARGET;
20913 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
20914 +        %let probtype = ALL;
20915 +      %end;
20917 +      %if "&probtype" eq "ALL" %then %do;
20918 +        if first.node then do;
20919 +          %if &validFlag eq N %then %do;
20920 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20921 +          %end;
20922 +          %else %do;
20923 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20924 +          %end;
20925 +        end;
20926 +        else if last.node then do;
20927 +          %if &validFlag eq N %then %do;
20928 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20929 +          %end;
20930 +          %else %do;
20931 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20932 +          %end;
20933 +          output;
20934 +        end;
20935 +        else do;
20936 +          %if &validFlag eq N %then %do;
20937 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20938 +          %end;
20939 +          %else %do;
20940 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20941 +          %end;
20942 +        end;
20943 +      %end;
20944 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20945 +        if strip(CATEGORY) = "&targetevent" then do;
20946 +          %if &validFlag eq N %then %do;
20947 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20948 +          %end;
20949 +          %else %do;
20950 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20951 +          %end;
20952 +          output;
20953 +        end;
20954 +      %end;
20955 +      %else %if "&probtype" eq "NONE" %then %do;
20956 +        if last.node then do;
20957 +          output;
20958 +        end;
20959 +      %end;
20960 +    run;
20961 +  %end;
20963 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
20965 +  %let oldexists=0;
20966 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
20967 +     data old_tree_plot;
20968 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
20969 +        rename nodecolor=oldnodecolor;
20970 +     run;
20972 +     proc sort data=old_tree_plot;
20973 +        by node;
20974 +     run;
20976 +     %let oldexists=1;
20977 +  %end;
20979 +  data &EM_USER_TREE_PLOT;
20980 +    length textall $800;
20981 +    merge tempoutnodes temptargetused
20983 +    %if &em_intTarget eq Y %then %do;
20984 +      tempinterval
20985 +    %end;
20987 +    %if &em_classTarget eq Y %then %do;
20989 +      %if &validFlag eq N %then %do;
20990 +        tempn(rename=(statvalue=N))
20991 +      %end;
20992 +      %else %do;
20993 +        tempn
20994 +      %end;
20996 +      temppredict tempprob
20998 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20999 +        tempprofittext
21000 +      %end;
21001 +    %end;
21002 +    ;
21003 +    by node;
21005 +    /* build nodetext based on user selection */
21006 +    textall="";
21008 +    %if &em_intTarget eq Y %then %do;
21009 +    if tarlevel="INTERVAL" then do;
21010 +      /* Nodeid */
21011 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21012 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21013 +      %end;
21015 +      /* Target identifier if multiple targets are used */
21016 +      %if "&multipleTar" eq "Y" %then %do;
21017 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21018 +      %end;
21020 +      %if &validFlag eq Y %then %do;
21021 +         /* Column labels displayed in validflag eq Y only */
21022 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21023 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21023!+noquote ))";
21024 +         %end;
21026 +         /* Average values */
21027 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21028 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21029 +         %end;
21031 +         /* RASE */
21032 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21033 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21034 +         %end;
21036 +         /* Count */
21037 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21038 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21039 +         %end;
21040 +      %end;
21041 +      %else %do;
21042 +         /* Average values */
21043 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21044 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21045 +         %end;
21047 +         /* RASE */
21048 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21049 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21050 +         %end;
21052 +         /* Count */
21053 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21054 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21055 +         %end;
21056 +      %end;
21058 +      /* nodecolor */
21059 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21060 +        nodecolor=PREDICTION;
21061 +      %end;
21062 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21063 +        nodecolor=RASE;
21064 +      %end;
21065 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21066 +        nodecolor=1;
21067 +      %end;
21069 +    end;
21070 +    %end;
21071 +    %if &em_classTarget eq Y %then %do;
21072 +    if tarlevel^="INTERVAL" then  do;
21074 +      /* Nodeid */
21075 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21076 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21077 +      %end;
21078 +      /* Target identifier if multiple targets are used */
21079 +      %if "&multipleTar" eq "Y" %then %do;
21080 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21081 +      %end;
21083 +      /* Predicted values */
21084 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21085 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21086 +      %end;
21088 +      /* Column labels displayed in validflag eq Y only */
21089 +      %if "&ValidFlag" eq "Y" %then %do;
21090 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21091 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21091!+noquote ))";
21092 +        %end;
21093 +      %end;
21095 +      /* Target Values */
21096 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21097 +        textall=strip(textall)||"0A"x||strip(probtext);
21098 +      %end;
21100 +      /* include profit or loss for all target levels */
21101 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21102 +        textall=strip(textall)||"0A"x||strip(profittext);
21103 +      %end;
21105 +      %if &validFlag eq N %then %do;
21106 +        /* Percent Correct */
21107 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21108 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21109 +        %end;
21111 +         /* Count */
21112 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21113 +          %if "&adjusted" eq "N" %then %do;
21114 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21115 +          %end;
21116 +          %else %do;
21117 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21118 +          %end;
21119 +         %end;
21120 +      %end;
21121 +      %else %do;
21122 +        /* Percent Correct */
21123 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21124 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21125 +        %end;
21127 +         /* Count */
21128 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21129 +          %if "&adjusted" eq "N" %then %do;
21130 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21131 +          %end;
21132 +          %else %do;
21133 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21134 +          %end;
21135 +         %end;
21136 +      %end;
21138 +      /* nodecolor */
21139 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21140 +       %if &multipleTar ne Y %then %do;
21141 +        nodecolor=&predTarget;
21142 +       %end;
21143 +       %else %do;
21144 +         nodecolor=percentcorrect;
21145 +       %end;
21146 +      %end;
21147 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21148 +        nodecolor=percentcorrect;
21149 +      %end;
21150 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21151 +        nodecolor=1;
21152 +      %end;
21153 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21154 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21155 +          nodecolor=percentcorrect;
21156 +        %end;
21157 +        %else %do;
21158 +          nodecolor=profitloss;
21159 +        %end;
21160 +      %end;
21162 +    end;
21163 +    %end;
21164 +    %if &em_intTarget eq Y %then %do;
21165 +     drop  PREDICTION  TARGET TARLEVEL
21166 +     %if &ValidFlag eq Y %then %do;
21167 +         VPREDICTION
21168 +     %end;
21169 +     ;
21170 +    %end;
21171 +    %if &em_classTarget eq Y %then %do;
21172 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21173 +     %if &ValidFlag eq Y %then %do;
21174 +         VSTATVALUE
21175 +     %end;
21176 +     ;
21177 +    %end;
21179 +  run;
21181 +  /* add leaf index information to plotds - based on primary target only*/
21182 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21183 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21184 +      set &EM_USER_OUTSTATS;
21185 +      if ((statname="PROBABILITY"
21186 +      %if &validexist %then %do;
21187 +       or statname="VALID: PROBABILITY"
21188 +      %end;
21189 +      ) AND (CATEGORY="&TARGETEVENT")
21190 +      %if "&multipleTar" eq "Y" %then %do;
21191 +        AND (Target="%EM_TARGET")
21192 +      %end;
21193 +      );
21194 +    run;
21196 +    %if &validexist %then %do;
21197 +      proc sort data=tempprob; by node; run;
21198 +      %let vpredTarget = V%substr(&predTarget, 2);
21199 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21200 +         by node;
21201 +         id statname;
21202 +      run;
21203 +    %end;
21204 +  %end;
21205 +  %else %do;
21206 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21207 +      set &EM_USER_OUTSTATS;
21208 +      if ((statname="PREDICTION"
21209 +      %if &validexist %then %do;
21210 +       or statname="VALID: PREDICTION"
21211 +      %end;
21212 +      )
21213 +      %if "&multipleTar" eq "Y" %then %do;
21214 +        AND (Target="%EM_TARGET")
21215 +      %end;
21216 +      );
21217 +    run;
21218 +    %if &validexist %then %do;
21219 +      proc sort data=tempprob; by node; run;
21220 +      %let vpredTarget = V%substr(&predTarget, 2);
21221 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21222 +         by node;
21223 +         id statname;
21224 +      run;
21225 +    %end;
21226 +  %end;
21228 +  proc sort data=tempprob; by node; run;
21229 +  data tempoutnodes;
21230 +    merge tempoutnodes tempprob;
21231 +    by node;
21232 +  run;
21234 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21235 +  data tempnodes;
21236 +    retain traintotal validtotal;
21237 +    set tempnodes(where=(leaf ne . ));
21238 +    tprob=round(&predTarget, .01);
21239 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21240 +      percevent_train=round(tprob*100, .01);
21241 +    %end;
21242 +    %else %do;
21243 +      percevent_train=tprob;
21244 +    %end;
21246 +    perc_train=round((n/traintotal)*100, 0.01);
21247 +    /* leafwidth already has a *10 multiplier */
21248 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21250 +    %if &validexist %then %do;
21251 +      %let vpredTarget = V%substr(&predTarget,2);
21252 +      vprob=round(&vpredTarget, .01);
21253 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21254 +        percevent_valid=round(vprob*100, .01);
21255 +      %end;
21256 +      %else %do;
21257 +        percevent_valid=vprob;
21258 +      %end;
21259 +      perc_valid=round((vn/validtotal)*100, .01);
21260 +    %end;
21262 +    index=_N_;
21263 +    keep node index tprob perc_train percevent_train
21264 +    %if &validexist %then %do;
21265 +        vprob percevent_valid perc_valid
21266 +    %end;
21267 +    ;
21268 +  run;
21269 +  proc sort data=tempnodes; by node; run;
21270 +  data &EM_USER_TREE_PLOT;
21271 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21272 +    by node;
21273 +    if missing(node) then delete;
21274 +    %if &oldexists %then %do;
21275 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21276 +      drop oldnodecolor;
21277 +    %end;
21278 +    abovetext = compbl(abovetext);
21280 +    /* add variable labels */
21281 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21282 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21283 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21284 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21285 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21286 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21288 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21289 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21290 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21291 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21292 +          %end;
21293 +          %else %do;
21294 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21295 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21296 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21297 +          %end;
21298 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21300 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21301 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21302 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21303 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21304 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21305 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21306 +          %end;
21307 +          %else %do;
21308 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21309 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21310 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21311 +          %end;
21312 +    ;
21313 +  run;
21315 +  /* delete temporary tables */
21316 +  proc datasets lib=work nolist;
21317 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21318 +  run;
21320 +%mend em_tree_makePlotDs;
21324 +%macro em_tree_report;
21326 +   /* report properties */
21327 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21328 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21329 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21330 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21331 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21332 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21333 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21334 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21335 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21336 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21337 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21338 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21339 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21341 +   %let validexist=0;
21342 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21343 +     %let validexist=1;
21344 +   %end;
21346 +   /* determine if multiple targets will be processed */
21347 +   %let em_tree_multipleTargets=N;
21348 +   %let em_tree_numTarget=1;
21349 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21350 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21351 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21352 +         %let em_tree_multipleTargets=N;
21353 +      %end;
21354 +      %else %do;
21355 +        data _null_;
21356 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21357 +          if eof then
21358 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21359 +        run;
21361 +        %if &em_tree_numTarget gt 1 %then %do;
21362 +           %let em_tree_multipleTargets=Y;
21363 +        %end;
21364 +     %end;
21365 +   %end;
21367 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21369 +   /* variable importance */
21370 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21371 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21373 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21374 +     /* and the columns may not be generated                                                                                 */
21375 +     %let em_tree_cvexists=;
21376 +     %let em_tree_surrexists=.;
21377 +     data _null_;
21378 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21379 +       if eof then do ;
21380 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21381 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21382 +       end;
21383 +     run;
21385 +     data &EM_USER_OUTIMPORT;
21386 +         set &EM_USER_OUTIMPORT;
21387 +         /* format columns based on Precison value specified */
21388 +         format importance 15.&EM_PROPERTY_PRECISION
21389 +              %if &validexist %then %do;
21390 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21391 +              %end;
21392 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21393 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21394 +              %end;
21395 +         ;
21396 +     run;
21398 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21399 +     proc print data=&EM_USER_OUTIMPORT
21400 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21401 +          (where=((nrules>0) OR (nsurrogates>0)))
21402 +        %end;
21403 +        %else %do;
21404 +           (where=(nrules>0))
21405 +        %end;
21406 +        label noobs
21407 +        ;
21408 +     run;
21409 +     title10;
21411 +   %end;
21413 +   /* Sequence */
21414 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21415 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21416 +   data _null_ ;
21417 +      set &EM_USER_outseq (obs=2) end=eof ;
21418 +      if eof then do ;
21419 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21420 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21421 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21422 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21423 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21424 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21425 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21426 +      end;
21427 +    run;
21429 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21430 +      data &EM_USER_OUTSEQ;
21431 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21432 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21433 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21434 +           _XMISC_=_VMISC_
21435 +        %end;
21436 +        %if "&em_tree_aprof" ne "."  %then %do;
21437 +           _XAPROF_=_VAPROF_
21438 +           _XPROF_ = _VPROF_
21439 +        %end;
21440 +        %if "&em_tree_aloss" ne "."  %then %do;
21441 +           _XALOSS_=_VALOSS_
21442 +        %end;
21443 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21444 +           _XPASE_ = _VPASE_
21445 +           _XPMISC_ = _VPMISC_
21446 +        %end;
21448 +        ));
21449 +     %end;
21450 +     %else %do;
21451 +        set &EM_USER_OUTSEQ;
21452 +     %end;
21454 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21455 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21456 +            _MISC_   15.&EM_PROPERTY_PRECISION
21457 +         %end;
21458 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21459 +            _PASE_  15.&EM_PROPERTY_PRECISION
21460 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21461 +         %end;
21462 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21463 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21464 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21465 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21466 +            %end;
21467 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21468 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21469 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21470 +            %end;
21471 +         %end;
21472 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21473 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21474 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21475 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21476 +            %end;
21477 +         %end;
21478 +         %if "&em_tree_seq" ne "." %then %do;
21479 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21480 +         %end;
21481 +         %if "&em_tree_vseq" ne "." %then %do;
21482 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21483 +         %end;
21484 +         %if "&em_tree_aprof" ne "." %then %do;
21485 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21486 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21487 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21488 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21489 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21490 +           %end;
21491 +         %end;
21492 +         %else %if "&em_tree_aloss" ne "." %then %do;
21493 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21494 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21495 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21496 +           %end;
21497 +         %end;
21498 +      ;
21499 +    run;
21500 +   %end;
21502 +   /* Observation Based Importance */
21503 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21505 +      /* need to check for 0 obs */
21506 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21507 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21508 +      %let rc=%sysfunc(close(&dsid));
21510 +      %if &onobs %then %do;
21511 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21512 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21514 +         data &EM_USER_OUTOBSIMP;
21515 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21516 +           if _a;
21517 +           by _INPUT1_;
21518 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21519 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21520 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21521 +                   %end;
21522 +                   ;
21523 +         run;
21524 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21525 +      %end;
21526 +   %end;
21528 +  %end;
21530 +  /* create dataset to support tree diagram and icicle plot */
21531 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21532 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21534 +  /* display tree diagram */
21535 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21536 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21538 +  /* display icicle diagram */
21539 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21540 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21542 +  /* Leaf Statistics Plot */
21543 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21545 +  /* print leaf information to output window */
21546 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21548 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21549 +       by descending N;
21550 +     run;
21552 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21553 +     %local vn;
21554 +     data _null_;
21555 +       set t (obs=2) end=eof;
21556 +       if eof then do;
21557 +         call symput("vn", strip(put(vn, best.)));
21558 +       end;
21559 +     run;
21561 +     data t;
21562 +       set t;
21563 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21564 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21565 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21566 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21567 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21568 +       %end;
21569 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21570 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21571 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21572 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21573 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21574 +          %end;
21575 +       %end;
21576 +       ;
21577 +     run;
21579 +     /* determine if rase is found in t */
21580 +    %let dsid=%sysfunc(open(t,i));
21581 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21582 +    %let rc=%sysfunc(close(&dsid));
21584 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21585 +     proc print data=t noobs label;
21586 +       where tprob ne .;
21587 +       var node depth N tprob
21588 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21589 +         %if "&vn" ne "." %then %do;
21590 +           VN
21591 +         %end;
21592 +         vprob
21593 +       %end;
21594 +       %if &raseexists %then %do;
21595 +            RASE
21596 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21597 +              VRASE
21598 +            %end;
21599 +       %end;
21600 +       ;
21601 +     run;
21602 +     title10;
21603 +  %end;
21605 +  /* create plots that are done during training of node */
21606 +  /* display iterative plot, including reference line */
21607 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21608 +   /* %if &nleaves eq  %then %do; */
21609 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21610 +      data _null_;
21611 +        set &EM_USER_OUTTOPOLOGY end=eof;
21612 +        if eof then do;
21613 +          call symput('nleaves', LEAF);
21614 +        end;
21615 +      run;
21616 +   /* %end; */
21618 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21619 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21620 +  %end;
21622 +  /* display leaf statistics */
21623 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21625 +  /* stats by node if multiple targets = Y */
21626 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21627 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21628 +    data &EM_USER_OUTSTATS;
21629 +      set &EM_USER_OUTSTATS;
21631 +     * if STATNAME="TARGET" then delete;
21632 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21633 +      drop leaf;
21634 +    run;
21635 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21637 +  %end;
21638 +  %else %do;
21639 +    /* add outstats and outdescribe to spk but not results */
21640 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21641 +  %end;
21643 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE4_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set EMWS3.TREE4_OUTIMPORT.
NOTE: The data set EMWS3.TREE4_OUTIMPORT has 69 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE4_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE4_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE4_OUTSEQ.
NOTE: The data set EMWS3.TREE4_OUTSEQ has 13 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE4_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE4_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS3.TREE4_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 7 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 212 observations read from the data set EMWS3.TREE4_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE4_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 7 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE4_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE4_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE4_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 405 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 390 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE4_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 405 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 405 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 405 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 30 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 180 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 180 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 180 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 180 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 15 observations read from the data set WORK.TEMPN.
NOTE: There were 15 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE4_TREE_PLOT has 15 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 405 observations read from the data set EMWS3.TREE4_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 30 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 15 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 15 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 15 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 8 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE4_TREE_PLOT.
NOTE: There were 8 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE4_TREE_PLOT has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE4_TREE_PLOT.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 15 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 15 observations read from the data set EMWS3.TREE4_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21644
21645  *------------------------------------------------------------*;
21646  * End REPORT: Tree4;
21647  *------------------------------------------------------------*;
 
21648  /* Reset EM Options */
21649  options formchar="|----|+|---+=|-/\<>*";
21650  options nocenter ls=256 ps=10000;
21651  goptions reset=all device=GIF NODISPLAY;
 
21652  proc sort data=WORK.EM_USER_REPORT;
21653  by ID VIEW;
21654  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21655  proc sort data=EMWS3.TextCluster7_CMeta_TRAIN out=WORK.SUBSETINMETA;
21656  by NAME;
21657  run;
 
NOTE: There were 80 observations read from the data set EMWS3.TEXTCLUSTER7_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 80 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21658  proc sort data=EMWS3.Tree4_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21659  by NAME;
21660  run;
 
NOTE: There were 80 observations read from the data set EMWS3.TREE4_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 80 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21661  data WORK.ASSESS_META;
21662  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21663  by NAME;
21664  run;
 
NOTE: There were 80 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 80 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 80 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
21665  data EM_temp_assessMeta;
21666  set EMWS3.Tree4_CMeta_TRAIN;
21667  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21668  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21669  data EM_temp_assessdata;
21670  set EMWS3.Tree4_TRAIN(keep=
21671  F_Category
21672  I_Category
21673  P_CategoryADVOCATE
21674  P_CategoryBUSINESS_DEVELOPMENT
21675  P_CategoryCONSULTANT
21676  P_CategoryDESIGNER
21677  P_CategoryDIGITAL_MEDIA
21678  P_CategoryFITNESS
21679  P_CategoryHEALTHCARE
21680  P_CategoryHR
21681  P_CategoryINFORMATION_TECHNOLOGY
21682  P_CategoryOTHER
21683  P_CategorySALES
21684  P_CategoryTEACHER
21685  Q_CategoryADVOCATE
21686  Q_CategoryBUSINESS_DEVELOPMENT
21687  Q_CategoryCONSULTANT
21688  Q_CategoryDESIGNER
21689  Q_CategoryDIGITAL_MEDIA
21690  Q_CategoryFITNESS
21691  Q_CategoryHEALTHCARE
21692  Q_CategoryHR
21693  Q_CategoryINFORMATION_TECHNOLOGY
21694  Q_CategoryOTHER
21695  Q_CategorySALES
21696  Q_CategoryTEACHER
21697  R_CategoryADVOCATE
21698  R_CategoryBUSINESS_DEVELOPMENT
21699  R_CategoryCONSULTANT
21700  R_CategoryDESIGNER
21701  R_CategoryDIGITAL_MEDIA
21702  R_CategoryFITNESS
21703  R_CategoryHEALTHCARE
21704  R_CategoryHR
21705  R_CategoryINFORMATION_TECHNOLOGY
21706  R_CategoryOTHER
21707  R_CategorySALES
21708  R_CategoryTEACHER
21709  U_Category
21710  V_CategoryADVOCATE
21711  V_CategoryBUSINESS_DEVELOPMENT
21712  V_CategoryCONSULTANT
21713  V_CategoryDESIGNER
21714  V_CategoryDIGITAL_MEDIA
21715  V_CategoryFITNESS
21716  V_CategoryHEALTHCARE
21717  V_CategoryHR
21718  V_CategoryINFORMATION_TECHNOLOGY
21719  V_CategoryOTHER
21720  V_CategorySALES
21721  V_CategoryTEACHER
21722  _WARN_
21723  Category
21724  );
21725  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER7_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE4_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26007   data EM_temp_assessMeta;
26008   set EMWS3.Tree4_CMeta_TRAIN;
26009   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26010   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26011   data EM_temp_assessdata;
26012   set EMWS3.Tree4_VALIDATE(keep=
26013   F_Category
26014   I_Category
26015   P_CategoryADVOCATE
26016   P_CategoryBUSINESS_DEVELOPMENT
26017   P_CategoryCONSULTANT
26018   P_CategoryDESIGNER
26019   P_CategoryDIGITAL_MEDIA
26020   P_CategoryFITNESS
26021   P_CategoryHEALTHCARE
26022   P_CategoryHR
26023   P_CategoryINFORMATION_TECHNOLOGY
26024   P_CategoryOTHER
26025   P_CategorySALES
26026   P_CategoryTEACHER
26027   Q_CategoryADVOCATE
26028   Q_CategoryBUSINESS_DEVELOPMENT
26029   Q_CategoryCONSULTANT
26030   Q_CategoryDESIGNER
26031   Q_CategoryDIGITAL_MEDIA
26032   Q_CategoryFITNESS
26033   Q_CategoryHEALTHCARE
26034   Q_CategoryHR
26035   Q_CategoryINFORMATION_TECHNOLOGY
26036   Q_CategoryOTHER
26037   Q_CategorySALES
26038   Q_CategoryTEACHER
26039   R_CategoryADVOCATE
26040   R_CategoryBUSINESS_DEVELOPMENT
26041   R_CategoryCONSULTANT
26042   R_CategoryDESIGNER
26043   R_CategoryDIGITAL_MEDIA
26044   R_CategoryFITNESS
26045   R_CategoryHEALTHCARE
26046   R_CategoryHR
26047   R_CategoryINFORMATION_TECHNOLOGY
26048   R_CategoryOTHER
26049   R_CategorySALES
26050   R_CategoryTEACHER
26051   U_Category
26052   V_CategoryADVOCATE
26053   V_CategoryBUSINESS_DEVELOPMENT
26054   V_CategoryCONSULTANT
26055   V_CategoryDESIGNER
26056   V_CategoryDIGITAL_MEDIA
26057   V_CategoryFITNESS
26058   V_CategoryHEALTHCARE
26059   V_CategoryHR
26060   V_CategoryINFORMATION_TECHNOLOGY
26061   V_CategoryOTHER
26062   V_CategorySALES
26063   V_CategoryTEACHER
26064   _WARN_
26065   Category
26066   );
26067   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE4_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER7_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE4_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30358   %let _cn = %sysfunc(getoption(CENTER));
30359   options nocenter;
30360   proc print data=EMWS3.Tree4_EMREPORTFIT noobs label;
30361   var STAT LABEL TRAIN
30362   VALIDATE
30363   TEST
30364   ;
30365   by TARGET TARGETLABEL;
30366   title9 ' ';
30367   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30368   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE4_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30369   title10;
30370   options &_cn;
 
30371   proc sort data=EMWS3.Tree4_EMCLASSIFICATION nothreads;
30372   by DATAROLE TARGET TARGETLABEL;
30373   run;
 
NOTE: There were 139 observations read from the data set EMWS3.TREE4_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE4_EMCLASSIFICATION has 139 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30374   %let _cn = %sysfunc(getoption(CENTER));
30375   options nocenter;
30376   proc print data=EMWS3.Tree4_EMCLASSIFICATION noobs label;
30377   var from into pct_row pct_col count percent
30378   ;
30379   by DATAROLE TARGET TARGETLABEL;
30380   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30381   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30382   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30383   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30384   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30385   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30386   where _TYPE_='PREDICTION';
30387   title9 ' ';
30388   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30389   run;
 
NOTE: There were 139 observations read from the data set EMWS3.TREE4_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30390   title9;
30391   title10;
30392   options &_cn;
 
30393   %let _cn = %sysfunc(getoption(CENTER));
30394   options nocenter;
30395   data EMWS3.Tree4_EMEVENTREPORT;
30396   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30397   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30397 ! FALSEEVENT
30398   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30399      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30400   FALSEEVENT=0;
30401   FALSENEVENT=0;
30402   TRUEEVENT=0;
30403   TRUENEVENT=0;
30404   set EMWS3.Tree4_EMEVENTREPORT;
30405   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE4_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE4_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30406   proc print data=EMWS3.Tree4_EMEVENTREPORT noobs label;
30407   title9 ' ';
30408   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30409   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30410   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE4_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30411   title10;
30412   options &_cn;
 
30413   proc datasets library=EMWS3 nolist;
30414   modify Tree4_EMRANK;
30415   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30416   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30417   run;
 
NOTE: MODIFY was successful for EMWS3.TREE4_EMRANK.DATA.
30418   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
30419   %let _cn = %sysfunc(getoption(CENTER));
30420   options nocenter;
30421   proc print data=EMWS3.Tree4_EMRANK label noobs;
30422   var
30423   decile gain lift liftc resp respc N _meanP_;
30424   by
30425   notsorted DATAROLE
30426   notsorted TARGET
30427   notsorted TARGETLABEL
30428   ;
30429   title9 ' ';
30430   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30431   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE4_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30432   title10;
30433   options &_cn;
 
30434   proc datasets library=EMWS3 nolist;
30435   modify Tree4_EMSCOREDIST;
30436   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30437   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30438   run;
 
NOTE: MODIFY was successful for EMWS3.TREE4_EMSCOREDIST.DATA.
30439   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
