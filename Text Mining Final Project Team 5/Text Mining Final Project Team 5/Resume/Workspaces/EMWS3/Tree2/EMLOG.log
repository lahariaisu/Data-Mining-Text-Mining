*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:14:35
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:14:25
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree2_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree2META;
15227  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TREE2_VARIABLESET.
NOTE: The data set WORK.TREE2META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
15228  proc print data=WORK.Tree2META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster5_TRAIN EMWS3.TextCluster5_TRAIN
EMWS3.TextCluster5_TRAIN EMWS3.TextCluster5_TRAIN EMWS3 TextCluster5_TRAIN
EMWS3.TextCluster5_TRAIN EMWS3.TextCluster5_TRAIN
EMWS3.TextCluster5_TRAIN EMWS3.TextCluster5_TRAIN EMWS3 TextCluster5_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE2_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree2_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE2_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree2_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
16001  *------------------------------------------------------------*;
16002  * Tree2: Generation of macros and macro variables;
16003  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
16004  *------------------------------------------------------------*;
 
16005  %let EMEXCEPTIONSTRING=;
16006  *------------------------------------------------------------*;
16007  * TRAIN: Tree2;
16008  *------------------------------------------------------------*;
16009  %let EM_ACTION = TRAIN;
16010  %let syscc = 0;
16011  %macro main;
16012
16013    %if %upcase(&EM_ACTION) = CREATE %then %do;
16014      filename temp catalog 'sashelp.emmodl.tree_create.source';
16015      %include temp;
16016      filename temp;
16017
16018      %em_tree_create;
16019    %end;
16020
16021     %else
16022     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16023
16024         filename temp catalog 'sashelp.emmodl.tree_train.source';
16025         %include temp;
16026         filename temp;
16027         %em_tree_train;
16028     %end;
16029
16030    %else
16031    %if %upcase(&EM_ACTION) = SCORE %then %do;
16032      filename temp catalog 'sashelp.emmodl.tree_score.source';
16033      %include temp;
16034      filename temp;
16035
16036      %em_tree_score;
16037
16038    %end;
16039
16040    %else
16041    %if %upcase(&EM_ACTION) = REPORT %then %do;
16042
16043         filename temp catalog 'sashelp.emmodl.tree_report.source';
16044         %include temp;
16045         filename temp;
16046
16047         %em_tree_report;
16048     %end;
16049
16050    %else
16051    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16052
16053         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16054         %include temp;
16055         filename temp;
16056         %EM_TREE_OPENTREEVIEWER;
16057
16058     %end;
16059
16060    %else
16061    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16062
16063         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16064         %include temp;
16065         filename temp;
16066         %EM_TREE_CLOSETREEVIEWER;
16067
16068     %end;
16069
16070
16071     %doendm:
16072  %mend main;
16073
16074  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16076 +%macro em_tree_train;
16078 +   %if &EM_IMPORT_DATA eq %then %do;
16079 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16080 +       %put &em_codebar;
16081 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16082 +       %put &errormsg;
16083 +       %put &em_codebar;
16084 +       %goto doendm;
16085 +   %end;
16086 +   %else
16087 +       %let EMEXCEPTIONSTRING =;
16089 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16090 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16091 +        %put &em_codebar;
16092 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16093 +        %put &errormsg;
16094 +        %put &em_codebar;
16095 +        %goto doendm;
16096 +   %end;
16098 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16099 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16100 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16101 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16102 +        %put &em_codebar;
16103 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16104 +        %put &errormsg;
16105 +        %put &em_codebar;
16106 +        %goto doendm;
16107 +   %end;
16109 +   /* Initialize property macro variables */
16110 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16111 +   %include temp;
16112 +   filename temp;
16114 +   %EM_SetProperties;
16116 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16117 +   %EM_GETNAME(key=EMTREE, type=DATA);
16118 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16119 +     /* if import eq Y and no importtable defined, throw an exception */
16120 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16121 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16122 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16123 +         %put &em_codebar;
16124 +         %put &errmsg;
16125 +         %put &em_codebar;
16126 +         %goto doendm;
16127 +      %end;
16128 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16129 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16130 +         %put &em_codebar;
16131 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16132 +         %put &errormsg;
16133 +         %put &em_codebar;
16134 +         %goto doendm;
16135 +      %end;
16136 +      %else %do;
16137 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16138 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16139 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16140 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16141 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16142 +         %let dsid = %sysfunc(close(&dsid));
16143 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16144 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16145 +            %put &em_codebar;
16146 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16147 +            %put &errormsg;
16148 +            %put &em_codebar;
16149 +            %goto doendm;
16150 +         %end;
16151 +      %end;
16152 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16153 +         proc delete data=&EM_USER_EMTREE;
16154 +         run;
16155 +      %end;
16156 +   %end;
16157 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16158 +      proc delete data=&EM_USER_EMTREE;
16159 +      run;
16160 +   %end;
16162 +   /* load tree macros */
16163 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16164 +   %include temp;
16165 +   filename temp;
16167 +   /* data sets */
16168 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16169 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16170 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16172 +   /* files */
16173 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16175 +   /* check actual num of target levels */
16176 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16177 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16178 +                              nLevel=_nTargetLevel );
16179 +      %if &_nTargetLevel  > 2 %then %do;
16180 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16181 +        %put &em_codebar;
16182 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16183 +        %put &errormsg;
16184 +        %put &em_codebar;
16185 +        %goto doendm;
16186 +      %end;
16187 +   %end;
16189 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16190 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16191 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16192 +        %let costflag=0;
16193 +        data _null_;
16194 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16195 +          if eof then call symput("costflag", _N_);
16196 +        run;
16197 +        %if &costflag gt 0 %then %do;
16198 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16199 +          %put &em_codebar;
16200 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16201 +          %put &errormsg;
16202 +          %put &em_codebar;
16203 +          %goto doendm;
16204 +       %end;
16205 +     %end;
16206 +   %end;
16208 +   /* determine if multiple targets will be processed */
16209 +   %let em_tree_multipleTargets=N;
16210 +   %let em_tree_numTarget = 1;
16211 +   %let em_tree_targetVars=;
16213 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16214 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16215 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16216 +         %let em_tree_multipleTargets=N;
16217 +      %end;
16218 +      %else %do;
16219 +         /* create macro array of targets  */
16220 +         data _null_;
16221 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16222 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16223 +           if eof then
16224 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16225 +        run;
16227 +        %if &em_tree_numTarget gt 1 %then %do;
16228 +           %let em_tree_multipleTargets=Y;
16229 +        %end;
16230 +      %end;
16231 +   %end;
16233 +   /* create view of only necessary variable for performance reasons */
16234 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16235 +   data &tempData / view=&tempData;
16236 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16237 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16238 +       %EM_TARGET
16239 +     %end;
16240 +     %else %do;
16241 +       %if &em_tree_numTarget ne 0 %then %do;
16242 +         %do i=1 %to &em_tree_numTarget;
16243 +            &&em_tree_targetVars&i
16244 +         %end;
16245 +       %end;
16246 +     %end;
16247 +     );
16248 +   run;
16250 +   /* run Tree procedure */
16251 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16253 +   /* Check return code and throw exception if error is detected */
16254 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16255 +   %if &syserr %then %do;
16256 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16257 +     %goto doendm;
16258 +   %end;
16260 +   /* add decision score code if multiple targets are processed */
16261 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16262 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16263 +   %end;
16265 +   /* create outfit dataset if multiple score statements have been executed */
16266 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16268 +   /* create English Rules */
16269 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16270 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16271 +       %em_tree_makeEnglishRules;
16273 +       /* English Rules */
16274 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16276 +     %end;
16277 +   filename x;
16279 +   %doendm:
16280 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16281 +%macro EM_SetProperties;
16283 +   /* train properties */
16284 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16285 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16286 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16287 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16288 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16289 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16290 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16291 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16292 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16293 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16294 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16295 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16296 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16297 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16298 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16299 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16300 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16301 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16302 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16303 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16304 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16305 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16306 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16307 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16308 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16309 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16310 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16311 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16312 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16313 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16314 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16315 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16316 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16317 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16318 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16319 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16320 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16321 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16322 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16323 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16324 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16326 +   /* properties for interactive sample */
16327 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16328 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16329 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16330 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16332 +   /* report properties */
16333 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16334 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16335 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16336 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16337 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16338 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16339 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16340 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16341 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16342 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16343 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16344 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16345 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16347 +   /* score properties */
16348 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16349 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16351 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE2_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16353 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16354 +  %global &nLevel;
16355 +  proc dmdb batch data=&indata
16356 +    classout=_tmp_dmdbout;
16357 +    class &target;
16358 +  run;
16359 +  data _tmp_dmdbout;
16360 +    set _tmp_dmdbout;
16361 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16362 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16363 +  run;
16364 +  data _null_;
16365 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16366 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16367 +    %let dsid = %sysfunc(close(&dsid));
16368 +     call symput("&nLevel", put(&_obs, Best12.));
16369 +  run;
16371 +  proc datasets lib=work nolist;
16372 +     delete _tmp_dmdbout;
16373 +  run;
16374 +  quit;
16375 +%Mend EM_CheckBinaryTargetLevel;
16378 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16380 +  /* determine the number of obs in training data */
16381 +  proc sql;
16382 +    reset noprint;
16383 +    select count(*) into :em_nobs from &indata;
16384 +  quit;
16386 +  /* determine the number of input variables */
16387 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16388 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16390 +  /* retrieve targetEvent from decmeta */
16391 +  %let targetEvent=;
16392 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16393 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16394 +      data _null_;
16395 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16396 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16397 +      run;
16398 +    %end;
16399 +  %end;
16401 +  /* create targetTable if multipleTar eq Y */
16402 +  data temptarget;
16403 +    set &EM_DATA_VARIABLESET;
16404 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16405 +  run;
16407 + /* data sets */
16408 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16409 + %EM_GETNAME(key=EMTREE,        type=DATA);
16410 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16411 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16412 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16413 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16414 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16415 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16416 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16417 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16419 + /* files */
16420 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16421 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16423 + /* turn on pmml if requested */
16424 + %let nnpmml=0;
16425 + %if %symexist(EM_PMML) %then %do;
16426 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16427 +       %let nnpmml=1;
16429 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16430 +   %end;
16431 +%end;
16433 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16435 +%if &nnpmml or &numClassTarget %then %do;
16437 +    /* create dmdb needed for pmml generation */
16438 +    %let tree_maxlevel = 512;
16439 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16440 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16441 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16442 +      %end;
16443 +    %end;
16444 +    %if &tree_maxlevel gt 0 %then %do;
16445 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16446 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16447 +    %end;
16449 +    %let targetOrderString =;
16450 +    %let targetString = ;
16451 +    data _null_;
16452 +       length orderString nameString $10000;
16453 +       retain orderString nameString;
16454 +       set &em_data_variableset end=eof;
16455 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16456 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16457 +       %end;
16458 +       %else %do;
16459 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16460 +       %end;          select(order);
16461 +         when('')        order ='DESC';
16462 +         when('FMTASC')  order='ASCFMT';
16463 +         when('FMTDESC') order='DESFMT';
16464 +         otherwise;
16465 +       end;
16466 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16467 +       nameString = trim(nameString)!!' '!!trim(NAME);
16469 +       if eof then do;
16470 +          call symput('targetOrderString', trim(orderString));
16471 +          call symput('targetString', trim(nameString));
16472 +       end;
16473 +    run;
16475 +    %let arborkluge= "work._treeDMDB";
16477 +    proc dmdb batch data=&indata
16478 +    %if &nnpmml %then %do;
16479 +        PMML
16480 +    %end;
16481 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16483 +      %if &nnpmml %then %do;
16484 +           %if "%EM_ID" ne "" %then %do;
16485 +             id %EM_ID;
16486 +           %end;
16487 +           %if &EM_NUM_CLASS gt 0 %then %do;
16488 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16489 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16490 +                  &targetOrderString;
16491 +           %end;
16492 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16493 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16494 +           %end;
16495 +           target &targetString %EM_INTERVAL_TARGET;
16496 +           %if "%EM_FREQ" ne "" %then %do;
16497 +             freq %EM_FREQ;
16498 +           %end;
16499 +      %end;
16500 +      %else %do;
16501 +         class  &targetOrderString;
16502 +         target &targetString %EM_INTERVAL_TARGET;
16503 +      %end;
16504 +    run;
16505 +    quit;
16507 +    proc datasets lib=work nolist;
16508 +       delete classout varout;
16509 +    run;
16510 +    quit;
16512 + %end;
16515 + /* run Arbor procedure */
16516 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16517 +  proc arbor data=&INDATA
16519 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16520 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16521 +  %end;
16523 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16524 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16525 +  %end;
16527 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16528 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16529 +  %end;
16531 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16532 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16533 +  %end;
16535 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16536 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16537 +  %end;
16539 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16540 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16541 +  %end;
16542 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16543 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16544 +  %end;
16545 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16546 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16547 +  %end;
16549 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16550 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16551 +      alpha = &EM_PROPERTY_SIGLEVEL
16552 +    %end;
16553 +  %end;
16555 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16556 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16557 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16558 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16559 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16561 +        padjust =
16562 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16563 +          &chaid
16564 +        %end;
16565 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16566 +          DEPTH
16567 +        %end;
16568 +      %end;
16569 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16570 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16571 +         pvars = &num_inputs
16572 +      %end;
16573 +    %end;
16574 +  %end;
16575 +  %else %do;
16576 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16577 +         padjust = NONE
16578 +      %end;
16579 +  %end;
16581 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16582 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16583 +    Maxrules = &num_nrules
16584 +  %end;
16586 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16587 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16588 +    Maxsurrs = &num_nsurrs
16589 +  %end;
16591 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16592 +     Missing=&EM_PROPERTY_MISSINGVALUE
16593 +  %end;
16595 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16596 +     USEVARONCE
16597 +  %end;
16599 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16600 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16601 +  %end;
16604 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16605 +    event = "&targetEvent"
16606 +  %end;
16608 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16609 +     DECSEARCH
16610 +  %end;
16612 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16613 +     PRIORSSEARCH
16614 +  %end;
16616 +  %if &arbor_1 ne %then %do;
16617 +    &arbor_1
16618 +  %end;
16620 +  %if &em_arbor ne %then %do;
16621 +     &em_arbor
16622 +  %end;
16623 +  ;
16624 + %end;
16625 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16626 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16627 +       Performance &EM_PROPERTY_PERFORMANCE
16628 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16629 +         nodesize=&EM_PROPERTY_NODESAMPLE
16630 +       %end;
16631 +       ;
16632 +       interact;
16633 + %end;
16634 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16635 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16636 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16637 +    %put &em_codebar;
16638 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16639 +    %put &errormsg;
16640 +    %put &em_codebar;
16641 +    %goto doendm;
16642 +   %end;
16643 +   %else %do;
16644 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16645 +       Performance &EM_PROPERTY_PERFORMANCE
16646 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16647 +         nodesize=&EM_PROPERTY_NODESAMPLE
16648 +       %end;
16649 +       ;
16650 +       interact;
16651 +   %end;
16652 + %end;
16654 + %else %do;
16655 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16656 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16657 +    %put &em_codebar;
16658 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16659 +    %put &errormsg;
16660 +    %put &em_codebar;
16661 +    %goto doendm;
16662 +   %end;
16663 +   %else %do;
16664 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16665 +       Performance &EM_PROPERTY_PERFORMANCE
16666 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16667 +         nodesize=&EM_PROPERTY_NODESAMPLE
16668 +       %end;
16669 +       ;
16670 +        interact;
16671 +   %end;
16672 + %end;
16674 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16675 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16676 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16677 +    %end;
16679 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16680 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16681 +    %end;
16683 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16684 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16685 +    %end;
16687 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16688 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16689 +    %end;
16691 +    %if "%EM_FREQ" ne "" %then %do;
16692 +       freq %EM_FREQ;
16693 +    %end;
16695 +    %if "&multipleTar" eq "Y" %then %do;
16696 +       /* cycle through all target vars in variableset */
16697 +       %let tdsid = %sysfunc(open(temptarget));
16698 +       %if &tdsid %then %do;
16699 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16700 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16701 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16702 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16703 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16704 +             target &var / level = &lvl
16705 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16706 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16707 +             %end;
16708 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16709 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16710 +             %end;
16711 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16712 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16713 +             %end;
16714 +          %end;
16715 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16716 +       %end;
16717 +       useTarget variable = %EM_TARGET;
16718 +    %end;
16719 +    %else %do;
16720 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16721 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16722 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16723 +      %end;
16724 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16725 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16726 +      %end;
16727 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16728 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16729 +      %end;
16730 +    %end;
16732 +    %if "&multipleTar" eq "N" %then %do;
16733 +      &EM_DEC_STATEMENT;
16734 +    %end;
16736 +    Performance &EM_PROPERTY_PERFORMANCE
16737 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16738 +      nodesize=&EM_PROPERTY_NODESAMPLE
16739 +    %end;
16740 +    ;
16742 +    %if "&intFlag" eq "Y" %then %do;
16743 +       INTERACT Largest;
16744 +       Train maxnewdepth=0;
16745 +    %end;
16747 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16748 +         Assess
16749 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16750 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16751 +              %put &em_codebar;
16752 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16753 +              %put &errormsg;
16754 +              %put &em_codebar;
16755 +            %end;
16756 +            %else %do;
16757 +               Validata=&EM_IMPORT_VALIDATE
16758 +            %end;
16759 +         %end;
16760 +         %else %do;
16761 +           NoValidata
16762 +         %end;
16763 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16764 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16765 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16766 +               %if &dsid %then %do;
16767 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16768 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16769 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16770 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16771 +                   %else %do;
16772 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16773 +                      %else %let measure= MISC;
16774 +                   %end;
16775 +                 %end;
16776 +               %end;
16777 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16778 +            %end;
16779 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16780 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16781 +                 %let measure=ASE;
16782 +              %end;
16783 +              %else %do;
16784 +                 %let measure=MISC;
16785 +              %end;
16786 +            %end;
16787 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16788 +              %let measure=ASE;
16789 +            %end;
16790 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16791 +               %let measure = LIFT;
16792 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16793 +               %if &dsid %then %do;
16794 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16795 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16796 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16797 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16798 +                 %end;
16799 +               %end;
16800 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16801 +            %end;
16802 +            measure=&measure
16803 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16804 +               event = "&targetEvent"
16805 +            %end;
16806 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16807 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16808 +            %end;
16809 +         %end;
16810 +         %if "&multipleTar" eq "N" %then %do;
16811 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16812 +               CV
16813 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16814 +                 CVNITer = &EM_PROPERTY_CVNITER
16815 +               %end;
16816 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16817 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16818 +               %end;
16819 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16820 +                 CVSeed = &EM_PROPERTY_CVSEED
16821 +               %end;
16822 +            %end;
16823 +         %end;
16824 +       %end;
16825 +      ;
16827 +      %if "&intFlag" ne "Y" %then %do;
16828 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16829 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16830 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16831 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16833 +          SUBTREE &subtree
16834 +          %if "&subtree" eq "NLEAVES" %then %do;
16835 +            =&EM_PROPERTY_NSUBTREE
16836 +          %end;
16837 +          ;
16838 +        %end;
16840 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16841 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16842 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16843 +          %end;
16844 +       %end;
16845 +      %end;
16846 + %end;
16849 + MakeMacro nleaves = nleaves;
16850 + save
16851 + %if "&EM_USER_EMTREE" ne "" %then %do;
16852 +   MODEL=&EM_USER_EMTREE
16853 + %end;
16854 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16855 +   SEQUENCE=&EM_USER_OUTSEQ
16856 + %end;
16857 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16858 +   IMPORTANCE=&EM_USER_OUTIMPORT
16859 + %end;
16860 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16861 +   NODESTAT=&EM_USER_OUTNODES
16862 + %end;
16863 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16864 +   SUMMARY=&EM_USER_OUTSUMMARY
16865 + %end;
16866 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16867 +   STATSBYNODE=&EM_USER_OUTSTATS
16868 + %end;
16869 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16870 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16871 + %end;
16872 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16873 +   Pathlistnonmissing=&EM_USER_OUTPATH
16874 + %end;
16875 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16876 +   RULES = &EM_USER_OUTRULES
16877 + %end;
16878 + ;
16880 + %if "&intFlag" ne "Y" %then %do;
16882 +   %let lookupString = ;
16883 +   %if ^%symexist(EM_OPTION) %then
16884 +      %let EM_OPTION=;
16886 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16887 +      %let lookupString = LOOKUP=SELECT;
16888 +   %end;
16890 +   %let codetext=;
16891 +   %let norescodetxt=;
16893 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16894 +     %let codetext=&codetext DUMMY;
16895 +     %let norescodetxt=&norescodetxt DUMMY;
16896 +   %end;
16897 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16898 +     %let codetext=&codetext NOLEAFID;
16899 +     %let norescodetxt=&norescodetxt NOLEAFID;
16900 +   %end;
16901 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16902 +     %let norescodetxt=&norescodetxt NOPRED;
16903 +   %end;
16905 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16906 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16908 +   %if &nnpmml %then %do;
16909 +     code pmml;
16910 +   %end;
16912 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16913 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16914 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16915 +   %end;
16916 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16917 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16918 +   %end;
16919 + %end;
16921 + run;
16922 + quit;
16924 + /*%em_checkerror(); */
16925 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16926 +   /* Delete DMDB catalog */
16927 +   proc datasets lib=work nolist;
16928 +       delete _treeDMDB / mt=cat;
16929 +  run;
16930 +  %end;
16932 + %if &nnpmml %then %do;
16933 +    ods pmml close;
16934 + %end;
16936 +  %doendm:
16938 +%mend em_tree_runTreeProcedure;
16940 +%macro em_tree_createFitStats( multipleTar= );
16943 +  /* create targetTable is multipleTar eq Y */
16944 +  data temptarget;
16945 +    set &EM_DATA_VARIABLESET;
16946 +    where ROLE="TARGET";
16947 +  run;
16949 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16950 +   data &EM_USER_EMOUTFIT;
16951 +     length target $32;
16952 +     merge work.fit_train
16953 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16954 +       work.fit_valid
16955 +     %end;
16956 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16957 +       work.fit_test
16958 +     %end;
16959 +     ;
16960 +     %if "&multipleTar" eq "N" %then %do;
16961 +       target="%EM_TARGET";
16962 +     %end;
16963 +     %else %do;
16964 +       target = _TARGET_;
16965 +     %end;
16966 +     drop _NW_ _SUMW_
16967 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16968 +        _VSUMW_
16969 +     %end;
16970 +     ;
16971 +   run;
16973 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16974 +     proc datasets library=work nolist;
16975 +       delete fit_valid;
16976 +     run;
16977 +   %end;
16978 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16979 +     proc datasets library=work nolist;
16980 +       delete fit_test;
16981 +     run;
16982 +   %end;
16984 +%mend em_tree_createFitStats;
16987 +%macro em_tree_makeEnglishRules;
16989 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16990 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16992 +  /* verify that necessary tables exist and if not, skip processing */
16993 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16994 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16995 +    %goto doendm;
16996 +  %end;
16997 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16998 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16999 +    %goto doendm;
17000 +  %end;
17002 +  /* determine length of variable in outpath dataset */
17003 +  %let vlength= ;
17004 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
17005 +  %if &dsid ne %then %do;
17006 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
17007 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
17008 +  %end;
17009 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
17011 +  data tempoutpath;
17012 +    length varname $&vlength;
17013 +    retain varname;
17014 +    set &EM_USER_OUTPATH;
17016 +    if ^missing(variable) then varname=variable;
17017 +    else if ^missing(var_name) then varname=var_name;
17018 +    output;
17019 +  run;
17021 +  /* create an array of generated predicted variable names */
17022 +  %let tree_pred_vars = ;
17023 +  %let tree_pred_label = ;
17024 +  %let numpred= 0;
17025 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17027 +    data _null_;
17028 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17029 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17030 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
17031 +     if eof then
17032 +       call symput('numpred', strip(put(_N_, BEST.)));
17033 +    run;
17034 +  %end;
17036 +  /* determine if NPRIORS exists in outnodes  */
17037 +  %local nprior_flag;
17038 +  data _null_;
17039 +    set &EM_USER_OUTNODES(obs=2) end=eof;
17040 +    if eof then do;
17041 +      call symput('nprior_flag', strip(put(npriors, best.)));
17042 +    end;
17043 +  run;
17045 +  proc sort data=tempoutpath; by node; run;
17046 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
17048 +  data tempoutpath;
17049 +    merge tempoutpath(in=_a) outnodes(keep= node
17050 +    %if "&nprior_flag" ne "." %then %do;
17051 +      NPRIORS
17052 +    %end;
17053 +    %else %do;
17054 +      N
17055 +    %end;
17056 +    %if &numpred gt 0 %then %do;
17057 +      %do i=1 %to &numpred;
17058 +        &&tree_pred_vars&i
17059 +      %end;
17060 +    %end;
17061 +    );
17062 +    by node;
17063 +    if _a;
17064 +  run;
17066 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17068 +  data _null_;
17069 +    file x;
17070 +    set tempoutpath;
17071 +    by node descending varname;
17072 +    retain origvar oldnode string;
17073 +    length origvar $32 oldnode 8 string $5000;
17075 +    if _N_ = 1 then do;
17076 +      origvar = varname;
17077 +      oldnode = node;
17078 +    end;
17080 +    if first.node then do;
17081 +       put "&EM_CODEBAR";
17082 +       put " Node = " node;
17083 +       put "&EM_CODEBAR";
17084 +    end;
17086 +      if first.varname then do;
17087 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17088 +            if MISSING(CHARACTER_VALUE) then do;
17089 +             if NUMERIC_VALUE ne .  then do;
17090 +              if ^first.node then do;
17091 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17092 +              end;
17093 +              else do;
17094 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17095 +              end;
17096 +             end;
17097 +            end;
17098 +            else do;
17099 +              if ^first.node then do;
17100 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17101 +              end;
17102 +              else do;
17103 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17104 +              end;
17105 +             end;
17106 +         end;
17107 +         else if RELATION in ("=") then do;
17108 +            if ^first.node then do;
17109 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17110 +            end;
17111 +            else do;
17112 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17113 +            end;
17114 +         end;
17115 +         else if RELATION in ("ISMISSING") then do;
17116 +            if ^first.node then do;
17117 +              string = " AND "|| strip(varname) || " equals Missing";
17118 +            end;
17119 +            else do;
17120 +              string = "if "|| strip(varname) ||" equals Missing";
17121 +            end;
17122 +         end;
17123 +         else if RELATION in ("ISNOTMISSING") then do;
17124 +            if ^first.node then do;
17125 +              string = " AND "|| strip(varname) || " equals All Values";
17126 +            end;
17127 +            else do;
17128 +              string = "if "|| strip(varname) ||" equals All Values";
17129 +            end;
17130 +         end;
17131 +         if ^missing(varname) then origvar = varname;
17132 +         oldnode=node;
17134 +      end;
17135 +      else do;
17136 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17137 +          if MISSING(CHARACTER_VALUE) then do;
17138 +           if  NUMERIC_VALUE ne .  then do;
17139 +            if ^MISSING(string) then
17140 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17141 +            else
17142 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17143 +           end;
17144 +          end;
17145 +          else do;
17146 +            if ^MISSING(string) then
17147 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17148 +            else
17149 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17150 +          end;
17152 +         end;
17153 +         else if RELATION in ("=") then do;
17154 +           string = strip(string)||", "||strip(character_value);
17155 +         end;
17156 +         else if RELATION in ("ISMISSING") then do;
17158 +         end;
17159 +         if ^missing(varname) then origvar = varname;
17160 +         oldnode=node;
17161 +      end;
17162 +      if last.varname then do;
17163 +         if RELATION in ("ISMISSING") then do;
17164 +           if ^first.varname then do;
17165 +             string = strip(string) || " or MISSING";
17166 +           end;
17167 +         end;
17168 +         put string;
17169 +         if ^missing(varname) then origvar = varname;
17170 +         oldnode=node;
17171 +      end;
17173 +      if last.node then do;
17174 +         put "then ";
17175 +         put " Tree Node Identifier   = " node;
17177 +         %if "&nprior_flag" ne "." %then %do;
17178 +           put " Number of Observations = " NPRIORS;
17179 +         %end;
17180 +         %else %do;
17181 +           put " Number of Observations = " N;
17182 +         %end;
17184 +         %if &numpred gt 0 %then %do;
17185 +           %do i=1 %to &numpred;
17186 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17187 +           %end;
17188 +         %end;
17190 +         put " ";
17191 +         if ^missing(varname) then origvar = varname;
17192 +         oldnode=node;
17193 +      end;
17195 +  run;
17197 +  proc datasets lib=work nolist;
17198 +    delete tempoutpath outnodes;
17199 +  run;
17201 +  %doendm:
17202 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE2.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.EM_TREE2.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER5_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE2.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER5_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE2.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595084 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 95209472 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 1813400 bytes of work memory.
NOTE: The subtree sequence contains 15 subtrees. The largest has 29 nodes and 15 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
NOTE: Created macro variable NLEAVES equal to 9.
NOTE: The data set EMWS3.TREE2_OUTIMPORT has 100 observations and 6 variables.
NOTE: The data set EMWS3.TREE2_EMTREE has 2465 observations and 4 variables.
NOTE: The data set EMWS3.TREE2_OUTNODES has 17 observations and 54 variables.
NOTE: The data set EMWS3.TREE2_OUTPATH has 98 observations and 7 variables.
NOTE: The data set EMWS3.TREE2_OUTRULES has 263 observations and 6 variables.
NOTE: The data set EMWS3.TREE2_OUTSEQ has 15 observations and 20 variables.
NOTE: The data set EMWS3.TREE2_OUTSTATS has 459 observations and 5 variables.
NOTE: The data set EMWS3.TREE2_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE2_OUTTOPOLOGY has 17 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE2.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER5_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE2.VIEW used (Total process time):
      real time           0.71 seconds
      cpu time            0.34 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER5_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE2.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.71 seconds
      cpu time            0.34 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE2_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 98 observations read from the data set EMWS3.TREE2_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 98 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE2_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 98 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE2_OUTNODES.
NOTE: The data set WORK.OUTNODES has 17 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 17 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 98 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 98 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:28,
      Create Time=23Nov2023:22:14:28
 
NOTE: 207 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 98 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: Fileref X has been deassigned.
17204
17205  *------------------------------------------------------------*;
17206  * End TRAIN: Tree2;
17207  *------------------------------------------------------------*;
 
17208  *------------------------------------------------------------*;
17209  * Close any missing semi colons;
17210  *------------------------------------------------------------*;
17211  ;
17212  ;
17213  ;
17214  ;
17215  quit;
17216  *------------------------------------------------------------*;
17217  * Close any unbalanced quotes;
17218  *------------------------------------------------------------*;
17219  /*; *"; *'; */
17220  ;
17221  run;
17222  quit;
17223  /* Reset EM Options */
17224  options formchar="|----|+|---+=|-/\<>*";
17225  options nocenter ls=256 ps=10000;
17226  goptions reset=all device=GIF NODISPLAY;
 
17227  proc sort data=WORK.EM_USER_REPORT;
17228  by ID VIEW;
17229  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:14:29
*------------------------------------------------------------*
17331  %let EMEXCEPTIONSTRING=;
17332  *------------------------------------------------------------*;
17333  * SCORE: Tree2;
17334  *------------------------------------------------------------*;
17335  %let EM_ACTION = SCORE;
17336  %let syscc = 0;
17337  %macro main;
17338
17339    %if %upcase(&EM_ACTION) = CREATE %then %do;
17340      filename temp catalog 'sashelp.emmodl.tree_create.source';
17341      %include temp;
17342      filename temp;
17343
17344      %em_tree_create;
17345    %end;
17346
17347     %else
17348     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17349
17350         filename temp catalog 'sashelp.emmodl.tree_train.source';
17351         %include temp;
17352         filename temp;
17353         %em_tree_train;
17354     %end;
17355
17356    %else
17357    %if %upcase(&EM_ACTION) = SCORE %then %do;
17358      filename temp catalog 'sashelp.emmodl.tree_score.source';
17359      %include temp;
17360      filename temp;
17361
17362      %em_tree_score;
17363
17364    %end;
17365
17366    %else
17367    %if %upcase(&EM_ACTION) = REPORT %then %do;
17368
17369         filename temp catalog 'sashelp.emmodl.tree_report.source';
17370         %include temp;
17371         filename temp;
17372
17373         %em_tree_report;
17374     %end;
17375
17376    %else
17377    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17378
17379         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17380         %include temp;
17381         filename temp;
17382         %EM_TREE_OPENTREEVIEWER;
17383
17384     %end;
17385
17386    %else
17387    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17388
17389         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17390         %include temp;
17391         filename temp;
17392         %EM_TREE_CLOSETREEVIEWER;
17393
17394     %end;
17395
17396
17397     %doendm:
17398  %mend main;
17399
17400  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17402 +%macro em_tree_score;
17404 +   /* determine if multiple targets will be processed */
17405 +   %let em_tree_multipleTargets=N;
17406 +   %let em_tree_numTarget=1;
17407 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17408 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17409 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17410 +         %let em_tree_multipleTargets=N;
17411 +      %end;
17412 +      %else %do;
17413 +         /* create macro array of targets  */
17414 +         data _null_;
17415 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17416 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17417 +           if eof then
17418 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17419 +        run;
17421 +        %if &em_tree_numTarget gt 1 %then %do;
17422 +           %let em_tree_multipleTargets=Y;
17423 +        %end;
17424 +      %end;
17425 +   %end;
17427 +   /* build flow and publish scoring code */
17428 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17429 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17431 +   filename treeflow "&EM_USER_TREEFLOW";
17432 +   filename treepub "&EM_USER_TREEPUBLISH";
17434 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17435 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17437 +   %em_copyfile(infref=treeflow, outfref=flowref);
17438 +   %em_copyfile(infref=treepub, outfref=pubref);
17440 +   filename treeflow;
17441 +   filename treepub;
17443 +   /* if priors are used, add code to generate unadjusted residuals in export */
17444 +   %let useAdjPriors = N;
17445 +   data _null_;
17446 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17447 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17448 +   run;
17449 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17450 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17451 +      %include temp;
17452 +      filename temp;
17454 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17455 +      filename adjref "&EM_USER_adjResidualCode";
17456 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17458 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17460 +      filename adjref;
17461 +   %end;
17463 +   /* LEAF */
17464 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17465 +      data _null_;
17466 +        file flowref mod;
17467 +        put 'drop _LEAF_;';
17468 +      run;
17470 +      data _null_;
17471 +        file pubref mod;
17472 +        put 'drop _LEAF_;';
17473 +      run;
17475 +   %end;
17477 +   filename flowref;
17478 +   filename pubref;
17480 +   /* em_metachange code */
17481 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17482 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17483 +   %end;
17485 +   /* variable selection based on importance stat    */
17486 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17487 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17488 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17489 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17490 +     %let obs = %sysfunc(fetch(&dsid));
17491 +     %do %while(&obs=0);
17492 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17493 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17494 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17495 +       %let obs = %sysfunc(fetch(&dsid));
17496 +     %end;
17497 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17498 +   %end;
17500 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17501 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17502 +    %let tree_pred_vars = ;
17503 +    %let tree_pred_lvl =;
17504 +    %let numpred= 0;
17506 +    data _null_;
17507 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17508 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17509 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17510 +     if eof then
17511 +       call symput('numpred', strip(put(_N_, BEST.)));
17512 +    run;
17513 +   %end;
17515 +   %if &numpred ne 0 %then %do;
17516 +    %do i=1 %to &numpred;
17517 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17518 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17519 +    %end;
17520 +   %end;
17522 +   /* determine if multiple targets will be processed */
17523 +   %let em_tree_multipleTargets=N;
17524 +   %let em_tree_numTarget=1;
17525 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17526 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17527 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17528 +         %let em_tree_multipleTargets=N;
17529 +      %end;
17530 +      %else %do;
17531 +        data _null_;
17532 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17533 +          if eof then
17534 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17535 +        run;
17537 +        %if &em_tree_numTarget gt 1 %then %do;
17538 +           %let em_tree_multipleTargets=Y;
17539 +        %end;
17540 +     %end;
17541 +   %end;
17543 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17544 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17546 +      /* variable importance */
17547 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17548 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17550 +         %let validexist=0;
17551 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17552 +           %let validexist=1;
17553 +         %end;
17555 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17556 +         /* and the columns may not be generated                                                                                 */
17557 +         %let em_tree_cvexists=;
17558 +         %let em_tree_surrexists=.;
17559 +         data _null_;
17560 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17561 +            if eof then do ;
17562 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17563 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17564 +            end;
17565 +         run;
17567 +         data &EM_USER_OUTIMPORT;
17568 +            set &EM_USER_OUTIMPORT;
17570 +            /* format columns based on Precison value specified */
17571 +            format importance 15.&EM_PROPERTY_PRECISION
17572 +                 %if &validexist %then %do;
17573 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17574 +                 %end;
17575 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17576 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17577 +                 %end;
17578 +            ;
17579 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17580 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17581 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17582 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17583 +                 %if "&em_tree_surrexists" ne "" %then %do;
17584 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17585 +                 %end;
17586 +                 %if &validexist %then %do;
17587 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17588 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17589 +                 %end;
17590 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17591 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17592 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17593 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17594 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17595 +                 %end;
17596 +            ;
17597 +         run;
17599 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17600 +      %end;
17601 +   %end;
17603 +   %doendm:
17604 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:28,
      Create Time=23Nov2023:22:14:28
 
NOTE: 550 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:28,
      Create Time=23Nov2023:22:14:28
 
NOTE: 470 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=27486,
      Last Modified=23Nov2023:22:14:28,
      Create Time=23Nov2023:22:14:28
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23913,
      Last Modified=23Nov2023:22:14:28,
      Create Time=23Nov2023:22:14:28
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 42 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 42 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 43 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 43 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 44 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 45 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 47 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 47 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 49 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 49 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 50 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 51 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 51 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 52 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 52 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 53 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 53 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 54 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 54 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 55 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 55 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 56 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 57 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 57 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 58 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 58 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 59 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 59 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 61 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 61 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 62 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 62 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 63 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 64 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 64 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 66 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 66 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 67 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 67 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 68 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 68 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 69 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 69 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 70 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 70 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 71 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 71 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 72 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 73 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 73 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 74 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 75 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 75 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 76 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 76 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 77 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 77 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 78 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 78 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 79 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 79 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 80 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 80 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 81 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 81 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 82 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 82 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 83 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 83 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 84 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 84 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 85 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 85 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 86 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 86 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 87 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 87 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 88 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 88 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 89 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 90 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 90 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 91 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 91 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 92 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 92 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 93 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 93 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 94 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 94 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 95 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 95 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 96 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 96 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 97 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 97 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 98 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 98 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 99 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 99 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 100 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 100 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 101 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 101 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 102 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 102 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 103 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 103 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 104 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 104 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 105 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 105 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 106 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 106 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 107 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE2_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 100 observations read from the data set EMWS3.TREE2_OUTIMPORT.
NOTE: The data set EMWS3.TREE2_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
17605
17606  *------------------------------------------------------------*;
17607  * End SCORE: Tree2;
17608  *------------------------------------------------------------*;
 
17609  proc sort data=WORK.EM_METACHANGE;
17610  by key uname;
17611  run;
 
NOTE: There were 107 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 107 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17612  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\CDELTA_TRAIN.sas";
17613  data _null_;
17614  file x;
17615  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17616  put 'ROLE = "ASSESS";';
17617  put 'end;';
17618  put 'else ';
17619  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17620  put 'ROLE = "ASSESS";';
17621  put 'end;';
17622  put 'else ';
17623  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17624  put 'ROLE = "ASSESS";';
17625  put 'end;';
17626  put 'else ';
17627  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17628  put 'ROLE = "ASSESS";';
17629  put 'end;';
17630  put 'else ';
17631  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17632  put 'ROLE = "ASSESS";';
17633  put 'end;';
17634  put 'else ';
17635  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17636  put 'ROLE = "ASSESS";';
17637  put 'end;';
17638  put 'else ';
17639  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17640  put 'ROLE = "ASSESS";';
17641  put 'end;';
17642  put 'else ';
17643  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17644  put 'ROLE = "ASSESS";';
17645  put 'end;';
17646  put 'else ';
17647  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17648  put 'ROLE = "ASSESS";';
17649  put 'end;';
17650  put 'else ';
17651  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17652  put 'ROLE = "ASSESS";';
17653  put 'end;';
17654  put 'else ';
17655  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17656  put 'ROLE = "ASSESS";';
17657  put 'end;';
17658  put 'else ';
17659  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17660  put 'ROLE = "ASSESS";';
17661  put 'end;';
17662  put 'else ';
17663  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD1" then do;';
17664  put 'ROLE = "REJECTED";';
17665  put 'end;';
17666  put 'else ';
17667  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD100" then do;';
17668  put 'ROLE = "REJECTED";';
17669  put 'end;';
17670  put 'else ';
17671  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD11" then do;';
17672  put 'ROLE = "REJECTED";';
17673  put 'end;';
17674  put 'else ';
17675  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD13" then do;';
17676  put 'ROLE = "REJECTED";';
17677  put 'end;';
17678  put 'else ';
17679  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD14" then do;';
17680  put 'ROLE = "REJECTED";';
17681  put 'end;';
17682  put 'else ';
17683  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD15" then do;';
17684  put 'ROLE = "REJECTED";';
17685  put 'end;';
17686  put 'else ';
17687  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD16" then do;';
17688  put 'ROLE = "REJECTED";';
17689  put 'end;';
17690  put 'else ';
17691  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD17" then do;';
17692  put 'ROLE = "REJECTED";';
17693  put 'end;';
17694  put 'else ';
17695  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD18" then do;';
17696  put 'ROLE = "REJECTED";';
17697  put 'end;';
17698  put 'else ';
17699  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD19" then do;';
17700  put 'ROLE = "REJECTED";';
17701  put 'end;';
17702  put 'else ';
17703  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD20" then do;';
17704  put 'ROLE = "REJECTED";';
17705  put 'end;';
17706  put 'else ';
17707  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD21" then do;';
17708  put 'ROLE = "REJECTED";';
17709  put 'end;';
17710  put 'else ';
17711  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD22" then do;';
17712  put 'ROLE = "REJECTED";';
17713  put 'end;';
17714  put 'else ';
17715  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD23" then do;';
17716  put 'ROLE = "REJECTED";';
17717  put 'end;';
17718  put 'else ';
17719  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD24" then do;';
17720  put 'ROLE = "REJECTED";';
17721  put 'end;';
17722  put 'else ';
17723  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD25" then do;';
17724  put 'ROLE = "REJECTED";';
17725  put 'end;';
17726  put 'else ';
17727  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD26" then do;';
17728  put 'ROLE = "REJECTED";';
17729  put 'end;';
17730  put 'else ';
17731  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD27" then do;';
17732  put 'ROLE = "REJECTED";';
17733  put 'end;';
17734  put 'else ';
17735  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD28" then do;';
17736  put 'ROLE = "REJECTED";';
17737  put 'end;';
17738  put 'else ';
17739  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD29" then do;';
17740  put 'ROLE = "REJECTED";';
17741  put 'end;';
17742  put 'else ';
17743  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD3" then do;';
17744  put 'ROLE = "REJECTED";';
17745  put 'end;';
17746  put 'else ';
17747  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD30" then do;';
17748  put 'ROLE = "REJECTED";';
17749  put 'end;';
17750  put 'else ';
17751  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD31" then do;';
17752  put 'ROLE = "REJECTED";';
17753  put 'end;';
17754  put 'else ';
17755  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD32" then do;';
17756  put 'ROLE = "REJECTED";';
17757  put 'end;';
17758  put 'else ';
17759  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD33" then do;';
17760  put 'ROLE = "REJECTED";';
17761  put 'end;';
17762  put 'else ';
17763  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD34" then do;';
17764  put 'ROLE = "REJECTED";';
17765  put 'end;';
17766  put 'else ';
17767  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD35" then do;';
17768  put 'ROLE = "REJECTED";';
17769  put 'end;';
17770  put 'else ';
17771  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD36" then do;';
17772  put 'ROLE = "REJECTED";';
17773  put 'end;';
17774  put 'else ';
17775  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD37" then do;';
17776  put 'ROLE = "REJECTED";';
17777  put 'end;';
17778  put 'else ';
17779  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD38" then do;';
17780  put 'ROLE = "REJECTED";';
17781  put 'end;';
17782  put 'else ';
17783  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD39" then do;';
17784  put 'ROLE = "REJECTED";';
17785  put 'end;';
17786  put 'else ';
17787  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD40" then do;';
17788  put 'ROLE = "REJECTED";';
17789  put 'end;';
17790  put 'else ';
17791  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD41" then do;';
17792  put 'ROLE = "REJECTED";';
17793  put 'end;';
17794  put 'else ';
17795  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD42" then do;';
17796  put 'ROLE = "REJECTED";';
17797  put 'end;';
17798  put 'else ';
17799  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD43" then do;';
17800  put 'ROLE = "REJECTED";';
17801  put 'end;';
17802  put 'else ';
17803  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD44" then do;';
17804  put 'ROLE = "REJECTED";';
17805  put 'end;';
17806  put 'else ';
17807  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD45" then do;';
17808  put 'ROLE = "REJECTED";';
17809  put 'end;';
17810  put 'else ';
17811  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD46" then do;';
17812  put 'ROLE = "REJECTED";';
17813  put 'end;';
17814  put 'else ';
17815  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD47" then do;';
17816  put 'ROLE = "REJECTED";';
17817  put 'end;';
17818  put 'else ';
17819  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD48" then do;';
17820  put 'ROLE = "REJECTED";';
17821  put 'end;';
17822  put 'else ';
17823  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD49" then do;';
17824  put 'ROLE = "REJECTED";';
17825  put 'end;';
17826  put 'else ';
17827  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD50" then do;';
17828  put 'ROLE = "REJECTED";';
17829  put 'end;';
17830  put 'else ';
17831  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD51" then do;';
17832  put 'ROLE = "REJECTED";';
17833  put 'end;';
17834  put 'else ';
17835  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD52" then do;';
17836  put 'ROLE = "REJECTED";';
17837  put 'end;';
17838  put 'else ';
17839  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD53" then do;';
17840  put 'ROLE = "REJECTED";';
17841  put 'end;';
17842  put 'else ';
17843  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD54" then do;';
17844  put 'ROLE = "REJECTED";';
17845  put 'end;';
17846  put 'else ';
17847  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD55" then do;';
17848  put 'ROLE = "REJECTED";';
17849  put 'end;';
17850  put 'else ';
17851  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD56" then do;';
17852  put 'ROLE = "REJECTED";';
17853  put 'end;';
17854  put 'else ';
17855  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD57" then do;';
17856  put 'ROLE = "REJECTED";';
17857  put 'end;';
17858  put 'else ';
17859  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD58" then do;';
17860  put 'ROLE = "REJECTED";';
17861  put 'end;';
17862  put 'else ';
17863  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD59" then do;';
17864  put 'ROLE = "REJECTED";';
17865  put 'end;';
17866  put 'else ';
17867  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD60" then do;';
17868  put 'ROLE = "REJECTED";';
17869  put 'end;';
17870  put 'else ';
17871  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD61" then do;';
17872  put 'ROLE = "REJECTED";';
17873  put 'end;';
17874  put 'else ';
17875  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD62" then do;';
17876  put 'ROLE = "REJECTED";';
17877  put 'end;';
17878  put 'else ';
17879  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD63" then do;';
17880  put 'ROLE = "REJECTED";';
17881  put 'end;';
17882  put 'else ';
17883  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD64" then do;';
17884  put 'ROLE = "REJECTED";';
17885  put 'end;';
17886  put 'else ';
17887  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD65" then do;';
17888  put 'ROLE = "REJECTED";';
17889  put 'end;';
17890  put 'else ';
17891  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD66" then do;';
17892  put 'ROLE = "REJECTED";';
17893  put 'end;';
17894  put 'else ';
17895  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD67" then do;';
17896  put 'ROLE = "REJECTED";';
17897  put 'end;';
17898  put 'else ';
17899  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD68" then do;';
17900  put 'ROLE = "REJECTED";';
17901  put 'end;';
17902  put 'else ';
17903  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD69" then do;';
17904  put 'ROLE = "REJECTED";';
17905  put 'end;';
17906  put 'else ';
17907  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD7" then do;';
17908  put 'ROLE = "REJECTED";';
17909  put 'end;';
17910  put 'else ';
17911  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD70" then do;';
17912  put 'ROLE = "REJECTED";';
17913  put 'end;';
17914  put 'else ';
17915  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD71" then do;';
17916  put 'ROLE = "REJECTED";';
17917  put 'end;';
17918  put 'else ';
17919  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD72" then do;';
17920  put 'ROLE = "REJECTED";';
17921  put 'end;';
17922  put 'else ';
17923  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD73" then do;';
17924  put 'ROLE = "REJECTED";';
17925  put 'end;';
17926  put 'else ';
17927  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD74" then do;';
17928  put 'ROLE = "REJECTED";';
17929  put 'end;';
17930  put 'else ';
17931  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD75" then do;';
17932  put 'ROLE = "REJECTED";';
17933  put 'end;';
17934  put 'else ';
17935  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD76" then do;';
17936  put 'ROLE = "REJECTED";';
17937  put 'end;';
17938  put 'else ';
17939  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD77" then do;';
17940  put 'ROLE = "REJECTED";';
17941  put 'end;';
17942  put 'else ';
17943  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD78" then do;';
17944  put 'ROLE = "REJECTED";';
17945  put 'end;';
17946  put 'else ';
17947  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD79" then do;';
17948  put 'ROLE = "REJECTED";';
17949  put 'end;';
17950  put 'else ';
17951  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD8" then do;';
17952  put 'ROLE = "REJECTED";';
17953  put 'end;';
17954  put 'else ';
17955  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD80" then do;';
17956  put 'ROLE = "REJECTED";';
17957  put 'end;';
17958  put 'else ';
17959  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD81" then do;';
17960  put 'ROLE = "REJECTED";';
17961  put 'end;';
17962  put 'else ';
17963  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD82" then do;';
17964  put 'ROLE = "REJECTED";';
17965  put 'end;';
17966  put 'else ';
17967  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD83" then do;';
17968  put 'ROLE = "REJECTED";';
17969  put 'end;';
17970  put 'else ';
17971  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD84" then do;';
17972  put 'ROLE = "REJECTED";';
17973  put 'end;';
17974  put 'else ';
17975  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD85" then do;';
17976  put 'ROLE = "REJECTED";';
17977  put 'end;';
17978  put 'else ';
17979  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD86" then do;';
17980  put 'ROLE = "REJECTED";';
17981  put 'end;';
17982  put 'else ';
17983  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD87" then do;';
17984  put 'ROLE = "REJECTED";';
17985  put 'end;';
17986  put 'else ';
17987  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD88" then do;';
17988  put 'ROLE = "REJECTED";';
17989  put 'end;';
17990  put 'else ';
17991  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD89" then do;';
17992  put 'ROLE = "REJECTED";';
17993  put 'end;';
17994  put 'else ';
17995  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD9" then do;';
17996  put 'ROLE = "REJECTED";';
17997  put 'end;';
17998  put 'else ';
17999  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD90" then do;';
18000  put 'ROLE = "REJECTED";';
18001  put 'end;';
18002  put 'else ';
18003  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD91" then do;';
18004  put 'ROLE = "REJECTED";';
18005  put 'end;';
18006  put 'else ';
18007  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD92" then do;';
18008  put 'ROLE = "REJECTED";';
18009  put 'end;';
18010  put 'else ';
18011  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD93" then do;';
18012  put 'ROLE = "REJECTED";';
18013  put 'end;';
18014  put 'else ';
18015  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD94" then do;';
18016  put 'ROLE = "REJECTED";';
18017  put 'end;';
18018  put 'else ';
18019  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD95" then do;';
18020  put 'ROLE = "REJECTED";';
18021  put 'end;';
18022  put 'else ';
18023  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD96" then do;';
18024  put 'ROLE = "REJECTED";';
18025  put 'end;';
18026  put 'else ';
18027  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD97" then do;';
18028  put 'ROLE = "REJECTED";';
18029  put 'end;';
18030  put 'else ';
18031  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD98" then do;';
18032  put 'ROLE = "REJECTED";';
18033  put 'end;';
18034  put 'else ';
18035  put 'if upcase(NAME) = "TEXTCLUSTER5_SVD99" then do;';
18036  put 'ROLE = "REJECTED";';
18037  put 'end;';
18038  put 'else ';
18039  put 'if upcase(NAME) = "_NODE_" then do;';
18040  put 'ROLE = "SEGMENT";';
18041  put 'LEVEL = "NOMINAL";';
18042  put 'end;';
18043  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:14:31,
      Create Time=19Nov2023:18:20:39
 
NOTE: 428 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18044  filename x;
NOTE: Fileref X has been deassigned.
 
18045  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas";
18046  *------------------------------------------------------------*;
18047  * Tree2: Scoring DATA data;
18048  *------------------------------------------------------------*;
18049  data EMWS3.Tree2_TRAIN
18050  / view=EMWS3.Tree2_TRAIN
18051  ;
18052  set EMWS3.TextCluster5_TRAIN
18053  ;
18054  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas.
18055 +****************************************************************;
18056 +******             DECISION TREE SCORING CODE             ******;
18057 +****************************************************************;
18058 +
18059 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18060 +LENGTH F_Category  $   22;
18061 +LENGTH I_Category  $   22;
18062 +LENGTH U_Category  $   22;
18063 +LENGTH _WARN_  $    4;
18064 +
18065 +******              LABELS FOR NEW VARIABLES              ******;
18066 +label _NODE_ = 'Node' ;
18067 +label _LEAF_ = 'Leaf' ;
18068 +label P_CategoryHR = 'Predicted: Category=HR' ;
18069 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18070 +label P_CategoryINFORMATION_TECHNOLOGY =
18071 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18072 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18073 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18074 +label P_CategoryBUSINESS_DEVELOPMENT =
18075 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18076 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18077 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18078 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18079 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18080 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18081 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18082 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18083 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18084 +label Q_CategoryINFORMATION_TECHNOLOGY =
18085 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18086 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18087 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18088 +label Q_CategoryBUSINESS_DEVELOPMENT =
18089 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18090 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18091 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18092 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18093 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18094 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18095 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18096 +label V_CategoryHR = 'Validated: Category=HR' ;
18097 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18098 +label V_CategoryINFORMATION_TECHNOLOGY =
18099 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18100 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18101 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18102 +label V_CategoryBUSINESS_DEVELOPMENT =
18103 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18104 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18105 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18106 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18107 +label V_CategorySALES = 'Validated: Category=SALES' ;
18108 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18109 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18110 +label R_CategoryHR = 'Residual: Category=HR' ;
18111 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18112 +label R_CategoryINFORMATION_TECHNOLOGY =
18113 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18114 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18115 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18116 +label R_CategoryBUSINESS_DEVELOPMENT =
18117 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18118 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18119 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18120 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18121 +label R_CategorySALES = 'Residual: Category=SALES' ;
18122 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18123 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18124 +label F_Category = 'From: Category' ;
18125 +label I_Category = 'Into: Category' ;
18126 +label U_Category = 'Unnormalized Into: Category' ;
18127 +label _WARN_ = 'Warnings' ;
18128 +
18129 +
18130 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18131 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18132 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18133 +
18134 +
18135 +_ARBFMT_22 = PUT( Category , $22.);
18136 + %DMNORMCP( _ARBFMT_22, F_Category );
18137 +
18138 +******             ASSIGN OBSERVATION TO NODE             ******;
18139 +IF  NOT MISSING(TextCluster5_SVD4 ) AND
18140 +  TextCluster5_SVD4  <    -0.17977935490765 THEN DO;
18141 +  _NODE_  =                    2;
18142 +  _LEAF_  =                    1;
18143 +  P_CategoryHR  =     0.74242424242424;
18144 +  P_CategoryDESIGNER  =                    0;
18145 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
18146 +  P_CategoryTEACHER  =                    0;
18147 +  P_CategoryADVOCATE  =     0.06060606060606;
18148 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
18149 +  P_CategoryHEALTHCARE  =     0.06060606060606;
18150 +  P_CategoryFITNESS  =     0.01515151515151;
18151 +  P_CategoryOTHER  =     0.01515151515151;
18152 +  P_CategorySALES  =     0.03030303030303;
18153 +  P_CategoryCONSULTANT  =     0.03030303030303;
18154 +  P_CategoryDIGITAL_MEDIA  =                    0;
18155 +  Q_CategoryHR  =     0.74242424242424;
18156 +  Q_CategoryDESIGNER  =                    0;
18157 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
18158 +  Q_CategoryTEACHER  =                    0;
18159 +  Q_CategoryADVOCATE  =     0.06060606060606;
18160 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
18161 +  Q_CategoryHEALTHCARE  =     0.06060606060606;
18162 +  Q_CategoryFITNESS  =     0.01515151515151;
18163 +  Q_CategoryOTHER  =     0.01515151515151;
18164 +  Q_CategorySALES  =     0.03030303030303;
18165 +  Q_CategoryCONSULTANT  =     0.03030303030303;
18166 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18167 +  V_CategoryHR  =     0.66666666666666;
18168 +  V_CategoryDESIGNER  =                    0;
18169 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.04444444444444;
18170 +  V_CategoryTEACHER  =                    0;
18171 +  V_CategoryADVOCATE  =     0.04444444444444;
18172 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18173 +  V_CategoryHEALTHCARE  =     0.08888888888888;
18174 +  V_CategoryFITNESS  =     0.02222222222222;
18175 +  V_CategoryOTHER  =     0.06666666666666;
18176 +  V_CategorySALES  =                    0;
18177 +  V_CategoryCONSULTANT  =     0.04444444444444;
18178 +  V_CategoryDIGITAL_MEDIA  =                    0;
18179 +  I_Category  = 'HR' ;
18180 +  U_Category  = 'HR' ;
18181 +  END;
18182 +ELSE DO;
18183 +  IF  NOT MISSING(TextCluster5_SVD5 ) AND
18184 +    TextCluster5_SVD5  <    -0.27129238051774 THEN DO;
18185 +    _NODE_  =                    6;
18186 +    _LEAF_  =                    2;
18187 +    P_CategoryHR  =                    0;
18188 +    P_CategoryDESIGNER  =                0.025;
18189 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18190 +    P_CategoryTEACHER  =                0.825;
18191 +    P_CategoryADVOCATE  =                 0.05;
18192 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18193 +    P_CategoryHEALTHCARE  =                    0;
18194 +    P_CategoryFITNESS  =                  0.1;
18195 +    P_CategoryOTHER  =                    0;
18196 +    P_CategorySALES  =                    0;
18197 +    P_CategoryCONSULTANT  =                    0;
18198 +    P_CategoryDIGITAL_MEDIA  =                    0;
18199 +    Q_CategoryHR  =                    0;
18200 +    Q_CategoryDESIGNER  =                0.025;
18201 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18202 +    Q_CategoryTEACHER  =                0.825;
18203 +    Q_CategoryADVOCATE  =                 0.05;
18204 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18205 +    Q_CategoryHEALTHCARE  =                    0;
18206 +    Q_CategoryFITNESS  =                  0.1;
18207 +    Q_CategoryOTHER  =                    0;
18208 +    Q_CategorySALES  =                    0;
18209 +    Q_CategoryCONSULTANT  =                    0;
18210 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18211 +    V_CategoryHR  =                    0;
18212 +    V_CategoryDESIGNER  =     0.04878048780487;
18213 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18214 +    V_CategoryTEACHER  =     0.56097560975609;
18215 +    V_CategoryADVOCATE  =     0.07317073170731;
18216 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18217 +    V_CategoryHEALTHCARE  =     0.04878048780487;
18218 +    V_CategoryFITNESS  =     0.09756097560975;
18219 +    V_CategoryOTHER  =     0.14634146341463;
18220 +    V_CategorySALES  =                    0;
18221 +    V_CategoryCONSULTANT  =     0.02439024390243;
18222 +    V_CategoryDIGITAL_MEDIA  =                    0;
18223 +    I_Category  = 'TEACHER' ;
18224 +    U_Category  = 'TEACHER' ;
18225 +    END;
18226 +  ELSE DO;
18227 +    IF  NOT MISSING(TextCluster5_SVD2 ) AND
18228 +           0.1354019154475 <= TextCluster5_SVD2  THEN DO;
18229 +      IF  NOT MISSING(TextCluster5_SVD10 ) AND
18230 +        TextCluster5_SVD10  <    -0.11566608126712 THEN DO;
18231 +        _NODE_  =                   16;
18232 +        _LEAF_  =                    8;
18233 +        P_CategoryHR  =                    0;
18234 +        P_CategoryDESIGNER  =                    0;
18235 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18236 +        P_CategoryTEACHER  =                    0;
18237 +        P_CategoryADVOCATE  =                    0;
18238 +        P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18239 +        P_CategoryHEALTHCARE  =                    0;
18240 +        P_CategoryFITNESS  =                    0;
18241 +        P_CategoryOTHER  =                    0;
18242 +        P_CategorySALES  =                    0;
18243 +        P_CategoryCONSULTANT  =                0.125;
18244 +        P_CategoryDIGITAL_MEDIA  =                0.875;
18245 +        Q_CategoryHR  =                    0;
18246 +        Q_CategoryDESIGNER  =                    0;
18247 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18248 +        Q_CategoryTEACHER  =                    0;
18249 +        Q_CategoryADVOCATE  =                    0;
18250 +        Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18251 +        Q_CategoryHEALTHCARE  =                    0;
18252 +        Q_CategoryFITNESS  =                    0;
18253 +        Q_CategoryOTHER  =                    0;
18254 +        Q_CategorySALES  =                    0;
18255 +        Q_CategoryCONSULTANT  =                0.125;
18256 +        Q_CategoryDIGITAL_MEDIA  =                0.875;
18257 +        V_CategoryHR  =                    0;
18258 +        V_CategoryDESIGNER  =                    0;
18259 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.28571428571428;
18260 +        V_CategoryTEACHER  =                    0;
18261 +        V_CategoryADVOCATE  =                    0;
18262 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18263 +        V_CategoryHEALTHCARE  =                    0;
18264 +        V_CategoryFITNESS  =                    0;
18265 +        V_CategoryOTHER  =                    0;
18266 +        V_CategorySALES  =     0.14285714285714;
18267 +        V_CategoryCONSULTANT  =                    0;
18268 +        V_CategoryDIGITAL_MEDIA  =     0.57142857142857;
18269 +        I_Category  = 'DIGITAL-MEDIA' ;
18270 +        U_Category  = 'DIGITAL-MEDIA' ;
18271 +        END;
18272 +      ELSE DO;
18273 +        _NODE_  =                   17;
18274 +        _LEAF_  =                    9;
18275 +        P_CategoryHR  =                    0;
18276 +        P_CategoryDESIGNER  =     0.05882352941176;
18277 +        P_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
18278 +        P_CategoryTEACHER  =                    0;
18279 +        P_CategoryADVOCATE  =     0.01960784313725;
18280 +        P_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
18281 +        P_CategoryHEALTHCARE  =     0.02941176470588;
18282 +        P_CategoryFITNESS  =                    0;
18283 +        P_CategoryOTHER  =     0.07843137254901;
18284 +        P_CategorySALES  =                    0;
18285 +        P_CategoryCONSULTANT  =      0.2156862745098;
18286 +        P_CategoryDIGITAL_MEDIA  =      0.0392156862745;
18287 +        Q_CategoryHR  =                    0;
18288 +        Q_CategoryDESIGNER  =     0.05882352941176;
18289 +        Q_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
18290 +        Q_CategoryTEACHER  =                    0;
18291 +        Q_CategoryADVOCATE  =     0.01960784313725;
18292 +        Q_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
18293 +        Q_CategoryHEALTHCARE  =     0.02941176470588;
18294 +        Q_CategoryFITNESS  =                    0;
18295 +        Q_CategoryOTHER  =     0.07843137254901;
18296 +        Q_CategorySALES  =                    0;
18297 +        Q_CategoryCONSULTANT  =      0.2156862745098;
18298 +        Q_CategoryDIGITAL_MEDIA  =      0.0392156862745;
18299 +        V_CategoryHR  =                    0;
18300 +        V_CategoryDESIGNER  =              0.09375;
18301 +        V_CategoryINFORMATION_TECHNOLOGY  =               0.4375;
18302 +        V_CategoryTEACHER  =                    0;
18303 +        V_CategoryADVOCATE  =             0.015625;
18304 +        V_CategoryBUSINESS_DEVELOPMENT  =             0.046875;
18305 +        V_CategoryHEALTHCARE  =               0.0625;
18306 +        V_CategoryFITNESS  =                    0;
18307 +        V_CategoryOTHER  =             0.078125;
18308 +        V_CategorySALES  =             0.015625;
18309 +        V_CategoryCONSULTANT  =              0.15625;
18310 +        V_CategoryDIGITAL_MEDIA  =              0.09375;
18311 +        I_Category  = 'INFORMATION-TECHNOLOGY' ;
18312 +        U_Category  = 'INFORMATION-TECHNOLOGY' ;
18313 +        END;
18314 +      END;
18315 +    ELSE DO;
18316 +      IF  NOT MISSING(TextCluster5_SVD6 ) AND
18317 +        TextCluster5_SVD6  <    -0.13817520556383 THEN DO;
18318 +        IF  NOT MISSING(TextCluster5_SVD10 ) AND
18319 +          TextCluster5_SVD10  <     0.06439385137476 THEN DO;
18320 +          _NODE_  =                   18;
18321 +          _LEAF_  =                    3;
18322 +          P_CategoryHR  =                    0;
18323 +          P_CategoryDESIGNER  =     0.07142857142857;
18324 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18325 +          P_CategoryTEACHER  =                    0;
18326 +          P_CategoryADVOCATE  =                    0;
18327 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18328 +          P_CategoryHEALTHCARE  =     0.07142857142857;
18329 +          P_CategoryFITNESS  =                    0;
18330 +          P_CategoryOTHER  =                    0;
18331 +          P_CategorySALES  =                    0;
18332 +          P_CategoryCONSULTANT  =                    0;
18333 +          P_CategoryDIGITAL_MEDIA  =     0.85714285714285;
18334 +          Q_CategoryHR  =                    0;
18335 +          Q_CategoryDESIGNER  =     0.07142857142857;
18336 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18337 +          Q_CategoryTEACHER  =                    0;
18338 +          Q_CategoryADVOCATE  =                    0;
18339 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18340 +          Q_CategoryHEALTHCARE  =     0.07142857142857;
18341 +          Q_CategoryFITNESS  =                    0;
18342 +          Q_CategoryOTHER  =                    0;
18343 +          Q_CategorySALES  =                    0;
18344 +          Q_CategoryCONSULTANT  =                    0;
18345 +          Q_CategoryDIGITAL_MEDIA  =     0.85714285714285;
18346 +          V_CategoryHR  =     0.11111111111111;
18347 +          V_CategoryDESIGNER  =                    0;
18348 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18349 +          V_CategoryTEACHER  =                    0;
18350 +          V_CategoryADVOCATE  =                    0;
18351 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18352 +          V_CategoryHEALTHCARE  =                    0;
18353 +          V_CategoryFITNESS  =     0.11111111111111;
18354 +          V_CategoryOTHER  =                    0;
18355 +          V_CategorySALES  =                    0;
18356 +          V_CategoryCONSULTANT  =     0.11111111111111;
18357 +          V_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18358 +          I_Category  = 'DIGITAL-MEDIA' ;
18359 +          U_Category  = 'DIGITAL-MEDIA' ;
18360 +          END;
18361 +        ELSE DO;
18362 +          _NODE_  =                   19;
18363 +          _LEAF_  =                    4;
18364 +          P_CategoryHR  =     0.02777777777777;
18365 +          P_CategoryDESIGNER  =     0.88888888888888;
18366 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18367 +          P_CategoryTEACHER  =                    0;
18368 +          P_CategoryADVOCATE  =                    0;
18369 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18370 +          P_CategoryHEALTHCARE  =                    0;
18371 +          P_CategoryFITNESS  =                    0;
18372 +          P_CategoryOTHER  =                    0;
18373 +          P_CategorySALES  =     0.05555555555555;
18374 +          P_CategoryCONSULTANT  =                    0;
18375 +          P_CategoryDIGITAL_MEDIA  =     0.02777777777777;
18376 +          Q_CategoryHR  =     0.02777777777777;
18377 +          Q_CategoryDESIGNER  =     0.88888888888888;
18378 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18379 +          Q_CategoryTEACHER  =                    0;
18380 +          Q_CategoryADVOCATE  =                    0;
18381 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18382 +          Q_CategoryHEALTHCARE  =                    0;
18383 +          Q_CategoryFITNESS  =                    0;
18384 +          Q_CategoryOTHER  =                    0;
18385 +          Q_CategorySALES  =     0.05555555555555;
18386 +          Q_CategoryCONSULTANT  =                    0;
18387 +          Q_CategoryDIGITAL_MEDIA  =     0.02777777777777;
18388 +          V_CategoryHR  =                    0;
18389 +          V_CategoryDESIGNER  =     0.77272727272727;
18390 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18391 +          V_CategoryTEACHER  =     0.04545454545454;
18392 +          V_CategoryADVOCATE  =                    0;
18393 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18394 +          V_CategoryHEALTHCARE  =                    0;
18395 +          V_CategoryFITNESS  =                    0;
18396 +          V_CategoryOTHER  =     0.04545454545454;
18397 +          V_CategorySALES  =     0.09090909090909;
18398 +          V_CategoryCONSULTANT  =                    0;
18399 +          V_CategoryDIGITAL_MEDIA  =     0.04545454545454;
18400 +          I_Category  = 'DESIGNER' ;
18401 +          U_Category  = 'DESIGNER' ;
18402 +          END;
18403 +        END;
18404 +      ELSE DO;
18405 +        IF  NOT MISSING(TextCluster5_SVD12 ) AND
18406 +          TextCluster5_SVD12  <    -0.11408163089867 THEN DO;
18407 +          _NODE_  =                   20;
18408 +          _LEAF_  =                    5;
18409 +          P_CategoryHR  =                    0;
18410 +          P_CategoryDESIGNER  =                 0.04;
18411 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18412 +          P_CategoryTEACHER  =                    0;
18413 +          P_CategoryADVOCATE  =                 0.16;
18414 +          P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18415 +          P_CategoryHEALTHCARE  =                 0.02;
18416 +          P_CategoryFITNESS  =                  0.7;
18417 +          P_CategoryOTHER  =                 0.04;
18418 +          P_CategorySALES  =                    0;
18419 +          P_CategoryCONSULTANT  =                 0.02;
18420 +          P_CategoryDIGITAL_MEDIA  =                    0;
18421 +          Q_CategoryHR  =                    0;
18422 +          Q_CategoryDESIGNER  =                 0.04;
18423 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18424 +          Q_CategoryTEACHER  =                    0;
18425 +          Q_CategoryADVOCATE  =                 0.16;
18426 +          Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18427 +          Q_CategoryHEALTHCARE  =                 0.02;
18428 +          Q_CategoryFITNESS  =                  0.7;
18429 +          Q_CategoryOTHER  =                 0.04;
18430 +          Q_CategorySALES  =                    0;
18431 +          Q_CategoryCONSULTANT  =                 0.02;
18432 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18433 +          V_CategoryHR  =                    0;
18434 +          V_CategoryDESIGNER  =     0.05263157894736;
18435 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18436 +          V_CategoryTEACHER  =                    0;
18437 +          V_CategoryADVOCATE  =                    0;
18438 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18439 +          V_CategoryHEALTHCARE  =     0.05263157894736;
18440 +          V_CategoryFITNESS  =     0.84210526315789;
18441 +          V_CategoryOTHER  =     0.05263157894736;
18442 +          V_CategorySALES  =                    0;
18443 +          V_CategoryCONSULTANT  =                    0;
18444 +          V_CategoryDIGITAL_MEDIA  =                    0;
18445 +          I_Category  = 'FITNESS' ;
18446 +          U_Category  = 'FITNESS' ;
18447 +          END;
18448 +        ELSE DO;
18449 +          IF  NOT MISSING(TextCluster5_SVD4 ) AND
18450 +                0.23450537484306 <= TextCluster5_SVD4  THEN DO;
18451 +            _NODE_  =                   27;
18452 +            _LEAF_  =                    7;
18453 +            P_CategoryHR  =                    0;
18454 +            P_CategoryDESIGNER  =     0.13333333333333;
18455 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18456 +            P_CategoryTEACHER  =     0.66666666666666;
18457 +            P_CategoryADVOCATE  =                    0;
18458 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18459 +            P_CategoryHEALTHCARE  =     0.06666666666666;
18460 +            P_CategoryFITNESS  =                    0;
18461 +            P_CategoryOTHER  =     0.06666666666666;
18462 +            P_CategorySALES  =                    0;
18463 +            P_CategoryCONSULTANT  =                    0;
18464 +            P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
18465 +            Q_CategoryHR  =                    0;
18466 +            Q_CategoryDESIGNER  =     0.13333333333333;
18467 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18468 +            Q_CategoryTEACHER  =     0.66666666666666;
18469 +            Q_CategoryADVOCATE  =                    0;
18470 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18471 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
18472 +            Q_CategoryFITNESS  =                    0;
18473 +            Q_CategoryOTHER  =     0.06666666666666;
18474 +            Q_CategorySALES  =                    0;
18475 +            Q_CategoryCONSULTANT  =                    0;
18476 +            Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
18477 +            V_CategoryHR  =                    0;
18478 +            V_CategoryDESIGNER  =                    0;
18479 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
18480 +            V_CategoryTEACHER  =     0.33333333333333;
18481 +            V_CategoryADVOCATE  =     0.16666666666666;
18482 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18483 +            V_CategoryHEALTHCARE  =     0.08333333333333;
18484 +            V_CategoryFITNESS  =                    0;
18485 +            V_CategoryOTHER  =     0.08333333333333;
18486 +            V_CategorySALES  =     0.08333333333333;
18487 +            V_CategoryCONSULTANT  =                    0;
18488 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
18489 +            I_Category  = 'TEACHER' ;
18490 +            U_Category  = 'TEACHER' ;
18491 +            END;
18492 +          ELSE DO;
18493 +            _NODE_  =                   26;
18494 +            _LEAF_  =                    6;
18495 +            P_CategoryHR  =     0.01457725947521;
18496 +            P_CategoryDESIGNER  =     0.02623906705539;
18497 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
18498 +            P_CategoryTEACHER  =      0.0204081632653;
18499 +            P_CategoryADVOCATE  =     0.11953352769679;
18500 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
18501 +            P_CategoryHEALTHCARE  =     0.13702623906705;
18502 +            P_CategoryFITNESS  =     0.05247813411078;
18503 +            P_CategoryOTHER  =     0.14868804664723;
18504 +            P_CategorySALES  =     0.15743440233236;
18505 +            P_CategoryCONSULTANT  =     0.09037900874635;
18506 +            P_CategoryDIGITAL_MEDIA  =     0.06413994169096;
18507 +            Q_CategoryHR  =     0.01457725947521;
18508 +            Q_CategoryDESIGNER  =     0.02623906705539;
18509 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
18510 +            Q_CategoryTEACHER  =      0.0204081632653;
18511 +            Q_CategoryADVOCATE  =     0.11953352769679;
18512 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
18513 +            Q_CategoryHEALTHCARE  =     0.13702623906705;
18514 +            Q_CategoryFITNESS  =     0.05247813411078;
18515 +            Q_CategoryOTHER  =     0.14868804664723;
18516 +            Q_CategorySALES  =     0.15743440233236;
18517 +            Q_CategoryCONSULTANT  =     0.09037900874635;
18518 +            Q_CategoryDIGITAL_MEDIA  =     0.06413994169096;
18519 +            V_CategoryHR  =     0.00537634408602;
18520 +            V_CategoryDESIGNER  =      0.0268817204301;
18521 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
18522 +            V_CategoryTEACHER  =     0.01612903225806;
18523 +            V_CategoryADVOCATE  =     0.14516129032258;
18524 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17204301075268;
18525 +            V_CategoryHEALTHCARE  =     0.11290322580645;
18526 +            V_CategoryFITNESS  =     0.06989247311827;
18527 +            V_CategoryOTHER  =     0.11290322580645;
18528 +            V_CategorySALES  =     0.15591397849462;
18529 +            V_CategoryCONSULTANT  =     0.11290322580645;
18530 +            V_CategoryDIGITAL_MEDIA  =     0.05376344086021;
18531 +            I_Category  = 'SALES' ;
18532 +            U_Category  = 'SALES' ;
18533 +            END;
18534 +          END;
18535 +        END;
18536 +      END;
18537 +    END;
18538 +  END;
18539 +
18540 +*****  RESIDUALS R_ *************;
18541 +IF  F_Category  NE 'HR'
18542 +AND F_Category  NE 'DESIGNER'
18543 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18544 +AND F_Category  NE 'TEACHER'
18545 +AND F_Category  NE 'ADVOCATE'
18546 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18547 +AND F_Category  NE 'HEALTHCARE'
18548 +AND F_Category  NE 'FITNESS'
18549 +AND F_Category  NE 'OTHER'
18550 +AND F_Category  NE 'SALES'
18551 +AND F_Category  NE 'CONSULTANT'
18552 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18553 +        R_CategoryHR  = .;
18554 +        R_CategoryDESIGNER  = .;
18555 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18556 +        R_CategoryTEACHER  = .;
18557 +        R_CategoryADVOCATE  = .;
18558 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18559 +        R_CategoryHEALTHCARE  = .;
18560 +        R_CategoryFITNESS  = .;
18561 +        R_CategoryOTHER  = .;
18562 +        R_CategorySALES  = .;
18563 +        R_CategoryCONSULTANT  = .;
18564 +        R_CategoryDIGITAL_MEDIA  = .;
18565 + END;
18566 + ELSE DO;
18567 +       R_CategoryHR  =  -P_CategoryHR ;
18568 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18569 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18570 +         ;
18571 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18572 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18573 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18574 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18575 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18576 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18577 +       R_CategorySALES  =  -P_CategorySALES ;
18578 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18579 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18580 +       SELECT( F_Category  );
18581 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18582 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18583 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18584 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18585 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18586 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18587 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18588 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18589 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18590 +          +1;
18591 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18592 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18593 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18594 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18595 +          +1;
18596 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18597 +        R_CategoryDIGITAL_MEDIA  +1;
18598 +       END;
18599 + END;
18600 +
18601 +****************************************************************;
18602 +******          END OF DECISION TREE SCORING CODE         ******;
18603 +****************************************************************;
18604 +
18605 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18606  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18607  quit;
18608  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18609  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas";
18610  *------------------------------------------------------------*;
18611  * Tree2: Scoring VALIDATE data;
18612  *------------------------------------------------------------*;
18613  data EMWS3.Tree2_VALIDATE
18614  / view=EMWS3.Tree2_VALIDATE
18615  ;
18616  set EMWS3.TextCluster5_VALIDATE
18617  ;
18618  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas.
18619 +****************************************************************;
18620 +******             DECISION TREE SCORING CODE             ******;
18621 +****************************************************************;
18622 +
18623 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18624 +LENGTH F_Category  $   22;
18625 +LENGTH I_Category  $   22;
18626 +LENGTH U_Category  $   22;
18627 +LENGTH _WARN_  $    4;
18628 +
18629 +******              LABELS FOR NEW VARIABLES              ******;
18630 +label _NODE_ = 'Node' ;
18631 +label _LEAF_ = 'Leaf' ;
18632 +label P_CategoryHR = 'Predicted: Category=HR' ;
18633 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18634 +label P_CategoryINFORMATION_TECHNOLOGY =
18635 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18636 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18637 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18638 +label P_CategoryBUSINESS_DEVELOPMENT =
18639 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18640 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18641 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18642 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18643 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18644 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18645 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18646 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18647 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18648 +label Q_CategoryINFORMATION_TECHNOLOGY =
18649 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18650 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18651 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18652 +label Q_CategoryBUSINESS_DEVELOPMENT =
18653 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18654 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18655 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18656 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18657 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18658 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18659 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18660 +label V_CategoryHR = 'Validated: Category=HR' ;
18661 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18662 +label V_CategoryINFORMATION_TECHNOLOGY =
18663 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18664 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18665 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18666 +label V_CategoryBUSINESS_DEVELOPMENT =
18667 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18668 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18669 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18670 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18671 +label V_CategorySALES = 'Validated: Category=SALES' ;
18672 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18673 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18674 +label R_CategoryHR = 'Residual: Category=HR' ;
18675 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18676 +label R_CategoryINFORMATION_TECHNOLOGY =
18677 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18678 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18679 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18680 +label R_CategoryBUSINESS_DEVELOPMENT =
18681 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18682 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18683 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18684 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18685 +label R_CategorySALES = 'Residual: Category=SALES' ;
18686 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18687 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18688 +label F_Category = 'From: Category' ;
18689 +label I_Category = 'Into: Category' ;
18690 +label U_Category = 'Unnormalized Into: Category' ;
18691 +label _WARN_ = 'Warnings' ;
18692 +
18693 +
18694 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18695 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18696 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18697 +
18698 +
18699 +_ARBFMT_22 = PUT( Category , $22.);
18700 + %DMNORMCP( _ARBFMT_22, F_Category );
18701 +
18702 +******             ASSIGN OBSERVATION TO NODE             ******;
18703 +IF  NOT MISSING(TextCluster5_SVD4 ) AND
18704 +  TextCluster5_SVD4  <    -0.17977935490765 THEN DO;
18705 +  _NODE_  =                    2;
18706 +  _LEAF_  =                    1;
18707 +  P_CategoryHR  =     0.74242424242424;
18708 +  P_CategoryDESIGNER  =                    0;
18709 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
18710 +  P_CategoryTEACHER  =                    0;
18711 +  P_CategoryADVOCATE  =     0.06060606060606;
18712 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
18713 +  P_CategoryHEALTHCARE  =     0.06060606060606;
18714 +  P_CategoryFITNESS  =     0.01515151515151;
18715 +  P_CategoryOTHER  =     0.01515151515151;
18716 +  P_CategorySALES  =     0.03030303030303;
18717 +  P_CategoryCONSULTANT  =     0.03030303030303;
18718 +  P_CategoryDIGITAL_MEDIA  =                    0;
18719 +  Q_CategoryHR  =     0.74242424242424;
18720 +  Q_CategoryDESIGNER  =                    0;
18721 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
18722 +  Q_CategoryTEACHER  =                    0;
18723 +  Q_CategoryADVOCATE  =     0.06060606060606;
18724 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
18725 +  Q_CategoryHEALTHCARE  =     0.06060606060606;
18726 +  Q_CategoryFITNESS  =     0.01515151515151;
18727 +  Q_CategoryOTHER  =     0.01515151515151;
18728 +  Q_CategorySALES  =     0.03030303030303;
18729 +  Q_CategoryCONSULTANT  =     0.03030303030303;
18730 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18731 +  V_CategoryHR  =     0.66666666666666;
18732 +  V_CategoryDESIGNER  =                    0;
18733 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.04444444444444;
18734 +  V_CategoryTEACHER  =                    0;
18735 +  V_CategoryADVOCATE  =     0.04444444444444;
18736 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18737 +  V_CategoryHEALTHCARE  =     0.08888888888888;
18738 +  V_CategoryFITNESS  =     0.02222222222222;
18739 +  V_CategoryOTHER  =     0.06666666666666;
18740 +  V_CategorySALES  =                    0;
18741 +  V_CategoryCONSULTANT  =     0.04444444444444;
18742 +  V_CategoryDIGITAL_MEDIA  =                    0;
18743 +  I_Category  = 'HR' ;
18744 +  U_Category  = 'HR' ;
18745 +  END;
18746 +ELSE DO;
18747 +  IF  NOT MISSING(TextCluster5_SVD5 ) AND
18748 +    TextCluster5_SVD5  <    -0.27129238051774 THEN DO;
18749 +    _NODE_  =                    6;
18750 +    _LEAF_  =                    2;
18751 +    P_CategoryHR  =                    0;
18752 +    P_CategoryDESIGNER  =                0.025;
18753 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18754 +    P_CategoryTEACHER  =                0.825;
18755 +    P_CategoryADVOCATE  =                 0.05;
18756 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18757 +    P_CategoryHEALTHCARE  =                    0;
18758 +    P_CategoryFITNESS  =                  0.1;
18759 +    P_CategoryOTHER  =                    0;
18760 +    P_CategorySALES  =                    0;
18761 +    P_CategoryCONSULTANT  =                    0;
18762 +    P_CategoryDIGITAL_MEDIA  =                    0;
18763 +    Q_CategoryHR  =                    0;
18764 +    Q_CategoryDESIGNER  =                0.025;
18765 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18766 +    Q_CategoryTEACHER  =                0.825;
18767 +    Q_CategoryADVOCATE  =                 0.05;
18768 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18769 +    Q_CategoryHEALTHCARE  =                    0;
18770 +    Q_CategoryFITNESS  =                  0.1;
18771 +    Q_CategoryOTHER  =                    0;
18772 +    Q_CategorySALES  =                    0;
18773 +    Q_CategoryCONSULTANT  =                    0;
18774 +    Q_CategoryDIGITAL_MEDIA  =                    0;
18775 +    V_CategoryHR  =                    0;
18776 +    V_CategoryDESIGNER  =     0.04878048780487;
18777 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18778 +    V_CategoryTEACHER  =     0.56097560975609;
18779 +    V_CategoryADVOCATE  =     0.07317073170731;
18780 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18781 +    V_CategoryHEALTHCARE  =     0.04878048780487;
18782 +    V_CategoryFITNESS  =     0.09756097560975;
18783 +    V_CategoryOTHER  =     0.14634146341463;
18784 +    V_CategorySALES  =                    0;
18785 +    V_CategoryCONSULTANT  =     0.02439024390243;
18786 +    V_CategoryDIGITAL_MEDIA  =                    0;
18787 +    I_Category  = 'TEACHER' ;
18788 +    U_Category  = 'TEACHER' ;
18789 +    END;
18790 +  ELSE DO;
18791 +    IF  NOT MISSING(TextCluster5_SVD2 ) AND
18792 +           0.1354019154475 <= TextCluster5_SVD2  THEN DO;
18793 +      IF  NOT MISSING(TextCluster5_SVD10 ) AND
18794 +        TextCluster5_SVD10  <    -0.11566608126712 THEN DO;
18795 +        _NODE_  =                   16;
18796 +        _LEAF_  =                    8;
18797 +        P_CategoryHR  =                    0;
18798 +        P_CategoryDESIGNER  =                    0;
18799 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18800 +        P_CategoryTEACHER  =                    0;
18801 +        P_CategoryADVOCATE  =                    0;
18802 +        P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18803 +        P_CategoryHEALTHCARE  =                    0;
18804 +        P_CategoryFITNESS  =                    0;
18805 +        P_CategoryOTHER  =                    0;
18806 +        P_CategorySALES  =                    0;
18807 +        P_CategoryCONSULTANT  =                0.125;
18808 +        P_CategoryDIGITAL_MEDIA  =                0.875;
18809 +        Q_CategoryHR  =                    0;
18810 +        Q_CategoryDESIGNER  =                    0;
18811 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18812 +        Q_CategoryTEACHER  =                    0;
18813 +        Q_CategoryADVOCATE  =                    0;
18814 +        Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18815 +        Q_CategoryHEALTHCARE  =                    0;
18816 +        Q_CategoryFITNESS  =                    0;
18817 +        Q_CategoryOTHER  =                    0;
18818 +        Q_CategorySALES  =                    0;
18819 +        Q_CategoryCONSULTANT  =                0.125;
18820 +        Q_CategoryDIGITAL_MEDIA  =                0.875;
18821 +        V_CategoryHR  =                    0;
18822 +        V_CategoryDESIGNER  =                    0;
18823 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.28571428571428;
18824 +        V_CategoryTEACHER  =                    0;
18825 +        V_CategoryADVOCATE  =                    0;
18826 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18827 +        V_CategoryHEALTHCARE  =                    0;
18828 +        V_CategoryFITNESS  =                    0;
18829 +        V_CategoryOTHER  =                    0;
18830 +        V_CategorySALES  =     0.14285714285714;
18831 +        V_CategoryCONSULTANT  =                    0;
18832 +        V_CategoryDIGITAL_MEDIA  =     0.57142857142857;
18833 +        I_Category  = 'DIGITAL-MEDIA' ;
18834 +        U_Category  = 'DIGITAL-MEDIA' ;
18835 +        END;
18836 +      ELSE DO;
18837 +        _NODE_  =                   17;
18838 +        _LEAF_  =                    9;
18839 +        P_CategoryHR  =                    0;
18840 +        P_CategoryDESIGNER  =     0.05882352941176;
18841 +        P_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
18842 +        P_CategoryTEACHER  =                    0;
18843 +        P_CategoryADVOCATE  =     0.01960784313725;
18844 +        P_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
18845 +        P_CategoryHEALTHCARE  =     0.02941176470588;
18846 +        P_CategoryFITNESS  =                    0;
18847 +        P_CategoryOTHER  =     0.07843137254901;
18848 +        P_CategorySALES  =                    0;
18849 +        P_CategoryCONSULTANT  =      0.2156862745098;
18850 +        P_CategoryDIGITAL_MEDIA  =      0.0392156862745;
18851 +        Q_CategoryHR  =                    0;
18852 +        Q_CategoryDESIGNER  =     0.05882352941176;
18853 +        Q_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
18854 +        Q_CategoryTEACHER  =                    0;
18855 +        Q_CategoryADVOCATE  =     0.01960784313725;
18856 +        Q_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
18857 +        Q_CategoryHEALTHCARE  =     0.02941176470588;
18858 +        Q_CategoryFITNESS  =                    0;
18859 +        Q_CategoryOTHER  =     0.07843137254901;
18860 +        Q_CategorySALES  =                    0;
18861 +        Q_CategoryCONSULTANT  =      0.2156862745098;
18862 +        Q_CategoryDIGITAL_MEDIA  =      0.0392156862745;
18863 +        V_CategoryHR  =                    0;
18864 +        V_CategoryDESIGNER  =              0.09375;
18865 +        V_CategoryINFORMATION_TECHNOLOGY  =               0.4375;
18866 +        V_CategoryTEACHER  =                    0;
18867 +        V_CategoryADVOCATE  =             0.015625;
18868 +        V_CategoryBUSINESS_DEVELOPMENT  =             0.046875;
18869 +        V_CategoryHEALTHCARE  =               0.0625;
18870 +        V_CategoryFITNESS  =                    0;
18871 +        V_CategoryOTHER  =             0.078125;
18872 +        V_CategorySALES  =             0.015625;
18873 +        V_CategoryCONSULTANT  =              0.15625;
18874 +        V_CategoryDIGITAL_MEDIA  =              0.09375;
18875 +        I_Category  = 'INFORMATION-TECHNOLOGY' ;
18876 +        U_Category  = 'INFORMATION-TECHNOLOGY' ;
18877 +        END;
18878 +      END;
18879 +    ELSE DO;
18880 +      IF  NOT MISSING(TextCluster5_SVD6 ) AND
18881 +        TextCluster5_SVD6  <    -0.13817520556383 THEN DO;
18882 +        IF  NOT MISSING(TextCluster5_SVD10 ) AND
18883 +          TextCluster5_SVD10  <     0.06439385137476 THEN DO;
18884 +          _NODE_  =                   18;
18885 +          _LEAF_  =                    3;
18886 +          P_CategoryHR  =                    0;
18887 +          P_CategoryDESIGNER  =     0.07142857142857;
18888 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18889 +          P_CategoryTEACHER  =                    0;
18890 +          P_CategoryADVOCATE  =                    0;
18891 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18892 +          P_CategoryHEALTHCARE  =     0.07142857142857;
18893 +          P_CategoryFITNESS  =                    0;
18894 +          P_CategoryOTHER  =                    0;
18895 +          P_CategorySALES  =                    0;
18896 +          P_CategoryCONSULTANT  =                    0;
18897 +          P_CategoryDIGITAL_MEDIA  =     0.85714285714285;
18898 +          Q_CategoryHR  =                    0;
18899 +          Q_CategoryDESIGNER  =     0.07142857142857;
18900 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18901 +          Q_CategoryTEACHER  =                    0;
18902 +          Q_CategoryADVOCATE  =                    0;
18903 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18904 +          Q_CategoryHEALTHCARE  =     0.07142857142857;
18905 +          Q_CategoryFITNESS  =                    0;
18906 +          Q_CategoryOTHER  =                    0;
18907 +          Q_CategorySALES  =                    0;
18908 +          Q_CategoryCONSULTANT  =                    0;
18909 +          Q_CategoryDIGITAL_MEDIA  =     0.85714285714285;
18910 +          V_CategoryHR  =     0.11111111111111;
18911 +          V_CategoryDESIGNER  =                    0;
18912 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18913 +          V_CategoryTEACHER  =                    0;
18914 +          V_CategoryADVOCATE  =                    0;
18915 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18916 +          V_CategoryHEALTHCARE  =                    0;
18917 +          V_CategoryFITNESS  =     0.11111111111111;
18918 +          V_CategoryOTHER  =                    0;
18919 +          V_CategorySALES  =                    0;
18920 +          V_CategoryCONSULTANT  =     0.11111111111111;
18921 +          V_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18922 +          I_Category  = 'DIGITAL-MEDIA' ;
18923 +          U_Category  = 'DIGITAL-MEDIA' ;
18924 +          END;
18925 +        ELSE DO;
18926 +          _NODE_  =                   19;
18927 +          _LEAF_  =                    4;
18928 +          P_CategoryHR  =     0.02777777777777;
18929 +          P_CategoryDESIGNER  =     0.88888888888888;
18930 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18931 +          P_CategoryTEACHER  =                    0;
18932 +          P_CategoryADVOCATE  =                    0;
18933 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18934 +          P_CategoryHEALTHCARE  =                    0;
18935 +          P_CategoryFITNESS  =                    0;
18936 +          P_CategoryOTHER  =                    0;
18937 +          P_CategorySALES  =     0.05555555555555;
18938 +          P_CategoryCONSULTANT  =                    0;
18939 +          P_CategoryDIGITAL_MEDIA  =     0.02777777777777;
18940 +          Q_CategoryHR  =     0.02777777777777;
18941 +          Q_CategoryDESIGNER  =     0.88888888888888;
18942 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18943 +          Q_CategoryTEACHER  =                    0;
18944 +          Q_CategoryADVOCATE  =                    0;
18945 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18946 +          Q_CategoryHEALTHCARE  =                    0;
18947 +          Q_CategoryFITNESS  =                    0;
18948 +          Q_CategoryOTHER  =                    0;
18949 +          Q_CategorySALES  =     0.05555555555555;
18950 +          Q_CategoryCONSULTANT  =                    0;
18951 +          Q_CategoryDIGITAL_MEDIA  =     0.02777777777777;
18952 +          V_CategoryHR  =                    0;
18953 +          V_CategoryDESIGNER  =     0.77272727272727;
18954 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18955 +          V_CategoryTEACHER  =     0.04545454545454;
18956 +          V_CategoryADVOCATE  =                    0;
18957 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18958 +          V_CategoryHEALTHCARE  =                    0;
18959 +          V_CategoryFITNESS  =                    0;
18960 +          V_CategoryOTHER  =     0.04545454545454;
18961 +          V_CategorySALES  =     0.09090909090909;
18962 +          V_CategoryCONSULTANT  =                    0;
18963 +          V_CategoryDIGITAL_MEDIA  =     0.04545454545454;
18964 +          I_Category  = 'DESIGNER' ;
18965 +          U_Category  = 'DESIGNER' ;
18966 +          END;
18967 +        END;
18968 +      ELSE DO;
18969 +        IF  NOT MISSING(TextCluster5_SVD12 ) AND
18970 +          TextCluster5_SVD12  <    -0.11408163089867 THEN DO;
18971 +          _NODE_  =                   20;
18972 +          _LEAF_  =                    5;
18973 +          P_CategoryHR  =                    0;
18974 +          P_CategoryDESIGNER  =                 0.04;
18975 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18976 +          P_CategoryTEACHER  =                    0;
18977 +          P_CategoryADVOCATE  =                 0.16;
18978 +          P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18979 +          P_CategoryHEALTHCARE  =                 0.02;
18980 +          P_CategoryFITNESS  =                  0.7;
18981 +          P_CategoryOTHER  =                 0.04;
18982 +          P_CategorySALES  =                    0;
18983 +          P_CategoryCONSULTANT  =                 0.02;
18984 +          P_CategoryDIGITAL_MEDIA  =                    0;
18985 +          Q_CategoryHR  =                    0;
18986 +          Q_CategoryDESIGNER  =                 0.04;
18987 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18988 +          Q_CategoryTEACHER  =                    0;
18989 +          Q_CategoryADVOCATE  =                 0.16;
18990 +          Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18991 +          Q_CategoryHEALTHCARE  =                 0.02;
18992 +          Q_CategoryFITNESS  =                  0.7;
18993 +          Q_CategoryOTHER  =                 0.04;
18994 +          Q_CategorySALES  =                    0;
18995 +          Q_CategoryCONSULTANT  =                 0.02;
18996 +          Q_CategoryDIGITAL_MEDIA  =                    0;
18997 +          V_CategoryHR  =                    0;
18998 +          V_CategoryDESIGNER  =     0.05263157894736;
18999 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19000 +          V_CategoryTEACHER  =                    0;
19001 +          V_CategoryADVOCATE  =                    0;
19002 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19003 +          V_CategoryHEALTHCARE  =     0.05263157894736;
19004 +          V_CategoryFITNESS  =     0.84210526315789;
19005 +          V_CategoryOTHER  =     0.05263157894736;
19006 +          V_CategorySALES  =                    0;
19007 +          V_CategoryCONSULTANT  =                    0;
19008 +          V_CategoryDIGITAL_MEDIA  =                    0;
19009 +          I_Category  = 'FITNESS' ;
19010 +          U_Category  = 'FITNESS' ;
19011 +          END;
19012 +        ELSE DO;
19013 +          IF  NOT MISSING(TextCluster5_SVD4 ) AND
19014 +                0.23450537484306 <= TextCluster5_SVD4  THEN DO;
19015 +            _NODE_  =                   27;
19016 +            _LEAF_  =                    7;
19017 +            P_CategoryHR  =                    0;
19018 +            P_CategoryDESIGNER  =     0.13333333333333;
19019 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19020 +            P_CategoryTEACHER  =     0.66666666666666;
19021 +            P_CategoryADVOCATE  =                    0;
19022 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19023 +            P_CategoryHEALTHCARE  =     0.06666666666666;
19024 +            P_CategoryFITNESS  =                    0;
19025 +            P_CategoryOTHER  =     0.06666666666666;
19026 +            P_CategorySALES  =                    0;
19027 +            P_CategoryCONSULTANT  =                    0;
19028 +            P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19029 +            Q_CategoryHR  =                    0;
19030 +            Q_CategoryDESIGNER  =     0.13333333333333;
19031 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19032 +            Q_CategoryTEACHER  =     0.66666666666666;
19033 +            Q_CategoryADVOCATE  =                    0;
19034 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19035 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
19036 +            Q_CategoryFITNESS  =                    0;
19037 +            Q_CategoryOTHER  =     0.06666666666666;
19038 +            Q_CategorySALES  =                    0;
19039 +            Q_CategoryCONSULTANT  =                    0;
19040 +            Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19041 +            V_CategoryHR  =                    0;
19042 +            V_CategoryDESIGNER  =                    0;
19043 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
19044 +            V_CategoryTEACHER  =     0.33333333333333;
19045 +            V_CategoryADVOCATE  =     0.16666666666666;
19046 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19047 +            V_CategoryHEALTHCARE  =     0.08333333333333;
19048 +            V_CategoryFITNESS  =                    0;
19049 +            V_CategoryOTHER  =     0.08333333333333;
19050 +            V_CategorySALES  =     0.08333333333333;
19051 +            V_CategoryCONSULTANT  =                    0;
19052 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
19053 +            I_Category  = 'TEACHER' ;
19054 +            U_Category  = 'TEACHER' ;
19055 +            END;
19056 +          ELSE DO;
19057 +            _NODE_  =                   26;
19058 +            _LEAF_  =                    6;
19059 +            P_CategoryHR  =     0.01457725947521;
19060 +            P_CategoryDESIGNER  =     0.02623906705539;
19061 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
19062 +            P_CategoryTEACHER  =      0.0204081632653;
19063 +            P_CategoryADVOCATE  =     0.11953352769679;
19064 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
19065 +            P_CategoryHEALTHCARE  =     0.13702623906705;
19066 +            P_CategoryFITNESS  =     0.05247813411078;
19067 +            P_CategoryOTHER  =     0.14868804664723;
19068 +            P_CategorySALES  =     0.15743440233236;
19069 +            P_CategoryCONSULTANT  =     0.09037900874635;
19070 +            P_CategoryDIGITAL_MEDIA  =     0.06413994169096;
19071 +            Q_CategoryHR  =     0.01457725947521;
19072 +            Q_CategoryDESIGNER  =     0.02623906705539;
19073 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
19074 +            Q_CategoryTEACHER  =      0.0204081632653;
19075 +            Q_CategoryADVOCATE  =     0.11953352769679;
19076 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
19077 +            Q_CategoryHEALTHCARE  =     0.13702623906705;
19078 +            Q_CategoryFITNESS  =     0.05247813411078;
19079 +            Q_CategoryOTHER  =     0.14868804664723;
19080 +            Q_CategorySALES  =     0.15743440233236;
19081 +            Q_CategoryCONSULTANT  =     0.09037900874635;
19082 +            Q_CategoryDIGITAL_MEDIA  =     0.06413994169096;
19083 +            V_CategoryHR  =     0.00537634408602;
19084 +            V_CategoryDESIGNER  =      0.0268817204301;
19085 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
19086 +            V_CategoryTEACHER  =     0.01612903225806;
19087 +            V_CategoryADVOCATE  =     0.14516129032258;
19088 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17204301075268;
19089 +            V_CategoryHEALTHCARE  =     0.11290322580645;
19090 +            V_CategoryFITNESS  =     0.06989247311827;
19091 +            V_CategoryOTHER  =     0.11290322580645;
19092 +            V_CategorySALES  =     0.15591397849462;
19093 +            V_CategoryCONSULTANT  =     0.11290322580645;
19094 +            V_CategoryDIGITAL_MEDIA  =     0.05376344086021;
19095 +            I_Category  = 'SALES' ;
19096 +            U_Category  = 'SALES' ;
19097 +            END;
19098 +          END;
19099 +        END;
19100 +      END;
19101 +    END;
19102 +  END;
19103 +
19104 +*****  RESIDUALS R_ *************;
19105 +IF  F_Category  NE 'HR'
19106 +AND F_Category  NE 'DESIGNER'
19107 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19108 +AND F_Category  NE 'TEACHER'
19109 +AND F_Category  NE 'ADVOCATE'
19110 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19111 +AND F_Category  NE 'HEALTHCARE'
19112 +AND F_Category  NE 'FITNESS'
19113 +AND F_Category  NE 'OTHER'
19114 +AND F_Category  NE 'SALES'
19115 +AND F_Category  NE 'CONSULTANT'
19116 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19117 +        R_CategoryHR  = .;
19118 +        R_CategoryDESIGNER  = .;
19119 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19120 +        R_CategoryTEACHER  = .;
19121 +        R_CategoryADVOCATE  = .;
19122 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19123 +        R_CategoryHEALTHCARE  = .;
19124 +        R_CategoryFITNESS  = .;
19125 +        R_CategoryOTHER  = .;
19126 +        R_CategorySALES  = .;
19127 +        R_CategoryCONSULTANT  = .;
19128 +        R_CategoryDIGITAL_MEDIA  = .;
19129 + END;
19130 + ELSE DO;
19131 +       R_CategoryHR  =  -P_CategoryHR ;
19132 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19133 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19134 +         ;
19135 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19136 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19137 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19138 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19139 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19140 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19141 +       R_CategorySALES  =  -P_CategorySALES ;
19142 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19143 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19144 +       SELECT( F_Category  );
19145 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19146 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19147 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19148 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19149 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19150 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19151 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19152 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19153 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19154 +          +1;
19155 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19156 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19157 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19158 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19159 +          +1;
19160 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19161 +        R_CategoryDIGITAL_MEDIA  +1;
19162 +       END;
19163 + END;
19164 +
19165 +****************************************************************;
19166 +******          END OF DECISION TREE SCORING CODE         ******;
19167 +****************************************************************;
19168 +
19169 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19170  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19171  quit;
19172  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
19173  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas";
19174  *------------------------------------------------------------*;
19175  * Tree2: Scoring TEST data;
19176  *------------------------------------------------------------*;
19177  data EMWS3.Tree2_TEST
19178  / view=EMWS3.Tree2_TEST
19179  ;
19180  set EMWS3.TextCluster5_TEST
19181  ;
19182  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree2\EMFLOWSCORE.sas.
19183 +****************************************************************;
19184 +******             DECISION TREE SCORING CODE             ******;
19185 +****************************************************************;
19186 +
19187 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
19188 +LENGTH F_Category  $   22;
19189 +LENGTH I_Category  $   22;
19190 +LENGTH U_Category  $   22;
19191 +LENGTH _WARN_  $    4;
19192 +
19193 +******              LABELS FOR NEW VARIABLES              ******;
19194 +label _NODE_ = 'Node' ;
19195 +label _LEAF_ = 'Leaf' ;
19196 +label P_CategoryHR = 'Predicted: Category=HR' ;
19197 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
19198 +label P_CategoryINFORMATION_TECHNOLOGY =
19199 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
19200 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
19201 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
19202 +label P_CategoryBUSINESS_DEVELOPMENT =
19203 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
19204 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
19205 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
19206 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
19207 +label P_CategorySALES = 'Predicted: Category=SALES' ;
19208 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
19209 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
19210 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
19211 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
19212 +label Q_CategoryINFORMATION_TECHNOLOGY =
19213 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
19214 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
19215 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
19216 +label Q_CategoryBUSINESS_DEVELOPMENT =
19217 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
19218 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
19219 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
19220 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
19221 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
19222 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
19223 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
19224 +label V_CategoryHR = 'Validated: Category=HR' ;
19225 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
19226 +label V_CategoryINFORMATION_TECHNOLOGY =
19227 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
19228 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
19229 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
19230 +label V_CategoryBUSINESS_DEVELOPMENT =
19231 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
19232 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
19233 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
19234 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
19235 +label V_CategorySALES = 'Validated: Category=SALES' ;
19236 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
19237 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
19238 +label R_CategoryHR = 'Residual: Category=HR' ;
19239 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
19240 +label R_CategoryINFORMATION_TECHNOLOGY =
19241 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
19242 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
19243 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
19244 +label R_CategoryBUSINESS_DEVELOPMENT =
19245 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
19246 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
19247 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
19248 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
19249 +label R_CategorySALES = 'Residual: Category=SALES' ;
19250 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
19251 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
19252 +label F_Category = 'From: Category' ;
19253 +label I_Category = 'Into: Category' ;
19254 +label U_Category = 'Unnormalized Into: Category' ;
19255 +label _WARN_ = 'Warnings' ;
19256 +
19257 +
19258 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
19259 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
19260 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
19261 +
19262 +
19263 +_ARBFMT_22 = PUT( Category , $22.);
19264 + %DMNORMCP( _ARBFMT_22, F_Category );
19265 +
19266 +******             ASSIGN OBSERVATION TO NODE             ******;
19267 +IF  NOT MISSING(TextCluster5_SVD4 ) AND
19268 +  TextCluster5_SVD4  <    -0.17977935490765 THEN DO;
19269 +  _NODE_  =                    2;
19270 +  _LEAF_  =                    1;
19271 +  P_CategoryHR  =     0.74242424242424;
19272 +  P_CategoryDESIGNER  =                    0;
19273 +  P_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
19274 +  P_CategoryTEACHER  =                    0;
19275 +  P_CategoryADVOCATE  =     0.06060606060606;
19276 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
19277 +  P_CategoryHEALTHCARE  =     0.06060606060606;
19278 +  P_CategoryFITNESS  =     0.01515151515151;
19279 +  P_CategoryOTHER  =     0.01515151515151;
19280 +  P_CategorySALES  =     0.03030303030303;
19281 +  P_CategoryCONSULTANT  =     0.03030303030303;
19282 +  P_CategoryDIGITAL_MEDIA  =                    0;
19283 +  Q_CategoryHR  =     0.74242424242424;
19284 +  Q_CategoryDESIGNER  =                    0;
19285 +  Q_CategoryINFORMATION_TECHNOLOGY  =     0.01515151515151;
19286 +  Q_CategoryTEACHER  =                    0;
19287 +  Q_CategoryADVOCATE  =     0.06060606060606;
19288 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.03030303030303;
19289 +  Q_CategoryHEALTHCARE  =     0.06060606060606;
19290 +  Q_CategoryFITNESS  =     0.01515151515151;
19291 +  Q_CategoryOTHER  =     0.01515151515151;
19292 +  Q_CategorySALES  =     0.03030303030303;
19293 +  Q_CategoryCONSULTANT  =     0.03030303030303;
19294 +  Q_CategoryDIGITAL_MEDIA  =                    0;
19295 +  V_CategoryHR  =     0.66666666666666;
19296 +  V_CategoryDESIGNER  =                    0;
19297 +  V_CategoryINFORMATION_TECHNOLOGY  =     0.04444444444444;
19298 +  V_CategoryTEACHER  =                    0;
19299 +  V_CategoryADVOCATE  =     0.04444444444444;
19300 +  V_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
19301 +  V_CategoryHEALTHCARE  =     0.08888888888888;
19302 +  V_CategoryFITNESS  =     0.02222222222222;
19303 +  V_CategoryOTHER  =     0.06666666666666;
19304 +  V_CategorySALES  =                    0;
19305 +  V_CategoryCONSULTANT  =     0.04444444444444;
19306 +  V_CategoryDIGITAL_MEDIA  =                    0;
19307 +  I_Category  = 'HR' ;
19308 +  U_Category  = 'HR' ;
19309 +  END;
19310 +ELSE DO;
19311 +  IF  NOT MISSING(TextCluster5_SVD5 ) AND
19312 +    TextCluster5_SVD5  <    -0.27129238051774 THEN DO;
19313 +    _NODE_  =                    6;
19314 +    _LEAF_  =                    2;
19315 +    P_CategoryHR  =                    0;
19316 +    P_CategoryDESIGNER  =                0.025;
19317 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19318 +    P_CategoryTEACHER  =                0.825;
19319 +    P_CategoryADVOCATE  =                 0.05;
19320 +    P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19321 +    P_CategoryHEALTHCARE  =                    0;
19322 +    P_CategoryFITNESS  =                  0.1;
19323 +    P_CategoryOTHER  =                    0;
19324 +    P_CategorySALES  =                    0;
19325 +    P_CategoryCONSULTANT  =                    0;
19326 +    P_CategoryDIGITAL_MEDIA  =                    0;
19327 +    Q_CategoryHR  =                    0;
19328 +    Q_CategoryDESIGNER  =                0.025;
19329 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19330 +    Q_CategoryTEACHER  =                0.825;
19331 +    Q_CategoryADVOCATE  =                 0.05;
19332 +    Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19333 +    Q_CategoryHEALTHCARE  =                    0;
19334 +    Q_CategoryFITNESS  =                  0.1;
19335 +    Q_CategoryOTHER  =                    0;
19336 +    Q_CategorySALES  =                    0;
19337 +    Q_CategoryCONSULTANT  =                    0;
19338 +    Q_CategoryDIGITAL_MEDIA  =                    0;
19339 +    V_CategoryHR  =                    0;
19340 +    V_CategoryDESIGNER  =     0.04878048780487;
19341 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19342 +    V_CategoryTEACHER  =     0.56097560975609;
19343 +    V_CategoryADVOCATE  =     0.07317073170731;
19344 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19345 +    V_CategoryHEALTHCARE  =     0.04878048780487;
19346 +    V_CategoryFITNESS  =     0.09756097560975;
19347 +    V_CategoryOTHER  =     0.14634146341463;
19348 +    V_CategorySALES  =                    0;
19349 +    V_CategoryCONSULTANT  =     0.02439024390243;
19350 +    V_CategoryDIGITAL_MEDIA  =                    0;
19351 +    I_Category  = 'TEACHER' ;
19352 +    U_Category  = 'TEACHER' ;
19353 +    END;
19354 +  ELSE DO;
19355 +    IF  NOT MISSING(TextCluster5_SVD2 ) AND
19356 +           0.1354019154475 <= TextCluster5_SVD2  THEN DO;
19357 +      IF  NOT MISSING(TextCluster5_SVD10 ) AND
19358 +        TextCluster5_SVD10  <    -0.11566608126712 THEN DO;
19359 +        _NODE_  =                   16;
19360 +        _LEAF_  =                    8;
19361 +        P_CategoryHR  =                    0;
19362 +        P_CategoryDESIGNER  =                    0;
19363 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19364 +        P_CategoryTEACHER  =                    0;
19365 +        P_CategoryADVOCATE  =                    0;
19366 +        P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19367 +        P_CategoryHEALTHCARE  =                    0;
19368 +        P_CategoryFITNESS  =                    0;
19369 +        P_CategoryOTHER  =                    0;
19370 +        P_CategorySALES  =                    0;
19371 +        P_CategoryCONSULTANT  =                0.125;
19372 +        P_CategoryDIGITAL_MEDIA  =                0.875;
19373 +        Q_CategoryHR  =                    0;
19374 +        Q_CategoryDESIGNER  =                    0;
19375 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19376 +        Q_CategoryTEACHER  =                    0;
19377 +        Q_CategoryADVOCATE  =                    0;
19378 +        Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19379 +        Q_CategoryHEALTHCARE  =                    0;
19380 +        Q_CategoryFITNESS  =                    0;
19381 +        Q_CategoryOTHER  =                    0;
19382 +        Q_CategorySALES  =                    0;
19383 +        Q_CategoryCONSULTANT  =                0.125;
19384 +        Q_CategoryDIGITAL_MEDIA  =                0.875;
19385 +        V_CategoryHR  =                    0;
19386 +        V_CategoryDESIGNER  =                    0;
19387 +        V_CategoryINFORMATION_TECHNOLOGY  =     0.28571428571428;
19388 +        V_CategoryTEACHER  =                    0;
19389 +        V_CategoryADVOCATE  =                    0;
19390 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19391 +        V_CategoryHEALTHCARE  =                    0;
19392 +        V_CategoryFITNESS  =                    0;
19393 +        V_CategoryOTHER  =                    0;
19394 +        V_CategorySALES  =     0.14285714285714;
19395 +        V_CategoryCONSULTANT  =                    0;
19396 +        V_CategoryDIGITAL_MEDIA  =     0.57142857142857;
19397 +        I_Category  = 'DIGITAL-MEDIA' ;
19398 +        U_Category  = 'DIGITAL-MEDIA' ;
19399 +        END;
19400 +      ELSE DO;
19401 +        _NODE_  =                   17;
19402 +        _LEAF_  =                    9;
19403 +        P_CategoryHR  =                    0;
19404 +        P_CategoryDESIGNER  =     0.05882352941176;
19405 +        P_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
19406 +        P_CategoryTEACHER  =                    0;
19407 +        P_CategoryADVOCATE  =     0.01960784313725;
19408 +        P_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
19409 +        P_CategoryHEALTHCARE  =     0.02941176470588;
19410 +        P_CategoryFITNESS  =                    0;
19411 +        P_CategoryOTHER  =     0.07843137254901;
19412 +        P_CategorySALES  =                    0;
19413 +        P_CategoryCONSULTANT  =      0.2156862745098;
19414 +        P_CategoryDIGITAL_MEDIA  =      0.0392156862745;
19415 +        Q_CategoryHR  =                    0;
19416 +        Q_CategoryDESIGNER  =     0.05882352941176;
19417 +        Q_CategoryINFORMATION_TECHNOLOGY  =     0.51960784313725;
19418 +        Q_CategoryTEACHER  =                    0;
19419 +        Q_CategoryADVOCATE  =     0.01960784313725;
19420 +        Q_CategoryBUSINESS_DEVELOPMENT  =      0.0392156862745;
19421 +        Q_CategoryHEALTHCARE  =     0.02941176470588;
19422 +        Q_CategoryFITNESS  =                    0;
19423 +        Q_CategoryOTHER  =     0.07843137254901;
19424 +        Q_CategorySALES  =                    0;
19425 +        Q_CategoryCONSULTANT  =      0.2156862745098;
19426 +        Q_CategoryDIGITAL_MEDIA  =      0.0392156862745;
19427 +        V_CategoryHR  =                    0;
19428 +        V_CategoryDESIGNER  =              0.09375;
19429 +        V_CategoryINFORMATION_TECHNOLOGY  =               0.4375;
19430 +        V_CategoryTEACHER  =                    0;
19431 +        V_CategoryADVOCATE  =             0.015625;
19432 +        V_CategoryBUSINESS_DEVELOPMENT  =             0.046875;
19433 +        V_CategoryHEALTHCARE  =               0.0625;
19434 +        V_CategoryFITNESS  =                    0;
19435 +        V_CategoryOTHER  =             0.078125;
19436 +        V_CategorySALES  =             0.015625;
19437 +        V_CategoryCONSULTANT  =              0.15625;
19438 +        V_CategoryDIGITAL_MEDIA  =              0.09375;
19439 +        I_Category  = 'INFORMATION-TECHNOLOGY' ;
19440 +        U_Category  = 'INFORMATION-TECHNOLOGY' ;
19441 +        END;
19442 +      END;
19443 +    ELSE DO;
19444 +      IF  NOT MISSING(TextCluster5_SVD6 ) AND
19445 +        TextCluster5_SVD6  <    -0.13817520556383 THEN DO;
19446 +        IF  NOT MISSING(TextCluster5_SVD10 ) AND
19447 +          TextCluster5_SVD10  <     0.06439385137476 THEN DO;
19448 +          _NODE_  =                   18;
19449 +          _LEAF_  =                    3;
19450 +          P_CategoryHR  =                    0;
19451 +          P_CategoryDESIGNER  =     0.07142857142857;
19452 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19453 +          P_CategoryTEACHER  =                    0;
19454 +          P_CategoryADVOCATE  =                    0;
19455 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19456 +          P_CategoryHEALTHCARE  =     0.07142857142857;
19457 +          P_CategoryFITNESS  =                    0;
19458 +          P_CategoryOTHER  =                    0;
19459 +          P_CategorySALES  =                    0;
19460 +          P_CategoryCONSULTANT  =                    0;
19461 +          P_CategoryDIGITAL_MEDIA  =     0.85714285714285;
19462 +          Q_CategoryHR  =                    0;
19463 +          Q_CategoryDESIGNER  =     0.07142857142857;
19464 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19465 +          Q_CategoryTEACHER  =                    0;
19466 +          Q_CategoryADVOCATE  =                    0;
19467 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19468 +          Q_CategoryHEALTHCARE  =     0.07142857142857;
19469 +          Q_CategoryFITNESS  =                    0;
19470 +          Q_CategoryOTHER  =                    0;
19471 +          Q_CategorySALES  =                    0;
19472 +          Q_CategoryCONSULTANT  =                    0;
19473 +          Q_CategoryDIGITAL_MEDIA  =     0.85714285714285;
19474 +          V_CategoryHR  =     0.11111111111111;
19475 +          V_CategoryDESIGNER  =                    0;
19476 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19477 +          V_CategoryTEACHER  =                    0;
19478 +          V_CategoryADVOCATE  =                    0;
19479 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19480 +          V_CategoryHEALTHCARE  =                    0;
19481 +          V_CategoryFITNESS  =     0.11111111111111;
19482 +          V_CategoryOTHER  =                    0;
19483 +          V_CategorySALES  =                    0;
19484 +          V_CategoryCONSULTANT  =     0.11111111111111;
19485 +          V_CategoryDIGITAL_MEDIA  =     0.66666666666666;
19486 +          I_Category  = 'DIGITAL-MEDIA' ;
19487 +          U_Category  = 'DIGITAL-MEDIA' ;
19488 +          END;
19489 +        ELSE DO;
19490 +          _NODE_  =                   19;
19491 +          _LEAF_  =                    4;
19492 +          P_CategoryHR  =     0.02777777777777;
19493 +          P_CategoryDESIGNER  =     0.88888888888888;
19494 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19495 +          P_CategoryTEACHER  =                    0;
19496 +          P_CategoryADVOCATE  =                    0;
19497 +          P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19498 +          P_CategoryHEALTHCARE  =                    0;
19499 +          P_CategoryFITNESS  =                    0;
19500 +          P_CategoryOTHER  =                    0;
19501 +          P_CategorySALES  =     0.05555555555555;
19502 +          P_CategoryCONSULTANT  =                    0;
19503 +          P_CategoryDIGITAL_MEDIA  =     0.02777777777777;
19504 +          Q_CategoryHR  =     0.02777777777777;
19505 +          Q_CategoryDESIGNER  =     0.88888888888888;
19506 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19507 +          Q_CategoryTEACHER  =                    0;
19508 +          Q_CategoryADVOCATE  =                    0;
19509 +          Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19510 +          Q_CategoryHEALTHCARE  =                    0;
19511 +          Q_CategoryFITNESS  =                    0;
19512 +          Q_CategoryOTHER  =                    0;
19513 +          Q_CategorySALES  =     0.05555555555555;
19514 +          Q_CategoryCONSULTANT  =                    0;
19515 +          Q_CategoryDIGITAL_MEDIA  =     0.02777777777777;
19516 +          V_CategoryHR  =                    0;
19517 +          V_CategoryDESIGNER  =     0.77272727272727;
19518 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19519 +          V_CategoryTEACHER  =     0.04545454545454;
19520 +          V_CategoryADVOCATE  =                    0;
19521 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19522 +          V_CategoryHEALTHCARE  =                    0;
19523 +          V_CategoryFITNESS  =                    0;
19524 +          V_CategoryOTHER  =     0.04545454545454;
19525 +          V_CategorySALES  =     0.09090909090909;
19526 +          V_CategoryCONSULTANT  =                    0;
19527 +          V_CategoryDIGITAL_MEDIA  =     0.04545454545454;
19528 +          I_Category  = 'DESIGNER' ;
19529 +          U_Category  = 'DESIGNER' ;
19530 +          END;
19531 +        END;
19532 +      ELSE DO;
19533 +        IF  NOT MISSING(TextCluster5_SVD12 ) AND
19534 +          TextCluster5_SVD12  <    -0.11408163089867 THEN DO;
19535 +          _NODE_  =                   20;
19536 +          _LEAF_  =                    5;
19537 +          P_CategoryHR  =                    0;
19538 +          P_CategoryDESIGNER  =                 0.04;
19539 +          P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19540 +          P_CategoryTEACHER  =                    0;
19541 +          P_CategoryADVOCATE  =                 0.16;
19542 +          P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
19543 +          P_CategoryHEALTHCARE  =                 0.02;
19544 +          P_CategoryFITNESS  =                  0.7;
19545 +          P_CategoryOTHER  =                 0.04;
19546 +          P_CategorySALES  =                    0;
19547 +          P_CategoryCONSULTANT  =                 0.02;
19548 +          P_CategoryDIGITAL_MEDIA  =                    0;
19549 +          Q_CategoryHR  =                    0;
19550 +          Q_CategoryDESIGNER  =                 0.04;
19551 +          Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19552 +          Q_CategoryTEACHER  =                    0;
19553 +          Q_CategoryADVOCATE  =                 0.16;
19554 +          Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
19555 +          Q_CategoryHEALTHCARE  =                 0.02;
19556 +          Q_CategoryFITNESS  =                  0.7;
19557 +          Q_CategoryOTHER  =                 0.04;
19558 +          Q_CategorySALES  =                    0;
19559 +          Q_CategoryCONSULTANT  =                 0.02;
19560 +          Q_CategoryDIGITAL_MEDIA  =                    0;
19561 +          V_CategoryHR  =                    0;
19562 +          V_CategoryDESIGNER  =     0.05263157894736;
19563 +          V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19564 +          V_CategoryTEACHER  =                    0;
19565 +          V_CategoryADVOCATE  =                    0;
19566 +          V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19567 +          V_CategoryHEALTHCARE  =     0.05263157894736;
19568 +          V_CategoryFITNESS  =     0.84210526315789;
19569 +          V_CategoryOTHER  =     0.05263157894736;
19570 +          V_CategorySALES  =                    0;
19571 +          V_CategoryCONSULTANT  =                    0;
19572 +          V_CategoryDIGITAL_MEDIA  =                    0;
19573 +          I_Category  = 'FITNESS' ;
19574 +          U_Category  = 'FITNESS' ;
19575 +          END;
19576 +        ELSE DO;
19577 +          IF  NOT MISSING(TextCluster5_SVD4 ) AND
19578 +                0.23450537484306 <= TextCluster5_SVD4  THEN DO;
19579 +            _NODE_  =                   27;
19580 +            _LEAF_  =                    7;
19581 +            P_CategoryHR  =                    0;
19582 +            P_CategoryDESIGNER  =     0.13333333333333;
19583 +            P_CategoryINFORMATION_TECHNOLOGY  =                    0;
19584 +            P_CategoryTEACHER  =     0.66666666666666;
19585 +            P_CategoryADVOCATE  =                    0;
19586 +            P_CategoryBUSINESS_DEVELOPMENT  =                    0;
19587 +            P_CategoryHEALTHCARE  =     0.06666666666666;
19588 +            P_CategoryFITNESS  =                    0;
19589 +            P_CategoryOTHER  =     0.06666666666666;
19590 +            P_CategorySALES  =                    0;
19591 +            P_CategoryCONSULTANT  =                    0;
19592 +            P_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19593 +            Q_CategoryHR  =                    0;
19594 +            Q_CategoryDESIGNER  =     0.13333333333333;
19595 +            Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
19596 +            Q_CategoryTEACHER  =     0.66666666666666;
19597 +            Q_CategoryADVOCATE  =                    0;
19598 +            Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
19599 +            Q_CategoryHEALTHCARE  =     0.06666666666666;
19600 +            Q_CategoryFITNESS  =                    0;
19601 +            Q_CategoryOTHER  =     0.06666666666666;
19602 +            Q_CategorySALES  =                    0;
19603 +            Q_CategoryCONSULTANT  =                    0;
19604 +            Q_CategoryDIGITAL_MEDIA  =     0.06666666666666;
19605 +            V_CategoryHR  =                    0;
19606 +            V_CategoryDESIGNER  =                    0;
19607 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.08333333333333;
19608 +            V_CategoryTEACHER  =     0.33333333333333;
19609 +            V_CategoryADVOCATE  =     0.16666666666666;
19610 +            V_CategoryBUSINESS_DEVELOPMENT  =                    0;
19611 +            V_CategoryHEALTHCARE  =     0.08333333333333;
19612 +            V_CategoryFITNESS  =                    0;
19613 +            V_CategoryOTHER  =     0.08333333333333;
19614 +            V_CategorySALES  =     0.08333333333333;
19615 +            V_CategoryCONSULTANT  =                    0;
19616 +            V_CategoryDIGITAL_MEDIA  =     0.16666666666666;
19617 +            I_Category  = 'TEACHER' ;
19618 +            U_Category  = 'TEACHER' ;
19619 +            END;
19620 +          ELSE DO;
19621 +            _NODE_  =                   26;
19622 +            _LEAF_  =                    6;
19623 +            P_CategoryHR  =     0.01457725947521;
19624 +            P_CategoryDESIGNER  =     0.02623906705539;
19625 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
19626 +            P_CategoryTEACHER  =      0.0204081632653;
19627 +            P_CategoryADVOCATE  =     0.11953352769679;
19628 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
19629 +            P_CategoryHEALTHCARE  =     0.13702623906705;
19630 +            P_CategoryFITNESS  =     0.05247813411078;
19631 +            P_CategoryOTHER  =     0.14868804664723;
19632 +            P_CategorySALES  =     0.15743440233236;
19633 +            P_CategoryCONSULTANT  =     0.09037900874635;
19634 +            P_CategoryDIGITAL_MEDIA  =     0.06413994169096;
19635 +            Q_CategoryHR  =     0.01457725947521;
19636 +            Q_CategoryDESIGNER  =     0.02623906705539;
19637 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.01457725947521;
19638 +            Q_CategoryTEACHER  =      0.0204081632653;
19639 +            Q_CategoryADVOCATE  =     0.11953352769679;
19640 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.15451895043731;
19641 +            Q_CategoryHEALTHCARE  =     0.13702623906705;
19642 +            Q_CategoryFITNESS  =     0.05247813411078;
19643 +            Q_CategoryOTHER  =     0.14868804664723;
19644 +            Q_CategorySALES  =     0.15743440233236;
19645 +            Q_CategoryCONSULTANT  =     0.09037900874635;
19646 +            Q_CategoryDIGITAL_MEDIA  =     0.06413994169096;
19647 +            V_CategoryHR  =     0.00537634408602;
19648 +            V_CategoryDESIGNER  =      0.0268817204301;
19649 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01612903225806;
19650 +            V_CategoryTEACHER  =     0.01612903225806;
19651 +            V_CategoryADVOCATE  =     0.14516129032258;
19652 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17204301075268;
19653 +            V_CategoryHEALTHCARE  =     0.11290322580645;
19654 +            V_CategoryFITNESS  =     0.06989247311827;
19655 +            V_CategoryOTHER  =     0.11290322580645;
19656 +            V_CategorySALES  =     0.15591397849462;
19657 +            V_CategoryCONSULTANT  =     0.11290322580645;
19658 +            V_CategoryDIGITAL_MEDIA  =     0.05376344086021;
19659 +            I_Category  = 'SALES' ;
19660 +            U_Category  = 'SALES' ;
19661 +            END;
19662 +          END;
19663 +        END;
19664 +      END;
19665 +    END;
19666 +  END;
19667 +
19668 +*****  RESIDUALS R_ *************;
19669 +IF  F_Category  NE 'HR'
19670 +AND F_Category  NE 'DESIGNER'
19671 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19672 +AND F_Category  NE 'TEACHER'
19673 +AND F_Category  NE 'ADVOCATE'
19674 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19675 +AND F_Category  NE 'HEALTHCARE'
19676 +AND F_Category  NE 'FITNESS'
19677 +AND F_Category  NE 'OTHER'
19678 +AND F_Category  NE 'SALES'
19679 +AND F_Category  NE 'CONSULTANT'
19680 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19681 +        R_CategoryHR  = .;
19682 +        R_CategoryDESIGNER  = .;
19683 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19684 +        R_CategoryTEACHER  = .;
19685 +        R_CategoryADVOCATE  = .;
19686 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19687 +        R_CategoryHEALTHCARE  = .;
19688 +        R_CategoryFITNESS  = .;
19689 +        R_CategoryOTHER  = .;
19690 +        R_CategorySALES  = .;
19691 +        R_CategoryCONSULTANT  = .;
19692 +        R_CategoryDIGITAL_MEDIA  = .;
19693 + END;
19694 + ELSE DO;
19695 +       R_CategoryHR  =  -P_CategoryHR ;
19696 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19697 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19698 +         ;
19699 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19700 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19701 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19702 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19703 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19704 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19705 +       R_CategorySALES  =  -P_CategorySALES ;
19706 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19707 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19708 +       SELECT( F_Category  );
19709 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19710 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19711 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19712 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19713 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19714 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19715 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19716 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19717 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19718 +          +1;
19719 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19720 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19721 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19722 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19723 +          +1;
19724 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19725 +        R_CategoryDIGITAL_MEDIA  +1;
19726 +       END;
19727 + END;
19728 +
19729 +****************************************************************;
19730 +******          END OF DECISION TREE SCORING CODE         ******;
19731 +****************************************************************;
19732 +
19733 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19734  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
19735  quit;
19736  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
19738  proc sort data=WORK.EM_USER_REPORT;
19739  by ID VIEW;
19740  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19741  *------------------------------------------------------------*;
19742  * Tree2: Computing metadata for TRAIN data;
19743  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
20529  data WORK.MODELTEMP_INFO;
20530  set EMWS3.Tree2_EMINFO;
20531  where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
20532  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE2_EMINFO.
      WHERE (DATA='Tree2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20533  data EMWS3.Tree2_EMINFO;
20534  length TARGET KEY $32 DATA $43;
20535  input TARGET KEY DATA $;
20536  cards;
 
NOTE: The data set EMWS3.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20540  run;
20541  data EMWS3.Tree2_EMINFO;
20542  set EMWS3.Tree2_EMINFO WORK.MODELTEMP_INFO;
20543  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
20544  proc sort data = EMWS3.Tree2_EMINFO NOTHREADS;
20545  by TARGET KEY;
20546  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE2_EMINFO.
NOTE: The data set EMWS3.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20547  proc sort data = EMWS3.TextCluster5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
20548  by TARGET KEY;
20549  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20550  proc sort data = EMWS3.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
20551  by TARGET KEY;
20552  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20553  data EMWS3.Tree2_EMINFO;
20554  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
20555  by TARGET KEY;
20556  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE2_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20557  proc datasets lib=work nolist;
20558  delete TEMP_INFO SORTEDEMINFO;
20559  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
20560  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS3.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS3.TREE2_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:14:32
*------------------------------------------------------------*
20584  data EMWS3.Tree2_EMOUTFIT;
20585  set EMWS3.Tree2_EMOUTFIT;
20586  length TargetLabel $200;
20587  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
20588  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
20589  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_EMOUTFIT.
NOTE: The data set EMWS3.TREE2_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20590  proc sort data=EMWS3.Tree2_EMREPORTFIT nothreads;
20591  by TARGET;
20592  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE2_EMREPORTFIT.
NOTE: The data set EMWS3.TREE2_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
20593  %let _EMwarndup = 0;
20594  %let _EMtargetdup =;
20595  %let _EMASEtargetdup =;
20596  data _null_;
20597  set EMWS3.Tree2_EMOUTFIT;
20598  if .<_ASE_<0.000001 then do;
20599  call symput('_EMwarndup', '1');
20600  call symput('_EMtargetdup', target);
20601  call symput('_EMASEtargetdup', put(_ASE_, best.));
20602  end;
20603  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20604  %let EMEXCEPTIONSTRING=;
20605  *------------------------------------------------------------*;
20606  * REPORT: Tree2;
20607  *------------------------------------------------------------*;
20608  %let EM_ACTION = REPORT;
20609  %let syscc = 0;
20610  %macro main;
20611
20612    %if %upcase(&EM_ACTION) = CREATE %then %do;
20613      filename temp catalog 'sashelp.emmodl.tree_create.source';
20614      %include temp;
20615      filename temp;
20616
20617      %em_tree_create;
20618    %end;
20619
20620     %else
20621     %if %upcase(&EM_ACTION) = TRAIN %then %do;
20622
20623         filename temp catalog 'sashelp.emmodl.tree_train.source';
20624         %include temp;
20625         filename temp;
20626         %em_tree_train;
20627     %end;
20628
20629    %else
20630    %if %upcase(&EM_ACTION) = SCORE %then %do;
20631      filename temp catalog 'sashelp.emmodl.tree_score.source';
20632      %include temp;
20633      filename temp;
20634
20635      %em_tree_score;
20636
20637    %end;
20638
20639    %else
20640    %if %upcase(&EM_ACTION) = REPORT %then %do;
20641
20642         filename temp catalog 'sashelp.emmodl.tree_report.source';
20643         %include temp;
20644         filename temp;
20645
20646         %em_tree_report;
20647     %end;
20648
20649    %else
20650    %if %upcase(&EM_ACTION) = OPENINT %then %do;
20651
20652         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20653         %include temp;
20654         filename temp;
20655         %EM_TREE_OPENTREEVIEWER;
20656
20657     %end;
20658
20659    %else
20660    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
20661
20662         filename temp catalog 'sashelp.emmodl.tree_actions.source';
20663         %include temp;
20664         filename temp;
20665         %EM_TREE_CLOSETREEVIEWER;
20666
20667     %end;
20668
20669
20670     %doendm:
20671  %mend main;
20672
20673  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
20675 +%macro em_tree_makePlotDs( multipleTar= );
20677 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
20678 +  %EM_GETNAME(key=OUTNODES, type=DATA);
20679 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
20680 +  %EM_GETNAME(key=OUTRULES, type=DATA);
20682 +  /* determine if validation statistics will be displayed */
20683 +  %let validflag=N;
20684 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
20685 +    /* determine if validation data exists */
20686 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
20687 +      %let validflag=Y;
20688 +    %end;
20689 +  %end;
20691 +   /* retrieve name of decmeta even in presence of multiple targets */
20692 +   %let decmeta = ;
20693 +   %if &EM_DEC_DECMETA eq %then %do;
20694 +     data _Target;
20695 +       set &em_data_variableset;
20696 +       where ROLE='TARGET' and USE in('D', 'Y');
20697 +       keep NAME;
20698 +     run;
20699 +     proc sort data=_Target;
20700 +       by NAME;
20701 +     run;
20702 +     proc sort data=EM_TARGETDECINFO;
20703 +       by TARGET;
20704 +     run;
20705 +     data _Target;
20706 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
20707 +       by NAME;
20708 +       if _a then do;
20709 +         call symput('decmeta', trim(DECMETA));
20710 +       end;
20711 +     run;
20712 +     proc delete data=_Target;run;
20713 +   %end;
20714 +   %else %let decmeta = &EM_DEC_DECMETA;
20717 +  /* retrieve targetEvent from decmeta */
20718 +  %let targetEvent=;
20719 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20720 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20721 +      data _null_;
20722 +       set &DECMETA(where=(_TYPE_="TARGET"));
20723 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
20724 +      run;
20725 +    %end;
20726 +  %end;
20728 +  /* retrieve predicted var for targetEvent from decmeta */
20729 +  %let predTarget=;
20730 +  %let predLvl=;
20731 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20732 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20733 +      data _null_;
20734 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
20735 +       call symput('predTarget', strip(VARIABLE));
20736 +       call symput('predLvl', strip(LEVEL));
20737 +      run;
20738 +    %end;
20739 +  %end;
20740 +  %else %do;
20741 +    %if %sysfunc(exist(&DECMETA)) %then %do;
20742 +      data _null_;
20743 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
20744 +       call symput('predTarget', strip(VARIABLE));
20745 +      run;
20746 +    %end;
20747 +  %end;
20749 +  /* create BelowText value */
20750 +  data belowtext;
20751 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
20752 +    keep node belowtext;
20753 +  run;
20755 +  /* replace belowtext with variable label if it exists */
20756 +  data belowtext2;
20757 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
20758 +    keep node belowtextlbl;
20759 +  run;
20761 +  proc sort data=belowtext; by node; run;
20762 +  proc sort data=belowtext2; by node; run;
20764 +  data belowtext;
20765 +    merge belowtext belowtext2(in=_a);
20766 +    by node;
20767 +    if _a then belowtext=belowtextlbl;
20768 +    keep node belowtext;
20769 +  run;
20771 +  /* create AboveText value */
20772 +  data abovetext;
20773 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
20774 +  run;
20775 +  proc sort data=abovetext; by node numeric_value; run;
20777 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
20778 +  data abovetext;
20779 +    set abovetext(rename=(node=parent));
20780 +    by parent numeric_value;
20781 +    retain abovetext tempstring flag branch origval origchar ;
20782 +    length abovetext $256;
20783 +    length tempstring origchar $64;
20785 +    if STAT in ("INTERVAL", "ORDINAL") then do;
20786 +      if first.parent then do;
20787 +        if missing(character_value) then do;
20788 +          numeric_value = round(numeric_value, &sp_precision);
20789 +          abovetext = "< "||strip(NUMERIC_VALUE);
20790 +          branch = 1;
20791 +          origval = numeric_value;
20792 +          output;
20793 +        end;
20794 +        else do;
20795 +          abovetext = "< "||strip(CHARACTER_VALUE);
20796 +          branch = 1;
20797 +          origchar = character_value;
20798 +          output;
20799 +        end;
20801 +        if first.parent AND last.parent then do;
20802 +          if missing(character_value) then do;
20803 +            numeric_value = round(numeric_value, &sp_precision);
20804 +            branch = branch + 1;
20805 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20806 +            output;
20807 +          end;
20808 +          else do;
20809 +            branch = branch + 1;
20810 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20811 +            output;
20812 +          end;
20813 +        end;
20814 +      end;
20815 +      else if last.parent then do;
20816 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20817 +          if missing(character_value) then do;
20818 +            numeric_value = round(numeric_value, &sp_precision);
20819 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20820 +          end;
20821 +          else do;
20822 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20823 +          end;
20824 +          branch = branch + 1;
20825 +          output;
20827 +          if missing(character_value) then do;
20828 +            numeric_value = round(numeric_value, &sp_precision);
20829 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20830 +          end;
20831 +          else do;
20832 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20833 +          end;
20834 +          branch = branch + 1;
20835 +          output;
20836 +        end;
20837 +        else do;
20838 +          if missing(character_value) then do;
20839 +            numeric_value = round(numeric_value, &sp_precision);
20840 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20841 +          end;
20842 +          else do;
20843 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20844 +          end;
20845 +          branch = branch + 1;
20846 +          output;
20847 +        end;
20848 +      end;
20849 +      else do;
20850 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
20851 +          if missing(character_value) then do;
20852 +            numeric_value = round(numeric_value,&sp_precision);
20853 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
20854 +            origval = numeric_value;
20855 +          end;
20856 +          else do;
20857 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
20858 +            origchar = character_value;
20859 +          end;
20860 +          branch = branch + 1;
20861 +          output;
20863 +        end;
20864 +        else do;
20865 +          if missing(character_value) then do;
20866 +            numeric_value = round(numeric_value, &sp_precision);
20867 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20868 +            origval = numeric_value;
20869 +          end;
20870 +          else do;
20871 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20872 +            origval = character_value;
20873 +          end;
20874 +          branch = branch + 1;
20875 +          output;
20876 +        end;
20877 +      end;
20878 +    end;
20879 +    else do;
20880 +       if first.numeric_value then do;
20881 +         flag = 0;
20882 +         abovetext = strip(CHARACTER_VALUE);
20883 +         branch = numeric_value;
20884 +         if first.numeric_value AND last.numeric_value then do;
20885 +           output;
20886 +         end;
20887 +       end;
20888 +       else if last.numeric_value then do;
20889 +         if flag=0 then do;
20890 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20891 +           length = length(strip(tempstring));
20892 +           if length < 32 then do;
20893 +             abovetext = strip(tempstring);
20894 +           end;
20895 +           else do;
20896 +             abovetext = strip(abovetext)||", ...";
20897 +             flag = 1;
20898 +           end;
20899 +         end;
20900 +         branch = numeric_value;
20901 +         output;
20902 +       end;
20903 +       else do;
20904 +         if flag=0 then do;
20905 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20906 +           length = length(strip(tempstring));
20907 +           if length < 32 then do;
20908 +             abovetext = strip(tempstring);
20909 +           end;
20910 +           else do;
20911 +             abovetext = strip(abovetext)||", ...";
20912 +             flag=1;
20913 +           end;
20914 +         end;
20915 +         branch = numeric_value;
20916 +       end;
20917 +    end;
20918 +    keep parent branch abovetext;
20919 +  run;
20921 +  /* Missing value to abovetext */
20922 +  data tempmissing;
20923 +    set &EM_USER_OUTRULES;
20924 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20925 +    rename node=parent numeric_value=branch character_value=misschar;
20926 +  run;
20929 +  proc sort data=abovetext; by parent branch; run;
20930 +  proc sort data=tempmissing; by parent branch; run;
20931 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20933 +  data tempoutnodes;
20934 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20935 +    by parent branch;
20936 +    length traintotal validtotal 8;
20937 +    retain traintotal validtotal;
20939 +    if _a then do;
20940 +      if ^MISSING(abovetext) then do;
20941 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20942 +      end;
20943 +      else do;
20944 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20945 +      end;
20946 +    end;
20947 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20949 +    if node=1 then do;
20950 +      traintotal = N;
20951 +      validtotal=VN;
20952 +    end;
20954 +    drop role rank stat misschar belowtext;
20955 +  run;
20956 +  proc sort data=tempoutnodes; by node; run;
20957 +  proc sort data=belowtext; by node; run;
20959 +  data tempoutnodes;
20960 +    merge tempoutnodes belowtext;
20961 +    by node;
20963 +  run;
20965 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20966 +  %let adjusted = N;
20967 +  %let npriors = 0;
20968 +  data _null_ ;
20969 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20970 +    if eof then do ;
20971 +      call symput("npriors" , strip(put(_N_,best.))) ;
20972 +    end;
20973 +  run;
20974 +  %if &npriors gt 0 %then %let adjusted=Y;
20977 +  /* create a table with targetUsed and targetLevel columns for each node */
20978 +  data temptarmeta;
20979 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20980 +    %if &multipleTar eq N %then %do;
20981 +      AND USE in ('D', 'Y')
20982 +    %end;
20983 +    ));
20984 +    length TARGET $32;
20985 +    Target=name;
20986 +    keep target level;
20987 +  run;
20989 +  %if &multipleTar eq Y %then %do;
20990 +    data temptargetused;
20991 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20992 +      keep node target;
20993 +    run;
20994 +    proc sort data=temptargetused; by target; run;
20995 +    proc sort data=temptarmeta; by target; run;
20996 +    data temptargetused;
20997 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20998 +      by target;
20999 +      if _a and _b;
21000 +    run;
21001 +  %end;
21002 +  %else %do;
21003 +    data temptargetused;
21004 +      set &EM_USER_OUTSTATS;
21005 +      length target $32 tarlevel $10;
21006 +      target="%EM_TARGET";
21007 +      tarlevel="%EM_TARGET_LEVEL";
21008 +      keep node target tarlevel;
21009 +    run;
21010 +    proc sort data=temptargetused nodupkey; by node; run;
21011 +  %end;
21013 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
21014 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
21015 +  proc sort data=temptargetused; by node; run;
21018 +  /* create tables for all interval targets as well as all class targets */
21019 +  data tempinterval tempclass;
21020 +    merge tempoutstats temptargetused( rename=(target=targetused));
21021 +    by node;
21022 +    %if "&multipleTar" eq "Y" %then %do;
21023 +      if ((missing(Target)) OR (target=targetused ));
21024 +    %end;
21026 +    if tarlevel="INTERVAL" then output tempinterval;
21027 +    else output tempclass;
21028 +  run;
21030 +  /* initialize intTarget and classTarget flags */
21031 +  %let em_intNobs =0;
21032 +  %let em_classNobs = 0;
21033 +  %let em_intTarget= N;
21034 +  %let em_classTarget= N;
21036 +  proc sql;
21037 +    reset noprint;
21038 +    select count(*) into :em_intNobs from tempinterval;
21039 +  quit;
21040 +  proc sql;
21041 +    reset noprint;
21042 +    select count(*) into :em_classNobs from tempclass;
21043 +  quit;
21045 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
21046 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
21048 +  /* retrieve all information for interval targets */
21049 +  %if &em_intTarget eq Y %then %do;
21051 +    /* determine if leaf variable exists */
21052 +    %let dsid=%sysfunc(open(tempinterval,i));
21053 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
21054 +    %let rc=%sysfunc(close(&dsid));
21056 +    proc transpose data=tempinterval
21057 +      %if &leafexists %then %do;
21058 +        (drop=leaf)
21059 +      %end;
21060 +      %if &validexist %then %do;
21061 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
21062 +      %end;
21063 +      %else %do;
21064 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
21065 +      %end;
21066 +      by node;
21067 +      id statname;
21068 +    run;
21069 +    data tempinterval;
21070 +      set tempinterval;
21071 +      if missing(N) then delete;
21072 +    run;
21073 +  %end;
21075 +  /* retrieve all information for class targets */
21076 +  %if &em_classTarget eq Y %then %do;
21077 +    proc sort data=tempclass; by node category; run;
21078 +    %if &validflag eq N %then %do;
21079 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
21080 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
21081 +    %end;
21082 +    %else %do;
21083 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
21084 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
21085 +    %end;
21086 +      set tempclass;
21088 +      %if &validflag eq N %then %do;
21089 +        %if "&adjusted" eq "N" %then %do;
21090 +          if statname="N" then output tempn;
21091 +        %end;
21092 +        %else %do;
21093 +          if statname="NPRIORS" then output tempn;
21094 +        %end;
21095 +        else if statname="PREDICTION" then output temppredict;
21096 +        else if statname="PROBABILITY" then output tempprob;
21097 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
21098 +        else if statname="ALTERNATIVE LOSS" then output temploss;
21099 +      %end;
21100 +      %else %do;
21101 +        %if "&adjusted" eq "N" %then %do;
21102 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
21103 +        %end;
21104 +        %else %do;
21105 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
21106 +        %end;
21107 +        else if statname="PREDICTION" then output temppredict;
21108 +        else if statname="PROBABILITY" then output tempprob;
21109 +        else if statname="VALID: PROBABILITY" then output tempvprob;
21110 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
21111 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
21112 +      %end;
21113 +    run;
21116 +    /* determine if profit/loss exists in tempprofit */
21117 +    %let em_profitflag=0;
21118 +    %let em_lossflag=0;
21119 +    proc sql;
21120 +      reset noprint;
21121 +      select count(*) into :em_profitflag from tempprofit;
21122 +    quit;
21123 +    proc sql;
21124 +      reset noprint;
21125 +      select count(*) into :em_lossflag from temploss;
21126 +    quit;
21128 +    %if &validFlag eq Y %then %do;
21129 +      proc transpose data=tempn
21130 +        %if "&adjusted" eq "N" %then %do;
21131 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
21132 +        %end;
21133 +        %else %do;
21134 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
21135 +        %end;
21136 +        by node;
21137 +        id statname;
21138 +      run;
21139 +      %if &em_profitflag ne 0 %then %do;
21140 +        proc transpose data=tempprofit out=tempprofit;
21141 +          by node category;
21142 +          id statname ;
21143 +        run;
21144 +      %end;
21145 +      %if &em_lossflag ne 0 %then %do;
21146 +        proc transpose data=temploss out=temploss;
21147 +          by node category;
21148 +          id statname ;
21149 +        run;
21150 +      %end;
21151 +      data tempprob;
21152 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
21153 +        by node
21154 +        %if &multipleTar eq Y %then %do;
21155 +          target
21156 +        %end;
21157 +        category;
21158 +      run;
21159 +    %end;
21161 +    /* store percentcorrect value */
21162 +    data temppredict;
21163 +      merge tempprob temppredict(in=_a);
21164 +      by node category;
21165 +      if _a then do;
21166 +        percentCorrect = statvalue;
21167 +        %if &validFlag eq Y %then %do;
21168 +          vpercentCorrect= vstatvalue;
21169 +        %end;
21170 +      end;
21171 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
21172 +      %if &validFlag eq Y %then %do;
21173 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
21174 +      %end;
21175 +      ;
21176 +      if missing(percentCorrect) then delete;
21177 +      drop target;
21178 +    run;
21180 +    /* build profittext */
21181 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21182 +      data tempprofittext(keep= node profittext profitloss);
21183 +        length profittext $800 profitloss 8.;
21184 +        retain profittext profitloss;
21186 +        merge tempprob
21187 +        %if &em_profitflag ne 0 %then %do;
21188 +          tempprofit
21189 +        %end;
21190 +        %else %if &em_lossflag ne 0 %then %do;
21191 +          temploss
21192 +        %end;
21193 +        ;
21194 +        by node category;
21196 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
21197 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
21198 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
21199 +          %let profittype = ALL;
21200 +        %end;
21202 +        /* create the profitloss variable for nodecolor if selected */
21203 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
21205 +        %if "&profittype" eq "ALL" %then %do;
21206 +          if strip(CATEGORY)="&targetEvent" then do;
21207 +            profitloss=statvalue;
21208 +          end;
21209 +          if first.node then do;
21210 +            %if &validFlag eq N %then %do;
21211 +             %if &em_profitflag ne 0 %then %do;
21212 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21213 +             %end;
21214 +             %if &em_lossflag ne 0 %then %do;
21215 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21216 +             %end;
21217 +            %end;
21218 +            %else %do;
21219 +             %if &em_profitflag ne 0 %then %do;
21220 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
21220!+;
21221 +             %end;
21222 +             %if &em_lossflag ne 0 %then %do;
21223 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
21224 +             %end;
21225 +            %end;
21226 +          end;
21227 +          else if last.node then do;
21228 +            %if &validFlag eq N %then %do;
21229 +             %if &em_profitflag ne 0 %then %do;
21230 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21231 +             %end;
21232 +             %if &em_lossflag ne 0 %then %do;
21233 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21234 +             %end;
21235 +             /*if CATEGORY="&targetEvent" then do;
21236 +               profitloss=statvalue;
21237 +             end;*/
21238 +            %end;
21239 +            %else %do;
21240 +             %if &em_profitflag ne 0 %then %do;
21241 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
21241!+14.&EM_PROPERTY_SPLITPRECISION);
21242 +                if CATEGORY="&targetEvent" then do;
21243 +                 profitloss=ALTERNATIVE_PROFIT;
21244 +                end;
21245 +             %end;
21246 +             %if &em_lossflag ne 0 %then %do;
21247 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
21247!+14.&EM_PROPERTY_SPLITPRECISION);
21248 +                if CATEGORY="&targetEvent" then do;
21249 +                  profitloss=ALTERNATIVE_LOSS;
21250 +                end;
21251 +             %end;
21252 +            %end;
21253 +            output;
21254 +          end;
21255 +          else do;
21256 +            %if &validFlag eq N %then %do;
21257 +             %if &em_profitflag ne 0 %then %do;
21258 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21259 +             %end;
21260 +             %if &em_lossflag ne 0 %then %do;
21261 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21262 +             %end;
21263 +            %end;
21264 +            %else %do;
21265 +             %if &em_profitflag ne 0 %then %do;
21266 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
21266!+14.&EM_PROPERTY_SPLITPRECISION);
21267 +             %end;
21268 +             %if &em_lossflag ne 0 %then %do;
21269 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
21269!+14.&EM_PROPERTY_SPLITPRECISION);
21270 +             %end;
21271 +            %end;
21272 +          end;
21273 +        %end;
21274 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21275 +          if strip(CATEGORY) = "&targetevent" then do;
21276 +            %if &validFlag eq N %then %do;
21277 +             %if &em_profitflag ne 0 %then %do;
21278 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21279 +             %end;
21280 +             %if &em_lossflag ne 0 %then %do;
21281 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
21282 +             %end;
21283 +             profitloss=statvalue;
21284 +            %end;
21285 +            %else %do;
21286 +             %if &em_profitflag ne 0 %then %do;
21287 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
21287!+;
21288 +                profitloss=ALTERNATIVE_PROFIT;
21289 +             %end;
21290 +             %if &em_lossflag ne 0 %then %do;
21291 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
21292 +                profitloss=ALTERNATIVE_LOSS;
21293 +             %end;
21294 +            %end;
21295 +            output;
21296 +          end;
21297 +        %end;
21298 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
21299 +          if strip(CATEGORY) = "&targetevent" then do;
21300 +            %if &validFlag eq N %then %do;
21301 +             profitloss=statvalue;
21302 +            %end;
21303 +            %else %do;
21304 +             %if &em_profitflag ne 0 %then %do;
21305 +                profitloss=ALTERNATIVE_PROFIT;
21306 +             %end;
21307 +             %if &em_lossflag ne 0 %then %do;
21308 +                profitloss=ALTERNATIVE_LOSS;
21309 +             %end;
21310 +            %end;
21311 +            output;
21312 +          end;
21313 +        %end;
21314 +      run;
21315 +    %end;
21317 +    data tempprob(keep= node probtext);
21318 +      length probtext $800;
21319 +      retain probtext;
21320 +      set tempprob ;
21321 +      by node;
21323 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
21324 +      %let probtype = &EM_PROPERTY_TARGET;
21325 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
21326 +        %let probtype = ALL;
21327 +      %end;
21329 +      %if "&probtype" eq "ALL" %then %do;
21330 +        if first.node then do;
21331 +          %if &validFlag eq N %then %do;
21332 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21333 +          %end;
21334 +          %else %do;
21335 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21336 +          %end;
21337 +        end;
21338 +        else if last.node then do;
21339 +          %if &validFlag eq N %then %do;
21340 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21341 +          %end;
21342 +          %else %do;
21343 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21344 +          %end;
21345 +          output;
21346 +        end;
21347 +        else do;
21348 +          %if &validFlag eq N %then %do;
21349 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21350 +          %end;
21351 +          %else %do;
21352 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21353 +          %end;
21354 +        end;
21355 +      %end;
21356 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
21357 +        if strip(CATEGORY) = "&targetevent" then do;
21358 +          %if &validFlag eq N %then %do;
21359 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
21360 +          %end;
21361 +          %else %do;
21362 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
21363 +          %end;
21364 +          output;
21365 +        end;
21366 +      %end;
21367 +      %else %if "&probtype" eq "NONE" %then %do;
21368 +        if last.node then do;
21369 +          output;
21370 +        end;
21371 +      %end;
21372 +    run;
21373 +  %end;
21375 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
21377 +  %let oldexists=0;
21378 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
21379 +     data old_tree_plot;
21380 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
21381 +        rename nodecolor=oldnodecolor;
21382 +     run;
21384 +     proc sort data=old_tree_plot;
21385 +        by node;
21386 +     run;
21388 +     %let oldexists=1;
21389 +  %end;
21391 +  data &EM_USER_TREE_PLOT;
21392 +    length textall $800;
21393 +    merge tempoutnodes temptargetused
21395 +    %if &em_intTarget eq Y %then %do;
21396 +      tempinterval
21397 +    %end;
21399 +    %if &em_classTarget eq Y %then %do;
21401 +      %if &validFlag eq N %then %do;
21402 +        tempn(rename=(statvalue=N))
21403 +      %end;
21404 +      %else %do;
21405 +        tempn
21406 +      %end;
21408 +      temppredict tempprob
21410 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
21411 +        tempprofittext
21412 +      %end;
21413 +    %end;
21414 +    ;
21415 +    by node;
21417 +    /* build nodetext based on user selection */
21418 +    textall="";
21420 +    %if &em_intTarget eq Y %then %do;
21421 +    if tarlevel="INTERVAL" then do;
21422 +      /* Nodeid */
21423 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21424 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21425 +      %end;
21427 +      /* Target identifier if multiple targets are used */
21428 +      %if "&multipleTar" eq "Y" %then %do;
21429 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21430 +      %end;
21432 +      %if &validFlag eq Y %then %do;
21433 +         /* Column labels displayed in validflag eq Y only */
21434 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21435 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21435!+noquote ))";
21436 +         %end;
21438 +         /* Average values */
21439 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21440 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21441 +         %end;
21443 +         /* RASE */
21444 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21445 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
21446 +         %end;
21448 +         /* Count */
21449 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21450 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
21451 +         %end;
21452 +      %end;
21453 +      %else %do;
21454 +         /* Average values */
21455 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
21456 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
21457 +         %end;
21459 +         /* RASE */
21460 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
21461 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
21462 +         %end;
21464 +         /* Count */
21465 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21466 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
21467 +         %end;
21468 +      %end;
21470 +      /* nodecolor */
21471 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
21472 +        nodecolor=PREDICTION;
21473 +      %end;
21474 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
21475 +        nodecolor=RASE;
21476 +      %end;
21477 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
21478 +        nodecolor=1;
21479 +      %end;
21481 +    end;
21482 +    %end;
21483 +    %if &em_classTarget eq Y %then %do;
21484 +    if tarlevel^="INTERVAL" then  do;
21486 +      /* Nodeid */
21487 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
21488 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
21489 +      %end;
21490 +      /* Target identifier if multiple targets are used */
21491 +      %if "&multipleTar" eq "Y" %then %do;
21492 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
21493 +      %end;
21495 +      /* Predicted values */
21496 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
21497 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
21498 +      %end;
21500 +      /* Column labels displayed in validflag eq Y only */
21501 +      %if "&ValidFlag" eq "Y" %then %do;
21502 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
21503 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
21503!+noquote ))";
21504 +        %end;
21505 +      %end;
21507 +      /* Target Values */
21508 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
21509 +        textall=strip(textall)||"0A"x||strip(probtext);
21510 +      %end;
21512 +      /* include profit or loss for all target levels */
21513 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
21514 +        textall=strip(textall)||"0A"x||strip(profittext);
21515 +      %end;
21517 +      %if &validFlag eq N %then %do;
21518 +        /* Percent Correct */
21519 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21520 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
21521 +        %end;
21523 +         /* Count */
21524 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21525 +          %if "&adjusted" eq "N" %then %do;
21526 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
21527 +          %end;
21528 +          %else %do;
21529 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
21530 +          %end;
21531 +         %end;
21532 +      %end;
21533 +      %else %do;
21534 +        /* Percent Correct */
21535 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
21536 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
21537 +        %end;
21539 +         /* Count */
21540 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
21541 +          %if "&adjusted" eq "N" %then %do;
21542 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
21543 +          %end;
21544 +          %else %do;
21545 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
21546 +          %end;
21547 +         %end;
21548 +      %end;
21550 +      /* nodecolor */
21551 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
21552 +       %if &multipleTar ne Y %then %do;
21553 +        nodecolor=&predTarget;
21554 +       %end;
21555 +       %else %do;
21556 +         nodecolor=percentcorrect;
21557 +       %end;
21558 +      %end;
21559 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
21560 +        nodecolor=percentcorrect;
21561 +      %end;
21562 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
21563 +        nodecolor=1;
21564 +      %end;
21565 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
21566 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
21567 +          nodecolor=percentcorrect;
21568 +        %end;
21569 +        %else %do;
21570 +          nodecolor=profitloss;
21571 +        %end;
21572 +      %end;
21574 +    end;
21575 +    %end;
21576 +    %if &em_intTarget eq Y %then %do;
21577 +     drop  PREDICTION  TARGET TARLEVEL
21578 +     %if &ValidFlag eq Y %then %do;
21579 +         VPREDICTION
21580 +     %end;
21581 +     ;
21582 +    %end;
21583 +    %if &em_classTarget eq Y %then %do;
21584 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
21585 +     %if &ValidFlag eq Y %then %do;
21586 +         VSTATVALUE
21587 +     %end;
21588 +     ;
21589 +    %end;
21591 +  run;
21593 +  /* add leaf index information to plotds - based on primary target only*/
21594 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21595 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21596 +      set &EM_USER_OUTSTATS;
21597 +      if ((statname="PROBABILITY"
21598 +      %if &validexist %then %do;
21599 +       or statname="VALID: PROBABILITY"
21600 +      %end;
21601 +      ) AND (CATEGORY="&TARGETEVENT")
21602 +      %if "&multipleTar" eq "Y" %then %do;
21603 +        AND (Target="%EM_TARGET")
21604 +      %end;
21605 +      );
21606 +    run;
21608 +    %if &validexist %then %do;
21609 +      proc sort data=tempprob; by node; run;
21610 +      %let vpredTarget = V%substr(&predTarget, 2);
21611 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
21612 +         by node;
21613 +         id statname;
21614 +      run;
21615 +    %end;
21616 +  %end;
21617 +  %else %do;
21618 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
21619 +      set &EM_USER_OUTSTATS;
21620 +      if ((statname="PREDICTION"
21621 +      %if &validexist %then %do;
21622 +       or statname="VALID: PREDICTION"
21623 +      %end;
21624 +      )
21625 +      %if "&multipleTar" eq "Y" %then %do;
21626 +        AND (Target="%EM_TARGET")
21627 +      %end;
21628 +      );
21629 +    run;
21630 +    %if &validexist %then %do;
21631 +      proc sort data=tempprob; by node; run;
21632 +      %let vpredTarget = V%substr(&predTarget, 2);
21633 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
21634 +         by node;
21635 +         id statname;
21636 +      run;
21637 +    %end;
21638 +  %end;
21640 +  proc sort data=tempprob; by node; run;
21641 +  data tempoutnodes;
21642 +    merge tempoutnodes tempprob;
21643 +    by node;
21644 +  run;
21646 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
21647 +  data tempnodes;
21648 +    retain traintotal validtotal;
21649 +    set tempnodes(where=(leaf ne . ));
21650 +    tprob=round(&predTarget, .01);
21651 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21652 +      percevent_train=round(tprob*100, .01);
21653 +    %end;
21654 +    %else %do;
21655 +      percevent_train=tprob;
21656 +    %end;
21658 +    perc_train=round((n/traintotal)*100, 0.01);
21659 +    /* leafwidth already has a *10 multiplier */
21660 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
21662 +    %if &validexist %then %do;
21663 +      %let vpredTarget = V%substr(&predTarget,2);
21664 +      vprob=round(&vpredTarget, .01);
21665 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21666 +        percevent_valid=round(vprob*100, .01);
21667 +      %end;
21668 +      %else %do;
21669 +        percevent_valid=vprob;
21670 +      %end;
21671 +      perc_valid=round((vn/validtotal)*100, .01);
21672 +    %end;
21674 +    index=_N_;
21675 +    keep node index tprob perc_train percevent_train
21676 +    %if &validexist %then %do;
21677 +        vprob percevent_valid perc_valid
21678 +    %end;
21679 +    ;
21680 +  run;
21681 +  proc sort data=tempnodes; by node; run;
21682 +  data &EM_USER_TREE_PLOT;
21683 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
21684 +    by node;
21685 +    if missing(node) then delete;
21686 +    %if &oldexists %then %do;
21687 +      if missing(nodecolor) then nodecolor=oldnodecolor;
21688 +      drop oldnodecolor;
21689 +    %end;
21690 +    abovetext = compbl(abovetext);
21692 +    /* add variable labels */
21693 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
21694 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
21695 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
21696 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
21697 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
21698 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
21700 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21701 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
21702 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
21703 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21704 +          %end;
21705 +          %else %do;
21706 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
21707 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
21708 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
21709 +          %end;
21710 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
21712 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
21713 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
21714 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21715 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
21716 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21717 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
21718 +          %end;
21719 +          %else %do;
21720 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
21721 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
21722 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
21723 +          %end;
21724 +    ;
21725 +  run;
21727 +  /* delete temporary tables */
21728 +  proc datasets lib=work nolist;
21729 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
21730 +  run;
21732 +%mend em_tree_makePlotDs;
21736 +%macro em_tree_report;
21738 +   /* report properties */
21739 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
21740 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
21741 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
21742 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
21743 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
21744 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
21745 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
21746 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
21747 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
21748 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
21749 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
21750 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
21751 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
21753 +   %let validexist=0;
21754 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
21755 +     %let validexist=1;
21756 +   %end;
21758 +   /* determine if multiple targets will be processed */
21759 +   %let em_tree_multipleTargets=N;
21760 +   %let em_tree_numTarget=1;
21761 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
21762 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
21763 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
21764 +         %let em_tree_multipleTargets=N;
21765 +      %end;
21766 +      %else %do;
21767 +        data _null_;
21768 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
21769 +          if eof then
21770 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
21771 +        run;
21773 +        %if &em_tree_numTarget gt 1 %then %do;
21774 +           %let em_tree_multipleTargets=Y;
21775 +        %end;
21776 +     %end;
21777 +   %end;
21779 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
21781 +   /* variable importance */
21782 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
21783 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
21785 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
21786 +     /* and the columns may not be generated                                                                                 */
21787 +     %let em_tree_cvexists=;
21788 +     %let em_tree_surrexists=.;
21789 +     data _null_;
21790 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
21791 +       if eof then do ;
21792 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
21793 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
21794 +       end;
21795 +     run;
21797 +     data &EM_USER_OUTIMPORT;
21798 +         set &EM_USER_OUTIMPORT;
21799 +         /* format columns based on Precison value specified */
21800 +         format importance 15.&EM_PROPERTY_PRECISION
21801 +              %if &validexist %then %do;
21802 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
21803 +              %end;
21804 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
21805 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
21806 +              %end;
21807 +         ;
21808 +     run;
21810 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
21811 +     proc print data=&EM_USER_OUTIMPORT
21812 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
21813 +          (where=((nrules>0) OR (nsurrogates>0)))
21814 +        %end;
21815 +        %else %do;
21816 +           (where=(nrules>0))
21817 +        %end;
21818 +        label noobs
21819 +        ;
21820 +     run;
21821 +     title10;
21823 +   %end;
21825 +   /* Sequence */
21826 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
21827 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
21828 +   data _null_ ;
21829 +      set &EM_USER_outseq (obs=2) end=eof ;
21830 +      if eof then do ;
21831 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
21832 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
21833 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
21834 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
21835 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
21836 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
21837 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
21838 +      end;
21839 +    run;
21841 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
21842 +      data &EM_USER_OUTSEQ;
21843 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
21844 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
21845 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21846 +           _XMISC_=_VMISC_
21847 +        %end;
21848 +        %if "&em_tree_aprof" ne "."  %then %do;
21849 +           _XAPROF_=_VAPROF_
21850 +           _XPROF_ = _VPROF_
21851 +        %end;
21852 +        %if "&em_tree_aloss" ne "."  %then %do;
21853 +           _XALOSS_=_VALOSS_
21854 +        %end;
21855 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
21856 +           _XPASE_ = _VPASE_
21857 +           _XPMISC_ = _VPMISC_
21858 +        %end;
21860 +        ));
21861 +     %end;
21862 +     %else %do;
21863 +        set &EM_USER_OUTSEQ;
21864 +     %end;
21866 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21867 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21868 +            _MISC_   15.&EM_PROPERTY_PRECISION
21869 +         %end;
21870 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21871 +            _PASE_  15.&EM_PROPERTY_PRECISION
21872 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21873 +         %end;
21874 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21875 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21876 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21877 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21878 +            %end;
21879 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21880 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21881 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21882 +            %end;
21883 +         %end;
21884 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21885 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21886 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21887 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21888 +            %end;
21889 +         %end;
21890 +         %if "&em_tree_seq" ne "." %then %do;
21891 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21892 +         %end;
21893 +         %if "&em_tree_vseq" ne "." %then %do;
21894 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21895 +         %end;
21896 +         %if "&em_tree_aprof" ne "." %then %do;
21897 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21898 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21899 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21900 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21901 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21902 +           %end;
21903 +         %end;
21904 +         %else %if "&em_tree_aloss" ne "." %then %do;
21905 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21906 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21907 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21908 +           %end;
21909 +         %end;
21910 +      ;
21911 +    run;
21912 +   %end;
21914 +   /* Observation Based Importance */
21915 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21917 +      /* need to check for 0 obs */
21918 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21919 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21920 +      %let rc=%sysfunc(close(&dsid));
21922 +      %if &onobs %then %do;
21923 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21924 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21926 +         data &EM_USER_OUTOBSIMP;
21927 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21928 +           if _a;
21929 +           by _INPUT1_;
21930 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21931 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21932 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21933 +                   %end;
21934 +                   ;
21935 +         run;
21936 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21937 +      %end;
21938 +   %end;
21940 +  %end;
21942 +  /* create dataset to support tree diagram and icicle plot */
21943 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21944 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21946 +  /* display tree diagram */
21947 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21948 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21950 +  /* display icicle diagram */
21951 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21952 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21954 +  /* Leaf Statistics Plot */
21955 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21957 +  /* print leaf information to output window */
21958 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21960 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21961 +       by descending N;
21962 +     run;
21964 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21965 +     %local vn;
21966 +     data _null_;
21967 +       set t (obs=2) end=eof;
21968 +       if eof then do;
21969 +         call symput("vn", strip(put(vn, best.)));
21970 +       end;
21971 +     run;
21973 +     data t;
21974 +       set t;
21975 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21976 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21977 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21978 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21979 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21980 +       %end;
21981 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21982 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21983 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21984 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21985 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21986 +          %end;
21987 +       %end;
21988 +       ;
21989 +     run;
21991 +     /* determine if rase is found in t */
21992 +    %let dsid=%sysfunc(open(t,i));
21993 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21994 +    %let rc=%sysfunc(close(&dsid));
21996 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21997 +     proc print data=t noobs label;
21998 +       where tprob ne .;
21999 +       var node depth N tprob
22000 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
22001 +         %if "&vn" ne "." %then %do;
22002 +           VN
22003 +         %end;
22004 +         vprob
22005 +       %end;
22006 +       %if &raseexists %then %do;
22007 +            RASE
22008 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
22009 +              VRASE
22010 +            %end;
22011 +       %end;
22012 +       ;
22013 +     run;
22014 +     title10;
22015 +  %end;
22017 +  /* create plots that are done during training of node */
22018 +  /* display iterative plot, including reference line */
22019 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
22020 +   /* %if &nleaves eq  %then %do; */
22021 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
22022 +      data _null_;
22023 +        set &EM_USER_OUTTOPOLOGY end=eof;
22024 +        if eof then do;
22025 +          call symput('nleaves', LEAF);
22026 +        end;
22027 +      run;
22028 +   /* %end; */
22030 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
22031 +    /*%EM_REPORT(view=1, Y=_ASE_); */
22032 +  %end;
22034 +  /* display leaf statistics */
22035 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
22037 +  /* stats by node if multiple targets = Y */
22038 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
22039 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
22040 +    data &EM_USER_OUTSTATS;
22041 +      set &EM_USER_OUTSTATS;
22043 +     * if STATNAME="TARGET" then delete;
22044 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
22045 +      drop leaf;
22046 +    run;
22047 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
22049 +  %end;
22050 +  %else %do;
22051 +    /* add outstats and outdescribe to spk but not results */
22052 +    %EM_REPORT(viewtype=, key=OUTSTATS);
22053 +  %end;
22055 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE2_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 100 observations read from the data set EMWS3.TREE2_OUTIMPORT.
NOTE: The data set EMWS3.TREE2_OUTIMPORT has 100 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE2_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE2_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.TREE2_OUTSEQ.
NOTE: The data set EMWS3.TREE2_OUTSEQ has 15 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set EMWS3.TREE2_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE2_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set EMWS3.TREE2_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 8 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 16 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 263 observations read from the data set EMWS3.TREE2_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 16 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE2_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 8 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 8 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 8 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE2_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE2_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE2_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 459 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 442 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE2_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 459 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 17 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 459 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 459 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 459 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 34 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 17 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 204 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 204 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 17 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: There were 204 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 204 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: There were 17 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 17 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 204 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 17 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 17 observations read from the data set WORK.TEMPN.
NOTE: There were 17 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE2_TREE_PLOT has 17 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 459 observations read from the data set EMWS3.TREE2_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 17 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 17 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 17 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE2_TREE_PLOT.
NOTE: There were 9 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE2_TREE_PLOT has 17 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set EMWS3.TREE2_TREE_PLOT.
NOTE: The data set WORK.T has 17 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 17 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 17 observations read from the data set EMWS3.TREE2_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
22056
22057  *------------------------------------------------------------*;
22058  * End REPORT: Tree2;
22059  *------------------------------------------------------------*;
 
22060  /* Reset EM Options */
22061  options formchar="|----|+|---+=|-/\<>*";
22062  options nocenter ls=256 ps=10000;
22063  goptions reset=all device=GIF NODISPLAY;
 
22064  proc sort data=WORK.EM_USER_REPORT;
22065  by ID VIEW;
22066  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22067  proc sort data=EMWS3.TextCluster5_CMeta_TRAIN out=WORK.SUBSETINMETA;
22068  by NAME;
22069  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TEXTCLUSTER5_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 112 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22070  proc sort data=EMWS3.Tree2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
22071  by NAME;
22072  run;
 
NOTE: There were 112 observations read from the data set EMWS3.TREE2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 112 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22073  data WORK.ASSESS_META;
22074  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
22075  by NAME;
22076  run;
 
NOTE: There were 112 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 112 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 112 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22077  data EM_temp_assessMeta;
22078  set EMWS3.Tree2_CMeta_TRAIN;
22079  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
22080  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22081  data EM_temp_assessdata;
22082  set EMWS3.Tree2_TRAIN(keep=
22083  F_Category
22084  I_Category
22085  P_CategoryADVOCATE
22086  P_CategoryBUSINESS_DEVELOPMENT
22087  P_CategoryCONSULTANT
22088  P_CategoryDESIGNER
22089  P_CategoryDIGITAL_MEDIA
22090  P_CategoryFITNESS
22091  P_CategoryHEALTHCARE
22092  P_CategoryHR
22093  P_CategoryINFORMATION_TECHNOLOGY
22094  P_CategoryOTHER
22095  P_CategorySALES
22096  P_CategoryTEACHER
22097  Q_CategoryADVOCATE
22098  Q_CategoryBUSINESS_DEVELOPMENT
22099  Q_CategoryCONSULTANT
22100  Q_CategoryDESIGNER
22101  Q_CategoryDIGITAL_MEDIA
22102  Q_CategoryFITNESS
22103  Q_CategoryHEALTHCARE
22104  Q_CategoryHR
22105  Q_CategoryINFORMATION_TECHNOLOGY
22106  Q_CategoryOTHER
22107  Q_CategorySALES
22108  Q_CategoryTEACHER
22109  R_CategoryADVOCATE
22110  R_CategoryBUSINESS_DEVELOPMENT
22111  R_CategoryCONSULTANT
22112  R_CategoryDESIGNER
22113  R_CategoryDIGITAL_MEDIA
22114  R_CategoryFITNESS
22115  R_CategoryHEALTHCARE
22116  R_CategoryHR
22117  R_CategoryINFORMATION_TECHNOLOGY
22118  R_CategoryOTHER
22119  R_CategorySALES
22120  R_CategoryTEACHER
22121  U_Category
22122  V_CategoryADVOCATE
22123  V_CategoryBUSINESS_DEVELOPMENT
22124  V_CategoryCONSULTANT
22125  V_CategoryDESIGNER
22126  V_CategoryDIGITAL_MEDIA
22127  V_CategoryFITNESS
22128  V_CategoryHEALTHCARE
22129  V_CategoryHR
22130  V_CategoryINFORMATION_TECHNOLOGY
22131  V_CategoryOTHER
22132  V_CategorySALES
22133  V_CategoryTEACHER
22134  _WARN_
22135  Category
22136  );
22137  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER5_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
26419   data EM_temp_assessMeta;
26420   set EMWS3.Tree2_CMeta_TRAIN;
26421   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
26422   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26423   data EM_temp_assessdata;
26424   set EMWS3.Tree2_VALIDATE(keep=
26425   F_Category
26426   I_Category
26427   P_CategoryADVOCATE
26428   P_CategoryBUSINESS_DEVELOPMENT
26429   P_CategoryCONSULTANT
26430   P_CategoryDESIGNER
26431   P_CategoryDIGITAL_MEDIA
26432   P_CategoryFITNESS
26433   P_CategoryHEALTHCARE
26434   P_CategoryHR
26435   P_CategoryINFORMATION_TECHNOLOGY
26436   P_CategoryOTHER
26437   P_CategorySALES
26438   P_CategoryTEACHER
26439   Q_CategoryADVOCATE
26440   Q_CategoryBUSINESS_DEVELOPMENT
26441   Q_CategoryCONSULTANT
26442   Q_CategoryDESIGNER
26443   Q_CategoryDIGITAL_MEDIA
26444   Q_CategoryFITNESS
26445   Q_CategoryHEALTHCARE
26446   Q_CategoryHR
26447   Q_CategoryINFORMATION_TECHNOLOGY
26448   Q_CategoryOTHER
26449   Q_CategorySALES
26450   Q_CategoryTEACHER
26451   R_CategoryADVOCATE
26452   R_CategoryBUSINESS_DEVELOPMENT
26453   R_CategoryCONSULTANT
26454   R_CategoryDESIGNER
26455   R_CategoryDIGITAL_MEDIA
26456   R_CategoryFITNESS
26457   R_CategoryHEALTHCARE
26458   R_CategoryHR
26459   R_CategoryINFORMATION_TECHNOLOGY
26460   R_CategoryOTHER
26461   R_CategorySALES
26462   R_CategoryTEACHER
26463   U_Category
26464   V_CategoryADVOCATE
26465   V_CategoryBUSINESS_DEVELOPMENT
26466   V_CategoryCONSULTANT
26467   V_CategoryDESIGNER
26468   V_CategoryDIGITAL_MEDIA
26469   V_CategoryFITNESS
26470   V_CategoryHEALTHCARE
26471   V_CategoryHR
26472   V_CategoryINFORMATION_TECHNOLOGY
26473   V_CategoryOTHER
26474   V_CategorySALES
26475   V_CategoryTEACHER
26476   _WARN_
26477   Category
26478   );
26479   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER5_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE2_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
30770   %let _cn = %sysfunc(getoption(CENTER));
30771   options nocenter;
30772   proc print data=EMWS3.Tree2_EMREPORTFIT noobs label;
30773   var STAT LABEL TRAIN
30774   VALIDATE
30775   TEST
30776   ;
30777   by TARGET TARGETLABEL;
30778   title9 ' ';
30779   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
30780   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30781   title10;
30782   options &_cn;
 
30783   proc sort data=EMWS3.Tree2_EMCLASSIFICATION nothreads;
30784   by DATAROLE TARGET TARGETLABEL;
30785   run;
 
NOTE: There were 105 observations read from the data set EMWS3.TREE2_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE2_EMCLASSIFICATION has 105 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30786   %let _cn = %sysfunc(getoption(CENTER));
30787   options nocenter;
30788   proc print data=EMWS3.Tree2_EMCLASSIFICATION noobs label;
30789   var from into pct_row pct_col count percent
30790   ;
30791   by DATAROLE TARGET TARGETLABEL;
30792   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
30793   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
30794   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
30795   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
30796   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
30797   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
30798   where _TYPE_='PREDICTION';
30799   title9 ' ';
30800   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
30801   run;
 
NOTE: There were 105 observations read from the data set EMWS3.TREE2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
30802   title9;
30803   title10;
30804   options &_cn;
 
30805   %let _cn = %sysfunc(getoption(CENTER));
30806   options nocenter;
30807   data EMWS3.Tree2_EMEVENTREPORT;
30808   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
30809   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
30809 ! FALSEEVENT
30810   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
30811      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
30812   FALSEEVENT=0;
30813   FALSENEVENT=0;
30814   TRUEEVENT=0;
30815   TRUENEVENT=0;
30816   set EMWS3.Tree2_EMEVENTREPORT;
30817   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE2_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE2_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30818   proc print data=EMWS3.Tree2_EMEVENTREPORT noobs label;
30819   title9 ' ';
30820   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
30821   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
30822   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE2_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30823   title10;
30824   options &_cn;
 
30825   proc datasets library=EMWS3 nolist;
30826   modify Tree2_EMRANK;
30827   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
30828   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30829   run;
 
NOTE: MODIFY was successful for EMWS3.TREE2_EMRANK.DATA.
30830   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
30831   %let _cn = %sysfunc(getoption(CENTER));
30832   options nocenter;
30833   proc print data=EMWS3.Tree2_EMRANK label noobs;
30834   var
30835   decile gain lift liftc resp respc N _meanP_;
30836   by
30837   notsorted DATAROLE
30838   notsorted TARGET
30839   notsorted TARGETLABEL
30840   ;
30841   title9 ' ';
30842   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
30843   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30844   title10;
30845   options &_cn;
 
30846   proc datasets library=EMWS3 nolist;
30847   modify Tree2_EMSCOREDIST;
30848   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
30849   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
30850   run;
 
NOTE: MODIFY was successful for EMWS3.TREE2_EMSCOREDIST.DATA.
30851   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
