*------------------------------------------------------------*
User:                lahar
Date:                November 23, 2023
Time:                22:13:09
Site:                70085622
Platform:            X64_10HOME
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 23, 2023
Time:                22:13:02
*------------------------------------------------------------*
15225  proc freq data=EMWS3.Tree9_VariableSet noprint;
15226  table ROLE*LEVEL/out=WORK.Tree9META;
15227  run;
 
NOTE: There were 47 observations read from the data set EMWS3.TREE9_VARIABLESET.
NOTE: The data set WORK.TREE9META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
15228  proc print data=WORK.Tree9META label noobs;
15229  var ROLE LEVEL COUNT;
15230  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
15231  title9 ' ';
15232  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
15233  run;
 
NOTE: There were 7 observations read from the data set WORK.TREE9META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15234  title10;
 
15235  %let EMNORLEN = %DMNORLEN;
EMWS3.TextCluster9_TRAIN EMWS3.TextCluster9_TRAIN
EMWS3.TextCluster9_TRAIN EMWS3.TextCluster9_TRAIN EMWS3 TextCluster9_TRAIN
EMWS3.TextCluster9_TRAIN EMWS3.TextCluster9_TRAIN
EMWS3.TextCluster9_TRAIN EMWS3.TextCluster9_TRAIN EMWS3 TextCluster9_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
15282  data WORK.Tree9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
15283  length ORDER $20;
15284  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
15285     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15286  set EMWS3.TREE9_CATEGORY_DM( where=(_TYPE_="TARGET"));
15287  NumLevels=12;
15288  select(upcase(ORDER));
15289  when('DESC') ORDER = 'Descending';
15290  when('ASC') ORDER = 'Ascending';
15291  when('FMTDESC') ORDER = 'Formatted Descending';
15292  when('FMTASC') ORDER = 'Formatted Ascending';
15293  otherwise ORDER = 'Descending';
15294  end;
15295  output;
15296  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.TREE9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15297  title9 ' ';
15298  proc print data=WORK.Tree9_EVENT noobs label;
15299  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
15300  title9 ' ';
15301  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
15302  run;
 
NOTE: There were 1 observations read from the data set WORK.TREE9_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15303  title10;
 
"No decisions defined for target "Category"."
15304  proc print data = EMWS3.Tree9_Category_DM noobs label;
15305  var _type_ variable label;
15306  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
15307  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
15308  title9 ' ';
15309  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
15310  run;
 
NOTE: There were 27 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15311  title10;
 
15312  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15936  *------------------------------------------------------------*;
15937  * Tree9: Generation of macros and macro variables;
15938  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15939  *------------------------------------------------------------*;
 
15940  %let EMEXCEPTIONSTRING=;
15941  *------------------------------------------------------------*;
15942  * TRAIN: Tree9;
15943  *------------------------------------------------------------*;
15944  %let EM_ACTION = TRAIN;
15945  %let syscc = 0;
15946  %macro main;
15947
15948    %if %upcase(&EM_ACTION) = CREATE %then %do;
15949      filename temp catalog 'sashelp.emmodl.tree_create.source';
15950      %include temp;
15951      filename temp;
15952
15953      %em_tree_create;
15954    %end;
15955
15956     %else
15957     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15958
15959         filename temp catalog 'sashelp.emmodl.tree_train.source';
15960         %include temp;
15961         filename temp;
15962         %em_tree_train;
15963     %end;
15964
15965    %else
15966    %if %upcase(&EM_ACTION) = SCORE %then %do;
15967      filename temp catalog 'sashelp.emmodl.tree_score.source';
15968      %include temp;
15969      filename temp;
15970
15971      %em_tree_score;
15972
15973    %end;
15974
15975    %else
15976    %if %upcase(&EM_ACTION) = REPORT %then %do;
15977
15978         filename temp catalog 'sashelp.emmodl.tree_report.source';
15979         %include temp;
15980         filename temp;
15981
15982         %em_tree_report;
15983     %end;
15984
15985    %else
15986    %if %upcase(&EM_ACTION) = OPENINT %then %do;
15987
15988         filename temp catalog 'sashelp.emmodl.tree_actions.source';
15989         %include temp;
15990         filename temp;
15991         %EM_TREE_OPENTREEVIEWER;
15992
15993     %end;
15994
15995    %else
15996    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
15997
15998         filename temp catalog 'sashelp.emmodl.tree_actions.source';
15999         %include temp;
16000         filename temp;
16001         %EM_TREE_CLOSETREEVIEWER;
16002
16003     %end;
16004
16005
16006     %doendm:
16007  %mend main;
16008
16009  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAIN.SOURCE.
16011 +%macro em_tree_train;
16013 +   %if &EM_IMPORT_DATA eq %then %do;
16014 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
16015 +       %put &em_codebar;
16016 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
16017 +       %put &errormsg;
16018 +       %put &em_codebar;
16019 +       %goto doendm;
16020 +   %end;
16021 +   %else
16022 +       %let EMEXCEPTIONSTRING =;
16024 +   %if  &EM_NUM_TARGET lt 1 %then %do;
16025 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
16026 +        %put &em_codebar;
16027 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
16028 +        %put &errormsg;
16029 +        %put &em_codebar;
16030 +        %goto doendm;
16031 +   %end;
16033 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
16034 +        and (&EM_NUM_NOMINAL_INPUT < 1) and (&EM_NUM_INTERVAL_REJECTED < 1) and (&EM_NUM_BINARY_REJECTED <1)
16035 +        and (&EM_NUM_ORDINAL_REJECTED < 1) and (&EM_NUM_NOMINAL_REJECTED < 1) %then %do;
16036 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
16037 +        %put &em_codebar;
16038 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
16039 +        %put &errormsg;
16040 +        %put &em_codebar;
16041 +        %goto doendm;
16042 +   %end;
16044 +   /* Initialize property macro variables */
16045 +   filename temp catalog 'sashelp.emmodl.tree_macros.source';
16046 +   %include temp;
16047 +   filename temp;
16049 +   %EM_SetProperties;
16051 +   /* need to delete EMTREE if not used as import tree data since AUTODELETE=N */
16052 +   %EM_GETNAME(key=EMTREE, type=DATA);
16053 +   %if "&EM_PROPERTY_IMPORTMODEL" eq "Y" %then %do;
16054 +     /* if import eq Y and no importtable defined, throw an exception */
16055 +      %if %length(&EM_PROPERTY_ImportedTreeData)=0 %then %do;
16056 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEMODELDATASET;
16057 +         %let  errmsg = %sysfunc(sasmsg(sashelp.dmine, NOTREEMODELDATASET_ERR , NOQUOTE));
16058 +         %put &em_codebar;
16059 +         %put &errmsg;
16060 +         %put &em_codebar;
16061 +         %goto doendm;
16062 +      %end;
16063 +      %else %if %sysfunc(exist(&EM_PROPERTY_ImportedTreeData))=0 %then %do;
16064 +         %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16065 +         %put &em_codebar;
16066 +         %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16067 +         %put &errormsg;
16068 +         %put &em_codebar;
16069 +         %goto doendm;
16070 +      %end;
16071 +      %else %do;
16072 +         %let dsid=%sysfunc(open(&EM_PROPERTY_ImportedTreeData));
16073 +         %let varnumID = %sysfunc(varnum(&dsid,ID));
16074 +         %let varnumLabel = %sysfunc(varnum(&dsid,LABEL));
16075 +         %let varnumX = %sysfunc(varnum(&dsid,X));
16076 +         %let varnumY = %sysfunc(varnum(&dsid,Y));
16077 +         %let dsid = %sysfunc(close(&dsid));
16078 +         %if &varnumID=0 or &varnumLabel=0 or &varnumX=0 or &varnumY=0 %then %do;
16079 +            %let EMEXCEPTIONSTRING = exception.server.EMTOOL.INVALIDTREEMODELDATASET;
16080 +            %put &em_codebar;
16081 +            %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.INVALIDTREEMODELDATASET_ERR, NOQUOTE));
16082 +            %put &errormsg;
16083 +            %put &em_codebar;
16084 +            %goto doendm;
16085 +         %end;
16086 +      %end;
16087 +      %if %qupcase(&EM_USER_EMTREE) ne %qupcase(&EM_PROPERTY_ImportedTreeData) and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16088 +         proc delete data=&EM_USER_EMTREE;
16089 +         run;
16090 +      %end;
16091 +   %end;
16092 +   %else %if "&EM_PROPERTY_FREEZE" ne "Y" and (%sysfunc(exist(&EM_USER_EMTREE)) or %sysfunc(exist(&EM_USER_EMTREE, VIEW))) %then %do;
16093 +      proc delete data=&EM_USER_EMTREE;
16094 +      run;
16095 +   %end;
16097 +   /* load tree macros */
16098 +   filename temp catalog 'sashelp.emmodl.tree_trainmacros.source';
16099 +   %include temp;
16100 +   filename temp;
16102 +   /* data sets */
16103 +   %EM_GETNAME(key=OUTSTATS,   type=DATA);
16104 +   %EM_GETNAME(key=EXPORTTREE, type=DATA);
16105 +   %EM_GETNAME(key=TREE_PLOT,     type=DATA);
16107 +   /* files */
16108 +   %EM_REGISTER(key=ENGLISHRULES, type=FILE, extension=txt);
16110 +   /* check actual num of target levels */
16111 +   %if ("%EM_TARGET_LEVEL" eq "BINARY") %then %do;
16112 +      %EM_CheckBinaryTargetLevel(indata=&EM_IMPORT_DATA, target=%EM_TARGET,
16113 +                              nLevel=_nTargetLevel );
16114 +      %if &_nTargetLevel  > 2 %then %do;
16115 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
16116 +        %put &em_codebar;
16117 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
16118 +        %put &errormsg;
16119 +        %put &em_codebar;
16120 +        %goto doendm;
16121 +      %end;
16122 +   %end;
16124 +   /* neither cost variables nor constant cost are valid with USEDECISIONS */
16125 +   %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16126 +     %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16127 +        %let costflag=0;
16128 +        data _null_;
16129 +          set &EM_DEC_DECMETA(where=(_TYPE_="DECISION" AND USE="Y" AND ^missing(COST) )) end=eof;
16130 +          if eof then call symput("costflag", _N_);
16131 +        run;
16132 +        %if &costflag gt 0 %then %do;
16133 +          %let EMEXCEPTIONSTRING = exception.server.TREE.INVALIDDECISION;
16134 +          %put &em_codebar;
16135 +          %let errormsg = %sysfunc(sasmsg(sashelp.dmine, costnotvalidwithusedecisions_note_err, NOQUOTE));
16136 +          %put &errormsg;
16137 +          %put &em_codebar;
16138 +          %goto doendm;
16139 +       %end;
16140 +     %end;
16141 +   %end;
16143 +   /* determine if multiple targets will be processed */
16144 +   %let em_tree_multipleTargets=N;
16145 +   %let em_tree_numTarget = 1;
16146 +   %let em_tree_targetVars=;
16148 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16149 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16150 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16151 +         %let em_tree_multipleTargets=N;
16152 +      %end;
16153 +      %else %do;
16154 +         /* create macro array of targets  */
16155 +         data _null_;
16156 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16157 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16158 +           if eof then
16159 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16160 +        run;
16162 +        %if &em_tree_numTarget gt 1 %then %do;
16163 +           %let em_tree_multipleTargets=Y;
16164 +        %end;
16165 +      %end;
16166 +   %end;
16168 +   /* create view of only necessary variable for performance reasons */
16169 +   %let tempData = &EM_LIB..em_&EM_NODEID;
16170 +   data &tempData / view=&tempData;
16171 +     set &EM_IMPORT_DATA (keep=%EM_INPUT %EM_REJECTED %EM_TARGET %EM_FREQ %EM_COST
16172 +     %if "&em_tree_multipleTargets" eq "N" %then %do;
16173 +       %EM_TARGET
16174 +     %end;
16175 +     %else %do;
16176 +       %if &em_tree_numTarget ne 0 %then %do;
16177 +         %do i=1 %to &em_tree_numTarget;
16178 +            &&em_tree_targetVars&i
16179 +         %end;
16180 +       %end;
16181 +     %end;
16182 +     );
16183 +   run;
16185 +   /* run Tree procedure */
16186 +   %em_tree_runTreeProcedure(indata=&tempData, multipleTar=&em_tree_multipleTargets);
16188 +   /* Check return code and throw exception if error is detected */
16189 +   %if %length(&EMEXCEPTIONSTRING) %then %goto doendm;
16190 +   %if &syserr %then %do;
16191 +     %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16192 +     %goto doendm;
16193 +   %end;
16195 +   /* add decision score code if multiple targets are processed */
16196 +   %if "&em_tree_multipleTargets" eq "Y" %then %do;
16197 +     %EM_MODEL(TARGET=%EM_TARGET, DECSCORECODE=Y, CLASSIFICATION=Y, FITSTATISTICS=N);
16198 +   %end;
16200 +   /* create outfit dataset if multiple score statements have been executed */
16201 +   %em_tree_createFitStats(multipleTar=&em_tree_multipleTargets);
16203 +   /* create English Rules */
16204 +   filename X "&EM_USER_ENGLISHRULES" encoding='utf-8' NOBOM;
16205 +     %if "&em_Tree_multipleTargets" eq "N" %then %do;
16206 +       %em_tree_makeEnglishRules;
16208 +       /* English Rules */
16209 +       %EM_REPORT(key=ENGLISHRULES, viewtype=SOURCE, block=MODEL, description=ENGLISHRULES, autodisplay=N);
16211 +     %end;
16212 +   filename x;
16214 +   %doendm:
16215 +%mend em_tree_train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_MACROS.SOURCE.
16216 +%macro EM_SetProperties;
16218 +   /* train properties */
16219 +   %em_checkmacro(name=EM_PROPERTY_ImportModel,            value=N, global=Y);
16220 +   %em_checkmacro(name=EM_PROPERTY_ImportedTreeData,       value=, global=Y);
16221 +   %em_checkmacro(name=EM_PROPERTY_FREEZE,                 value=N, global=Y);
16222 +   %em_checkmacro(name=EM_PROPERTY_USEMULTIPLETARGET,      value=N, global=Y);
16223 +   %em_checkmacro(name=EM_PROPERTY_NOMINALCRITERION,       value=PROBCHISQ, global=Y);
16224 +   %em_checkmacro(name=EM_PROPERTY_ORDINALCRITERION,       value=ENTROPY, global=Y);
16225 +   %em_checkmacro(name=EM_PROPERTY_INTERVALCRITERION,      value=PROBF, global=Y);
16226 +   %em_checkmacro(name=EM_PROPERTY_CRITERION,              value=DEFAULT, global=Y);
16227 +   %em_checkmacro(name=EM_PROPERTY_SIGLEVEL,               value=0.2, global=Y);
16228 +   %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,              value=., global=Y);
16229 +   %em_checkmacro(name=EM_PROPERTY_LEAFSIZE,               value=5, global=Y);
16230 +   %em_checkmacro(name=EM_PROPERTY_MINCATSIZE,             value=5, global=Y);
16231 +   %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,              value=2, global=Y);
16232 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,               value=6, global=Y);
16233 +   %em_checkmacro(name=EM_PROPERTY_NRULES,                 value=5, global=Y);
16234 +   %em_checkmacro(name=EM_PROPERTY_NSURRS,                 value=0, global=Y);
16235 +   %em_checkmacro(name=EM_PROPERTY_MISSINGVALUE,           value=USEINSEARCH, global=Y);
16236 +   %em_checkmacro(name=EM_PROPERTY_USEVARONCE,             value=N, global=Y);
16237 +   %em_checkmacro(name=EM_PROPERTY_SUBTREE,                value=ASSESSMENT, global=Y);
16238 +   %em_checkmacro(name=EM_PROPERTY_NSUBTREE,               value=1, global=Y);
16239 +   %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE,          value=PROFIT/LOSS, global=Y);
16240 +   %em_checkmacro(name=EM_PROPERTY_ASSESSPERCENTAGE,       value=0.25, global=Y);
16241 +   %em_checkmacro(name=EM_PROPERTY_NODESAMPLE,             value=20000, global=Y);
16242 +   %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,             value=5000, global=Y);
16243 +   %em_checkmacro(name=EM_PROPERTY_USEDECISION,            value=N, global=Y);
16244 +   %em_checkmacro(name=EM_PROPERTY_USEPRIORS,              value=N, global=Y);
16245 +   %em_checkmacro(name=EM_PROPERTY_KASS,                   value=Y, global=Y);
16246 +   %em_checkmacro(name=EM_PROPERTY_KASSAPPLY,              value=BEFORE, global=Y);
16247 +   %em_checkmacro(name=EM_PROPERTY_DEPTH,                  value=Y, global=Y);
16248 +   %em_checkmacro(name=EM_PROPERTY_INPUTS,                 value=N, global=Y);
16249 +   %em_checkmacro(name=EM_PROPERTY_NUMINPUTS,              value=1, global=Y);
16250 +   %em_checkmacro(name=EM_PROPERTY_DUMMY,                  value=N, global=Y);
16251 +   %em_checkmacro(name=EM_PROPERTY_LEAFID,                 value=Y, global=Y);
16252 +   %em_checkmacro(name=EM_PROPERTY_PREDICT,                value=Y, global=Y);
16253 +   %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,            value=DISK, global=Y);
16254 +   %em_checkmacro(name=EM_PROPERTY_CV,                     value=N, global=Y);
16255 +   %em_checkmacro(name=EM_PROPERTY_CVNITER,                value=10, global=Y);
16256 +   %em_checkmacro(name=EM_PROPERTY_CVREPEAT,               value=1, global=Y);
16257 +   %em_checkmacro(name=EM_PROPERTY_CVSEED,                 value=12345, global=Y);
16258 +   %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE,          value=N, global=Y);
16259 +   %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP,           value=5, global=Y);
16261 +   /* properties for interactive sample */
16262 +   %em_checkmacro(name=EM_PROPERTY_CREATESAMPLE,           value=DEFAULT, global=Y);
16263 +   %em_checkmacro(name=EM_PROPERTY_SAMPLEMETHOD,           value=RANDOM, global=Y);
16264 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESIZE,             value=10000, global=Y);
16265 +   %em_checkmacro(name=EM_PROPERTY_SAMPLESEED,             value=12345, global=Y);
16267 +   /* report properties */
16268 +   %em_checkmacro(name=EM_PROPERTY_PRECISION,              value=4, global=Y);
16269 +   %em_checkmacro(name=EM_PROPERTY_SPLITPRECISION,         value=4, global=Y);
16270 +   %em_checkmacro(name=EM_PROPERTY_CLASSCOLORBY,           value=PERCENTEVEN, global=Y);
16271 +   %em_checkmacro(name=EM_PROPERTY_INTCOLORBY,             value=AVG, global=Y);
16272 +   %em_checkmacro(name=EM_PROPERTY_SHOWNODEID,             value=Y, global=Y);
16273 +   %em_checkmacro(name=EM_PROPERTY_SHOWVALID,              value=Y, global=Y);
16274 +   %em_checkmacro(name=EM_PROPERTY_PRED,                   value=N, global=Y);
16275 +   %em_checkmacro(name=EM_PROPERTY_TARGET,                 value=ALL, global=Y);
16276 +   %em_checkmacro(name=EM_PROPERTY_COUNT,                  value=Y, global=Y);
16277 +   %em_checkmacro(name=EM_PROPERTY_PERCENTCORRECT,         value=N, global=Y);
16278 +   %em_checkmacro(name=EM_PROPERTY_PROFITLOSS,             value=NONE, global=Y);
16279 +   %em_checkmacro(name=EM_PROPERTY_AVG,                    value=Y, global=Y);
16280 +   %em_checkmacro(name=EM_PROPERTY_RASE,                   value=N, global=Y);
16282 +   /* score properties */
16283 +   %em_checkmacro(name=EM_PROPERTY_VARSELECTION,           value=Y, global=Y);
16284 +   %em_checkmacro(name=EM_PROPERTY_NODEROLE,               value=SEGMENT, global=Y);
16286 +%mend EM_SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Deleting EMWS3.TREE9_EMTREE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_TRAINMACROS.SOURCE.
16288 +%Macro EM_CheckBinaryTargetLevel(indata=, target=,  nLevel= );
16289 +  %global &nLevel;
16290 +  proc dmdb batch data=&indata
16291 +    classout=_tmp_dmdbout;
16292 +    class &target;
16293 +  run;
16294 +  data _tmp_dmdbout;
16295 +    set _tmp_dmdbout;
16296 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
16297 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
16298 +  run;
16299 +  data _null_;
16300 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
16301 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
16302 +    %let dsid = %sysfunc(close(&dsid));
16303 +     call symput("&nLevel", put(&_obs, Best12.));
16304 +  run;
16306 +  proc datasets lib=work nolist;
16307 +     delete _tmp_dmdbout;
16308 +  run;
16309 +  quit;
16310 +%Mend EM_CheckBinaryTargetLevel;
16313 +%macro em_tree_runTreeProcedure(indata= , multipleTar= , intFlag= );
16315 +  /* determine the number of obs in training data */
16316 +  proc sql;
16317 +    reset noprint;
16318 +    select count(*) into :em_nobs from &indata;
16319 +  quit;
16321 +  /* determine the number of input variables */
16322 +  %let numinputs = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT+
16323 +                         &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED + &EM_NUM_ORDINAL_REJECTED + &EM_NUM_INTERVAL_REJECTED);
16325 +  /* retrieve targetEvent from decmeta */
16326 +  %let targetEvent=;
16327 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
16328 +    %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16329 +      data _null_;
16330 +       set &EM_DEC_DECMETA(where=(_TYPE_="TARGET"));
16331 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
16332 +      run;
16333 +    %end;
16334 +  %end;
16336 +  /* create targetTable if multipleTar eq Y */
16337 +  data temptarget;
16338 +    set &EM_DATA_VARIABLESET;
16339 +    where ROLE="TARGET" AND LEVEL^="ORDINAL";
16340 +  run;
16342 + /* data sets */
16343 + %EM_GETNAME(key=OUTSTATS,      type=DATA);
16344 + %EM_GETNAME(key=EMTREE,        type=DATA);
16345 + %EM_GETNAME(key=OUTOBSIMP,     type=DATA);
16346 + %EM_GETNAME(key=OUTSEQ,        type=DATA);
16347 + %EM_GETNAME(key=OUTIMPORT,     type=DATA);
16348 + %EM_GETNAME(key=OUTNODES,      type=DATA);
16349 + %EM_GETNAME(key=OUTSUMMARY,    type=DATA);
16350 + %EM_GETNAME(key=OUTTOPOLOGY,   type=DATA);
16351 + %EM_GETNAME(key=OUTPATH,       type=DATA);
16352 + %EM_GETNAME(key=OUTRULES,      type=DATA);
16354 + /* files */
16355 + %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16356 + %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16358 + /* turn on pmml if requested */
16359 + %let nnpmml=0;
16360 + %if %symexist(EM_PMML) %then %do;
16361 +    %if %upcase(&EM_PMML)=Y or %upcase(&EM_PMML)=YES %then %do;
16362 +       %let nnpmml=1;
16364 +       ods pmml file="&EM_FILE_EMPMML" encoding="UTF-8";
16365 +   %end;
16366 +%end;
16368 +%let numClassTarget = %sysevalf(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET);
16370 +%if &nnpmml or &numClassTarget %then %do;
16372 +    /* create dmdb needed for pmml generation */
16373 +    %let tree_maxlevel = 512;
16374 +    %if %symexist(EM_TRAIN_MAXLEVELS) %then %do;
16375 +      %if &EM_TRAIN_MAXLEVELS ne %then %do;
16376 +        %let tree_maxlevel = &EM_TRAIN_MAXLEVELS;
16377 +      %end;
16378 +    %end;
16379 +    %if &tree_maxlevel gt 0 %then %do;
16380 +        %let tree_maxlevel=%sysevalf(&tree_maxlevel+1);
16381 +       %let tree_maxlevel=%sysfunc(max(3, &tree_maxlevel ));
16382 +    %end;
16384 +    %let targetOrderString =;
16385 +    %let targetString = ;
16386 +    data _null_;
16387 +       length orderString nameString $10000;
16388 +       retain orderString nameString;
16389 +       set &em_data_variableset end=eof;
16390 +       %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" and ^&em_num_ordinal_target %then %do;
16391 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL");
16392 +       %end;
16393 +       %else %do;
16394 +           where ROLE="TARGET" and LEVEL in("BINARY", "NOMINAL", "ORDINAL") and USE ='Y';
16395 +       %end;          select(order);
16396 +         when('')        order ='DESC';
16397 +         when('FMTASC')  order='ASCFMT';
16398 +         when('FMTDESC') order='DESFMT';
16399 +         otherwise;
16400 +       end;
16401 +       orderString = trim(orderString)!!' '!!trim(NAME)!!'('!!trim(order)!!')';
16402 +       nameString = trim(nameString)!!' '!!trim(NAME);
16404 +       if eof then do;
16405 +          call symput('targetOrderString', trim(orderString));
16406 +          call symput('targetString', trim(nameString));
16407 +       end;
16408 +    run;
16410 +    %let arborkluge= "work._treeDMDB";
16412 +    proc dmdb batch data=&indata
16413 +    %if &nnpmml %then %do;
16414 +        PMML
16415 +    %end;
16416 +     dmdbcat=_treeDMDB classout=classout varout=varout maxlevel=&tree_maxlevel;
16418 +      %if &nnpmml %then %do;
16419 +           %if "%EM_ID" ne "" %then %do;
16420 +             id %EM_ID;
16421 +           %end;
16422 +           %if &EM_NUM_CLASS gt 0 %then %do;
16423 +             class %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_ORDINAL_INPUT
16424 +                  %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED %EM_ORDINAL_REJECTED
16425 +                  &targetOrderString;
16426 +           %end;
16427 +           %if &EM_NUM_INTERVAL gt 0 %then %do;
16428 +             var %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET;
16429 +           %end;
16430 +           target &targetString %EM_INTERVAL_TARGET;
16431 +           %if "%EM_FREQ" ne "" %then %do;
16432 +             freq %EM_FREQ;
16433 +           %end;
16434 +      %end;
16435 +      %else %do;
16436 +         class  &targetOrderString;
16437 +         target &targetString %EM_INTERVAL_TARGET;
16438 +      %end;
16439 +    run;
16440 +    quit;
16442 +    proc datasets lib=work nolist;
16443 +       delete classout varout;
16444 +    run;
16445 +    quit;
16447 + %end;
16450 + /* run Arbor procedure */
16451 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16452 +  proc arbor data=&INDATA
16454 +  %if "&EM_PROPERTY_LEAFSIZE" ne "" %then %do;
16455 +    Leafsize = &EM_PROPERTY_LEAFSIZE
16456 +  %end;
16458 +  %if (("&EM_PROPERTY_SPLITSIZE" ne ".") AND (&EM_PROPERTY_SPLITSIZE lt &em_nobs)) %then %do;
16459 +    Splitsize = &EM_PROPERTY_SPLITSIZE
16460 +  %end;
16462 +  %if "&EM_PROPERTY_MINCATSIZE" ne "" %then %do;
16463 +    MinCatSize = &EM_PROPERTY_MINCATSIZE
16464 +  %end;
16466 +  %if "&EM_PROPERTY_MAXBRANCH" ne "" %then %do;
16467 +    MaxBranch = &EM_PROPERTY_MAXBRANCH
16468 +  %end;
16470 +  %if "&EM_PROPERTY_MAXDEPTH" ne "" %then %do;
16471 +    MaxDepth = &EM_PROPERTY_MAXDEPTH
16472 +  %end;
16474 +  %if (("%EM_TARGET_LEVEL" eq "NOMINAL") OR ("%EM_TARGET_LEVEL" eq "BINARY")) %then %do;
16475 +    %let Criterion = &EM_PROPERTY_NOMINALCRITERION;
16476 +  %end;
16477 +  %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16478 +    %let Criterion = &EM_PROPERTY_ORDINALCRITERION;
16479 +  %end;
16480 +  %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16481 +    %let Criterion = &EM_PROPERTY_INTERVALCRITERION;
16482 +  %end;
16484 +  %if (("&criterion" eq "PROBCHISQ") or ("&criterion" eq "PROBF")) %then %do;
16485 +    %if "&EM_PROPERTY_SIGLEVEL" ne "" %then %do;
16486 +      alpha = &EM_PROPERTY_SIGLEVEL
16487 +    %end;
16488 +  %end;
16490 +  %if (("&EM_PROPERTY_KASS" eq "Y") OR ("&EM_PROPERTY_DEPTH" eq "Y") or ("&EM_PROPERTY_INPUTS" eq "Y")) %then %do;
16491 +    %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16492 +      %if (("&EM_PROPERTY_KASS" eq "Y") or ("&EM_PROPERTY_DEPTH" eq "Y")) %then %do;
16493 +        %if "&EM_PROPERTY_KASSAPPLY" eq "BEFORE" %then %let chaid = CHAIDBEFORE;
16494 +        %else %if "&EM_PROPERTY_KASSAPPLY" eq "AFTER" %then %let chaid = CHAIDAFTER;
16496 +        padjust =
16497 +        %if "&EM_PROPERTY_KASS" eq "Y" %then %do;
16498 +          &chaid
16499 +        %end;
16500 +        %if "&EM_PROPERTY_DEPTH" eq "Y" %then %do;
16501 +          DEPTH
16502 +        %end;
16503 +      %end;
16504 +      %if "&EM_PROPERTY_INPUTS" eq "Y" %then %do;
16505 +         %let num_inputs = %sysfunc(min(&numinputs, &EM_PROPERTY_NUMINPUTS));
16506 +         pvars = &num_inputs
16507 +      %end;
16508 +    %end;
16509 +  %end;
16510 +  %else %do;
16511 +      %if (("&Criterion" eq "PROBCHISQ") OR ("&Criterion" eq "PROBF") OR ("&Criterion" eq "DEFAULT")) %then %do;
16512 +         padjust = NONE
16513 +      %end;
16514 +  %end;
16516 +  %if "&EM_PROPERTY_NRULES" ne "" %then %do;
16517 +    %let num_nrules = %sysfunc(min(&numinputs, &EM_PROPERTY_NRULES));
16518 +    Maxrules = &num_nrules
16519 +  %end;
16521 +  %if "&EM_PROPERTY_NSURRS" ne "" %then %do;
16522 +    %let num_nsurrs = %sysfunc(min((&numinputs-1), &EM_PROPERTY_NSURRS));
16523 +    Maxsurrs = &num_nsurrs
16524 +  %end;
16526 +  %if "&EM_PROPERTY_MISSINGVALUE" ne "" %then %do;
16527 +     Missing=&EM_PROPERTY_MISSINGVALUE
16528 +  %end;
16530 +  %if "&EM_PROPERTY_USEVARONCE" eq "Y" %then %do;
16531 +     USEVARONCE
16532 +  %end;
16534 +  %if "&EM_PROPERTY_EXHAUSTIVE" ne "" %then %do;
16535 +    Exhaustive=&EM_PROPERTY_EXHAUSTIVE
16536 +  %end;
16539 +  %if (("&multipleTar" eq "N") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16540 +    event = "&targetEvent"
16541 +  %end;
16543 +  %if "&EM_PROPERTY_USEDECISION" eq "Y" %then %do;
16544 +     DECSEARCH
16545 +  %end;
16547 +  %if "&EM_PROPERTY_USEPRIORS" eq "Y" %then %do;
16548 +     PRIORSSEARCH
16549 +  %end;
16551 +  %if &arbor_1 ne %then %do;
16552 +    &arbor_1
16553 +  %end;
16555 +  %if &em_arbor ne %then %do;
16556 +     &em_arbor
16557 +  %end;
16558 +  ;
16559 + %end;
16560 + %else %if "&EM_PROPERTY_IMPORTMODEL" eq "Y"  %then %do;
16561 +     proc arbor data=&INDATA inmodel=&EM_PROPERTY_ImportedTreeData refreshtrain;
16562 +       Performance &EM_PROPERTY_PERFORMANCE
16563 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16564 +         nodesize=&EM_PROPERTY_NODESAMPLE
16565 +       %end;
16566 +       ;
16567 +       interact;
16568 + %end;
16569 + %else %if "&EM_PROPERTY_FREEZE" eq "Y" %then %do;
16570 +   %if %sysfunc(exist(&EM_USER_EMTREE)) ne 1 %then %do;
16571 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16572 +    %put &em_codebar;
16573 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16574 +    %put &errormsg;
16575 +    %put &em_codebar;
16576 +    %goto doendm;
16577 +   %end;
16578 +   %else %do;
16579 +     proc arbor data=&INDATA inmodel=&EM_USER_EMTREE refreshtrain;
16580 +       Performance &EM_PROPERTY_PERFORMANCE
16581 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16582 +         nodesize=&EM_PROPERTY_NODESAMPLE
16583 +       %end;
16584 +       ;
16585 +       interact;
16586 +   %end;
16587 + %end;
16589 + %else %do;
16590 +   %if %sysfunc(exist(&EM_USER_BROWSETREE)) ne 1 %then %do;
16591 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTREEDATASET;
16592 +    %put &em_codebar;
16593 +    %let errormsg = %sysfunc(sasmsg(sashelp.dmine, emtool.notreedataset_err, NOQUOTE));
16594 +    %put &errormsg;
16595 +    %put &em_codebar;
16596 +    %goto doendm;
16597 +   %end;
16598 +   %else %do;
16599 +      proc arbor data=&INDATA inmodel=&EM_USER_BROWSETREE refrestrain;
16600 +       Performance &EM_PROPERTY_PERFORMANCE
16601 +       %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16602 +         nodesize=&EM_PROPERTY_NODESAMPLE
16603 +       %end;
16604 +       ;
16605 +        interact;
16606 +   %end;
16607 + %end;
16609 + %if "&EM_PROPERTY_FREEZE" eq "N" and "&EM_PROPERTY_IMPORTMODEL" eq "N" %then %do;
16610 +    %if %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED) gt 0 %then %do;
16611 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
16612 +    %end;
16614 +    %if  %eval(&EM_NUM_NOMINAL_INPUT + &EM_NUM_NOMINAL_REJECTED) gt 0 %then %do;
16615 +      input %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
16616 +    %end;
16618 +    %if %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED) gt 0 %then %do;
16619 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED / level = nominal;
16620 +    %end;
16622 +    %if %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED) gt 0 %then %do;
16623 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
16624 +    %end;
16626 +    %if "%EM_FREQ" ne "" %then %do;
16627 +       freq %EM_FREQ;
16628 +    %end;
16630 +    %if "&multipleTar" eq "Y" %then %do;
16631 +       /* cycle through all target vars in variableset */
16632 +       %let tdsid = %sysfunc(open(temptarget));
16633 +       %if &tdsid %then %do;
16634 +          %let n_var = %sysfunc(varnum(&tdsid, NAME));
16635 +          %let n_lvl = %sysfunc(varnum(&tdsid, LEVEL));
16636 +          %do %while(^ %sysfunc(fetch(&tdsid)));
16637 +             %let var = %sysfunc(getvarc(&tdsid, &n_var));
16638 +             %let lvl = %sysfunc(getvarc(&tdsid, &n_lvl));
16639 +             target &var / level = &lvl
16640 +             %if (("&lvl" eq "BINARY") or ("&lvl" eq "NOMINAL")) %then %do;
16641 +               Criterion=&EM_PROPERTY_NOMINALCRITERION;
16642 +             %end;
16643 +             %else %if "&lvl" eq "INTERVAL" %then %do;
16644 +               Criterion=&EM_PROPERTY_INTERVALCRITERION;
16645 +             %end;
16646 +             %else %if "&lvl" eq "ORDINAL" %then %do;
16647 +               Criterion=&EM_PROPERTY_ORDINALCRITERION;
16648 +             %end;
16649 +          %end;
16650 +          %if &tdsid %then %let tdsid=%sysfunc(close(&tdsid));
16651 +       %end;
16652 +       useTarget variable = %EM_TARGET;
16653 +    %end;
16654 +    %else %do;
16655 +      target %EM_TARGET / level = %EM_TARGET_LEVEL
16656 +      %if (("%EM_TARGET_LEVEL" eq "BINARY") or ("%EM_TARGET_LEVEL" eq "NOMINAL")) %then %do;
16657 +        Criterion=&EM_PROPERTY_NOMINALCRITERION;
16658 +      %end;
16659 +      %else %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
16660 +        Criterion=&EM_PROPERTY_INTERVALCRITERION;
16661 +      %end;
16662 +      %else %if "%EM_TARGET_LEVEL" eq "ORDINAL" %then %do;
16663 +        Criterion=&EM_PROPERTY_ORDINALCRITERION;
16664 +      %end;
16665 +    %end;
16667 +    %if "&multipleTar" eq "N" %then %do;
16668 +      &EM_DEC_STATEMENT;
16669 +    %end;
16671 +    Performance &EM_PROPERTY_PERFORMANCE
16672 +    %if "&EM_PROPERTY_NODESAMPLE" ne "" %then %do;
16673 +      nodesize=&EM_PROPERTY_NODESAMPLE
16674 +    %end;
16675 +    ;
16677 +    %if "&intFlag" eq "Y" %then %do;
16678 +       INTERACT Largest;
16679 +       Train maxnewdepth=0;
16680 +    %end;
16682 +       %if "&EM_PROPERTY_ASSESSMEASURE" ne "" %then %do;
16683 +         Assess
16684 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)) )) %then %do;
16685 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16686 +              %put &em_codebar;
16687 +              %let errormsg = %sysfunc(sasmsg(sashelp.dmine, novalidationwithcv_note, NOQUOTE));
16688 +              %put &errormsg;
16689 +              %put &em_codebar;
16690 +            %end;
16691 +            %else %do;
16692 +               Validata=&EM_IMPORT_VALIDATE
16693 +            %end;
16694 +         %end;
16695 +         %else %do;
16696 +           NoValidata
16697 +         %end;
16698 +         %if "&EM_PROPERTY_TRAINMODE" ne "INTERACTIVE" %then %do;
16699 +            %if "&EM_PROPERTY_ASSESSMEASURE" eq "PROFIT/LOSS" %then %do;
16700 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16701 +               %if &dsid %then %do;
16702 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16703 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16704 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16705 +                   %if "&use" eq "Y" %then %let measure=PROFIT;
16706 +                   %else %do;
16707 +                      %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %let measure = ASE;
16708 +                      %else %let measure= MISC;
16709 +                   %end;
16710 +                 %end;
16711 +               %end;
16712 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16713 +            %end;
16714 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "MISC" %then %do;
16715 +              %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then  %do;
16716 +                 %let measure=ASE;
16717 +              %end;
16718 +              %else %do;
16719 +                 %let measure=MISC;
16720 +              %end;
16721 +            %end;
16722 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "ASE" %then %do;
16723 +              %let measure=ASE;
16724 +            %end;
16725 +            %else %if "&EM_PROPERTY_ASSESSMEASURE" eq "LIFT" %then %do;
16726 +               %let measure = LIFT;
16727 +               %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
16728 +               %if &dsid %then %do;
16729 +                 %let usenum = %sysfunc(varnum(&dsid, USE));
16730 +                 %do %while(^ %sysfunc(fetch(&dsid)));
16731 +                   %let use = %sysfunc(getvarc(&dsid, &usenum));
16732 +                   %if "&use" eq "Y" %then %let measure=LIFTPROFIT;
16733 +                 %end;
16734 +               %end;
16735 +               %if &dsid %then %let dsid = %sysfunc(close(&dsid));
16736 +            %end;
16737 +            measure=&measure
16738 +            %if (("&measure" eq "LIFT") AND ("%EM_TARGET_LEVEL" ne "INTERVAL")) %then %do;
16739 +               event = "&targetEvent"
16740 +            %end;
16741 +            %if (("&measure" eq "LIFT") OR ("&measure" eq "LIFTPROFIT")) %then %do;
16742 +              proportion=&EM_PROPERTY_ASSESSPERCENTAGE
16743 +            %end;
16744 +         %end;
16745 +         %if "&multipleTar" eq "N" %then %do;
16746 +            %if "&EM_PROPERTY_CV" eq "Y" %then %do;
16747 +               CV
16748 +               %if "&EM_PROPERTY_CVNIter" ne "" %then %do;
16749 +                 CVNITer = &EM_PROPERTY_CVNITER
16750 +               %end;
16751 +               %if "&EM_PROPERTY_CVREPEAT" ne "" %then %do;
16752 +                 CVRepeat = &EM_PROPERTY_CVREPEAT
16753 +               %end;
16754 +               %if "&EM_PROPERTY_CVSEED" ne "" %then %do;
16755 +                 CVSeed = &EM_PROPERTY_CVSEED
16756 +               %end;
16757 +            %end;
16758 +         %end;
16759 +       %end;
16760 +      ;
16762 +      %if "&intFlag" ne "Y" %then %do;
16763 +        %if "&EM_PROPERTY_SUBTREE" ne "" %then %do;
16764 +          %if "&EM_PROPERTY_SUBTREE" eq "ASSESSMENT" %then %let subtree=BEST;
16765 +          %else %if "&EM_PROPERTY_SUBTREE" eq "N" %then %let subtree=NLEAVES;
16766 +          %else %if "&EM_PROPERTY_SUBTREE" eq "LARGEST" %then %let subtree=LARGEST;
16768 +          SUBTREE &subtree
16769 +          %if "&subtree" eq "NLEAVES" %then %do;
16770 +            =&EM_PROPERTY_NSUBTREE
16771 +          %end;
16772 +          ;
16773 +        %end;
16775 +       %if (("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ("&multipleTar" eq "N")) %then %do;
16776 +          %if "&EM_USER_OUTOBSIMP" ne "" %then %do;
16777 +            importance data=&INDATA outfit=&EM_USER_OUTOBSIMP nvars=&EM_PROPERTY_NUMSINGLEIMP;
16778 +          %end;
16779 +       %end;
16780 +      %end;
16781 + %end;
16784 + MakeMacro nleaves = nleaves;
16785 + save
16786 + %if "&EM_USER_EMTREE" ne "" %then %do;
16787 +   MODEL=&EM_USER_EMTREE
16788 + %end;
16789 + %if "&EM_USER_OUTSEQ" ne "" %then %do;
16790 +   SEQUENCE=&EM_USER_OUTSEQ
16791 + %end;
16792 + %if "&EM_USER_OUTIMPORT" ne "" %then %do;
16793 +   IMPORTANCE=&EM_USER_OUTIMPORT
16794 + %end;
16795 + %if "&EM_USER_OUTNODES" ne "" %then %do;
16796 +   NODESTAT=&EM_USER_OUTNODES
16797 + %end;
16798 + %if "&EM_USER_OUTSUMMARY" ne "" %then %do;
16799 +   SUMMARY=&EM_USER_OUTSUMMARY
16800 + %end;
16801 + %if "&EM_USER_OUTSTATS" ne "" %then %do;
16802 +   STATSBYNODE=&EM_USER_OUTSTATS
16803 + %end;
16804 + %if "&EM_USER_OUTTOPOLOGY" ne "" %then %do;
16805 +   TOPOLOGY=&EM_USER_OUTTOPOLOGY
16806 + %end;
16807 + %if "&EM_USER_OUTPATH" ne "" %then %do;
16808 +   Pathlistnonmissing=&EM_USER_OUTPATH
16809 + %end;
16810 + %if "&EM_USER_OUTRULES" ne "" %then %do;
16811 +   RULES = &EM_USER_OUTRULES
16812 + %end;
16813 + ;
16815 + %if "&intFlag" ne "Y" %then %do;
16817 +   %let lookupString = ;
16818 +   %if ^%symexist(EM_OPTION) %then
16819 +      %let EM_OPTION=;
16821 +   %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16822 +      %let lookupString = LOOKUP=SELECT;
16823 +   %end;
16825 +   %let codetext=;
16826 +   %let norescodetxt=;
16828 +   %if "&EM_PROPERTY_DUMMY" eq "Y" %then %do;
16829 +     %let codetext=&codetext DUMMY;
16830 +     %let norescodetxt=&norescodetxt DUMMY;
16831 +   %end;
16832 +   %if "&EM_PROPERTY_LEAFID" ne "Y" %then %do;
16833 +     %let codetext=&codetext NOLEAFID;
16834 +     %let norescodetxt=&norescodetxt NOLEAFID;
16835 +   %end;
16836 +   %if "&EM_PROPERTY_PREDICT" ne "Y" %then %do;
16837 +     %let norescodetxt=&norescodetxt NOPRED;
16838 +   %end;
16840 +   code file="&EM_USER_TREEFLOW" res &codetext group=&emloopid &lookupString;
16841 +   code file="&EM_USER_TREEPUBLISH" nores &norescodetxt group=&emloopid &lookupString;
16843 +   %if &nnpmml %then %do;
16844 +     code pmml;
16845 +   %end;
16847 +   score data=&INDATA out=_NULL_ outfit=work.fit_train role=TRAIN;
16848 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16849 +     score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16850 +   %end;
16851 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16852 +     score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16853 +   %end;
16854 + %end;
16856 + run;
16857 + quit;
16859 + /*%em_checkerror(); */
16860 +  %if %sysfunc(cexist(work._treeDMDB)) %then %do;
16861 +   /* Delete DMDB catalog */
16862 +   proc datasets lib=work nolist;
16863 +       delete _treeDMDB / mt=cat;
16864 +  run;
16865 +  %end;
16867 + %if &nnpmml %then %do;
16868 +    ods pmml close;
16869 + %end;
16871 +  %doendm:
16873 +%mend em_tree_runTreeProcedure;
16875 +%macro em_tree_createFitStats( multipleTar= );
16878 +  /* create targetTable is multipleTar eq Y */
16879 +  data temptarget;
16880 +    set &EM_DATA_VARIABLESET;
16881 +    where ROLE="TARGET";
16882 +  run;
16884 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16885 +   data &EM_USER_EMOUTFIT;
16886 +     length target $32;
16887 +     merge work.fit_train
16888 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16889 +       work.fit_valid
16890 +     %end;
16891 +     %if "&EM_IMPORT_TEST" ne "" %then %do;
16892 +       work.fit_test
16893 +     %end;
16894 +     ;
16895 +     %if "&multipleTar" eq "N" %then %do;
16896 +       target="%EM_TARGET";
16897 +     %end;
16898 +     %else %do;
16899 +       target = _TARGET_;
16900 +     %end;
16901 +     drop _NW_ _SUMW_
16902 +     %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16903 +        _VSUMW_
16904 +     %end;
16905 +     ;
16906 +   run;
16908 +   %if "&EM_IMPORT_VALIDATE" ne "" %then %do;
16909 +     proc datasets library=work nolist;
16910 +       delete fit_valid;
16911 +     run;
16912 +   %end;
16913 +   %if "&EM_IMPORT_TEST" ne "" %then %do;
16914 +     proc datasets library=work nolist;
16915 +       delete fit_test;
16916 +     run;
16917 +   %end;
16919 +%mend em_tree_createFitStats;
16922 +%macro em_tree_makeEnglishRules;
16924 +  %EM_GETNAME(key=OUTNODES, type=DATA);
16925 +  %EM_GETNAME(key=OUTPATH, type=DATA);
16927 +  /* verify that necessary tables exist and if not, skip processing */
16928 +  %if %sysfunc(exist(&EM_USER_OUTNODES)) ne 1 %then %do;
16929 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16930 +    %goto doendm;
16931 +  %end;
16932 +  %if %sysfunc(exist(&EM_USER_OUTPATH)) ne 1 %then %do;
16933 +    %let EMEXCEPTIONSTRING = exception.server.EMTOOL.GENERICRUNTIMEEXCEPTION;
16934 +    %goto doendm;
16935 +  %end;
16937 +  /* determine length of variable in outpath dataset */
16938 +  %let vlength= ;
16939 +  %let dsid = %sysfunc(open(&EM_USER_OUTPATH));
16940 +  %if &dsid ne %then %do;
16941 +    %let varnum = %sysfunc(varnum(&dsid, VARIABLE));
16942 +    %let vlength = %sysfunc(VARLEN(&dsid, &varnum));
16943 +  %end;
16944 +  %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
16946 +  data tempoutpath;
16947 +    length varname $&vlength;
16948 +    retain varname;
16949 +    set &EM_USER_OUTPATH;
16951 +    if ^missing(variable) then varname=variable;
16952 +    else if ^missing(var_name) then varname=var_name;
16953 +    output;
16954 +  run;
16956 +  /* create an array of generated predicted variable names */
16957 +  %let tree_pred_vars = ;
16958 +  %let tree_pred_label = ;
16959 +  %let numpred= 0;
16960 +  %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16962 +    data _null_;
16963 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16964 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16965 +     call symput('tree_pred_label'!!strip(put(_N_, BEST.)), strip(tranwrd(LABEL,'"','""')));
16966 +     if eof then
16967 +       call symput('numpred', strip(put(_N_, BEST.)));
16968 +    run;
16969 +  %end;
16971 +  /* determine if NPRIORS exists in outnodes  */
16972 +  %local nprior_flag;
16973 +  data _null_;
16974 +    set &EM_USER_OUTNODES(obs=2) end=eof;
16975 +    if eof then do;
16976 +      call symput('nprior_flag', strip(put(npriors, best.)));
16977 +    end;
16978 +  run;
16980 +  proc sort data=tempoutpath; by node; run;
16981 +  proc sort data=&EM_USER_OUTNODES out=outnodes; by node; run;
16983 +  data tempoutpath;
16984 +    merge tempoutpath(in=_a) outnodes(keep= node
16985 +    %if "&nprior_flag" ne "." %then %do;
16986 +      NPRIORS
16987 +    %end;
16988 +    %else %do;
16989 +      N
16990 +    %end;
16991 +    %if &numpred gt 0 %then %do;
16992 +      %do i=1 %to &numpred;
16993 +        &&tree_pred_vars&i
16994 +      %end;
16995 +    %end;
16996 +    );
16997 +    by node;
16998 +    if _a;
16999 +  run;
17001 +  proc sort data=tempoutpath; by node descending varname descending numeric_value; run;
17003 +  data _null_;
17004 +    file x;
17005 +    set tempoutpath;
17006 +    by node descending varname;
17007 +    retain origvar oldnode string;
17008 +    length origvar $32 oldnode 8 string $5000;
17010 +    if _N_ = 1 then do;
17011 +      origvar = varname;
17012 +      oldnode = node;
17013 +    end;
17015 +    if first.node then do;
17016 +       put "&EM_CODEBAR";
17017 +       put " Node = " node;
17018 +       put "&EM_CODEBAR";
17019 +    end;
17021 +      if first.varname then do;
17022 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17023 +            if MISSING(CHARACTER_VALUE) then do;
17024 +             if NUMERIC_VALUE ne .  then do;
17025 +              if ^first.node then do;
17026 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17027 +              end;
17028 +              else do;
17029 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17030 +              end;
17031 +             end;
17032 +            end;
17033 +            else do;
17034 +              if ^first.node then do;
17035 +                string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17036 +              end;
17037 +              else do;
17038 +                string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17039 +              end;
17040 +             end;
17041 +         end;
17042 +         else if RELATION in ("=") then do;
17043 +            if ^first.node then do;
17044 +              string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
17045 +            end;
17046 +            else do;
17047 +              string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
17048 +            end;
17049 +         end;
17050 +         else if RELATION in ("ISMISSING") then do;
17051 +            if ^first.node then do;
17052 +              string = " AND "|| strip(varname) || " equals Missing";
17053 +            end;
17054 +            else do;
17055 +              string = "if "|| strip(varname) ||" equals Missing";
17056 +            end;
17057 +         end;
17058 +         else if RELATION in ("ISNOTMISSING") then do;
17059 +            if ^first.node then do;
17060 +              string = " AND "|| strip(varname) || " equals All Values";
17061 +            end;
17062 +            else do;
17063 +              string = "if "|| strip(varname) ||" equals All Values";
17064 +            end;
17065 +         end;
17066 +         if ^missing(varname) then origvar = varname;
17067 +         oldnode=node;
17069 +      end;
17070 +      else do;
17071 +         if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
17072 +          if MISSING(CHARACTER_VALUE) then do;
17073 +           if  NUMERIC_VALUE ne .  then do;
17074 +            if ^MISSING(string) then
17075 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17076 +            else
17077 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
17078 +           end;
17079 +          end;
17080 +          else do;
17081 +            if ^MISSING(string) then
17082 +              string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17083 +            else
17084 +              string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
17085 +          end;
17087 +         end;
17088 +         else if RELATION in ("=") then do;
17089 +           string = strip(string)||", "||strip(character_value);
17090 +         end;
17091 +         else if RELATION in ("ISMISSING") then do;
17093 +         end;
17094 +         if ^missing(varname) then origvar = varname;
17095 +         oldnode=node;
17096 +      end;
17097 +      if last.varname then do;
17098 +         if RELATION in ("ISMISSING") then do;
17099 +           if ^first.varname then do;
17100 +             string = strip(string) || " or MISSING";
17101 +           end;
17102 +         end;
17103 +         put string;
17104 +         if ^missing(varname) then origvar = varname;
17105 +         oldnode=node;
17106 +      end;
17108 +      if last.node then do;
17109 +         put "then ";
17110 +         put " Tree Node Identifier   = " node;
17112 +         %if "&nprior_flag" ne "." %then %do;
17113 +           put " Number of Observations = " NPRIORS;
17114 +         %end;
17115 +         %else %do;
17116 +           put " Number of Observations = " N;
17117 +         %end;
17119 +         %if &numpred gt 0 %then %do;
17120 +           %do i=1 %to &numpred;
17121 +             put " &&tree_pred_label&i = " &&tree_pred_vars&i;
17122 +           %end;
17123 +         %end;
17125 +         put " ";
17126 +         if ^missing(varname) then origvar = varname;
17127 +         oldnode=node;
17128 +      end;
17130 +  run;
17132 +  proc datasets lib=work nolist;
17133 +    delete tempoutpath outnodes;
17134 +  run;
17136 +  %doendm:
17137 +%mend em_tree_makeEnglishRules;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file EMWS3.EM_TREE9.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS3.EM_TREE9.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER9_TRAIN.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL');
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_VARIABLESET.
      WHERE (ROLE='TARGET') and LEVEL in ('BINARY', 'NOMINAL', 'ORDINAL') and (USE='Y');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 674   Memory used = 511K.
NOTE: View EMWS3.EM_TREE9.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER9_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE9.
NOTE: The data set WORK.CLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: Deleting WORK.CLASSOUT (memtype=DATA).
NOTE: Deleting WORK.VAROUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1595234 kilobytes of physical memory.
NOTE: Will use 674 out of 674 training cases.
NOTE: Using memory pool with 325988352 bytes.
NOTE: Passed training data 12 times.
NOTE: Training used 614104 bytes of work memory.
NOTE: The subtree sequence contains 11 subtrees. The largest has 21 nodes and 11 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Created macro variable NLEAVES equal to 7.
NOTE: The data set EMWS3.TREE9_OUTIMPORT has 33 observations and 6 variables.
NOTE: The data set EMWS3.TREE9_EMTREE has 1516 observations and 4 variables.
NOTE: The data set EMWS3.TREE9_OUTNODES has 13 observations and 54 variables.
NOTE: The data set EMWS3.TREE9_OUTPATH has 60 observations and 7 variables.
NOTE: The data set EMWS3.TREE9_OUTRULES has 226 observations and 6 variables.
NOTE: The data set EMWS3.TREE9_OUTSEQ has 11 observations and 20 variables.
NOTE: The data set EMWS3.TREE9_OUTSTATS has 351 observations and 5 variables.
NOTE: The data set EMWS3.TREE9_OUTSUMMARY has 104 observations and 16 variables.
NOTE: The data set EMWS3.TREE9_OUTTOPOLOGY has 13 observations and 5 variables.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\TREEFLOW.sas opened.
NOTE: External file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\TREEPUBLISH.sas opened.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: View EMWS3.EM_TREE9.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER9_TRAIN.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
NOTE: The data set WORK.FIT_TEST has 1 observations and 8 variables.
 
 
NOTE: View EMWS3.EM_TREE9.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.12 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER9_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.EM_TREE9.
NOTE: The data set WORK._NAMEDAT has 12 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.33 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: Deleting WORK._TREEDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_VARIABLESET.
      WHERE ROLE='TARGET';
NOTE: The data set WORK.TEMPTARGET has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: There were 1 observations read from the data set WORK.FIT_TEST.
NOTE: The data set EMWS3.TREE9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.FIT_TEST (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set EMWS3.TREE9_OUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 60 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS3.TREE9_OUTNODES.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 60 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE9_OUTNODES.
NOTE: The data set WORK.OUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.TEMPOUTPATH.
NOTE: There were 13 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMPOUTPATH has 60 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 60 observations read from the data set WORK.TEMPOUTPATH.
NOTE: The data set WORK.TEMPOUTPATH has 60 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      278:176   288:190   434:191   441:195
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:04,
      Create Time=23Nov2023:22:13:04
 
NOTE: 155 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 75.
NOTE: There were 60 observations read from the data set WORK.TEMPOUTPATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPOUTPATH (memtype=DATA).
NOTE: Deleting WORK.OUTNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
17139
17140  *------------------------------------------------------------*;
17141  * End TRAIN: Tree9;
17142  *------------------------------------------------------------*;
 
17143  *------------------------------------------------------------*;
17144  * Close any missing semi colons;
17145  *------------------------------------------------------------*;
17146  ;
17147  ;
17148  ;
17149  ;
17150  quit;
17151  *------------------------------------------------------------*;
17152  * Close any unbalanced quotes;
17153  *------------------------------------------------------------*;
17154  /*; *"; *'; */
17155  ;
17156  run;
17157  quit;
17158  /* Reset EM Options */
17159  options formchar="|----|+|---+=|-/\<>*";
17160  options nocenter ls=256 ps=10000;
17161  goptions reset=all device=GIF NODISPLAY;
 
17162  proc sort data=WORK.EM_USER_REPORT;
17163  by ID VIEW;
17164  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                November 23, 2023
Time:                22:13:05
*------------------------------------------------------------*
17266  %let EMEXCEPTIONSTRING=;
17267  *------------------------------------------------------------*;
17268  * SCORE: Tree9;
17269  *------------------------------------------------------------*;
17270  %let EM_ACTION = SCORE;
17271  %let syscc = 0;
17272  %macro main;
17273
17274    %if %upcase(&EM_ACTION) = CREATE %then %do;
17275      filename temp catalog 'sashelp.emmodl.tree_create.source';
17276      %include temp;
17277      filename temp;
17278
17279      %em_tree_create;
17280    %end;
17281
17282     %else
17283     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17284
17285         filename temp catalog 'sashelp.emmodl.tree_train.source';
17286         %include temp;
17287         filename temp;
17288         %em_tree_train;
17289     %end;
17290
17291    %else
17292    %if %upcase(&EM_ACTION) = SCORE %then %do;
17293      filename temp catalog 'sashelp.emmodl.tree_score.source';
17294      %include temp;
17295      filename temp;
17296
17297      %em_tree_score;
17298
17299    %end;
17300
17301    %else
17302    %if %upcase(&EM_ACTION) = REPORT %then %do;
17303
17304         filename temp catalog 'sashelp.emmodl.tree_report.source';
17305         %include temp;
17306         filename temp;
17307
17308         %em_tree_report;
17309     %end;
17310
17311    %else
17312    %if %upcase(&EM_ACTION) = OPENINT %then %do;
17313
17314         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17315         %include temp;
17316         filename temp;
17317         %EM_TREE_OPENTREEVIEWER;
17318
17319     %end;
17320
17321    %else
17322    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17323
17324         filename temp catalog 'sashelp.emmodl.tree_actions.source';
17325         %include temp;
17326         filename temp;
17327         %EM_TREE_CLOSETREEVIEWER;
17328
17329     %end;
17330
17331
17332     %doendm:
17333  %mend main;
17334
17335  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
17337 +%macro em_tree_score;
17339 +   /* determine if multiple targets will be processed */
17340 +   %let em_tree_multipleTargets=N;
17341 +   %let em_tree_numTarget=1;
17342 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17343 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17344 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17345 +         %let em_tree_multipleTargets=N;
17346 +      %end;
17347 +      %else %do;
17348 +         /* create macro array of targets  */
17349 +         data _null_;
17350 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17351 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
17352 +           if eof then
17353 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17354 +        run;
17356 +        %if &em_tree_numTarget gt 1 %then %do;
17357 +           %let em_tree_multipleTargets=Y;
17358 +        %end;
17359 +      %end;
17360 +   %end;
17362 +   /* build flow and publish scoring code */
17363 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
17364 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
17366 +   filename treeflow "&EM_USER_TREEFLOW";
17367 +   filename treepub "&EM_USER_TREEPUBLISH";
17369 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
17370 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
17372 +   %em_copyfile(infref=treeflow, outfref=flowref);
17373 +   %em_copyfile(infref=treepub, outfref=pubref);
17375 +   filename treeflow;
17376 +   filename treepub;
17378 +   /* if priors are used, add code to generate unadjusted residuals in export */
17379 +   %let useAdjPriors = N;
17380 +   data _null_;
17381 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
17382 +     if USE="Y" then call symput('useAdjPriors', 'Y');
17383 +   run;
17384 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
17385 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
17386 +      %include temp;
17387 +      filename temp;
17389 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
17390 +      filename adjref "&EM_USER_adjResidualCode";
17391 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
17393 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
17395 +      filename adjref;
17396 +   %end;
17398 +   /* LEAF */
17399 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17400 +      data _null_;
17401 +        file flowref mod;
17402 +        put 'drop _LEAF_;';
17403 +      run;
17405 +      data _null_;
17406 +        file pubref mod;
17407 +        put 'drop _LEAF_;';
17408 +      run;
17410 +   %end;
17412 +   filename flowref;
17413 +   filename pubref;
17415 +   /* em_metachange code */
17416 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
17417 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
17418 +   %end;
17420 +   /* variable selection based on importance stat    */
17421 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
17422 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
17423 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
17424 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
17425 +     %let obs = %sysfunc(fetch(&dsid));
17426 +     %do %while(&obs=0);
17427 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
17428 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
17429 +       %EM_METACHANGE(name=&varname, role=REJECTED);
17430 +       %let obs = %sysfunc(fetch(&dsid));
17431 +     %end;
17432 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
17433 +   %end;
17435 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
17436 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
17437 +    %let tree_pred_vars = ;
17438 +    %let tree_pred_lvl =;
17439 +    %let numpred= 0;
17441 +    data _null_;
17442 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
17443 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
17444 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
17445 +     if eof then
17446 +       call symput('numpred', strip(put(_N_, BEST.)));
17447 +    run;
17448 +   %end;
17450 +   %if &numpred ne 0 %then %do;
17451 +    %do i=1 %to &numpred;
17452 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
17453 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
17454 +    %end;
17455 +   %end;
17457 +   /* determine if multiple targets will be processed */
17458 +   %let em_tree_multipleTargets=N;
17459 +   %let em_tree_numTarget=1;
17460 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
17461 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
17462 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
17463 +         %let em_tree_multipleTargets=N;
17464 +      %end;
17465 +      %else %do;
17466 +        data _null_;
17467 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
17468 +          if eof then
17469 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
17470 +        run;
17472 +        %if &em_tree_numTarget gt 1 %then %do;
17473 +           %let em_tree_multipleTargets=Y;
17474 +        %end;
17475 +     %end;
17476 +   %end;
17478 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
17479 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
17481 +      /* variable importance */
17482 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
17483 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
17485 +         %let validexist=0;
17486 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
17487 +           %let validexist=1;
17488 +         %end;
17490 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
17491 +         /* and the columns may not be generated                                                                                 */
17492 +         %let em_tree_cvexists=;
17493 +         %let em_tree_surrexists=.;
17494 +         data _null_;
17495 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
17496 +            if eof then do ;
17497 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
17498 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
17499 +            end;
17500 +         run;
17502 +         data &EM_USER_OUTIMPORT;
17503 +            set &EM_USER_OUTIMPORT;
17505 +            /* format columns based on Precison value specified */
17506 +            format importance 15.&EM_PROPERTY_PRECISION
17507 +                 %if &validexist %then %do;
17508 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
17509 +                 %end;
17510 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
17511 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
17512 +                 %end;
17513 +            ;
17514 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
17515 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
17516 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
17517 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
17518 +                 %if "&em_tree_surrexists" ne "" %then %do;
17519 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
17520 +                 %end;
17521 +                 %if &validexist %then %do;
17522 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17523 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17524 +                 %end;
17525 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
17526 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
17527 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
17528 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
17529 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
17530 +                 %end;
17531 +            ;
17532 +         run;
17534 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
17535 +      %end;
17536 +   %end;
17538 +   %doendm:
17539 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:04,
      Create Time=23Nov2023:22:13:04
 
NOTE: 460 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 77.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:04,
      Create Time=23Nov2023:22:13:04
 
NOTE: 380 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FLOWREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=22672,
      Last Modified=23Nov2023:22:13:04,
      Create Time=23Nov2023:22:13:04
 
NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file PUBREF is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19099,
      Last Modified=23Nov2023:22:13:04,
      Create Time=23Nov2023:22:13:04
 
NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 34 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 34 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 35 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 36 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 37 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 37 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 38 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 38 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 39 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 39 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 40 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 40 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE9_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 33 observations read from the data set EMWS3.TREE9_OUTIMPORT.
NOTE: The data set EMWS3.TREE9_OUTIMPORT has 33 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
17540
17541  *------------------------------------------------------------*;
17542  * End SCORE: Tree9;
17543  *------------------------------------------------------------*;
 
17544  proc sort data=WORK.EM_METACHANGE;
17545  by key uname;
17546  run;
 
NOTE: There were 41 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 41 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17547  filename x "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\CDELTA_TRAIN.sas";
17548  data _null_;
17549  file x;
17550  put 'if upcase(NAME) = "Q_CATEGORYADVOCATE" then do;';
17551  put 'ROLE = "ASSESS";';
17552  put 'end;';
17553  put 'else ';
17554  put 'if upcase(NAME) = "Q_CATEGORYBUSINESS_DEVELOPMENT" then do;';
17555  put 'ROLE = "ASSESS";';
17556  put 'end;';
17557  put 'else ';
17558  put 'if upcase(NAME) = "Q_CATEGORYCONSULTANT" then do;';
17559  put 'ROLE = "ASSESS";';
17560  put 'end;';
17561  put 'else ';
17562  put 'if upcase(NAME) = "Q_CATEGORYDESIGNER" then do;';
17563  put 'ROLE = "ASSESS";';
17564  put 'end;';
17565  put 'else ';
17566  put 'if upcase(NAME) = "Q_CATEGORYDIGITAL_MEDIA" then do;';
17567  put 'ROLE = "ASSESS";';
17568  put 'end;';
17569  put 'else ';
17570  put 'if upcase(NAME) = "Q_CATEGORYFITNESS" then do;';
17571  put 'ROLE = "ASSESS";';
17572  put 'end;';
17573  put 'else ';
17574  put 'if upcase(NAME) = "Q_CATEGORYHEALTHCARE" then do;';
17575  put 'ROLE = "ASSESS";';
17576  put 'end;';
17577  put 'else ';
17578  put 'if upcase(NAME) = "Q_CATEGORYHR" then do;';
17579  put 'ROLE = "ASSESS";';
17580  put 'end;';
17581  put 'else ';
17582  put 'if upcase(NAME) = "Q_CATEGORYINFORMATION_TECHNOLOGY" then do;';
17583  put 'ROLE = "ASSESS";';
17584  put 'end;';
17585  put 'else ';
17586  put 'if upcase(NAME) = "Q_CATEGORYOTHER" then do;';
17587  put 'ROLE = "ASSESS";';
17588  put 'end;';
17589  put 'else ';
17590  put 'if upcase(NAME) = "Q_CATEGORYSALES" then do;';
17591  put 'ROLE = "ASSESS";';
17592  put 'end;';
17593  put 'else ';
17594  put 'if upcase(NAME) = "Q_CATEGORYTEACHER" then do;';
17595  put 'ROLE = "ASSESS";';
17596  put 'end;';
17597  put 'else ';
17598  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD1" then do;';
17599  put 'ROLE = "REJECTED";';
17600  put 'end;';
17601  put 'else ';
17602  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD10" then do;';
17603  put 'ROLE = "REJECTED";';
17604  put 'end;';
17605  put 'else ';
17606  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD11" then do;';
17607  put 'ROLE = "REJECTED";';
17608  put 'end;';
17609  put 'else ';
17610  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD12" then do;';
17611  put 'ROLE = "REJECTED";';
17612  put 'end;';
17613  put 'else ';
17614  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD13" then do;';
17615  put 'ROLE = "REJECTED";';
17616  put 'end;';
17617  put 'else ';
17618  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD14" then do;';
17619  put 'ROLE = "REJECTED";';
17620  put 'end;';
17621  put 'else ';
17622  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD15" then do;';
17623  put 'ROLE = "REJECTED";';
17624  put 'end;';
17625  put 'else ';
17626  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD16" then do;';
17627  put 'ROLE = "REJECTED";';
17628  put 'end;';
17629  put 'else ';
17630  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD17" then do;';
17631  put 'ROLE = "REJECTED";';
17632  put 'end;';
17633  put 'else ';
17634  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD18" then do;';
17635  put 'ROLE = "REJECTED";';
17636  put 'end;';
17637  put 'else ';
17638  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD19" then do;';
17639  put 'ROLE = "REJECTED";';
17640  put 'end;';
17641  put 'else ';
17642  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD20" then do;';
17643  put 'ROLE = "REJECTED";';
17644  put 'end;';
17645  put 'else ';
17646  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD21" then do;';
17647  put 'ROLE = "REJECTED";';
17648  put 'end;';
17649  put 'else ';
17650  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD22" then do;';
17651  put 'ROLE = "REJECTED";';
17652  put 'end;';
17653  put 'else ';
17654  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD23" then do;';
17655  put 'ROLE = "REJECTED";';
17656  put 'end;';
17657  put 'else ';
17658  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD24" then do;';
17659  put 'ROLE = "REJECTED";';
17660  put 'end;';
17661  put 'else ';
17662  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD25" then do;';
17663  put 'ROLE = "REJECTED";';
17664  put 'end;';
17665  put 'else ';
17666  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD26" then do;';
17667  put 'ROLE = "REJECTED";';
17668  put 'end;';
17669  put 'else ';
17670  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD27" then do;';
17671  put 'ROLE = "REJECTED";';
17672  put 'end;';
17673  put 'else ';
17674  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD28" then do;';
17675  put 'ROLE = "REJECTED";';
17676  put 'end;';
17677  put 'else ';
17678  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD29" then do;';
17679  put 'ROLE = "REJECTED";';
17680  put 'end;';
17681  put 'else ';
17682  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD30" then do;';
17683  put 'ROLE = "REJECTED";';
17684  put 'end;';
17685  put 'else ';
17686  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD31" then do;';
17687  put 'ROLE = "REJECTED";';
17688  put 'end;';
17689  put 'else ';
17690  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD32" then do;';
17691  put 'ROLE = "REJECTED";';
17692  put 'end;';
17693  put 'else ';
17694  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD33" then do;';
17695  put 'ROLE = "REJECTED";';
17696  put 'end;';
17697  put 'else ';
17698  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD4" then do;';
17699  put 'ROLE = "REJECTED";';
17700  put 'end;';
17701  put 'else ';
17702  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD7" then do;';
17703  put 'ROLE = "REJECTED";';
17704  put 'end;';
17705  put 'else ';
17706  put 'if upcase(NAME) = "TEXTCLUSTER9_SVD9" then do;';
17707  put 'ROLE = "REJECTED";';
17708  put 'end;';
17709  put 'else ';
17710  put 'if upcase(NAME) = "_NODE_" then do;';
17711  put 'ROLE = "SEGMENT";';
17712  put 'LEVEL = "NOMINAL";';
17713  put 'end;';
17714  run;
 
NOTE: The file X is:
      Filename=C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Nov2023:22:13:05,
      Create Time=19Nov2023:19:24:27
 
NOTE: 164 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 61.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17715  filename x;
NOTE: Fileref X has been deassigned.
 
17716  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas";
17717  *------------------------------------------------------------*;
17718  * Tree9: Scoring DATA data;
17719  *------------------------------------------------------------*;
17720  data EMWS3.Tree9_TRAIN
17721  / view=EMWS3.Tree9_TRAIN
17722  ;
17723  set EMWS3.TextCluster9_TRAIN
17724  ;
17725  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas.
17726 +****************************************************************;
17727 +******             DECISION TREE SCORING CODE             ******;
17728 +****************************************************************;
17729 +
17730 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17731 +LENGTH F_Category  $   22;
17732 +LENGTH I_Category  $   22;
17733 +LENGTH U_Category  $   22;
17734 +LENGTH _WARN_  $    4;
17735 +
17736 +******              LABELS FOR NEW VARIABLES              ******;
17737 +label _NODE_ = 'Node' ;
17738 +label _LEAF_ = 'Leaf' ;
17739 +label P_CategoryHR = 'Predicted: Category=HR' ;
17740 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
17741 +label P_CategoryINFORMATION_TECHNOLOGY =
17742 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
17743 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
17744 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
17745 +label P_CategoryBUSINESS_DEVELOPMENT =
17746 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
17747 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
17748 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
17749 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
17750 +label P_CategorySALES = 'Predicted: Category=SALES' ;
17751 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
17752 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
17753 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
17754 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
17755 +label Q_CategoryINFORMATION_TECHNOLOGY =
17756 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
17757 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
17758 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
17759 +label Q_CategoryBUSINESS_DEVELOPMENT =
17760 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
17761 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
17762 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
17763 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
17764 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
17765 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
17766 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
17767 +label V_CategoryHR = 'Validated: Category=HR' ;
17768 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
17769 +label V_CategoryINFORMATION_TECHNOLOGY =
17770 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
17771 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
17772 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
17773 +label V_CategoryBUSINESS_DEVELOPMENT =
17774 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
17775 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
17776 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
17777 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
17778 +label V_CategorySALES = 'Validated: Category=SALES' ;
17779 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
17780 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
17781 +label R_CategoryHR = 'Residual: Category=HR' ;
17782 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
17783 +label R_CategoryINFORMATION_TECHNOLOGY =
17784 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
17785 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
17786 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
17787 +label R_CategoryBUSINESS_DEVELOPMENT =
17788 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
17789 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
17790 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
17791 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
17792 +label R_CategorySALES = 'Residual: Category=SALES' ;
17793 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
17794 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
17795 +label F_Category = 'From: Category' ;
17796 +label I_Category = 'Into: Category' ;
17797 +label U_Category = 'Unnormalized Into: Category' ;
17798 +label _WARN_ = 'Warnings' ;
17799 +
17800 +
17801 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17802 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
17803 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
17804 +
17805 +
17806 +_ARBFMT_22 = PUT( Category , $22.);
17807 + %DMNORMCP( _ARBFMT_22, F_Category );
17808 +
17809 +******             ASSIGN OBSERVATION TO NODE             ******;
17810 +IF  NOT MISSING(TextCluster9_SVD3 ) AND
17811 +      0.31811682390849 <= TextCluster9_SVD3  THEN DO;
17812 +  _NODE_  =                    3;
17813 +  _LEAF_  =                    7;
17814 +  P_CategoryHR  =                0.875;
17815 +  P_CategoryDESIGNER  =                    0;
17816 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17817 +  P_CategoryTEACHER  =                    0;
17818 +  P_CategoryADVOCATE  =     0.03571428571428;
17819 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
17820 +  P_CategoryHEALTHCARE  =     0.01785714285714;
17821 +  P_CategoryFITNESS  =     0.01785714285714;
17822 +  P_CategoryOTHER  =     0.01785714285714;
17823 +  P_CategorySALES  =                    0;
17824 +  P_CategoryCONSULTANT  =     0.01785714285714;
17825 +  P_CategoryDIGITAL_MEDIA  =                    0;
17826 +  Q_CategoryHR  =                0.875;
17827 +  Q_CategoryDESIGNER  =                    0;
17828 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17829 +  Q_CategoryTEACHER  =                    0;
17830 +  Q_CategoryADVOCATE  =     0.03571428571428;
17831 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
17832 +  Q_CategoryHEALTHCARE  =     0.01785714285714;
17833 +  Q_CategoryFITNESS  =     0.01785714285714;
17834 +  Q_CategoryOTHER  =     0.01785714285714;
17835 +  Q_CategorySALES  =                    0;
17836 +  Q_CategoryCONSULTANT  =     0.01785714285714;
17837 +  Q_CategoryDIGITAL_MEDIA  =                    0;
17838 +  V_CategoryHR  =      0.8235294117647;
17839 +  V_CategoryDESIGNER  =                    0;
17840 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17841 +  V_CategoryTEACHER  =                    0;
17842 +  V_CategoryADVOCATE  =                    0;
17843 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17844 +  V_CategoryHEALTHCARE  =     0.08823529411764;
17845 +  V_CategoryFITNESS  =     0.02941176470588;
17846 +  V_CategoryOTHER  =                    0;
17847 +  V_CategorySALES  =                    0;
17848 +  V_CategoryCONSULTANT  =     0.05882352941176;
17849 +  V_CategoryDIGITAL_MEDIA  =                    0;
17850 +  I_Category  = 'HR' ;
17851 +  U_Category  = 'HR' ;
17852 +  END;
17853 +ELSE DO;
17854 +  IF  NOT MISSING(TextCluster9_SVD6 ) AND
17855 +    TextCluster9_SVD6  <    -0.26505507071164 THEN DO;
17856 +    _NODE_  =                    4;
17857 +    _LEAF_  =                    1;
17858 +    P_CategoryHR  =                    0;
17859 +    P_CategoryDESIGNER  =                 0.88;
17860 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17861 +    P_CategoryTEACHER  =                    0;
17862 +    P_CategoryADVOCATE  =                    0;
17863 +    P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
17864 +    P_CategoryHEALTHCARE  =                    0;
17865 +    P_CategoryFITNESS  =                    0;
17866 +    P_CategoryOTHER  =                    0;
17867 +    P_CategorySALES  =                 0.04;
17868 +    P_CategoryCONSULTANT  =                    0;
17869 +    P_CategoryDIGITAL_MEDIA  =                 0.06;
17870 +    Q_CategoryHR  =                    0;
17871 +    Q_CategoryDESIGNER  =                 0.88;
17872 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17873 +    Q_CategoryTEACHER  =                    0;
17874 +    Q_CategoryADVOCATE  =                    0;
17875 +    Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
17876 +    Q_CategoryHEALTHCARE  =                    0;
17877 +    Q_CategoryFITNESS  =                    0;
17878 +    Q_CategoryOTHER  =                    0;
17879 +    Q_CategorySALES  =                 0.04;
17880 +    Q_CategoryCONSULTANT  =                    0;
17881 +    Q_CategoryDIGITAL_MEDIA  =                 0.06;
17882 +    V_CategoryHR  =                    0;
17883 +    V_CategoryDESIGNER  =      0.8235294117647;
17884 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17885 +    V_CategoryTEACHER  =     0.05882352941176;
17886 +    V_CategoryADVOCATE  =                    0;
17887 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17888 +    V_CategoryHEALTHCARE  =                    0;
17889 +    V_CategoryFITNESS  =                    0;
17890 +    V_CategoryOTHER  =                    0;
17891 +    V_CategorySALES  =     0.05882352941176;
17892 +    V_CategoryCONSULTANT  =                    0;
17893 +    V_CategoryDIGITAL_MEDIA  =     0.05882352941176;
17894 +    I_Category  = 'DESIGNER' ;
17895 +    U_Category  = 'DESIGNER' ;
17896 +    END;
17897 +  ELSE DO;
17898 +    IF  NOT MISSING(TextCluster9_SVD3 ) AND
17899 +      TextCluster9_SVD3  <    -0.39940278019306 THEN DO;
17900 +      _NODE_  =                   10;
17901 +      _LEAF_  =                    2;
17902 +      P_CategoryHR  =                    0;
17903 +      P_CategoryDESIGNER  =                    0;
17904 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
17905 +      P_CategoryTEACHER  =     0.81818181818181;
17906 +      P_CategoryADVOCATE  =     0.05454545454545;
17907 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
17908 +      P_CategoryHEALTHCARE  =     0.01818181818181;
17909 +      P_CategoryFITNESS  =     0.07272727272727;
17910 +      P_CategoryOTHER  =                    0;
17911 +      P_CategorySALES  =     0.01818181818181;
17912 +      P_CategoryCONSULTANT  =                    0;
17913 +      P_CategoryDIGITAL_MEDIA  =                    0;
17914 +      Q_CategoryHR  =                    0;
17915 +      Q_CategoryDESIGNER  =                    0;
17916 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
17917 +      Q_CategoryTEACHER  =     0.81818181818181;
17918 +      Q_CategoryADVOCATE  =     0.05454545454545;
17919 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
17920 +      Q_CategoryHEALTHCARE  =     0.01818181818181;
17921 +      Q_CategoryFITNESS  =     0.07272727272727;
17922 +      Q_CategoryOTHER  =                    0;
17923 +      Q_CategorySALES  =     0.01818181818181;
17924 +      Q_CategoryCONSULTANT  =                    0;
17925 +      Q_CategoryDIGITAL_MEDIA  =                    0;
17926 +      V_CategoryHR  =                    0;
17927 +      V_CategoryDESIGNER  =                    0;
17928 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02439024390243;
17929 +      V_CategoryTEACHER  =     0.68292682926829;
17930 +      V_CategoryADVOCATE  =     0.09756097560975;
17931 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17932 +      V_CategoryHEALTHCARE  =     0.02439024390243;
17933 +      V_CategoryFITNESS  =     0.04878048780487;
17934 +      V_CategoryOTHER  =     0.09756097560975;
17935 +      V_CategorySALES  =     0.02439024390243;
17936 +      V_CategoryCONSULTANT  =                    0;
17937 +      V_CategoryDIGITAL_MEDIA  =                    0;
17938 +      I_Category  = 'TEACHER' ;
17939 +      U_Category  = 'TEACHER' ;
17940 +      END;
17941 +    ELSE DO;
17942 +      IF  NOT MISSING(TextCluster9_SVD8 ) AND
17943 +             0.1335155264173 <= TextCluster9_SVD8  THEN DO;
17944 +        _NODE_  =                   15;
17945 +        _LEAF_  =                    6;
17946 +        P_CategoryHR  =                    0;
17947 +        P_CategoryDESIGNER  =                    0;
17948 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
17949 +        P_CategoryTEACHER  =                    0;
17950 +        P_CategoryADVOCATE  =     0.06666666666666;
17951 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
17952 +        P_CategoryHEALTHCARE  =                    0;
17953 +        P_CategoryFITNESS  =     0.88888888888888;
17954 +        P_CategoryOTHER  =     0.02222222222222;
17955 +        P_CategorySALES  =                    0;
17956 +        P_CategoryCONSULTANT  =                    0;
17957 +        P_CategoryDIGITAL_MEDIA  =                    0;
17958 +        Q_CategoryHR  =                    0;
17959 +        Q_CategoryDESIGNER  =                    0;
17960 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
17961 +        Q_CategoryTEACHER  =                    0;
17962 +        Q_CategoryADVOCATE  =     0.06666666666666;
17963 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
17964 +        Q_CategoryHEALTHCARE  =                    0;
17965 +        Q_CategoryFITNESS  =     0.88888888888888;
17966 +        Q_CategoryOTHER  =     0.02222222222222;
17967 +        Q_CategorySALES  =                    0;
17968 +        Q_CategoryCONSULTANT  =                    0;
17969 +        Q_CategoryDIGITAL_MEDIA  =                    0;
17970 +        V_CategoryHR  =                    0;
17971 +        V_CategoryDESIGNER  =                    0;
17972 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
17973 +        V_CategoryTEACHER  =                    0;
17974 +        V_CategoryADVOCATE  =                    0;
17975 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
17976 +        V_CategoryHEALTHCARE  =     0.03448275862068;
17977 +        V_CategoryFITNESS  =     0.86206896551724;
17978 +        V_CategoryOTHER  =     0.03448275862068;
17979 +        V_CategorySALES  =     0.03448275862068;
17980 +        V_CategoryCONSULTANT  =                    0;
17981 +        V_CategoryDIGITAL_MEDIA  =     0.03448275862068;
17982 +        I_Category  = 'FITNESS' ;
17983 +        U_Category  = 'FITNESS' ;
17984 +        END;
17985 +      ELSE DO;
17986 +        IF  NOT MISSING(TextCluster9_SVD2 ) AND
17987 +              0.14359099648973 <= TextCluster9_SVD2  THEN DO;
17988 +          _NODE_  =                   17;
17989 +          _LEAF_  =                    5;
17990 +          P_CategoryHR  =                    0;
17991 +          P_CategoryDESIGNER  =     0.00961538461538;
17992 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
17993 +          P_CategoryTEACHER  =                    0;
17994 +          P_CategoryADVOCATE  =     0.01923076923076;
17995 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
17996 +          P_CategoryHEALTHCARE  =     0.03846153846153;
17997 +          P_CategoryFITNESS  =                    0;
17998 +          P_CategoryOTHER  =     0.07692307692307;
17999 +          P_CategorySALES  =     0.00961538461538;
18000 +          P_CategoryCONSULTANT  =     0.24038461538461;
18001 +          P_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18002 +          Q_CategoryHR  =                    0;
18003 +          Q_CategoryDESIGNER  =     0.00961538461538;
18004 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
18005 +          Q_CategoryTEACHER  =                    0;
18006 +          Q_CategoryADVOCATE  =     0.01923076923076;
18007 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18008 +          Q_CategoryHEALTHCARE  =     0.03846153846153;
18009 +          Q_CategoryFITNESS  =                    0;
18010 +          Q_CategoryOTHER  =     0.07692307692307;
18011 +          Q_CategorySALES  =     0.00961538461538;
18012 +          Q_CategoryCONSULTANT  =     0.24038461538461;
18013 +          Q_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18014 +          V_CategoryHR  =                    0;
18015 +          V_CategoryDESIGNER  =                    0;
18016 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.53225806451612;
18017 +          V_CategoryTEACHER  =                    0;
18018 +          V_CategoryADVOCATE  =     0.01612903225806;
18019 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.04838709677419;
18020 +          V_CategoryHEALTHCARE  =     0.03225806451612;
18021 +          V_CategoryFITNESS  =                    0;
18022 +          V_CategoryOTHER  =     0.08064516129032;
18023 +          V_CategorySALES  =     0.01612903225806;
18024 +          V_CategoryCONSULTANT  =      0.1774193548387;
18025 +          V_CategoryDIGITAL_MEDIA  =     0.09677419354838;
18026 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18027 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18028 +          END;
18029 +        ELSE DO;
18030 +          IF  NOT MISSING(TextCluster9_SVD5 ) AND
18031 +                0.14051235930895 <= TextCluster9_SVD5  THEN DO;
18032 +            _NODE_  =                   19;
18033 +            _LEAF_  =                    4;
18034 +            P_CategoryHR  =     0.02380952380952;
18035 +            P_CategoryDESIGNER  =                    0;
18036 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18037 +            P_CategoryTEACHER  =     0.02380952380952;
18038 +            P_CategoryADVOCATE  =                    0;
18039 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
18040 +            P_CategoryHEALTHCARE  =     0.04761904761904;
18041 +            P_CategoryFITNESS  =                    0;
18042 +            P_CategoryOTHER  =     0.04761904761904;
18043 +            P_CategorySALES  =                    0;
18044 +            P_CategoryCONSULTANT  =     0.07142857142857;
18045 +            P_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18046 +            Q_CategoryHR  =     0.02380952380952;
18047 +            Q_CategoryDESIGNER  =                    0;
18048 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18049 +            Q_CategoryTEACHER  =     0.02380952380952;
18050 +            Q_CategoryADVOCATE  =                    0;
18051 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
18052 +            Q_CategoryHEALTHCARE  =     0.04761904761904;
18053 +            Q_CategoryFITNESS  =                    0;
18054 +            Q_CategoryOTHER  =     0.04761904761904;
18055 +            Q_CategorySALES  =                    0;
18056 +            Q_CategoryCONSULTANT  =     0.07142857142857;
18057 +            Q_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18058 +            V_CategoryHR  =     0.07407407407407;
18059 +            V_CategoryDESIGNER  =     0.03703703703703;
18060 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18061 +            V_CategoryTEACHER  =                    0;
18062 +            V_CategoryADVOCATE  =                    0;
18063 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.07407407407407;
18064 +            V_CategoryHEALTHCARE  =                    0;
18065 +            V_CategoryFITNESS  =                    0;
18066 +            V_CategoryOTHER  =                    0;
18067 +            V_CategorySALES  =     0.07407407407407;
18068 +            V_CategoryCONSULTANT  =     0.14814814814814;
18069 +            V_CategoryDIGITAL_MEDIA  =     0.59259259259259;
18070 +            I_Category  = 'DIGITAL-MEDIA' ;
18071 +            U_Category  = 'DIGITAL-MEDIA' ;
18072 +            END;
18073 +          ELSE DO;
18074 +            _NODE_  =                   18;
18075 +            _LEAF_  =                    3;
18076 +            P_CategoryHR  =     0.01552795031055;
18077 +            P_CategoryDESIGNER  =     0.02484472049689;
18078 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
18079 +            P_CategoryTEACHER  =     0.01242236024844;
18080 +            P_CategoryADVOCATE  =     0.14596273291925;
18081 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
18082 +            P_CategoryHEALTHCARE  =     0.15217391304347;
18083 +            P_CategoryFITNESS  =     0.04037267080745;
18084 +            P_CategoryOTHER  =      0.1583850931677;
18085 +            P_CategorySALES  =     0.16770186335403;
18086 +            P_CategoryCONSULTANT  =     0.08695652173913;
18087 +            P_CategoryDIGITAL_MEDIA  =       0.027950310559;
18088 +            Q_CategoryHR  =     0.01552795031055;
18089 +            Q_CategoryDESIGNER  =     0.02484472049689;
18090 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
18091 +            Q_CategoryTEACHER  =     0.01242236024844;
18092 +            Q_CategoryADVOCATE  =     0.14596273291925;
18093 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
18094 +            Q_CategoryHEALTHCARE  =     0.15217391304347;
18095 +            Q_CategoryFITNESS  =     0.04037267080745;
18096 +            Q_CategoryOTHER  =      0.1583850931677;
18097 +            Q_CategorySALES  =     0.16770186335403;
18098 +            Q_CategoryCONSULTANT  =     0.08695652173913;
18099 +            Q_CategoryDIGITAL_MEDIA  =       0.027950310559;
18100 +            V_CategoryHR  =     0.01123595505617;
18101 +            V_CategoryDESIGNER  =     0.01123595505617;
18102 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01123595505617;
18103 +            V_CategoryTEACHER  =     0.00561797752808;
18104 +            V_CategoryADVOCATE  =     0.16853932584269;
18105 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17415730337078;
18106 +            V_CategoryHEALTHCARE  =     0.14606741573033;
18107 +            V_CategoryFITNESS  =     0.03932584269662;
18108 +            V_CategoryOTHER  =     0.15730337078651;
18109 +            V_CategorySALES  =     0.15168539325842;
18110 +            V_CategoryCONSULTANT  =     0.10112359550561;
18111 +            V_CategoryDIGITAL_MEDIA  =     0.02247191011235;
18112 +            I_Category  = 'SALES' ;
18113 +            U_Category  = 'SALES' ;
18114 +            END;
18115 +          END;
18116 +        END;
18117 +      END;
18118 +    END;
18119 +  END;
18120 +
18121 +*****  RESIDUALS R_ *************;
18122 +IF  F_Category  NE 'HR'
18123 +AND F_Category  NE 'DESIGNER'
18124 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18125 +AND F_Category  NE 'TEACHER'
18126 +AND F_Category  NE 'ADVOCATE'
18127 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18128 +AND F_Category  NE 'HEALTHCARE'
18129 +AND F_Category  NE 'FITNESS'
18130 +AND F_Category  NE 'OTHER'
18131 +AND F_Category  NE 'SALES'
18132 +AND F_Category  NE 'CONSULTANT'
18133 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18134 +        R_CategoryHR  = .;
18135 +        R_CategoryDESIGNER  = .;
18136 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18137 +        R_CategoryTEACHER  = .;
18138 +        R_CategoryADVOCATE  = .;
18139 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18140 +        R_CategoryHEALTHCARE  = .;
18141 +        R_CategoryFITNESS  = .;
18142 +        R_CategoryOTHER  = .;
18143 +        R_CategorySALES  = .;
18144 +        R_CategoryCONSULTANT  = .;
18145 +        R_CategoryDIGITAL_MEDIA  = .;
18146 + END;
18147 + ELSE DO;
18148 +       R_CategoryHR  =  -P_CategoryHR ;
18149 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18150 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18151 +         ;
18152 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18153 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18154 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18155 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18156 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18157 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18158 +       R_CategorySALES  =  -P_CategorySALES ;
18159 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18160 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18161 +       SELECT( F_Category  );
18162 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18163 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18164 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18165 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18166 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18167 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18168 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18169 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18170 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18171 +          +1;
18172 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18173 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18174 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18175 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18176 +          +1;
18177 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18178 +        R_CategoryDIGITAL_MEDIA  +1;
18179 +       END;
18180 + END;
18181 +
18182 +****************************************************************;
18183 +******          END OF DECISION TREE SCORING CODE         ******;
18184 +****************************************************************;
18185 +
18186 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18187  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
18188  quit;
18189  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18190  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas";
18191  *------------------------------------------------------------*;
18192  * Tree9: Scoring VALIDATE data;
18193  *------------------------------------------------------------*;
18194  data EMWS3.Tree9_VALIDATE
18195  / view=EMWS3.Tree9_VALIDATE
18196  ;
18197  set EMWS3.TextCluster9_VALIDATE
18198  ;
18199  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas.
18200 +****************************************************************;
18201 +******             DECISION TREE SCORING CODE             ******;
18202 +****************************************************************;
18203 +
18204 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18205 +LENGTH F_Category  $   22;
18206 +LENGTH I_Category  $   22;
18207 +LENGTH U_Category  $   22;
18208 +LENGTH _WARN_  $    4;
18209 +
18210 +******              LABELS FOR NEW VARIABLES              ******;
18211 +label _NODE_ = 'Node' ;
18212 +label _LEAF_ = 'Leaf' ;
18213 +label P_CategoryHR = 'Predicted: Category=HR' ;
18214 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18215 +label P_CategoryINFORMATION_TECHNOLOGY =
18216 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18217 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18218 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18219 +label P_CategoryBUSINESS_DEVELOPMENT =
18220 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18221 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18222 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18223 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18224 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18225 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18226 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18227 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18228 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18229 +label Q_CategoryINFORMATION_TECHNOLOGY =
18230 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18231 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18232 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18233 +label Q_CategoryBUSINESS_DEVELOPMENT =
18234 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18235 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18236 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18237 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18238 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18239 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18240 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18241 +label V_CategoryHR = 'Validated: Category=HR' ;
18242 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18243 +label V_CategoryINFORMATION_TECHNOLOGY =
18244 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18245 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18246 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18247 +label V_CategoryBUSINESS_DEVELOPMENT =
18248 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18249 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18250 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18251 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18252 +label V_CategorySALES = 'Validated: Category=SALES' ;
18253 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18254 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18255 +label R_CategoryHR = 'Residual: Category=HR' ;
18256 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18257 +label R_CategoryINFORMATION_TECHNOLOGY =
18258 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18259 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18260 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18261 +label R_CategoryBUSINESS_DEVELOPMENT =
18262 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18263 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18264 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18265 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18266 +label R_CategorySALES = 'Residual: Category=SALES' ;
18267 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18268 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18269 +label F_Category = 'From: Category' ;
18270 +label I_Category = 'Into: Category' ;
18271 +label U_Category = 'Unnormalized Into: Category' ;
18272 +label _WARN_ = 'Warnings' ;
18273 +
18274 +
18275 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18276 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18277 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18278 +
18279 +
18280 +_ARBFMT_22 = PUT( Category , $22.);
18281 + %DMNORMCP( _ARBFMT_22, F_Category );
18282 +
18283 +******             ASSIGN OBSERVATION TO NODE             ******;
18284 +IF  NOT MISSING(TextCluster9_SVD3 ) AND
18285 +      0.31811682390849 <= TextCluster9_SVD3  THEN DO;
18286 +  _NODE_  =                    3;
18287 +  _LEAF_  =                    7;
18288 +  P_CategoryHR  =                0.875;
18289 +  P_CategoryDESIGNER  =                    0;
18290 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18291 +  P_CategoryTEACHER  =                    0;
18292 +  P_CategoryADVOCATE  =     0.03571428571428;
18293 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
18294 +  P_CategoryHEALTHCARE  =     0.01785714285714;
18295 +  P_CategoryFITNESS  =     0.01785714285714;
18296 +  P_CategoryOTHER  =     0.01785714285714;
18297 +  P_CategorySALES  =                    0;
18298 +  P_CategoryCONSULTANT  =     0.01785714285714;
18299 +  P_CategoryDIGITAL_MEDIA  =                    0;
18300 +  Q_CategoryHR  =                0.875;
18301 +  Q_CategoryDESIGNER  =                    0;
18302 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18303 +  Q_CategoryTEACHER  =                    0;
18304 +  Q_CategoryADVOCATE  =     0.03571428571428;
18305 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
18306 +  Q_CategoryHEALTHCARE  =     0.01785714285714;
18307 +  Q_CategoryFITNESS  =     0.01785714285714;
18308 +  Q_CategoryOTHER  =     0.01785714285714;
18309 +  Q_CategorySALES  =                    0;
18310 +  Q_CategoryCONSULTANT  =     0.01785714285714;
18311 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18312 +  V_CategoryHR  =      0.8235294117647;
18313 +  V_CategoryDESIGNER  =                    0;
18314 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18315 +  V_CategoryTEACHER  =                    0;
18316 +  V_CategoryADVOCATE  =                    0;
18317 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18318 +  V_CategoryHEALTHCARE  =     0.08823529411764;
18319 +  V_CategoryFITNESS  =     0.02941176470588;
18320 +  V_CategoryOTHER  =                    0;
18321 +  V_CategorySALES  =                    0;
18322 +  V_CategoryCONSULTANT  =     0.05882352941176;
18323 +  V_CategoryDIGITAL_MEDIA  =                    0;
18324 +  I_Category  = 'HR' ;
18325 +  U_Category  = 'HR' ;
18326 +  END;
18327 +ELSE DO;
18328 +  IF  NOT MISSING(TextCluster9_SVD6 ) AND
18329 +    TextCluster9_SVD6  <    -0.26505507071164 THEN DO;
18330 +    _NODE_  =                    4;
18331 +    _LEAF_  =                    1;
18332 +    P_CategoryHR  =                    0;
18333 +    P_CategoryDESIGNER  =                 0.88;
18334 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18335 +    P_CategoryTEACHER  =                    0;
18336 +    P_CategoryADVOCATE  =                    0;
18337 +    P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18338 +    P_CategoryHEALTHCARE  =                    0;
18339 +    P_CategoryFITNESS  =                    0;
18340 +    P_CategoryOTHER  =                    0;
18341 +    P_CategorySALES  =                 0.04;
18342 +    P_CategoryCONSULTANT  =                    0;
18343 +    P_CategoryDIGITAL_MEDIA  =                 0.06;
18344 +    Q_CategoryHR  =                    0;
18345 +    Q_CategoryDESIGNER  =                 0.88;
18346 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18347 +    Q_CategoryTEACHER  =                    0;
18348 +    Q_CategoryADVOCATE  =                    0;
18349 +    Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18350 +    Q_CategoryHEALTHCARE  =                    0;
18351 +    Q_CategoryFITNESS  =                    0;
18352 +    Q_CategoryOTHER  =                    0;
18353 +    Q_CategorySALES  =                 0.04;
18354 +    Q_CategoryCONSULTANT  =                    0;
18355 +    Q_CategoryDIGITAL_MEDIA  =                 0.06;
18356 +    V_CategoryHR  =                    0;
18357 +    V_CategoryDESIGNER  =      0.8235294117647;
18358 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18359 +    V_CategoryTEACHER  =     0.05882352941176;
18360 +    V_CategoryADVOCATE  =                    0;
18361 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18362 +    V_CategoryHEALTHCARE  =                    0;
18363 +    V_CategoryFITNESS  =                    0;
18364 +    V_CategoryOTHER  =                    0;
18365 +    V_CategorySALES  =     0.05882352941176;
18366 +    V_CategoryCONSULTANT  =                    0;
18367 +    V_CategoryDIGITAL_MEDIA  =     0.05882352941176;
18368 +    I_Category  = 'DESIGNER' ;
18369 +    U_Category  = 'DESIGNER' ;
18370 +    END;
18371 +  ELSE DO;
18372 +    IF  NOT MISSING(TextCluster9_SVD3 ) AND
18373 +      TextCluster9_SVD3  <    -0.39940278019306 THEN DO;
18374 +      _NODE_  =                   10;
18375 +      _LEAF_  =                    2;
18376 +      P_CategoryHR  =                    0;
18377 +      P_CategoryDESIGNER  =                    0;
18378 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
18379 +      P_CategoryTEACHER  =     0.81818181818181;
18380 +      P_CategoryADVOCATE  =     0.05454545454545;
18381 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18382 +      P_CategoryHEALTHCARE  =     0.01818181818181;
18383 +      P_CategoryFITNESS  =     0.07272727272727;
18384 +      P_CategoryOTHER  =                    0;
18385 +      P_CategorySALES  =     0.01818181818181;
18386 +      P_CategoryCONSULTANT  =                    0;
18387 +      P_CategoryDIGITAL_MEDIA  =                    0;
18388 +      Q_CategoryHR  =                    0;
18389 +      Q_CategoryDESIGNER  =                    0;
18390 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
18391 +      Q_CategoryTEACHER  =     0.81818181818181;
18392 +      Q_CategoryADVOCATE  =     0.05454545454545;
18393 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18394 +      Q_CategoryHEALTHCARE  =     0.01818181818181;
18395 +      Q_CategoryFITNESS  =     0.07272727272727;
18396 +      Q_CategoryOTHER  =                    0;
18397 +      Q_CategorySALES  =     0.01818181818181;
18398 +      Q_CategoryCONSULTANT  =                    0;
18399 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18400 +      V_CategoryHR  =                    0;
18401 +      V_CategoryDESIGNER  =                    0;
18402 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02439024390243;
18403 +      V_CategoryTEACHER  =     0.68292682926829;
18404 +      V_CategoryADVOCATE  =     0.09756097560975;
18405 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18406 +      V_CategoryHEALTHCARE  =     0.02439024390243;
18407 +      V_CategoryFITNESS  =     0.04878048780487;
18408 +      V_CategoryOTHER  =     0.09756097560975;
18409 +      V_CategorySALES  =     0.02439024390243;
18410 +      V_CategoryCONSULTANT  =                    0;
18411 +      V_CategoryDIGITAL_MEDIA  =                    0;
18412 +      I_Category  = 'TEACHER' ;
18413 +      U_Category  = 'TEACHER' ;
18414 +      END;
18415 +    ELSE DO;
18416 +      IF  NOT MISSING(TextCluster9_SVD8 ) AND
18417 +             0.1335155264173 <= TextCluster9_SVD8  THEN DO;
18418 +        _NODE_  =                   15;
18419 +        _LEAF_  =                    6;
18420 +        P_CategoryHR  =                    0;
18421 +        P_CategoryDESIGNER  =                    0;
18422 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18423 +        P_CategoryTEACHER  =                    0;
18424 +        P_CategoryADVOCATE  =     0.06666666666666;
18425 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18426 +        P_CategoryHEALTHCARE  =                    0;
18427 +        P_CategoryFITNESS  =     0.88888888888888;
18428 +        P_CategoryOTHER  =     0.02222222222222;
18429 +        P_CategorySALES  =                    0;
18430 +        P_CategoryCONSULTANT  =                    0;
18431 +        P_CategoryDIGITAL_MEDIA  =                    0;
18432 +        Q_CategoryHR  =                    0;
18433 +        Q_CategoryDESIGNER  =                    0;
18434 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18435 +        Q_CategoryTEACHER  =                    0;
18436 +        Q_CategoryADVOCATE  =     0.06666666666666;
18437 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18438 +        Q_CategoryHEALTHCARE  =                    0;
18439 +        Q_CategoryFITNESS  =     0.88888888888888;
18440 +        Q_CategoryOTHER  =     0.02222222222222;
18441 +        Q_CategorySALES  =                    0;
18442 +        Q_CategoryCONSULTANT  =                    0;
18443 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18444 +        V_CategoryHR  =                    0;
18445 +        V_CategoryDESIGNER  =                    0;
18446 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18447 +        V_CategoryTEACHER  =                    0;
18448 +        V_CategoryADVOCATE  =                    0;
18449 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18450 +        V_CategoryHEALTHCARE  =     0.03448275862068;
18451 +        V_CategoryFITNESS  =     0.86206896551724;
18452 +        V_CategoryOTHER  =     0.03448275862068;
18453 +        V_CategorySALES  =     0.03448275862068;
18454 +        V_CategoryCONSULTANT  =                    0;
18455 +        V_CategoryDIGITAL_MEDIA  =     0.03448275862068;
18456 +        I_Category  = 'FITNESS' ;
18457 +        U_Category  = 'FITNESS' ;
18458 +        END;
18459 +      ELSE DO;
18460 +        IF  NOT MISSING(TextCluster9_SVD2 ) AND
18461 +              0.14359099648973 <= TextCluster9_SVD2  THEN DO;
18462 +          _NODE_  =                   17;
18463 +          _LEAF_  =                    5;
18464 +          P_CategoryHR  =                    0;
18465 +          P_CategoryDESIGNER  =     0.00961538461538;
18466 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
18467 +          P_CategoryTEACHER  =                    0;
18468 +          P_CategoryADVOCATE  =     0.01923076923076;
18469 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18470 +          P_CategoryHEALTHCARE  =     0.03846153846153;
18471 +          P_CategoryFITNESS  =                    0;
18472 +          P_CategoryOTHER  =     0.07692307692307;
18473 +          P_CategorySALES  =     0.00961538461538;
18474 +          P_CategoryCONSULTANT  =     0.24038461538461;
18475 +          P_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18476 +          Q_CategoryHR  =                    0;
18477 +          Q_CategoryDESIGNER  =     0.00961538461538;
18478 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
18479 +          Q_CategoryTEACHER  =                    0;
18480 +          Q_CategoryADVOCATE  =     0.01923076923076;
18481 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18482 +          Q_CategoryHEALTHCARE  =     0.03846153846153;
18483 +          Q_CategoryFITNESS  =                    0;
18484 +          Q_CategoryOTHER  =     0.07692307692307;
18485 +          Q_CategorySALES  =     0.00961538461538;
18486 +          Q_CategoryCONSULTANT  =     0.24038461538461;
18487 +          Q_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18488 +          V_CategoryHR  =                    0;
18489 +          V_CategoryDESIGNER  =                    0;
18490 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.53225806451612;
18491 +          V_CategoryTEACHER  =                    0;
18492 +          V_CategoryADVOCATE  =     0.01612903225806;
18493 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.04838709677419;
18494 +          V_CategoryHEALTHCARE  =     0.03225806451612;
18495 +          V_CategoryFITNESS  =                    0;
18496 +          V_CategoryOTHER  =     0.08064516129032;
18497 +          V_CategorySALES  =     0.01612903225806;
18498 +          V_CategoryCONSULTANT  =      0.1774193548387;
18499 +          V_CategoryDIGITAL_MEDIA  =     0.09677419354838;
18500 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18501 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18502 +          END;
18503 +        ELSE DO;
18504 +          IF  NOT MISSING(TextCluster9_SVD5 ) AND
18505 +                0.14051235930895 <= TextCluster9_SVD5  THEN DO;
18506 +            _NODE_  =                   19;
18507 +            _LEAF_  =                    4;
18508 +            P_CategoryHR  =     0.02380952380952;
18509 +            P_CategoryDESIGNER  =                    0;
18510 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18511 +            P_CategoryTEACHER  =     0.02380952380952;
18512 +            P_CategoryADVOCATE  =                    0;
18513 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
18514 +            P_CategoryHEALTHCARE  =     0.04761904761904;
18515 +            P_CategoryFITNESS  =                    0;
18516 +            P_CategoryOTHER  =     0.04761904761904;
18517 +            P_CategorySALES  =                    0;
18518 +            P_CategoryCONSULTANT  =     0.07142857142857;
18519 +            P_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18520 +            Q_CategoryHR  =     0.02380952380952;
18521 +            Q_CategoryDESIGNER  =                    0;
18522 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18523 +            Q_CategoryTEACHER  =     0.02380952380952;
18524 +            Q_CategoryADVOCATE  =                    0;
18525 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
18526 +            Q_CategoryHEALTHCARE  =     0.04761904761904;
18527 +            Q_CategoryFITNESS  =                    0;
18528 +            Q_CategoryOTHER  =     0.04761904761904;
18529 +            Q_CategorySALES  =                    0;
18530 +            Q_CategoryCONSULTANT  =     0.07142857142857;
18531 +            Q_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18532 +            V_CategoryHR  =     0.07407407407407;
18533 +            V_CategoryDESIGNER  =     0.03703703703703;
18534 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18535 +            V_CategoryTEACHER  =                    0;
18536 +            V_CategoryADVOCATE  =                    0;
18537 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.07407407407407;
18538 +            V_CategoryHEALTHCARE  =                    0;
18539 +            V_CategoryFITNESS  =                    0;
18540 +            V_CategoryOTHER  =                    0;
18541 +            V_CategorySALES  =     0.07407407407407;
18542 +            V_CategoryCONSULTANT  =     0.14814814814814;
18543 +            V_CategoryDIGITAL_MEDIA  =     0.59259259259259;
18544 +            I_Category  = 'DIGITAL-MEDIA' ;
18545 +            U_Category  = 'DIGITAL-MEDIA' ;
18546 +            END;
18547 +          ELSE DO;
18548 +            _NODE_  =                   18;
18549 +            _LEAF_  =                    3;
18550 +            P_CategoryHR  =     0.01552795031055;
18551 +            P_CategoryDESIGNER  =     0.02484472049689;
18552 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
18553 +            P_CategoryTEACHER  =     0.01242236024844;
18554 +            P_CategoryADVOCATE  =     0.14596273291925;
18555 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
18556 +            P_CategoryHEALTHCARE  =     0.15217391304347;
18557 +            P_CategoryFITNESS  =     0.04037267080745;
18558 +            P_CategoryOTHER  =      0.1583850931677;
18559 +            P_CategorySALES  =     0.16770186335403;
18560 +            P_CategoryCONSULTANT  =     0.08695652173913;
18561 +            P_CategoryDIGITAL_MEDIA  =       0.027950310559;
18562 +            Q_CategoryHR  =     0.01552795031055;
18563 +            Q_CategoryDESIGNER  =     0.02484472049689;
18564 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
18565 +            Q_CategoryTEACHER  =     0.01242236024844;
18566 +            Q_CategoryADVOCATE  =     0.14596273291925;
18567 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
18568 +            Q_CategoryHEALTHCARE  =     0.15217391304347;
18569 +            Q_CategoryFITNESS  =     0.04037267080745;
18570 +            Q_CategoryOTHER  =      0.1583850931677;
18571 +            Q_CategorySALES  =     0.16770186335403;
18572 +            Q_CategoryCONSULTANT  =     0.08695652173913;
18573 +            Q_CategoryDIGITAL_MEDIA  =       0.027950310559;
18574 +            V_CategoryHR  =     0.01123595505617;
18575 +            V_CategoryDESIGNER  =     0.01123595505617;
18576 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01123595505617;
18577 +            V_CategoryTEACHER  =     0.00561797752808;
18578 +            V_CategoryADVOCATE  =     0.16853932584269;
18579 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17415730337078;
18580 +            V_CategoryHEALTHCARE  =     0.14606741573033;
18581 +            V_CategoryFITNESS  =     0.03932584269662;
18582 +            V_CategoryOTHER  =     0.15730337078651;
18583 +            V_CategorySALES  =     0.15168539325842;
18584 +            V_CategoryCONSULTANT  =     0.10112359550561;
18585 +            V_CategoryDIGITAL_MEDIA  =     0.02247191011235;
18586 +            I_Category  = 'SALES' ;
18587 +            U_Category  = 'SALES' ;
18588 +            END;
18589 +          END;
18590 +        END;
18591 +      END;
18592 +    END;
18593 +  END;
18594 +
18595 +*****  RESIDUALS R_ *************;
18596 +IF  F_Category  NE 'HR'
18597 +AND F_Category  NE 'DESIGNER'
18598 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
18599 +AND F_Category  NE 'TEACHER'
18600 +AND F_Category  NE 'ADVOCATE'
18601 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
18602 +AND F_Category  NE 'HEALTHCARE'
18603 +AND F_Category  NE 'FITNESS'
18604 +AND F_Category  NE 'OTHER'
18605 +AND F_Category  NE 'SALES'
18606 +AND F_Category  NE 'CONSULTANT'
18607 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
18608 +        R_CategoryHR  = .;
18609 +        R_CategoryDESIGNER  = .;
18610 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
18611 +        R_CategoryTEACHER  = .;
18612 +        R_CategoryADVOCATE  = .;
18613 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
18614 +        R_CategoryHEALTHCARE  = .;
18615 +        R_CategoryFITNESS  = .;
18616 +        R_CategoryOTHER  = .;
18617 +        R_CategorySALES  = .;
18618 +        R_CategoryCONSULTANT  = .;
18619 +        R_CategoryDIGITAL_MEDIA  = .;
18620 + END;
18621 + ELSE DO;
18622 +       R_CategoryHR  =  -P_CategoryHR ;
18623 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
18624 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
18625 +         ;
18626 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
18627 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
18628 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
18629 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
18630 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
18631 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
18632 +       R_CategorySALES  =  -P_CategorySALES ;
18633 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
18634 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
18635 +       SELECT( F_Category  );
18636 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
18637 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
18638 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
18639 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
18640 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
18641 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
18642 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
18643 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
18644 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
18645 +          +1;
18646 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
18647 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
18648 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
18649 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
18650 +          +1;
18651 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
18652 +        R_CategoryDIGITAL_MEDIA  +1;
18653 +       END;
18654 + END;
18655 +
18656 +****************************************************************;
18657 +******          END OF DECISION TREE SCORING CODE         ******;
18658 +****************************************************************;
18659 +
18660 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18661  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18662  quit;
18663  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
18664  filename emflow "C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas";
18665  *------------------------------------------------------------*;
18666  * Tree9: Scoring TEST data;
18667  *------------------------------------------------------------*;
18668  data EMWS3.Tree9_TEST
18669  / view=EMWS3.Tree9_TEST
18670  ;
18671  set EMWS3.TextCluster9_TEST
18672  ;
18673  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\lahar\OneDrive\Desktop\Data Mining\Resume\Workspaces\EMWS3\Tree9\EMFLOWSCORE.sas.
18674 +****************************************************************;
18675 +******             DECISION TREE SCORING CODE             ******;
18676 +****************************************************************;
18677 +
18678 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18679 +LENGTH F_Category  $   22;
18680 +LENGTH I_Category  $   22;
18681 +LENGTH U_Category  $   22;
18682 +LENGTH _WARN_  $    4;
18683 +
18684 +******              LABELS FOR NEW VARIABLES              ******;
18685 +label _NODE_ = 'Node' ;
18686 +label _LEAF_ = 'Leaf' ;
18687 +label P_CategoryHR = 'Predicted: Category=HR' ;
18688 +label P_CategoryDESIGNER = 'Predicted: Category=DESIGNER' ;
18689 +label P_CategoryINFORMATION_TECHNOLOGY =
18690 +'Predicted: Category=INFORMATION-TECHNOLOGY' ;
18691 +label P_CategoryTEACHER = 'Predicted: Category=TEACHER' ;
18692 +label P_CategoryADVOCATE = 'Predicted: Category=ADVOCATE' ;
18693 +label P_CategoryBUSINESS_DEVELOPMENT =
18694 +'Predicted: Category=BUSINESS-DEVELOPMENT' ;
18695 +label P_CategoryHEALTHCARE = 'Predicted: Category=HEALTHCARE' ;
18696 +label P_CategoryFITNESS = 'Predicted: Category=FITNESS' ;
18697 +label P_CategoryOTHER = 'Predicted: Category=OTHER' ;
18698 +label P_CategorySALES = 'Predicted: Category=SALES' ;
18699 +label P_CategoryCONSULTANT = 'Predicted: Category=CONSULTANT' ;
18700 +label P_CategoryDIGITAL_MEDIA = 'Predicted: Category=DIGITAL-MEDIA' ;
18701 +label Q_CategoryHR = 'Unadjusted P: Category=HR' ;
18702 +label Q_CategoryDESIGNER = 'Unadjusted P: Category=DESIGNER' ;
18703 +label Q_CategoryINFORMATION_TECHNOLOGY =
18704 +'Unadjusted P: Category=INFORMATION-TECHNOLOGY' ;
18705 +label Q_CategoryTEACHER = 'Unadjusted P: Category=TEACHER' ;
18706 +label Q_CategoryADVOCATE = 'Unadjusted P: Category=ADVOCATE' ;
18707 +label Q_CategoryBUSINESS_DEVELOPMENT =
18708 +'Unadjusted P: Category=BUSINESS-DEVELOPMENT' ;
18709 +label Q_CategoryHEALTHCARE = 'Unadjusted P: Category=HEALTHCARE' ;
18710 +label Q_CategoryFITNESS = 'Unadjusted P: Category=FITNESS' ;
18711 +label Q_CategoryOTHER = 'Unadjusted P: Category=OTHER' ;
18712 +label Q_CategorySALES = 'Unadjusted P: Category=SALES' ;
18713 +label Q_CategoryCONSULTANT = 'Unadjusted P: Category=CONSULTANT' ;
18714 +label Q_CategoryDIGITAL_MEDIA = 'Unadjusted P: Category=DIGITAL-MEDIA' ;
18715 +label V_CategoryHR = 'Validated: Category=HR' ;
18716 +label V_CategoryDESIGNER = 'Validated: Category=DESIGNER' ;
18717 +label V_CategoryINFORMATION_TECHNOLOGY =
18718 +'Validated: Category=INFORMATION-TECHNOLOGY' ;
18719 +label V_CategoryTEACHER = 'Validated: Category=TEACHER' ;
18720 +label V_CategoryADVOCATE = 'Validated: Category=ADVOCATE' ;
18721 +label V_CategoryBUSINESS_DEVELOPMENT =
18722 +'Validated: Category=BUSINESS-DEVELOPMENT' ;
18723 +label V_CategoryHEALTHCARE = 'Validated: Category=HEALTHCARE' ;
18724 +label V_CategoryFITNESS = 'Validated: Category=FITNESS' ;
18725 +label V_CategoryOTHER = 'Validated: Category=OTHER' ;
18726 +label V_CategorySALES = 'Validated: Category=SALES' ;
18727 +label V_CategoryCONSULTANT = 'Validated: Category=CONSULTANT' ;
18728 +label V_CategoryDIGITAL_MEDIA = 'Validated: Category=DIGITAL-MEDIA' ;
18729 +label R_CategoryHR = 'Residual: Category=HR' ;
18730 +label R_CategoryDESIGNER = 'Residual: Category=DESIGNER' ;
18731 +label R_CategoryINFORMATION_TECHNOLOGY =
18732 +'Residual: Category=INFORMATION-TECHNOLOGY' ;
18733 +label R_CategoryTEACHER = 'Residual: Category=TEACHER' ;
18734 +label R_CategoryADVOCATE = 'Residual: Category=ADVOCATE' ;
18735 +label R_CategoryBUSINESS_DEVELOPMENT =
18736 +'Residual: Category=BUSINESS-DEVELOPMENT' ;
18737 +label R_CategoryHEALTHCARE = 'Residual: Category=HEALTHCARE' ;
18738 +label R_CategoryFITNESS = 'Residual: Category=FITNESS' ;
18739 +label R_CategoryOTHER = 'Residual: Category=OTHER' ;
18740 +label R_CategorySALES = 'Residual: Category=SALES' ;
18741 +label R_CategoryCONSULTANT = 'Residual: Category=CONSULTANT' ;
18742 +label R_CategoryDIGITAL_MEDIA = 'Residual: Category=DIGITAL-MEDIA' ;
18743 +label F_Category = 'From: Category' ;
18744 +label I_Category = 'Into: Category' ;
18745 +label U_Category = 'Unnormalized Into: Category' ;
18746 +label _WARN_ = 'Warnings' ;
18747 +
18748 +
18749 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18750 +LENGTH _ARBFMT_22 $     22; DROP _ARBFMT_22;
18751 +_ARBFMT_22 = ' '; /* Initialize to avoid warning. */
18752 +
18753 +
18754 +_ARBFMT_22 = PUT( Category , $22.);
18755 + %DMNORMCP( _ARBFMT_22, F_Category );
18756 +
18757 +******             ASSIGN OBSERVATION TO NODE             ******;
18758 +IF  NOT MISSING(TextCluster9_SVD3 ) AND
18759 +      0.31811682390849 <= TextCluster9_SVD3  THEN DO;
18760 +  _NODE_  =                    3;
18761 +  _LEAF_  =                    7;
18762 +  P_CategoryHR  =                0.875;
18763 +  P_CategoryDESIGNER  =                    0;
18764 +  P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18765 +  P_CategoryTEACHER  =                    0;
18766 +  P_CategoryADVOCATE  =     0.03571428571428;
18767 +  P_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
18768 +  P_CategoryHEALTHCARE  =     0.01785714285714;
18769 +  P_CategoryFITNESS  =     0.01785714285714;
18770 +  P_CategoryOTHER  =     0.01785714285714;
18771 +  P_CategorySALES  =                    0;
18772 +  P_CategoryCONSULTANT  =     0.01785714285714;
18773 +  P_CategoryDIGITAL_MEDIA  =                    0;
18774 +  Q_CategoryHR  =                0.875;
18775 +  Q_CategoryDESIGNER  =                    0;
18776 +  Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18777 +  Q_CategoryTEACHER  =                    0;
18778 +  Q_CategoryADVOCATE  =     0.03571428571428;
18779 +  Q_CategoryBUSINESS_DEVELOPMENT  =     0.01785714285714;
18780 +  Q_CategoryHEALTHCARE  =     0.01785714285714;
18781 +  Q_CategoryFITNESS  =     0.01785714285714;
18782 +  Q_CategoryOTHER  =     0.01785714285714;
18783 +  Q_CategorySALES  =                    0;
18784 +  Q_CategoryCONSULTANT  =     0.01785714285714;
18785 +  Q_CategoryDIGITAL_MEDIA  =                    0;
18786 +  V_CategoryHR  =      0.8235294117647;
18787 +  V_CategoryDESIGNER  =                    0;
18788 +  V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18789 +  V_CategoryTEACHER  =                    0;
18790 +  V_CategoryADVOCATE  =                    0;
18791 +  V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18792 +  V_CategoryHEALTHCARE  =     0.08823529411764;
18793 +  V_CategoryFITNESS  =     0.02941176470588;
18794 +  V_CategoryOTHER  =                    0;
18795 +  V_CategorySALES  =                    0;
18796 +  V_CategoryCONSULTANT  =     0.05882352941176;
18797 +  V_CategoryDIGITAL_MEDIA  =                    0;
18798 +  I_Category  = 'HR' ;
18799 +  U_Category  = 'HR' ;
18800 +  END;
18801 +ELSE DO;
18802 +  IF  NOT MISSING(TextCluster9_SVD6 ) AND
18803 +    TextCluster9_SVD6  <    -0.26505507071164 THEN DO;
18804 +    _NODE_  =                    4;
18805 +    _LEAF_  =                    1;
18806 +    P_CategoryHR  =                    0;
18807 +    P_CategoryDESIGNER  =                 0.88;
18808 +    P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18809 +    P_CategoryTEACHER  =                    0;
18810 +    P_CategoryADVOCATE  =                    0;
18811 +    P_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18812 +    P_CategoryHEALTHCARE  =                    0;
18813 +    P_CategoryFITNESS  =                    0;
18814 +    P_CategoryOTHER  =                    0;
18815 +    P_CategorySALES  =                 0.04;
18816 +    P_CategoryCONSULTANT  =                    0;
18817 +    P_CategoryDIGITAL_MEDIA  =                 0.06;
18818 +    Q_CategoryHR  =                    0;
18819 +    Q_CategoryDESIGNER  =                 0.88;
18820 +    Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18821 +    Q_CategoryTEACHER  =                    0;
18822 +    Q_CategoryADVOCATE  =                    0;
18823 +    Q_CategoryBUSINESS_DEVELOPMENT  =                 0.02;
18824 +    Q_CategoryHEALTHCARE  =                    0;
18825 +    Q_CategoryFITNESS  =                    0;
18826 +    Q_CategoryOTHER  =                    0;
18827 +    Q_CategorySALES  =                 0.04;
18828 +    Q_CategoryCONSULTANT  =                    0;
18829 +    Q_CategoryDIGITAL_MEDIA  =                 0.06;
18830 +    V_CategoryHR  =                    0;
18831 +    V_CategoryDESIGNER  =      0.8235294117647;
18832 +    V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18833 +    V_CategoryTEACHER  =     0.05882352941176;
18834 +    V_CategoryADVOCATE  =                    0;
18835 +    V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18836 +    V_CategoryHEALTHCARE  =                    0;
18837 +    V_CategoryFITNESS  =                    0;
18838 +    V_CategoryOTHER  =                    0;
18839 +    V_CategorySALES  =     0.05882352941176;
18840 +    V_CategoryCONSULTANT  =                    0;
18841 +    V_CategoryDIGITAL_MEDIA  =     0.05882352941176;
18842 +    I_Category  = 'DESIGNER' ;
18843 +    U_Category  = 'DESIGNER' ;
18844 +    END;
18845 +  ELSE DO;
18846 +    IF  NOT MISSING(TextCluster9_SVD3 ) AND
18847 +      TextCluster9_SVD3  <    -0.39940278019306 THEN DO;
18848 +      _NODE_  =                   10;
18849 +      _LEAF_  =                    2;
18850 +      P_CategoryHR  =                    0;
18851 +      P_CategoryDESIGNER  =                    0;
18852 +      P_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
18853 +      P_CategoryTEACHER  =     0.81818181818181;
18854 +      P_CategoryADVOCATE  =     0.05454545454545;
18855 +      P_CategoryBUSINESS_DEVELOPMENT  =                    0;
18856 +      P_CategoryHEALTHCARE  =     0.01818181818181;
18857 +      P_CategoryFITNESS  =     0.07272727272727;
18858 +      P_CategoryOTHER  =                    0;
18859 +      P_CategorySALES  =     0.01818181818181;
18860 +      P_CategoryCONSULTANT  =                    0;
18861 +      P_CategoryDIGITAL_MEDIA  =                    0;
18862 +      Q_CategoryHR  =                    0;
18863 +      Q_CategoryDESIGNER  =                    0;
18864 +      Q_CategoryINFORMATION_TECHNOLOGY  =     0.01818181818181;
18865 +      Q_CategoryTEACHER  =     0.81818181818181;
18866 +      Q_CategoryADVOCATE  =     0.05454545454545;
18867 +      Q_CategoryBUSINESS_DEVELOPMENT  =                    0;
18868 +      Q_CategoryHEALTHCARE  =     0.01818181818181;
18869 +      Q_CategoryFITNESS  =     0.07272727272727;
18870 +      Q_CategoryOTHER  =                    0;
18871 +      Q_CategorySALES  =     0.01818181818181;
18872 +      Q_CategoryCONSULTANT  =                    0;
18873 +      Q_CategoryDIGITAL_MEDIA  =                    0;
18874 +      V_CategoryHR  =                    0;
18875 +      V_CategoryDESIGNER  =                    0;
18876 +      V_CategoryINFORMATION_TECHNOLOGY  =     0.02439024390243;
18877 +      V_CategoryTEACHER  =     0.68292682926829;
18878 +      V_CategoryADVOCATE  =     0.09756097560975;
18879 +      V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18880 +      V_CategoryHEALTHCARE  =     0.02439024390243;
18881 +      V_CategoryFITNESS  =     0.04878048780487;
18882 +      V_CategoryOTHER  =     0.09756097560975;
18883 +      V_CategorySALES  =     0.02439024390243;
18884 +      V_CategoryCONSULTANT  =                    0;
18885 +      V_CategoryDIGITAL_MEDIA  =                    0;
18886 +      I_Category  = 'TEACHER' ;
18887 +      U_Category  = 'TEACHER' ;
18888 +      END;
18889 +    ELSE DO;
18890 +      IF  NOT MISSING(TextCluster9_SVD8 ) AND
18891 +             0.1335155264173 <= TextCluster9_SVD8  THEN DO;
18892 +        _NODE_  =                   15;
18893 +        _LEAF_  =                    6;
18894 +        P_CategoryHR  =                    0;
18895 +        P_CategoryDESIGNER  =                    0;
18896 +        P_CategoryINFORMATION_TECHNOLOGY  =                    0;
18897 +        P_CategoryTEACHER  =                    0;
18898 +        P_CategoryADVOCATE  =     0.06666666666666;
18899 +        P_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18900 +        P_CategoryHEALTHCARE  =                    0;
18901 +        P_CategoryFITNESS  =     0.88888888888888;
18902 +        P_CategoryOTHER  =     0.02222222222222;
18903 +        P_CategorySALES  =                    0;
18904 +        P_CategoryCONSULTANT  =                    0;
18905 +        P_CategoryDIGITAL_MEDIA  =                    0;
18906 +        Q_CategoryHR  =                    0;
18907 +        Q_CategoryDESIGNER  =                    0;
18908 +        Q_CategoryINFORMATION_TECHNOLOGY  =                    0;
18909 +        Q_CategoryTEACHER  =                    0;
18910 +        Q_CategoryADVOCATE  =     0.06666666666666;
18911 +        Q_CategoryBUSINESS_DEVELOPMENT  =     0.02222222222222;
18912 +        Q_CategoryHEALTHCARE  =                    0;
18913 +        Q_CategoryFITNESS  =     0.88888888888888;
18914 +        Q_CategoryOTHER  =     0.02222222222222;
18915 +        Q_CategorySALES  =                    0;
18916 +        Q_CategoryCONSULTANT  =                    0;
18917 +        Q_CategoryDIGITAL_MEDIA  =                    0;
18918 +        V_CategoryHR  =                    0;
18919 +        V_CategoryDESIGNER  =                    0;
18920 +        V_CategoryINFORMATION_TECHNOLOGY  =                    0;
18921 +        V_CategoryTEACHER  =                    0;
18922 +        V_CategoryADVOCATE  =                    0;
18923 +        V_CategoryBUSINESS_DEVELOPMENT  =                    0;
18924 +        V_CategoryHEALTHCARE  =     0.03448275862068;
18925 +        V_CategoryFITNESS  =     0.86206896551724;
18926 +        V_CategoryOTHER  =     0.03448275862068;
18927 +        V_CategorySALES  =     0.03448275862068;
18928 +        V_CategoryCONSULTANT  =                    0;
18929 +        V_CategoryDIGITAL_MEDIA  =     0.03448275862068;
18930 +        I_Category  = 'FITNESS' ;
18931 +        U_Category  = 'FITNESS' ;
18932 +        END;
18933 +      ELSE DO;
18934 +        IF  NOT MISSING(TextCluster9_SVD2 ) AND
18935 +              0.14359099648973 <= TextCluster9_SVD2  THEN DO;
18936 +          _NODE_  =                   17;
18937 +          _LEAF_  =                    5;
18938 +          P_CategoryHR  =                    0;
18939 +          P_CategoryDESIGNER  =     0.00961538461538;
18940 +          P_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
18941 +          P_CategoryTEACHER  =                    0;
18942 +          P_CategoryADVOCATE  =     0.01923076923076;
18943 +          P_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18944 +          P_CategoryHEALTHCARE  =     0.03846153846153;
18945 +          P_CategoryFITNESS  =                    0;
18946 +          P_CategoryOTHER  =     0.07692307692307;
18947 +          P_CategorySALES  =     0.00961538461538;
18948 +          P_CategoryCONSULTANT  =     0.24038461538461;
18949 +          P_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18950 +          Q_CategoryHR  =                    0;
18951 +          Q_CategoryDESIGNER  =     0.00961538461538;
18952 +          Q_CategoryINFORMATION_TECHNOLOGY  =     0.51923076923076;
18953 +          Q_CategoryTEACHER  =                    0;
18954 +          Q_CategoryADVOCATE  =     0.01923076923076;
18955 +          Q_CategoryBUSINESS_DEVELOPMENT  =     0.01923076923076;
18956 +          Q_CategoryHEALTHCARE  =     0.03846153846153;
18957 +          Q_CategoryFITNESS  =                    0;
18958 +          Q_CategoryOTHER  =     0.07692307692307;
18959 +          Q_CategorySALES  =     0.00961538461538;
18960 +          Q_CategoryCONSULTANT  =     0.24038461538461;
18961 +          Q_CategoryDIGITAL_MEDIA  =     0.06730769230769;
18962 +          V_CategoryHR  =                    0;
18963 +          V_CategoryDESIGNER  =                    0;
18964 +          V_CategoryINFORMATION_TECHNOLOGY  =     0.53225806451612;
18965 +          V_CategoryTEACHER  =                    0;
18966 +          V_CategoryADVOCATE  =     0.01612903225806;
18967 +          V_CategoryBUSINESS_DEVELOPMENT  =     0.04838709677419;
18968 +          V_CategoryHEALTHCARE  =     0.03225806451612;
18969 +          V_CategoryFITNESS  =                    0;
18970 +          V_CategoryOTHER  =     0.08064516129032;
18971 +          V_CategorySALES  =     0.01612903225806;
18972 +          V_CategoryCONSULTANT  =      0.1774193548387;
18973 +          V_CategoryDIGITAL_MEDIA  =     0.09677419354838;
18974 +          I_Category  = 'INFORMATION-TECHNOLOGY' ;
18975 +          U_Category  = 'INFORMATION-TECHNOLOGY' ;
18976 +          END;
18977 +        ELSE DO;
18978 +          IF  NOT MISSING(TextCluster9_SVD5 ) AND
18979 +                0.14051235930895 <= TextCluster9_SVD5  THEN DO;
18980 +            _NODE_  =                   19;
18981 +            _LEAF_  =                    4;
18982 +            P_CategoryHR  =     0.02380952380952;
18983 +            P_CategoryDESIGNER  =                    0;
18984 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18985 +            P_CategoryTEACHER  =     0.02380952380952;
18986 +            P_CategoryADVOCATE  =                    0;
18987 +            P_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
18988 +            P_CategoryHEALTHCARE  =     0.04761904761904;
18989 +            P_CategoryFITNESS  =                    0;
18990 +            P_CategoryOTHER  =     0.04761904761904;
18991 +            P_CategorySALES  =                    0;
18992 +            P_CategoryCONSULTANT  =     0.07142857142857;
18993 +            P_CategoryDIGITAL_MEDIA  =     0.66666666666666;
18994 +            Q_CategoryHR  =     0.02380952380952;
18995 +            Q_CategoryDESIGNER  =                    0;
18996 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.02380952380952;
18997 +            Q_CategoryTEACHER  =     0.02380952380952;
18998 +            Q_CategoryADVOCATE  =                    0;
18999 +            Q_CategoryBUSINESS_DEVELOPMENT  =     0.09523809523809;
19000 +            Q_CategoryHEALTHCARE  =     0.04761904761904;
19001 +            Q_CategoryFITNESS  =                    0;
19002 +            Q_CategoryOTHER  =     0.04761904761904;
19003 +            Q_CategorySALES  =                    0;
19004 +            Q_CategoryCONSULTANT  =     0.07142857142857;
19005 +            Q_CategoryDIGITAL_MEDIA  =     0.66666666666666;
19006 +            V_CategoryHR  =     0.07407407407407;
19007 +            V_CategoryDESIGNER  =     0.03703703703703;
19008 +            V_CategoryINFORMATION_TECHNOLOGY  =                    0;
19009 +            V_CategoryTEACHER  =                    0;
19010 +            V_CategoryADVOCATE  =                    0;
19011 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.07407407407407;
19012 +            V_CategoryHEALTHCARE  =                    0;
19013 +            V_CategoryFITNESS  =                    0;
19014 +            V_CategoryOTHER  =                    0;
19015 +            V_CategorySALES  =     0.07407407407407;
19016 +            V_CategoryCONSULTANT  =     0.14814814814814;
19017 +            V_CategoryDIGITAL_MEDIA  =     0.59259259259259;
19018 +            I_Category  = 'DIGITAL-MEDIA' ;
19019 +            U_Category  = 'DIGITAL-MEDIA' ;
19020 +            END;
19021 +          ELSE DO;
19022 +            _NODE_  =                   18;
19023 +            _LEAF_  =                    3;
19024 +            P_CategoryHR  =     0.01552795031055;
19025 +            P_CategoryDESIGNER  =     0.02484472049689;
19026 +            P_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
19027 +            P_CategoryTEACHER  =     0.01242236024844;
19028 +            P_CategoryADVOCATE  =     0.14596273291925;
19029 +            P_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
19030 +            P_CategoryHEALTHCARE  =     0.15217391304347;
19031 +            P_CategoryFITNESS  =     0.04037267080745;
19032 +            P_CategoryOTHER  =      0.1583850931677;
19033 +            P_CategorySALES  =     0.16770186335403;
19034 +            P_CategoryCONSULTANT  =     0.08695652173913;
19035 +            P_CategoryDIGITAL_MEDIA  =       0.027950310559;
19036 +            Q_CategoryHR  =     0.01552795031055;
19037 +            Q_CategoryDESIGNER  =     0.02484472049689;
19038 +            Q_CategoryINFORMATION_TECHNOLOGY  =     0.00931677018633;
19039 +            Q_CategoryTEACHER  =     0.01242236024844;
19040 +            Q_CategoryADVOCATE  =     0.14596273291925;
19041 +            Q_CategoryBUSINESS_DEVELOPMENT  =      0.1583850931677;
19042 +            Q_CategoryHEALTHCARE  =     0.15217391304347;
19043 +            Q_CategoryFITNESS  =     0.04037267080745;
19044 +            Q_CategoryOTHER  =      0.1583850931677;
19045 +            Q_CategorySALES  =     0.16770186335403;
19046 +            Q_CategoryCONSULTANT  =     0.08695652173913;
19047 +            Q_CategoryDIGITAL_MEDIA  =       0.027950310559;
19048 +            V_CategoryHR  =     0.01123595505617;
19049 +            V_CategoryDESIGNER  =     0.01123595505617;
19050 +            V_CategoryINFORMATION_TECHNOLOGY  =     0.01123595505617;
19051 +            V_CategoryTEACHER  =     0.00561797752808;
19052 +            V_CategoryADVOCATE  =     0.16853932584269;
19053 +            V_CategoryBUSINESS_DEVELOPMENT  =     0.17415730337078;
19054 +            V_CategoryHEALTHCARE  =     0.14606741573033;
19055 +            V_CategoryFITNESS  =     0.03932584269662;
19056 +            V_CategoryOTHER  =     0.15730337078651;
19057 +            V_CategorySALES  =     0.15168539325842;
19058 +            V_CategoryCONSULTANT  =     0.10112359550561;
19059 +            V_CategoryDIGITAL_MEDIA  =     0.02247191011235;
19060 +            I_Category  = 'SALES' ;
19061 +            U_Category  = 'SALES' ;
19062 +            END;
19063 +          END;
19064 +        END;
19065 +      END;
19066 +    END;
19067 +  END;
19068 +
19069 +*****  RESIDUALS R_ *************;
19070 +IF  F_Category  NE 'HR'
19071 +AND F_Category  NE 'DESIGNER'
19072 +AND F_Category  NE 'INFORMATION-TECHNOLOGY'
19073 +AND F_Category  NE 'TEACHER'
19074 +AND F_Category  NE 'ADVOCATE'
19075 +AND F_Category  NE 'BUSINESS-DEVELOPMENT'
19076 +AND F_Category  NE 'HEALTHCARE'
19077 +AND F_Category  NE 'FITNESS'
19078 +AND F_Category  NE 'OTHER'
19079 +AND F_Category  NE 'SALES'
19080 +AND F_Category  NE 'CONSULTANT'
19081 +AND F_Category  NE 'DIGITAL-MEDIA'  THEN DO;
19082 +        R_CategoryHR  = .;
19083 +        R_CategoryDESIGNER  = .;
19084 +        R_CategoryINFORMATION_TECHNOLOGY  = .;
19085 +        R_CategoryTEACHER  = .;
19086 +        R_CategoryADVOCATE  = .;
19087 +        R_CategoryBUSINESS_DEVELOPMENT  = .;
19088 +        R_CategoryHEALTHCARE  = .;
19089 +        R_CategoryFITNESS  = .;
19090 +        R_CategoryOTHER  = .;
19091 +        R_CategorySALES  = .;
19092 +        R_CategoryCONSULTANT  = .;
19093 +        R_CategoryDIGITAL_MEDIA  = .;
19094 + END;
19095 + ELSE DO;
19096 +       R_CategoryHR  =  -P_CategoryHR ;
19097 +       R_CategoryDESIGNER  =  -P_CategoryDESIGNER ;
19098 +       R_CategoryINFORMATION_TECHNOLOGY  =  -P_CategoryINFORMATION_TECHNOLOGY
19099 +         ;
19100 +       R_CategoryTEACHER  =  -P_CategoryTEACHER ;
19101 +       R_CategoryADVOCATE  =  -P_CategoryADVOCATE ;
19102 +       R_CategoryBUSINESS_DEVELOPMENT  =  -P_CategoryBUSINESS_DEVELOPMENT ;
19103 +       R_CategoryHEALTHCARE  =  -P_CategoryHEALTHCARE ;
19104 +       R_CategoryFITNESS  =  -P_CategoryFITNESS ;
19105 +       R_CategoryOTHER  =  -P_CategoryOTHER ;
19106 +       R_CategorySALES  =  -P_CategorySALES ;
19107 +       R_CategoryCONSULTANT  =  -P_CategoryCONSULTANT ;
19108 +       R_CategoryDIGITAL_MEDIA  =  -P_CategoryDIGITAL_MEDIA ;
19109 +       SELECT( F_Category  );
19110 +          WHEN( 'HR'  ) R_CategoryHR  = R_CategoryHR  +1;
19111 +          WHEN( 'DESIGNER'  ) R_CategoryDESIGNER  = R_CategoryDESIGNER  +1;
19112 +          WHEN( 'INFORMATION-TECHNOLOGY'  ) R_CategoryINFORMATION_TECHNOLOGY
19113 +          = R_CategoryINFORMATION_TECHNOLOGY  +1;
19114 +          WHEN( 'TEACHER'  ) R_CategoryTEACHER  = R_CategoryTEACHER  +1;
19115 +          WHEN( 'ADVOCATE'  ) R_CategoryADVOCATE  = R_CategoryADVOCATE  +1;
19116 +          WHEN( 'BUSINESS-DEVELOPMENT'  ) R_CategoryBUSINESS_DEVELOPMENT  =
19117 +        R_CategoryBUSINESS_DEVELOPMENT  +1;
19118 +          WHEN( 'HEALTHCARE'  ) R_CategoryHEALTHCARE  = R_CategoryHEALTHCARE
19119 +          +1;
19120 +          WHEN( 'FITNESS'  ) R_CategoryFITNESS  = R_CategoryFITNESS  +1;
19121 +          WHEN( 'OTHER'  ) R_CategoryOTHER  = R_CategoryOTHER  +1;
19122 +          WHEN( 'SALES'  ) R_CategorySALES  = R_CategorySALES  +1;
19123 +          WHEN( 'CONSULTANT'  ) R_CategoryCONSULTANT  = R_CategoryCONSULTANT
19124 +          +1;
19125 +          WHEN( 'DIGITAL-MEDIA'  ) R_CategoryDIGITAL_MEDIA  =
19126 +        R_CategoryDIGITAL_MEDIA  +1;
19127 +       END;
19128 + END;
19129 +
19130 +****************************************************************;
19131 +******          END OF DECISION TREE SCORING CODE         ******;
19132 +****************************************************************;
19133 +
19134 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
19135  run;
 
NOTE: DATA STEP view saved on file EMWS3.TREE9_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
19136  quit;
19137  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS3.TREE9_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
19139  proc sort data=WORK.EM_USER_REPORT;
19140  by ID VIEW;
19141  run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19142  *------------------------------------------------------------*;
19143  * Tree9: Computing metadata for TRAIN data;
19144  *------------------------------------------------------------*;
 
NOTE: View EMWS3.TREE9_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
19666  data WORK.MODELTEMP_INFO;
19667  set EMWS3.Tree9_EMINFO;
19668  where DATA='Tree9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
19669  run;
 
NOTE: There were 0 observations read from the data set EMWS3.TREE9_EMINFO.
      WHERE (DATA='Tree9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19670  data EMWS3.Tree9_EMINFO;
19671  length TARGET KEY $32 DATA $43;
19672  input TARGET KEY DATA $;
19673  cards;
 
NOTE: The data set EMWS3.TREE9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
19677  run;
19678  data EMWS3.Tree9_EMINFO;
19679  set EMWS3.Tree9_EMINFO WORK.MODELTEMP_INFO;
19680  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS3.TREE9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19681  proc sort data = EMWS3.Tree9_EMINFO NOTHREADS;
19682  by TARGET KEY;
19683  run;
 
NOTE: There were 3 observations read from the data set EMWS3.TREE9_EMINFO.
NOTE: The data set EMWS3.TREE9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19684  proc sort data = EMWS3.TextCluster9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
19685  by TARGET KEY;
19686  run;
 
NOTE: There were 6 observations read from the data set EMWS3.TEXTCLUSTER9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
19687  proc sort data = EMWS3.Tree9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
19688  by TARGET KEY;
19689  run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS3.TREE9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19690  data EMWS3.Tree9_EMINFO;
19691  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
19692  by TARGET KEY;
19693  run;
 
NOTE: There were 6 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.TREE9_EMINFO has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
19694  proc datasets lib=work nolist;
19695  delete TEMP_INFO SORTEDEMINFO;
19696  run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
19697  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS3.TREE9_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
NOTE: View EMWS3.TREE9_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS3.TREE9_TEST.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 23, 2023
Time:                22:13:06
*------------------------------------------------------------*
19721  data EMWS3.Tree9_EMOUTFIT;
19722  set EMWS3.Tree9_EMOUTFIT;
19723  length TargetLabel $200;
19724  label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
19725  if upcase(TARGET) eq "CATEGORY" then TargetLabel = 'Category';
19726  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_EMOUTFIT.
NOTE: The data set EMWS3.TREE9_EMOUTFIT has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19727  proc sort data=EMWS3.Tree9_EMREPORTFIT nothreads;
19728  by TARGET;
19729  run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE9_EMREPORTFIT.
NOTE: The data set EMWS3.TREE9_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19730  %let _EMwarndup = 0;
19731  %let _EMtargetdup =;
19732  %let _EMASEtargetdup =;
19733  data _null_;
19734  set EMWS3.Tree9_EMOUTFIT;
19735  if .<_ASE_<0.000001 then do;
19736  call symput('_EMwarndup', '1');
19737  call symput('_EMtargetdup', target);
19738  call symput('_EMASEtargetdup', put(_ASE_, best.));
19739  end;
19740  run;
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
19741  %let EMEXCEPTIONSTRING=;
19742  *------------------------------------------------------------*;
19743  * REPORT: Tree9;
19744  *------------------------------------------------------------*;
19745  %let EM_ACTION = REPORT;
19746  %let syscc = 0;
19747  %macro main;
19748
19749    %if %upcase(&EM_ACTION) = CREATE %then %do;
19750      filename temp catalog 'sashelp.emmodl.tree_create.source';
19751      %include temp;
19752      filename temp;
19753
19754      %em_tree_create;
19755    %end;
19756
19757     %else
19758     %if %upcase(&EM_ACTION) = TRAIN %then %do;
19759
19760         filename temp catalog 'sashelp.emmodl.tree_train.source';
19761         %include temp;
19762         filename temp;
19763         %em_tree_train;
19764     %end;
19765
19766    %else
19767    %if %upcase(&EM_ACTION) = SCORE %then %do;
19768      filename temp catalog 'sashelp.emmodl.tree_score.source';
19769      %include temp;
19770      filename temp;
19771
19772      %em_tree_score;
19773
19774    %end;
19775
19776    %else
19777    %if %upcase(&EM_ACTION) = REPORT %then %do;
19778
19779         filename temp catalog 'sashelp.emmodl.tree_report.source';
19780         %include temp;
19781         filename temp;
19782
19783         %em_tree_report;
19784     %end;
19785
19786    %else
19787    %if %upcase(&EM_ACTION) = OPENINT %then %do;
19788
19789         filename temp catalog 'sashelp.emmodl.tree_actions.source';
19790         %include temp;
19791         filename temp;
19792         %EM_TREE_OPENTREEVIEWER;
19793
19794     %end;
19795
19796    %else
19797    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
19798
19799         filename temp catalog 'sashelp.emmodl.tree_actions.source';
19800         %include temp;
19801         filename temp;
19802         %EM_TREE_CLOSETREEVIEWER;
19803
19804     %end;
19805
19806
19807     %doendm:
19808  %mend main;
19809
19810  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_REPORT.SOURCE.
19812 +%macro em_tree_makePlotDs( multipleTar= );
19814 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
19815 +  %EM_GETNAME(key=OUTNODES, type=DATA);
19816 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
19817 +  %EM_GETNAME(key=OUTRULES, type=DATA);
19819 +  /* determine if validation statistics will be displayed */
19820 +  %let validflag=N;
19821 +  %if "&EM_PROPERTY_SHOWVALID" eq "Y" %then %do;
19822 +    /* determine if validation data exists */
19823 +    %if &validexist AND ("&EM_PROPERTY_CV" ne "Y") %then %do;
19824 +      %let validflag=Y;
19825 +    %end;
19826 +  %end;
19828 +   /* retrieve name of decmeta even in presence of multiple targets */
19829 +   %let decmeta = ;
19830 +   %if &EM_DEC_DECMETA eq %then %do;
19831 +     data _Target;
19832 +       set &em_data_variableset;
19833 +       where ROLE='TARGET' and USE in('D', 'Y');
19834 +       keep NAME;
19835 +     run;
19836 +     proc sort data=_Target;
19837 +       by NAME;
19838 +     run;
19839 +     proc sort data=EM_TARGETDECINFO;
19840 +       by TARGET;
19841 +     run;
19842 +     data _Target;
19843 +       merge _Target(in=_a) EM_TARGETDECINFO(rename=(TARGET=NAME) );
19844 +       by NAME;
19845 +       if _a then do;
19846 +         call symput('decmeta', trim(DECMETA));
19847 +       end;
19848 +     run;
19849 +     proc delete data=_Target;run;
19850 +   %end;
19851 +   %else %let decmeta = &EM_DEC_DECMETA;
19854 +  /* retrieve targetEvent from decmeta */
19855 +  %let targetEvent=;
19856 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
19857 +    %if %sysfunc(exist(&DECMETA)) %then %do;
19858 +      data _null_;
19859 +       set &DECMETA(where=(_TYPE_="TARGET"));
19860 +       call symput('targetEvent', strip(tranwrd(EVENT,'"','""')));
19861 +      run;
19862 +    %end;
19863 +  %end;
19865 +  /* retrieve predicted var for targetEvent from decmeta */
19866 +  %let predTarget=;
19867 +  %let predLvl=;
19868 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
19869 +    %if %sysfunc(exist(&DECMETA)) %then %do;
19870 +      data _null_;
19871 +       set &DECMETA(where=(_TYPE_="PREDICTED" AND LEVEL="&targetEvent"));
19872 +       call symput('predTarget', strip(VARIABLE));
19873 +       call symput('predLvl', strip(LEVEL));
19874 +      run;
19875 +    %end;
19876 +  %end;
19877 +  %else %do;
19878 +    %if %sysfunc(exist(&DECMETA)) %then %do;
19879 +      data _null_;
19880 +       set &DECMETA(where=(_TYPE_="PREDICTED"));
19881 +       call symput('predTarget', strip(VARIABLE));
19882 +      run;
19883 +    %end;
19884 +  %end;
19886 +  /* create BelowText value */
19887 +  data belowtext;
19888 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="VARIABLE") rename=(character_value=belowtext));
19889 +    keep node belowtext;
19890 +  run;
19892 +  /* replace belowtext with variable label if it exists */
19893 +  data belowtext2;
19894 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT="LABEL") rename=(character_value=belowtextlbl));
19895 +    keep node belowtextlbl;
19896 +  run;
19898 +  proc sort data=belowtext; by node; run;
19899 +  proc sort data=belowtext2; by node; run;
19901 +  data belowtext;
19902 +    merge belowtext belowtext2(in=_a);
19903 +    by node;
19904 +    if _a then belowtext=belowtextlbl;
19905 +    keep node belowtext;
19906 +  run;
19908 +  /* create AboveText value */
19909 +  data abovetext;
19910 +    set &EM_USER_OUTRULES(where=(ROLE="PRIMARY" AND STAT in ("INTERVAL", "ORDINAL", "NOMINAL")) );
19911 +  run;
19912 +  proc sort data=abovetext; by node numeric_value; run;
19914 +  %let sp_precision = %sysevalf(1 / 10**&EM_PROPERTY_SPLITPRECISION);
19915 +  data abovetext;
19916 +    set abovetext(rename=(node=parent));
19917 +    by parent numeric_value;
19918 +    retain abovetext tempstring flag branch origval origchar ;
19919 +    length abovetext $256;
19920 +    length tempstring origchar $64;
19922 +    if STAT in ("INTERVAL", "ORDINAL") then do;
19923 +      if first.parent then do;
19924 +        if missing(character_value) then do;
19925 +          numeric_value = round(numeric_value, &sp_precision);
19926 +          abovetext = "< "||strip(NUMERIC_VALUE);
19927 +          branch = 1;
19928 +          origval = numeric_value;
19929 +          output;
19930 +        end;
19931 +        else do;
19932 +          abovetext = "< "||strip(CHARACTER_VALUE);
19933 +          branch = 1;
19934 +          origchar = character_value;
19935 +          output;
19936 +        end;
19938 +        if first.parent AND last.parent then do;
19939 +          if missing(character_value) then do;
19940 +            numeric_value = round(numeric_value, &sp_precision);
19941 +            branch = branch + 1;
19942 +            abovetext = ">= "||strip(NUMERIC_VALUE);
19943 +            output;
19944 +          end;
19945 +          else do;
19946 +            branch = branch + 1;
19947 +            abovetext = ">= "||strip(CHARACTER_VALUE);
19948 +            output;
19949 +          end;
19950 +        end;
19951 +      end;
19952 +      else if last.parent then do;
19953 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
19954 +          if missing(character_value) then do;
19955 +            numeric_value = round(numeric_value, &sp_precision);
19956 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
19957 +          end;
19958 +          else do;
19959 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
19960 +          end;
19961 +          branch = branch + 1;
19962 +          output;
19964 +          if missing(character_value) then do;
19965 +            numeric_value = round(numeric_value, &sp_precision);
19966 +            abovetext = ">= "||strip(NUMERIC_VALUE);
19967 +          end;
19968 +          else do;
19969 +            abovetext = ">= "||strip(CHARACTER_VALUE);
19970 +          end;
19971 +          branch = branch + 1;
19972 +          output;
19973 +        end;
19974 +        else do;
19975 +          if missing(character_value) then do;
19976 +            numeric_value = round(numeric_value, &sp_precision);
19977 +            abovetext = ">= "||strip(NUMERIC_VALUE);
19978 +          end;
19979 +          else do;
19980 +            abovetext = ">= "||strip(CHARACTER_VALUE);
19981 +          end;
19982 +          branch = branch + 1;
19983 +          output;
19984 +        end;
19985 +      end;
19986 +      else do;
19987 +        if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
19988 +          if missing(character_value) then do;
19989 +            numeric_value = round(numeric_value,&sp_precision);
19990 +            abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
19991 +            origval = numeric_value;
19992 +          end;
19993 +          else do;
19994 +            abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
19995 +            origchar = character_value;
19996 +          end;
19997 +          branch = branch + 1;
19998 +          output;
20000 +        end;
20001 +        else do;
20002 +          if missing(character_value) then do;
20003 +            numeric_value = round(numeric_value, &sp_precision);
20004 +            abovetext = ">= "||strip(NUMERIC_VALUE);
20005 +            origval = numeric_value;
20006 +          end;
20007 +          else do;
20008 +            abovetext = ">= "||strip(CHARACTER_VALUE);
20009 +            origval = character_value;
20010 +          end;
20011 +          branch = branch + 1;
20012 +          output;
20013 +        end;
20014 +      end;
20015 +    end;
20016 +    else do;
20017 +       if first.numeric_value then do;
20018 +         flag = 0;
20019 +         abovetext = strip(CHARACTER_VALUE);
20020 +         branch = numeric_value;
20021 +         if first.numeric_value AND last.numeric_value then do;
20022 +           output;
20023 +         end;
20024 +       end;
20025 +       else if last.numeric_value then do;
20026 +         if flag=0 then do;
20027 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20028 +           length = length(strip(tempstring));
20029 +           if length < 32 then do;
20030 +             abovetext = strip(tempstring);
20031 +           end;
20032 +           else do;
20033 +             abovetext = strip(abovetext)||", ...";
20034 +             flag = 1;
20035 +           end;
20036 +         end;
20037 +         branch = numeric_value;
20038 +         output;
20039 +       end;
20040 +       else do;
20041 +         if flag=0 then do;
20042 +           tempstring = strip(abovetext)||", "||strip(CHARACTER_VALUE);
20043 +           length = length(strip(tempstring));
20044 +           if length < 32 then do;
20045 +             abovetext = strip(tempstring);
20046 +           end;
20047 +           else do;
20048 +             abovetext = strip(abovetext)||", ...";
20049 +             flag=1;
20050 +           end;
20051 +         end;
20052 +         branch = numeric_value;
20053 +       end;
20054 +    end;
20055 +    keep parent branch abovetext;
20056 +  run;
20058 +  /* Missing value to abovetext */
20059 +  data tempmissing;
20060 +    set &EM_USER_OUTRULES;
20061 +    if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
20062 +    rename node=parent numeric_value=branch character_value=misschar;
20063 +  run;
20066 +  proc sort data=abovetext; by parent branch; run;
20067 +  proc sort data=tempmissing; by parent branch; run;
20068 +  proc sort data=&EM_USER_OUTNODES out=tempoutnodes; by parent branch; run;
20070 +  data tempoutnodes;
20071 +    merge abovetext tempoutNodes(drop=abovetext) tempmissing(in=_a);
20072 +    by parent branch;
20073 +    length traintotal validtotal 8;
20074 +    retain traintotal validtotal;
20076 +    if _a then do;
20077 +      if ^MISSING(abovetext) then do;
20078 +        abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
20079 +      end;
20080 +      else do;
20081 +        abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
20082 +      end;
20083 +    end;
20084 +    if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
20086 +    if node=1 then do;
20087 +      traintotal = N;
20088 +      validtotal=VN;
20089 +    end;
20091 +    drop role rank stat misschar belowtext;
20092 +  run;
20093 +  proc sort data=tempoutnodes; by node; run;
20094 +  proc sort data=belowtext; by node; run;
20096 +  data tempoutnodes;
20097 +    merge tempoutnodes belowtext;
20098 +    by node;
20100 +  run;
20102 +  /* determine if adjusted counts exists; if so, use these vs true counts */
20103 +  %let adjusted = N;
20104 +  %let npriors = 0;
20105 +  data _null_ ;
20106 +    set &EM_USER_outstats(where=(STATNAME="NPRIORS")) end=eof ;
20107 +    if eof then do ;
20108 +      call symput("npriors" , strip(put(_N_,best.))) ;
20109 +    end;
20110 +  run;
20111 +  %if &npriors gt 0 %then %let adjusted=Y;
20114 +  /* create a table with targetUsed and targetLevel columns for each node */
20115 +  data temptarmeta;
20116 +    set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL'
20117 +    %if &multipleTar eq N %then %do;
20118 +      AND USE in ('D', 'Y')
20119 +    %end;
20120 +    ));
20121 +    length TARGET $32;
20122 +    Target=name;
20123 +    keep target level;
20124 +  run;
20126 +  %if &multipleTar eq Y %then %do;
20127 +    data temptargetused;
20128 +      set &EM_USER_OUTSTATS(where=(STATNAME="TARGET"));
20129 +      keep node target;
20130 +    run;
20131 +    proc sort data=temptargetused; by target; run;
20132 +    proc sort data=temptarmeta; by target; run;
20133 +    data temptargetused;
20134 +      merge temptargetused(in=_a) temptarmeta(in=_b rename=(level=tarlevel));
20135 +      by target;
20136 +      if _a and _b;
20137 +    run;
20138 +  %end;
20139 +  %else %do;
20140 +    data temptargetused;
20141 +      set &EM_USER_OUTSTATS;
20142 +      length target $32 tarlevel $10;
20143 +      target="%EM_TARGET";
20144 +      tarlevel="%EM_TARGET_LEVEL";
20145 +      keep node target tarlevel;
20146 +    run;
20147 +    proc sort data=temptargetused nodupkey; by node; run;
20148 +  %end;
20150 +  /* merge this information back into outstats, keeping only stats for the target used in the tree */
20151 +  proc sort data=&EM_USER_OUTSTATS out=tempoutstats; by node; run;
20152 +  proc sort data=temptargetused; by node; run;
20155 +  /* create tables for all interval targets as well as all class targets */
20156 +  data tempinterval tempclass;
20157 +    merge tempoutstats temptargetused( rename=(target=targetused));
20158 +    by node;
20159 +    %if "&multipleTar" eq "Y" %then %do;
20160 +      if ((missing(Target)) OR (target=targetused ));
20161 +    %end;
20163 +    if tarlevel="INTERVAL" then output tempinterval;
20164 +    else output tempclass;
20165 +  run;
20167 +  /* initialize intTarget and classTarget flags */
20168 +  %let em_intNobs =0;
20169 +  %let em_classNobs = 0;
20170 +  %let em_intTarget= N;
20171 +  %let em_classTarget= N;
20173 +  proc sql;
20174 +    reset noprint;
20175 +    select count(*) into :em_intNobs from tempinterval;
20176 +  quit;
20177 +  proc sql;
20178 +    reset noprint;
20179 +    select count(*) into :em_classNobs from tempclass;
20180 +  quit;
20182 +  %if &em_intNobs gt 0 %then %let em_intTarget=Y;
20183 +  %if &em_classNobs gt 0 %then %let em_classTarget=Y;
20185 +  /* retrieve all information for interval targets */
20186 +  %if &em_intTarget eq Y %then %do;
20188 +    /* determine if leaf variable exists */
20189 +    %let dsid=%sysfunc(open(tempinterval,i));
20190 +    %let leafexists=%sysfunc(varnum(&dsid,LEAF));
20191 +    %let rc=%sysfunc(close(&dsid));
20193 +    proc transpose data=tempinterval
20194 +      %if &leafexists %then %do;
20195 +        (drop=leaf)
20196 +      %end;
20197 +      %if &validexist %then %do;
20198 +       out=tempinterval(keep=NODE N VALID: N PREDICTION VALID: PREDICTION RASE VALID: RASE rename=(VALID__N=VN VALID__PREDICTION=VPREDICTION VALID__RASE=VRASE)) ;
20199 +      %end;
20200 +      %else %do;
20201 +         out=tempinterval(keep=NODE N PREDICTION RASE ) ;
20202 +      %end;
20203 +      by node;
20204 +      id statname;
20205 +    run;
20206 +    data tempinterval;
20207 +      set tempinterval;
20208 +      if missing(N) then delete;
20209 +    run;
20210 +  %end;
20212 +  /* retrieve all information for class targets */
20213 +  %if &em_classTarget eq Y %then %do;
20214 +    proc sort data=tempclass; by node category; run;
20215 +    %if &validflag eq N %then %do;
20216 +      data tempn(keep=NODE STATVALUE) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET )
20217 +           tempprofit(KEEP=NODE STATVALUE CATEGORY  ) temploss(KEEP=NODE STATVALUE CATEGORY  );
20218 +    %end;
20219 +    %else %do;
20220 +     data tempn(keep=NODE STATVALUE STATNAME) temppredict(Keep=NODE CATEGORY) tempprob(keep=NODE STATVALUE CATEGORY TARGET ) tempvprob(keep=NODE STATVALUE CATEGORY TARGET )
20221 +          tempprofit(KEEP=NODE STATVALUE STATNAME CATEGORY ) temploss(KEEP=NODE STATVALUE STATNAME CATEGORY );
20222 +    %end;
20223 +      set tempclass;
20225 +      %if &validflag eq N %then %do;
20226 +        %if "&adjusted" eq "N" %then %do;
20227 +          if statname="N" then output tempn;
20228 +        %end;
20229 +        %else %do;
20230 +          if statname="NPRIORS" then output tempn;
20231 +        %end;
20232 +        else if statname="PREDICTION" then output temppredict;
20233 +        else if statname="PROBABILITY" then output tempprob;
20234 +        else if statname="ALTERNATIVE PROFIT" then output tempprofit;
20235 +        else if statname="ALTERNATIVE LOSS" then output temploss;
20236 +      %end;
20237 +      %else %do;
20238 +        %if "&adjusted" eq "N" %then %do;
20239 +          if ((statname="N") OR (statname="VALID: N")) then output tempn;
20240 +        %end;
20241 +        %else %do;
20242 +          if ((statname="NPRIORS") or (statname="VALID: NPRIORS") ) then output tempn;
20243 +        %end;
20244 +        else if statname="PREDICTION" then output temppredict;
20245 +        else if statname="PROBABILITY" then output tempprob;
20246 +        else if statname="VALID: PROBABILITY" then output tempvprob;
20247 +        else if ((statname="ALTERNATIVE PROFIT") or (statname="VALID: ALTERNATIVE PROFIT")) then output tempprofit;
20248 +        else if ((statname="ALTERNATIVE LOSS") OR (statname="VALID: ALTERNATIVE LOSS")) then output temploss;
20249 +      %end;
20250 +    run;
20253 +    /* determine if profit/loss exists in tempprofit */
20254 +    %let em_profitflag=0;
20255 +    %let em_lossflag=0;
20256 +    proc sql;
20257 +      reset noprint;
20258 +      select count(*) into :em_profitflag from tempprofit;
20259 +    quit;
20260 +    proc sql;
20261 +      reset noprint;
20262 +      select count(*) into :em_lossflag from temploss;
20263 +    quit;
20265 +    %if &validFlag eq Y %then %do;
20266 +      proc transpose data=tempn
20267 +        %if "&adjusted" eq "N" %then %do;
20268 +           out=tempn(keep=node N VALID__N rename=(VALID__N=VN));
20269 +        %end;
20270 +        %else %do;
20271 +           out=tempn(keep=node NPRIORS VALID__NPRIORS rename=( VALID__NPRIORS=VNPRIORS));
20272 +        %end;
20273 +        by node;
20274 +        id statname;
20275 +      run;
20276 +      %if &em_profitflag ne 0 %then %do;
20277 +        proc transpose data=tempprofit out=tempprofit;
20278 +          by node category;
20279 +          id statname ;
20280 +        run;
20281 +      %end;
20282 +      %if &em_lossflag ne 0 %then %do;
20283 +        proc transpose data=temploss out=temploss;
20284 +          by node category;
20285 +          id statname ;
20286 +        run;
20287 +      %end;
20288 +      data tempprob;
20289 +        merge tempprob tempvprob(rename=(statvalue=vstatvalue));
20290 +        by node
20291 +        %if &multipleTar eq Y %then %do;
20292 +          target
20293 +        %end;
20294 +        category;
20295 +      run;
20296 +    %end;
20298 +    /* store percentcorrect value */
20299 +    data temppredict;
20300 +      merge tempprob temppredict(in=_a);
20301 +      by node category;
20302 +      if _a then do;
20303 +        percentCorrect = statvalue;
20304 +        %if &validFlag eq Y %then %do;
20305 +          vpercentCorrect= vstatvalue;
20306 +        %end;
20307 +      end;
20308 +      label percentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_percentcorrect_vlabel, noquote))"
20309 +      %if &validFlag eq Y %then %do;
20310 +         vpercentCorrect="%sysfunc(sasmsg(sashelp.dmine, rpt_vpercentcorrect_vlabel, noquote))"
20311 +      %end;
20312 +      ;
20313 +      if missing(percentCorrect) then delete;
20314 +      drop target;
20315 +    run;
20317 +    /* build profittext */
20318 +    %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20319 +      data tempprofittext(keep= node profittext profitloss);
20320 +        length profittext $800 profitloss 8.;
20321 +        retain profittext profitloss;
20323 +        merge tempprob
20324 +        %if &em_profitflag ne 0 %then %do;
20325 +          tempprofit
20326 +        %end;
20327 +        %else %if &em_lossflag ne 0 %then %do;
20328 +          temploss
20329 +        %end;
20330 +        ;
20331 +        by node category;
20333 +        /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20334 +        %let profittype = &EM_PROPERTY_PROFITLOSS;
20335 +        %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_PROFITLOSS" eq "EVENT"))  %then %do;
20336 +          %let profittype = ALL;
20337 +        %end;
20339 +        /* create the profitloss variable for nodecolor if selected */
20340 +        label profitloss="%sysfunc(sasmsg(sashelp.dmine, rpt_profitloss_vlabel, noquote))";
20342 +        %if "&profittype" eq "ALL" %then %do;
20343 +          if strip(CATEGORY)="&targetEvent" then do;
20344 +            profitloss=statvalue;
20345 +          end;
20346 +          if first.node then do;
20347 +            %if &validFlag eq N %then %do;
20348 +             %if &em_profitflag ne 0 %then %do;
20349 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20350 +             %end;
20351 +             %if &em_lossflag ne 0 %then %do;
20352 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20353 +             %end;
20354 +            %end;
20355 +            %else %do;
20356 +             %if &em_profitflag ne 0 %then %do;
20357 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20357!+;
20358 +             %end;
20359 +             %if &em_lossflag ne 0 %then %do;
20360 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20361 +             %end;
20362 +            %end;
20363 +          end;
20364 +          else if last.node then do;
20365 +            %if &validFlag eq N %then %do;
20366 +             %if &em_profitflag ne 0 %then %do;
20367 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20368 +             %end;
20369 +             %if &em_lossflag ne 0 %then %do;
20370 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20371 +             %end;
20372 +             /*if CATEGORY="&targetEvent" then do;
20373 +               profitloss=statvalue;
20374 +             end;*/
20375 +            %end;
20376 +            %else %do;
20377 +             %if &em_profitflag ne 0 %then %do;
20378 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20378!+14.&EM_PROPERTY_SPLITPRECISION);
20379 +                if CATEGORY="&targetEvent" then do;
20380 +                 profitloss=ALTERNATIVE_PROFIT;
20381 +                end;
20382 +             %end;
20383 +             %if &em_lossflag ne 0 %then %do;
20384 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20384!+14.&EM_PROPERTY_SPLITPRECISION);
20385 +                if CATEGORY="&targetEvent" then do;
20386 +                  profitloss=ALTERNATIVE_LOSS;
20387 +                end;
20388 +             %end;
20389 +            %end;
20390 +            output;
20391 +          end;
20392 +          else do;
20393 +            %if &validFlag eq N %then %do;
20394 +             %if &em_profitflag ne 0 %then %do;
20395 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20396 +             %end;
20397 +             %if &em_lossflag ne 0 %then %do;
20398 +                 profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20399 +             %end;
20400 +            %end;
20401 +            %else %do;
20402 +             %if &em_profitflag ne 0 %then %do;
20403 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT,
20403!+14.&EM_PROPERTY_SPLITPRECISION);
20404 +             %end;
20405 +             %if &em_lossflag ne 0 %then %do;
20406 +                profittext=strip(profittext)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS,
20406!+14.&EM_PROPERTY_SPLITPRECISION);
20407 +             %end;
20408 +            %end;
20409 +          end;
20410 +        %end;
20411 +        %else %if (("&profittype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20412 +          if strip(CATEGORY) = "&targetevent" then do;
20413 +            %if &validFlag eq N %then %do;
20414 +             %if &em_profitflag ne 0 %then %do;
20415 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20416 +             %end;
20417 +             %if &em_lossflag ne 0 %then %do;
20418 +                 profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(STATVALUE, 14.&EM_PROPERTY_SPLITPRECISION);
20419 +             %end;
20420 +             profitloss=statvalue;
20421 +            %end;
20422 +            %else %do;
20423 +             %if &em_profitflag ne 0 %then %do;
20424 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_profit_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_PROFIT, 14.&EM_PROPERTY_SPLITPRECISION)
20424!+;
20425 +                profitloss=ALTERNATIVE_PROFIT;
20426 +             %end;
20427 +             %if &em_lossflag ne 0 %then %do;
20428 +                profittext="%sysfunc(sasmsg(sashelp.dmine, rpt_loss_vlabel, noquote )): "||strip(CATEGORY)||": "||"09"x||put(ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VALID__ALTERNATIVE_LOSS, 14.&EM_PROPERTY_SPLITPRECISION);
20429 +                profitloss=ALTERNATIVE_LOSS;
20430 +             %end;
20431 +            %end;
20432 +            output;
20433 +          end;
20434 +        %end;
20435 +        %else %if (("&profittype" eq "NONE") AND ("&targetEvent" ne "" )) %then %do;
20436 +          if strip(CATEGORY) = "&targetevent" then do;
20437 +            %if &validFlag eq N %then %do;
20438 +             profitloss=statvalue;
20439 +            %end;
20440 +            %else %do;
20441 +             %if &em_profitflag ne 0 %then %do;
20442 +                profitloss=ALTERNATIVE_PROFIT;
20443 +             %end;
20444 +             %if &em_lossflag ne 0 %then %do;
20445 +                profitloss=ALTERNATIVE_LOSS;
20446 +             %end;
20447 +            %end;
20448 +            output;
20449 +          end;
20450 +        %end;
20451 +      run;
20452 +    %end;
20454 +    data tempprob(keep= node probtext);
20455 +      length probtext $800;
20456 +      retain probtext;
20457 +      set tempprob ;
20458 +      by node;
20460 +      /* EVENT ONLY IS NOT AVAILABLE FOR MULTIPLE TARGETS AS ONLY PRIMARY TARGET IS IN EM_TARGETDECINFO TO RETRIEVE EVENT LEVEL */
20461 +      %let probtype = &EM_PROPERTY_TARGET;
20462 +      %if ((&multipleTar eq Y) AND ("&EM_PROPERTY_TARGET" eq "EVENT"))  %then %do;
20463 +        %let probtype = ALL;
20464 +      %end;
20466 +      %if "&probtype" eq "ALL" %then %do;
20467 +        if first.node then do;
20468 +          %if &validFlag eq N %then %do;
20469 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20470 +          %end;
20471 +          %else %do;
20472 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20473 +          %end;
20474 +        end;
20475 +        else if last.node then do;
20476 +          %if &validFlag eq N %then %do;
20477 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20478 +          %end;
20479 +          %else %do;
20480 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20481 +          %end;
20482 +          output;
20483 +        end;
20484 +        else do;
20485 +          %if &validFlag eq N %then %do;
20486 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20487 +          %end;
20488 +          %else %do;
20489 +            probtext=strip(probtext)||"0A"x||strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20490 +          %end;
20491 +        end;
20492 +      %end;
20493 +      %else %if (("&probtype" eq "EVENT") AND ("&targetEvent" ne "" )) %then %do;
20494 +        if strip(CATEGORY) = "&targetevent" then do;
20495 +          %if &validFlag eq N %then %do;
20496 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2);
20497 +          %end;
20498 +          %else %do;
20499 +            probtext=strip(CATEGORY)||": "||"09"x||put(statvalue, percent10.2)||"09"x||put(vstatvalue, percent10.2);
20500 +          %end;
20501 +          output;
20502 +        end;
20503 +      %end;
20504 +      %else %if "&probtype" eq "NONE" %then %do;
20505 +        if last.node then do;
20506 +          output;
20507 +        end;
20508 +      %end;
20509 +    run;
20510 +  %end;
20512 +  proc sort data=tempoutnodes out=tempoutnodes; by node; run;
20514 +  %let oldexists=0;
20515 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) %then %do;
20516 +     data old_tree_plot;
20517 +        set &EM_USER_TREE_PLOT(keep=node nodecolor);
20518 +        rename nodecolor=oldnodecolor;
20519 +     run;
20521 +     proc sort data=old_tree_plot;
20522 +        by node;
20523 +     run;
20525 +     %let oldexists=1;
20526 +  %end;
20528 +  data &EM_USER_TREE_PLOT;
20529 +    length textall $800;
20530 +    merge tempoutnodes temptargetused
20532 +    %if &em_intTarget eq Y %then %do;
20533 +      tempinterval
20534 +    %end;
20536 +    %if &em_classTarget eq Y %then %do;
20538 +      %if &validFlag eq N %then %do;
20539 +        tempn(rename=(statvalue=N))
20540 +      %end;
20541 +      %else %do;
20542 +        tempn
20543 +      %end;
20545 +      temppredict tempprob
20547 +      %if ((&em_profitflag ne 0) OR (&em_lossflag ne 0)) %then %do;
20548 +        tempprofittext
20549 +      %end;
20550 +    %end;
20551 +    ;
20552 +    by node;
20554 +    /* build nodetext based on user selection */
20555 +    textall="";
20557 +    %if &em_intTarget eq Y %then %do;
20558 +    if tarlevel="INTERVAL" then do;
20559 +      /* Nodeid */
20560 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
20561 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
20562 +      %end;
20564 +      /* Target identifier if multiple targets are used */
20565 +      %if "&multipleTar" eq "Y" %then %do;
20566 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
20567 +      %end;
20569 +      %if &validFlag eq Y %then %do;
20570 +         /* Column labels displayed in validflag eq Y only */
20571 +         %if (("&EM_PROPERTY_AVG" eq "Y") OR ("&EM_PROPERTY_RASE" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
20572 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
20572!+noquote ))";
20573 +         %end;
20575 +         /* Average values */
20576 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20577 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VPREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20578 +         %end;
20580 +         /* RASE */
20581 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20582 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION)||"09"x||put(VRASE, 14.&EM_PROPERTY_SPLITPRECISION);
20583 +         %end;
20585 +         /* Count */
20586 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20587 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N)||"09"x||strip(VN);
20588 +         %end;
20589 +      %end;
20590 +      %else %do;
20591 +         /* Average values */
20592 +         %if "&EM_PROPERTY_AVG" eq "Y" %then %do;
20593 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote)): "||"09"x||put(PREDICTION, 14.&EM_PROPERTY_SPLITPRECISION);
20594 +         %end;
20596 +         /* RASE */
20597 +         %if "&EM_PROPERTY_RASE" eq "Y" %then %do;
20598 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rase_vlabel, noquote)): "||"09"x||put(RASE, 14.&EM_PROPERTY_SPLITPRECISION);
20599 +         %end;
20601 +         /* Count */
20602 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20603 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(N);
20604 +         %end;
20605 +      %end;
20607 +      /* nodecolor */
20608 +      %if "&EM_PROPERTY_INTCOLORBY" eq "AVG" %then %do;
20609 +        nodecolor=PREDICTION;
20610 +      %end;
20611 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "RASE" %then %do;
20612 +        nodecolor=RASE;
20613 +      %end;
20614 +      %else %if "&EM_PROPERTY_INTCOLORBY" eq "SINGLE" %then %do;
20615 +        nodecolor=1;
20616 +      %end;
20618 +    end;
20619 +    %end;
20620 +    %if &em_classTarget eq Y %then %do;
20621 +    if tarlevel^="INTERVAL" then  do;
20623 +      /* Nodeid */
20624 +      %if "&EM_PROPERTY_SHOWNODEID" eq "Y" %then %do;
20625 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote )): "||"09"x||strip(Node);
20626 +      %end;
20627 +      /* Target identifier if multiple targets are used */
20628 +      %if "&multipleTar" eq "Y" %then %do;
20629 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_target_title, noquote, )) "||"09"x||strip(target);
20630 +      %end;
20632 +      /* Predicted values */
20633 +      %if "&EM_PROPERTY_PRED" eq "Y" %then %do;
20634 +        textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_pls_score_predvalue, noquote, )): "||"09"x||strip(CATEGORY);
20635 +      %end;
20637 +      /* Column labels displayed in validflag eq Y only */
20638 +      %if "&ValidFlag" eq "Y" %then %do;
20639 +        %if (("&EM_PROPERTY_TARGET" ne "NONE") OR ("&EM_PROPERTY_PROFITLOSS" ne "NONE") OR ("&EM_PROPERTY_PERCENTCORRECT" eq "Y") OR ("&EM_PROPERTY_COUNT" eq "Y")) %then %do;
20640 +           textall=strip(textall)||"0A"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, noquote)) "||"09"x||"%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , noquote ))" ||"09"x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel ,
20640!+noquote ))";
20641 +        %end;
20642 +      %end;
20644 +      /* Target Values */
20645 +      %if "&EM_PROPERTY_TARGET" ne "NONE" %then %do;
20646 +        textall=strip(textall)||"0A"x||strip(probtext);
20647 +      %end;
20649 +      /* include profit or loss for all target levels */
20650 +      %if ( "&EM_PROPERTY_PROFITLOSS" ne "NONE" AND ((&em_profitflag ne 0) OR (&em_lossflag ne 0))) %then %do;
20651 +        textall=strip(textall)||"0A"x||strip(profittext);
20652 +      %end;
20654 +      %if &validFlag eq N %then %do;
20655 +        /* Percent Correct */
20656 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
20657 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2));
20658 +        %end;
20660 +         /* Count */
20661 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20662 +          %if "&adjusted" eq "N" %then %do;
20663 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.));
20664 +          %end;
20665 +          %else %do;
20666 +            textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS, 15.&EM_PROPERTY_SPLITPRECISION));
20667 +          %end;
20668 +         %end;
20669 +      %end;
20670 +      %else %do;
20671 +        /* Percent Correct */
20672 +        %if "&EM_PROPERTY_PERCENTCORRECT" eq "Y" %then %do;
20673 +          textall=strip(textall)||"0A"x||"Percent Correct: "||"09"x||strip(put(percentcorrect, percent10.2))||"09"x||strip(put(vpercentcorrect, percent10.2));
20674 +        %end;
20676 +         /* Count */
20677 +         %if "&EM_PROPERTY_COUNT" eq "Y" %then %do;
20678 +          %if "&adjusted" eq "N" %then %do;
20679 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(N, best12.))||"09"x||strip(put(VN, best12.));
20680 +          %end;
20681 +          %else %do;
20682 +           textall=strip(textall)||"0A"x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )): "||"09"x||strip(put(NPRIORS,15.&EM_PROPERTY_SPLITPRECISION))||"09"x||strip(put(VNPRIORS,15.&EM_PROPERTY_SPLITPRECISION));
20683 +          %end;
20684 +         %end;
20685 +      %end;
20687 +      /* nodecolor */
20688 +      %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTEVENT" %then %do;
20689 +       %if &multipleTar ne Y %then %do;
20690 +        nodecolor=&predTarget;
20691 +       %end;
20692 +       %else %do;
20693 +         nodecolor=percentcorrect;
20694 +       %end;
20695 +      %end;
20696 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PERCENTCORRECT" %then %do;
20697 +        nodecolor=percentcorrect;
20698 +      %end;
20699 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "SINGLE" %then %do;
20700 +        nodecolor=1;
20701 +      %end;
20702 +      %else %if "&EM_PROPERTY_CLASSCOLORBY" eq "PROFITLOSS" %then %do;
20703 +        %if ((&em_profitflag eq 0) AND (&em_lossflag eq 0)) %then %do;
20704 +          nodecolor=percentcorrect;
20705 +        %end;
20706 +        %else %do;
20707 +          nodecolor=profitloss;
20708 +        %end;
20709 +      %end;
20711 +    end;
20712 +    %end;
20713 +    %if &em_intTarget eq Y %then %do;
20714 +     drop  PREDICTION  TARGET TARLEVEL
20715 +     %if &ValidFlag eq Y %then %do;
20716 +         VPREDICTION
20717 +     %end;
20718 +     ;
20719 +    %end;
20720 +    %if &em_classTarget eq Y %then %do;
20721 +     drop CATEGORY PROBTEXT  TARGET TARLEVEL STATVALUE
20722 +     %if &ValidFlag eq Y %then %do;
20723 +         VSTATVALUE
20724 +     %end;
20725 +     ;
20726 +    %end;
20728 +  run;
20730 +  /* add leaf index information to plotds - based on primary target only*/
20731 +  %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20732 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
20733 +      set &EM_USER_OUTSTATS;
20734 +      if ((statname="PROBABILITY"
20735 +      %if &validexist %then %do;
20736 +       or statname="VALID: PROBABILITY"
20737 +      %end;
20738 +      ) AND (CATEGORY="&TARGETEVENT")
20739 +      %if "&multipleTar" eq "Y" %then %do;
20740 +        AND (Target="%EM_TARGET")
20741 +      %end;
20742 +      );
20743 +    run;
20745 +    %if &validexist %then %do;
20746 +      proc sort data=tempprob; by node; run;
20747 +      %let vpredTarget = V%substr(&predTarget, 2);
20748 +      proc transpose data=tempprob out=tempprob(keep=NODE PROBABILITY VALID__PROBABILITY rename=(PROBABILITY=&predTarget VALID__PROBABILITY=&vpredTarget));
20749 +         by node;
20750 +         id statname;
20751 +      run;
20752 +    %end;
20753 +  %end;
20754 +  %else %do;
20755 +    data tempprob(keep=node statname statvalue rename=(statvalue=&predTarget));
20756 +      set &EM_USER_OUTSTATS;
20757 +      if ((statname="PREDICTION"
20758 +      %if &validexist %then %do;
20759 +       or statname="VALID: PREDICTION"
20760 +      %end;
20761 +      )
20762 +      %if "&multipleTar" eq "Y" %then %do;
20763 +        AND (Target="%EM_TARGET")
20764 +      %end;
20765 +      );
20766 +    run;
20767 +    %if &validexist %then %do;
20768 +      proc sort data=tempprob; by node; run;
20769 +      %let vpredTarget = V%substr(&predTarget, 2);
20770 +      proc transpose data=tempprob out=tempprob(keep=NODE PREDICTION VALID__PREDICTION rename=(PREDICTION=&predTarget VALID__PREDICTION=&vpredTarget));
20771 +         by node;
20772 +         id statname;
20773 +      run;
20774 +    %end;
20775 +  %end;
20777 +  proc sort data=tempprob; by node; run;
20778 +  data tempoutnodes;
20779 +    merge tempoutnodes tempprob;
20780 +    by node;
20781 +  run;
20783 +  proc sort data=tempoutnodes out=tempnodes; by descending &predTarget; run;
20784 +  data tempnodes;
20785 +    retain traintotal validtotal;
20786 +    set tempnodes(where=(leaf ne . ));
20787 +    tprob=round(&predTarget, .01);
20788 +    %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20789 +      percevent_train=round(tprob*100, .01);
20790 +    %end;
20791 +    %else %do;
20792 +      percevent_train=tprob;
20793 +    %end;
20795 +    perc_train=round((n/traintotal)*100, 0.01);
20796 +    /* leafwidth already has a *10 multiplier */
20797 +    if missing(perc_train) then perc_train = round(linkwidth*10, 0.01);
20799 +    %if &validexist %then %do;
20800 +      %let vpredTarget = V%substr(&predTarget,2);
20801 +      vprob=round(&vpredTarget, .01);
20802 +      %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20803 +        percevent_valid=round(vprob*100, .01);
20804 +      %end;
20805 +      %else %do;
20806 +        percevent_valid=vprob;
20807 +      %end;
20808 +      perc_valid=round((vn/validtotal)*100, .01);
20809 +    %end;
20811 +    index=_N_;
20812 +    keep node index tprob perc_train percevent_train
20813 +    %if &validexist %then %do;
20814 +        vprob percevent_valid perc_valid
20815 +    %end;
20816 +    ;
20817 +  run;
20818 +  proc sort data=tempnodes; by node; run;
20819 +  data &EM_USER_TREE_PLOT;
20820 +    merge &EM_USER_TREE_PLOT tempnodes %if &oldexists %then old_tree_plot;;
20821 +    by node;
20822 +    if missing(node) then delete;
20823 +    %if &oldexists %then %do;
20824 +      if missing(nodecolor) then nodecolor=oldnodecolor;
20825 +      drop oldnodecolor;
20826 +    %end;
20827 +    abovetext = compbl(abovetext);
20829 +    /* add variable labels */
20830 +    label textall      = "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))"
20831 +          parent       = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentId_vlabel, noquote))"
20832 +          node         = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeid_vlabel, noquote))"
20833 +          abovetext    = "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))"
20834 +          traintotal   = "%sysfunc(sasmsg(sashelp.dmine, rpt_traintotal_vlabel, noquote))"
20835 +          nodecolor    = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))"
20837 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20838 +            tprob        = "%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel, noquote, %nrbquote(&targetEvent)))"
20839 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel, noquote))"
20840 +            perc_train      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
20841 +          %end;
20842 +          %else %do;
20843 +            tprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"
20844 +            percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_train_vlabel, noquote))"
20845 +            perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel, noquote))"
20846 +          %end;
20847 +          index           = "%sysfunc(sasmsg(sashelp.dmine, meta_index_vlabel, noquote))"
20849 +          validtotal      = "%sysfunc(sasmsg(sashelp.dmine, rpt_validtotal_vlabel, noquote))"
20850 +          VN              = "%sysfunc(sasmsg(sashelp.dmine, rpt_validn_vlabel, noquote))"
20851 +          %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20852 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_vprob_vlabel, noquote, %nrbquote(&targetEvent)))"
20853 +            perc_valid      = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
20854 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_valid_vlabel, noquote))"
20855 +          %end;
20856 +          %else %do;
20857 +            vprob           = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel, noquote))"
20858 +            perc_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_valid_vlabel, noquote))"
20859 +            percevent_valid = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_int_valid_vlabel, noquote))"
20860 +          %end;
20861 +    ;
20862 +  run;
20864 +  /* delete temporary tables */
20865 +  proc datasets lib=work nolist;
20866 +    delete abovetext belowtext tempoutnodes tempmissing temp tempnodes tempstats;
20867 +  run;
20869 +%mend em_tree_makePlotDs;
20873 +%macro em_tree_report;
20875 +   /* report properties */
20876 +   %em_checkmacro(name=EM_PROPERTY_Precision, value=4, global=Y);
20877 +   %em_checkmacro(name=EM_PROPERTY_SplitPrecision, value=4, global=Y);
20878 +   %em_checkmacro(name=EM_PROPERTY_ClassColorBy, value=PERCENTCORRECT, global=Y);
20879 +   %em_checkmacro(name=EM_PROPERTY_IntColorBy, value=AVG, global=Y);
20880 +   %em_checkmacro(name=EM_PROPERTY_ShowNodeId, value=Y, global=Y);
20881 +   %em_checkmacro(name=EM_PROPERTY_ShowValid, value=Y, global=Y);
20882 +   %em_checkmacro(name=EM_PROPERTY_Pred, value=N, global=Y);
20883 +   %em_checkmacro(name=EM_PROPERTY_Target, value=ALL, global=Y);
20884 +   %em_checkmacro(name=EM_PROPERTY_Count, value=Y, global=Y);
20885 +   %em_checkmacro(name=EM_PROPERTY_PercentCorrect, value=N, global=Y);
20886 +   %em_checkmacro(name=EM_PROPERTY_ProfitLoss, value=NONE, global=Y);
20887 +   %em_checkmacro(name=EM_PROPERTY_AVG, value=Y, global=Y);
20888 +   %em_checkmacro(name=EM_PROPERTY_RASE, value=N, global=Y);
20890 +   %let validexist=0;
20891 +   %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
20892 +     %let validexist=1;
20893 +   %end;
20895 +   /* determine if multiple targets will be processed */
20896 +   %let em_tree_multipleTargets=N;
20897 +   %let em_tree_numTarget=1;
20898 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
20899 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
20900 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
20901 +         %let em_tree_multipleTargets=N;
20902 +      %end;
20903 +      %else %do;
20904 +        data _null_;
20905 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
20906 +          if eof then
20907 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
20908 +        run;
20910 +        %if &em_tree_numTarget gt 1 %then %do;
20911 +           %let em_tree_multipleTargets=Y;
20912 +        %end;
20913 +     %end;
20914 +   %end;
20916 +  %if "&em_tree_multipleTargets" eq "N" %then %do;
20918 +   /* variable importance */
20919 +   %EM_GETNAME(key=OUTIMPORT, type=DATA);
20920 +   %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
20922 +     /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
20923 +     /* and the columns may not be generated                                                                                 */
20924 +     %let em_tree_cvexists=;
20925 +     %let em_tree_surrexists=.;
20926 +     data _null_;
20927 +       set &EM_USER_OUTIMPORT (obs=2) end=eof;
20928 +       if eof then do ;
20929 +        call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
20930 +        call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
20931 +       end;
20932 +     run;
20934 +     data &EM_USER_OUTIMPORT;
20935 +         set &EM_USER_OUTIMPORT;
20936 +         /* format columns based on Precison value specified */
20937 +         format importance 15.&EM_PROPERTY_PRECISION
20938 +              %if &validexist %then %do;
20939 +                vimportance ratio 15.&EM_PROPERTY_PRECISION
20940 +              %end;
20941 +              %if "&EM_TREE_CVEXISTS" ne "." %then %do;
20942 +                cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
20943 +              %end;
20944 +         ;
20945 +     run;
20947 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title  , NOQUOTE))";
20948 +     proc print data=&EM_USER_OUTIMPORT
20949 +        %if "&EM_TREE_SURREXISTS" ne "." %then %do;
20950 +          (where=((nrules>0) OR (nsurrogates>0)))
20951 +        %end;
20952 +        %else %do;
20953 +           (where=(nrules>0))
20954 +        %end;
20955 +        label noobs
20956 +        ;
20957 +     run;
20958 +     title10;
20960 +   %end;
20962 +   /* Sequence */
20963 +   %EM_GETNAME(key=OUTSEQ, type=DATA);
20964 +   %EM_GETNAME(key=OUTOBSIMP, type=DATA);
20965 +   data _null_ ;
20966 +      set &EM_USER_outseq (obs=2) end=eof ;
20967 +      if eof then do ;
20968 +        call symput("em_tree_xase" , strip(put(_XASE_,best.))) ;
20969 +        call symput("em_tree_vase" , strip(put(_VASE_, best.)));
20970 +        call symput("em_tree_seq"  , strip(put(_SEQUENCE_, best.)));
20971 +        call symput("em_tree_vseq"  , strip(put(_VSEQUENCE_, best.)));
20972 +        call symput("em_tree_aprof" , strip(put(_APROF_, best.)));
20973 +        call symput("em_tree_aloss" , strip(put(_ALOSS_, best.)));
20974 +        call symput("em_tree_prior" , strip(put(_PASE_, best.)));
20975 +      end;
20976 +    run;
20978 +   %if %sysfunc(exist(&EM_USER_OUTSEQ)) eq 1 %then %do;
20979 +      data &EM_USER_OUTSEQ;
20980 +      %if (("&EM_PROPERTY_CV" eq "Y") AND ("&em_tree_xase" ne ".")) %then %do;
20981 +        set &EM_USER_OUTSEQ(rename=(_XASE_=_VASE_ _XMAX_=_VMAX_ _XSSE_=_VSSE_ _XRASE_=_VRASE_
20982 +        %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
20983 +           _XMISC_=_VMISC_
20984 +        %end;
20985 +        %if "&em_tree_aprof" ne "."  %then %do;
20986 +           _XAPROF_=_VAPROF_
20987 +           _XPROF_ = _VPROF_
20988 +        %end;
20989 +        %if "&em_tree_aloss" ne "."  %then %do;
20990 +           _XALOSS_=_VALOSS_
20991 +        %end;
20992 +        %if "&EM_TREE_PRIOR" ne "." %then %do;
20993 +           _XPASE_ = _VPASE_
20994 +           _XPMISC_ = _VPMISC_
20995 +        %end;
20997 +        ));
20998 +     %end;
20999 +     %else %do;
21000 +        set &EM_USER_OUTSEQ;
21001 +     %end;
21003 +     format _ASE_  _ASSESS_ _MAX_ _SSE_ _RASE_  15.&EM_PROPERTY_PRECISION
21004 +         %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21005 +            _MISC_   15.&EM_PROPERTY_PRECISION
21006 +         %end;
21007 +         %if "&EM_TREE_PRIOR" ne "." %then %do;
21008 +            _PASE_  15.&EM_PROPERTY_PRECISION
21009 +            _PMISC_ 15.&EM_PROPERTY_PRECISION
21010 +         %end;
21011 +         %if (("&EM_PROPERTY_CV" eq "Y") AND (("&em_tree_xase" ne ".") or ("&em_tree_vase" ne "."))) %then %do;
21012 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_ _COST_COMPLEXITY_ 15.&EM_PROPERTY_PRECISION
21013 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21014 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21015 +            %end;
21016 +            %if "&EM_TREE_PRIOR" ne "." %then %do;
21017 +              _VPASE_  15.&EM_PROPERTY_PRECISION
21018 +              _VPMISC_ 15.&EM_PROPERTY_PRECISION
21019 +            %end;
21020 +         %end;
21021 +         %if (("&EM_PROPERTY_CV" eq "N") AND &validexist) %then %do;
21022 +            _VASE_  _VASSESS_ _VMAX_ _VSSE_ _VRASE_  15.&EM_PROPERTY_PRECISION
21023 +            %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21024 +               _VMISC_ 15.&EM_PROPERTY_PRECISION
21025 +            %end;
21026 +         %end;
21027 +         %if "&em_tree_seq" ne "." %then %do;
21028 +           _SEQUENCE_ 15.&EM_PROPERTY_PRECISION
21029 +         %end;
21030 +         %if "&em_tree_vseq" ne "." %then %do;
21031 +           _VSEQUENCE_  15.&EM_PROPERTY_PRECISION
21032 +         %end;
21033 +         %if "&em_tree_aprof" ne "." %then %do;
21034 +           _APROF_ 15.&EM_PROPERTY_PRECISION
21035 +           _PROF_ 15.&EM_PROPERTY_PRECISION
21036 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21037 +             _VAPROF_ 15.&EM_PROPERTY_PRECISION
21038 +             _VPROF_ 15.&EM_PROPERTY_PRECISION
21039 +           %end;
21040 +         %end;
21041 +         %else %if "&em_tree_aloss" ne "." %then %do;
21042 +           _ALOSS_  15.&EM_PROPERTY_PRECISION
21043 +           %if (("&EM_PROPERTY_CV" eq "Y") OR &validexist) %then %do;
21044 +             _VALOSS_ 15.&EM_PROPERTY_PRECISION
21045 +           %end;
21046 +         %end;
21047 +      ;
21048 +    run;
21049 +   %end;
21051 +   /* Observation Based Importance */
21052 +   %if (  ("&EM_PROPERTY_OBSIMPORTANCE" eq "Y") AND ( %sysfunc(exist(&EM_USER_OUTOBSIMP)) eq 1)) %then %do;
21054 +      /* need to check for 0 obs */
21055 +      %let dsid = %sysfunc(open(&EM_USER_OUTOBSIMP));
21056 +      %let onobs=%sysfunc(attrn(&dsid,NOBS));
21057 +      %let rc=%sysfunc(close(&dsid));
21059 +      %if &onobs %then %do;
21060 +         proc sort data=&EM_USER_OUTOBSIMP; by _INPUT1_; run;
21061 +         proc sort data=&em_data_variableset out=_tempvars; by NAME; run;
21063 +         data &EM_USER_OUTOBSIMP;
21064 +           merge _tempvars(rename=(NAME=_INPUT1_) keep=NAME LABEL) &EM_USER_OUTOBSIMP(in=_a)  ;
21065 +           if _a;
21066 +           by _INPUT1_;
21067 +           format  _ASE_ _MAX_ _SSE_ _RASE_ 15.&EM_PROPERTY_PRECISION
21068 +                   %if "%EM_TARGET_LEVEL" ne "INTERVAL" %then %do;
21069 +                     _MISC_ 15.&EM_PROPERTY_PRECISION
21070 +                   %end;
21071 +                   ;
21072 +         run;
21073 +         %EM_REPORT(key=OUTOBSIMP, viewtype=DATA, block=MODEL, description=OBSIMPFIT, autodisplay=N);
21074 +      %end;
21075 +   %end;
21077 +  %end;
21079 +  /* create dataset to support tree diagram and icicle plot */
21080 +  %EM_GETNAME(key=TREE_PLOT, type=DATA);
21081 +  %em_tree_makePlotDs(multipleTar = &em_tree_multipleTargets);
21083 +  /* display tree diagram */
21084 +  %em_report(key=TREE_PLOT, viewtype=DTree, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL, abovetext=ABOVETEXT, belowText=BELOWTEXT,
21085 +             nodesize=N, nodecolor=NODECOLOR, linkwidth=LINKWIDTH,  block=MODEL, description=TREE, autodisplay=Y);
21087 +  /* display icicle diagram */
21088 +  %em_report(key=TREE_PLOT, viewtype=Icicle, id=NODE, parent=PARENT, nodetext=NODETEXT, tipText=TEXTALL,
21089 +             nodesize=N, nodecolor=NODECOLOR, block=MODEL, description=ICICLE, autodisplay=Y);
21091 +  /* Leaf Statistics Plot */
21092 +  %em_report(key=TREE_PLOT, viewtype=AREABAR, x=NODE, y=PERCEVENT_TRAIN, WIDTH=PERC_TRAIN,block=MODEL, description=VARWIDTH, autodisplay=N);
21094 +  /* print leaf information to output window */
21095 +  %if %sysfunc(exist(&EM_USER_TREE_PLOT)) eq 1 %then %do;
21097 +     proc sort data=&EM_USER_TREE_PLOT out=t;
21098 +       by descending N;
21099 +     run;
21101 +     /* determine if vn is present in the data -- combinations of decisions/partition/cv cause the proc not to generate this stat */
21102 +     %local vn;
21103 +     data _null_;
21104 +       set t (obs=2) end=eof;
21105 +       if eof then do;
21106 +         call symput("vn", strip(put(vn, best.)));
21107 +       end;
21108 +     run;
21110 +     data t;
21111 +       set t;
21112 +       label N="%sysfunc(sasmsg(sashelp.dmine, rpt_trainingobs_vlabel  , NOQUOTE))"
21113 +             DEPTH="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel  , NOQUOTE))"
21114 +       %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21115 +            tprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainaverage_vlabel  , NOQUOTE))"
21116 +            RASE="%sysfunc(sasmsg(sashelp.dmine, rpt_trainrase_vlabel  , NOQUOTE))"
21117 +       %end;
21118 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21119 +            VN="%sysfunc(sasmsg(sashelp.dmine, rpt_validobs_vlabel  , NOQUOTE))"
21120 +           %if "%EM_TARGET_LEVEL" eq "INTERVAL" %then %do;
21121 +              vprob = "%sysfunc(sasmsg(sashelp.dmine, rpt_validaverage_vlabel  , NOQUOTE))"
21122 +              VRASE="%sysfunc(sasmsg(sashelp.dmine, rpt_validrase_vlabel  , NOQUOTE))"
21123 +          %end;
21124 +       %end;
21125 +       ;
21126 +     run;
21128 +     /* determine if rase is found in t */
21129 +    %let dsid=%sysfunc(open(t,i));
21130 +    %let raseexists=%sysfunc(varnum(&dsid,RASE));
21131 +    %let rc=%sysfunc(close(&dsid));
21133 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_treeleafreport_title  , NOQUOTE))";
21134 +     proc print data=t noobs label;
21135 +       where tprob ne .;
21136 +       var node depth N tprob
21137 +       %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1)) %then %do;
21138 +         %if "&vn" ne "." %then %do;
21139 +           VN
21140 +         %end;
21141 +         vprob
21142 +       %end;
21143 +       %if &raseexists %then %do;
21144 +            RASE
21145 +            %if ( ("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) eq 1) AND ("&EM_PROPERTY_CV" eq "N")) %then %do;
21146 +              VRASE
21147 +            %end;
21148 +       %end;
21149 +       ;
21150 +     run;
21151 +     title10;
21152 +  %end;
21154 +  /* create plots that are done during training of node */
21155 +  /* display iterative plot, including reference line */
21156 +  %if "&em_Tree_multipleTargets" eq "N" %then %do;
21157 +   /* %if &nleaves eq  %then %do; */
21158 +      %EM_GETNAME(key=OUTTOPOLOGY, type=DATA);
21159 +      data _null_;
21160 +        set &EM_USER_OUTTOPOLOGY end=eof;
21161 +        if eof then do;
21162 +          call symput('nleaves', LEAF);
21163 +        end;
21164 +      run;
21165 +   /* %end; */
21167 +    %EM_REPORT(KEY=OUTSEQ, VIEWTYPE=ITERATIONPLOT, block=MODEL,  X=_NW_, XRef=&Nleaves, autodisplay=N, Description=SUBTREE);
21168 +    /*%EM_REPORT(view=1, Y=_ASE_); */
21169 +  %end;
21171 +  /* display leaf statistics */
21172 +  %EM_REPORT(KEY=TREE_PLOT, VIEWTYPE=RESPONSEBAR, block=MODEL, view=1, X=INDEX, Y1=tprob, y2=vprob, where=%nrbquote(INDEX ne .), autodisplay=Y, Description=LEAFSTATS);
21174 +  /* stats by node if multiple targets = Y */
21175 +  %EM_GETNAME(key=OUTSTATS, type=DATA);
21176 +  %if "&em_tree_multipleTargets" eq "Y" %then %do;
21177 +    data &EM_USER_OUTSTATS;
21178 +      set &EM_USER_OUTSTATS;
21180 +     * if STATNAME="TARGET" then delete;
21181 +     * if STATNAME="PREDICTION" and STATVALUE=. then delete;
21182 +      drop leaf;
21183 +    run;
21184 +    %EM_REPORT(key=OUTSTATS, viewtype=DATA, block=MODEL, description=OUTSTATS, autodisplay=N);
21186 +  %end;
21187 +  %else %do;
21188 +    /* add outstats and outdescribe to spk but not results */
21189 +    %EM_REPORT(viewtype=, key=OUTSTATS);
21190 +  %end;
21192 +%mend em_tree_report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE9_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 33 observations read from the data set EMWS3.TREE9_OUTIMPORT.
NOTE: The data set EMWS3.TREE9_OUTIMPORT has 33 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set EMWS3.TREE9_OUTIMPORT.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _XASE_ is uninitialized.
NOTE: Variable _SEQUENCE_ is uninitialized.
NOTE: Variable _VSEQUENCE_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _ALOSS_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS3.TREE9_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS3.TREE9_OUTSEQ.
NOTE: The data set EMWS3.TREE9_OUTSEQ has 11 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE _TYPE_='TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_CATEGORY_DM.
      WHERE (_TYPE_='PREDICTED') and (LEVEL='TEACHER');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE9_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='VARIABLE');
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE9_OUTRULES.
      WHERE (ROLE='PRIMARY') and (STAT='LABEL');
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK.BELOWTEXT2 has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: There were 0 observations read from the data set WORK.BELOWTEXT2.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.TREE9_OUTRULES.
      WHERE (ROLE='PRIMARY') and STAT in ('INTERVAL', 'NOMINAL', 'ORDINAL');
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      172:103   221:136   264:102   264:125   296:104   330:104   372:103   372:126   415:104
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      431:99
NOTE: There were 6 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 226 observations read from the data set EMWS3.TREE9_OUTRULES.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: The data set WORK.ABOVETEXT has 12 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE9_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.ABOVETEXT.
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.BELOWTEXT has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.BELOWTEXT.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 0 observations read from the data set EMWS3.TREE9_OUTSTATS.
      WHERE STATNAME='NPRIORS';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.TREE9_VARIABLESET.
      WHERE (ROLE='TARGET') and (LEVEL not = 'ORDINAL') and USE in ('D', 'Y');
NOTE: The data set WORK.TEMPTARMETA has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE9_OUTSTATS.
NOTE: The data set WORK.TEMPTARGETUSED has 351 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: 338 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPTARGETUSED has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE9_OUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 351 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: The data set WORK.TEMPINTERVAL has 0 observations and 7 variables.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPCLASS has 351 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable TARGET in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 351 observations read from the data set WORK.TEMPCLASS.
NOTE: The data set WORK.TEMPN has 26 observations and 3 variables.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 2 variables.
NOTE: The data set WORK.TEMPPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPVPROB has 156 observations and 3 variables.
NOTE: The data set WORK.TEMPPROFIT has 0 observations and 4 variables.
NOTE: The data set WORK.TEMPLOSS has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPN.
NOTE: The data set WORK.TEMPN has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 156 observations read from the data set WORK.TEMPVPROB.
NOTE: The data set WORK.TEMPPROB has 156 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: The variable target in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: The data set WORK.TEMPPREDICT has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 156 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1141:196
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPTARGETUSED.
NOTE: There were 13 observations read from the data set WORK.TEMPN.
NOTE: There were 13 observations read from the data set WORK.TEMPPREDICT.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set EMWS3.TREE9_TREE_PLOT has 13 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 351 observations read from the data set EMWS3.TREE9_OUTSTATS.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 26 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPPROB has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 13 observations read from the data set WORK.TEMPPROB.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: The data set WORK.TEMPNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
      WHERE leaf not = .;
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set WORK.TEMPNODES has 7 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE9_TREE_PLOT.
NOTE: There were 7 observations read from the data set WORK.TEMPNODES.
NOTE: The data set EMWS3.TREE9_TREE_PLOT has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.TEMP (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK.TEMPSTATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.ABOVETEXT (memtype=DATA).
NOTE: Deleting WORK.BELOWTEXT (memtype=DATA).
NOTE: Deleting WORK.TEMPOUTNODES (memtype=DATA).
NOTE: Deleting WORK.TEMPMISSING (memtype=DATA).
NOTE: Deleting WORK.TEMPNODES (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS3.TREE9_TREE_PLOT.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.T.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.T.
NOTE: The data set WORK.T has 13 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.T.
      WHERE tprob not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      306:141
NOTE: There were 13 observations read from the data set EMWS3.TREE9_OUTTOPOLOGY.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 662 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 662 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
21193
21194  *------------------------------------------------------------*;
21195  * End REPORT: Tree9;
21196  *------------------------------------------------------------*;
 
21197  /* Reset EM Options */
21198  options formchar="|----|+|---+=|-/\<>*";
21199  options nocenter ls=256 ps=10000;
21200  goptions reset=all device=GIF NODISPLAY;
 
21201  proc sort data=WORK.EM_USER_REPORT;
21202  by ID VIEW;
21203  run;
 
NOTE: There were 794 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 794 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21204  proc sort data=EMWS3.TextCluster9_CMeta_TRAIN out=WORK.SUBSETINMETA;
21205  by NAME;
21206  run;
 
NOTE: There were 47 observations read from the data set EMWS3.TEXTCLUSTER9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 47 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21207  proc sort data=EMWS3.Tree9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
21208  by NAME;
21209  run;
 
NOTE: There were 47 observations read from the data set EMWS3.TREE9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 47 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21210  data WORK.ASSESS_META;
21211  merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
21212  by NAME;
21213  run;
 
NOTE: There were 47 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 47 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 47 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21214  data EM_temp_assessMeta;
21215  set EMWS3.Tree9_CMeta_TRAIN;
21216  where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
21217  run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21218  data EM_temp_assessdata;
21219  set EMWS3.Tree9_TRAIN(keep=
21220  F_Category
21221  I_Category
21222  P_CategoryADVOCATE
21223  P_CategoryBUSINESS_DEVELOPMENT
21224  P_CategoryCONSULTANT
21225  P_CategoryDESIGNER
21226  P_CategoryDIGITAL_MEDIA
21227  P_CategoryFITNESS
21228  P_CategoryHEALTHCARE
21229  P_CategoryHR
21230  P_CategoryINFORMATION_TECHNOLOGY
21231  P_CategoryOTHER
21232  P_CategorySALES
21233  P_CategoryTEACHER
21234  Q_CategoryADVOCATE
21235  Q_CategoryBUSINESS_DEVELOPMENT
21236  Q_CategoryCONSULTANT
21237  Q_CategoryDESIGNER
21238  Q_CategoryDIGITAL_MEDIA
21239  Q_CategoryFITNESS
21240  Q_CategoryHEALTHCARE
21241  Q_CategoryHR
21242  Q_CategoryINFORMATION_TECHNOLOGY
21243  Q_CategoryOTHER
21244  Q_CategorySALES
21245  Q_CategoryTEACHER
21246  R_CategoryADVOCATE
21247  R_CategoryBUSINESS_DEVELOPMENT
21248  R_CategoryCONSULTANT
21249  R_CategoryDESIGNER
21250  R_CategoryDIGITAL_MEDIA
21251  R_CategoryFITNESS
21252  R_CategoryHEALTHCARE
21253  R_CategoryHR
21254  R_CategoryINFORMATION_TECHNOLOGY
21255  R_CategoryOTHER
21256  R_CategorySALES
21257  R_CategoryTEACHER
21258  U_Category
21259  V_CategoryADVOCATE
21260  V_CategoryBUSINESS_DEVELOPMENT
21261  V_CategoryCONSULTANT
21262  V_CategoryDESIGNER
21263  V_CategoryDIGITAL_MEDIA
21264  V_CategoryFITNESS
21265  V_CategoryHEALTHCARE
21266  V_CategoryHR
21267  V_CategoryINFORMATION_TECHNOLOGY
21268  V_CategoryOTHER
21269  V_CategorySALES
21270  V_CategoryTEACHER
21271  _WARN_
21272  Category
21273  );
21274  run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 674 observations read from the data set EMWS3.TEXTCLUSTER9_TRAIN.
NOTE: There were 674 observations read from the data set EMWS3.TREE9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 674 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
25556   data EM_temp_assessMeta;
25557   set EMWS3.Tree9_CMeta_TRAIN;
25558   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
25559   run;
 
NOTE: There were 52 observations read from the data set EMWS3.TREE9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 52 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25560   data EM_temp_assessdata;
25561   set EMWS3.Tree9_VALIDATE(keep=
25562   F_Category
25563   I_Category
25564   P_CategoryADVOCATE
25565   P_CategoryBUSINESS_DEVELOPMENT
25566   P_CategoryCONSULTANT
25567   P_CategoryDESIGNER
25568   P_CategoryDIGITAL_MEDIA
25569   P_CategoryFITNESS
25570   P_CategoryHEALTHCARE
25571   P_CategoryHR
25572   P_CategoryINFORMATION_TECHNOLOGY
25573   P_CategoryOTHER
25574   P_CategorySALES
25575   P_CategoryTEACHER
25576   Q_CategoryADVOCATE
25577   Q_CategoryBUSINESS_DEVELOPMENT
25578   Q_CategoryCONSULTANT
25579   Q_CategoryDESIGNER
25580   Q_CategoryDIGITAL_MEDIA
25581   Q_CategoryFITNESS
25582   Q_CategoryHEALTHCARE
25583   Q_CategoryHR
25584   Q_CategoryINFORMATION_TECHNOLOGY
25585   Q_CategoryOTHER
25586   Q_CategorySALES
25587   Q_CategoryTEACHER
25588   R_CategoryADVOCATE
25589   R_CategoryBUSINESS_DEVELOPMENT
25590   R_CategoryCONSULTANT
25591   R_CategoryDESIGNER
25592   R_CategoryDIGITAL_MEDIA
25593   R_CategoryFITNESS
25594   R_CategoryHEALTHCARE
25595   R_CategoryHR
25596   R_CategoryINFORMATION_TECHNOLOGY
25597   R_CategoryOTHER
25598   R_CategorySALES
25599   R_CategoryTEACHER
25600   U_Category
25601   V_CategoryADVOCATE
25602   V_CategoryBUSINESS_DEVELOPMENT
25603   V_CategoryCONSULTANT
25604   V_CategoryDESIGNER
25605   V_CategoryDIGITAL_MEDIA
25606   V_CategoryFITNESS
25607   V_CategoryHEALTHCARE
25608   V_CategoryHR
25609   V_CategoryINFORMATION_TECHNOLOGY
25610   V_CategoryOTHER
25611   V_CategorySALES
25612   V_CategoryTEACHER
25613   _WARN_
25614   Category
25615   );
25616   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS3.TREE9_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
NOTE: There were 405 observations read from the data set EMWS3.TEXTCLUSTER9_VALIDATE.
NOTE: There were 405 observations read from the data set EMWS3.TREE9_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 405 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
29907   %let _cn = %sysfunc(getoption(CENTER));
29908   options nocenter;
29909   proc print data=EMWS3.Tree9_EMREPORTFIT noobs label;
29910   var STAT LABEL TRAIN
29911   VALIDATE
29912   TEST
29913   ;
29914   by TARGET TARGETLABEL;
29915   title9 ' ';
29916   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
29917   run;
 
NOTE: There were 8 observations read from the data set EMWS3.TREE9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
29918   title10;
29919   options &_cn;
 
29920   proc sort data=EMWS3.Tree9_EMCLASSIFICATION nothreads;
29921   by DATAROLE TARGET TARGETLABEL;
29922   run;
 
NOTE: There were 96 observations read from the data set EMWS3.TREE9_EMCLASSIFICATION.
NOTE: The data set EMWS3.TREE9_EMCLASSIFICATION has 96 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29923   %let _cn = %sysfunc(getoption(CENTER));
29924   options nocenter;
29925   proc print data=EMWS3.Tree9_EMCLASSIFICATION noobs label;
29926   var from into pct_row pct_col count percent
29927   ;
29928   by DATAROLE TARGET TARGETLABEL;
29929   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
29930   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
29931   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
29932   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
29933   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
29934   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
29935   where _TYPE_='PREDICTION';
29936   title9 ' ';
29937   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
29938   run;
 
NOTE: There were 96 observations read from the data set EMWS3.TREE9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29939   title9;
29940   title10;
29941   options &_cn;
 
29942   %let _cn = %sysfunc(getoption(CENTER));
29943   options nocenter;
29944   data EMWS3.Tree9_EMEVENTREPORT;
29945   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT 8;
29946   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))" TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
29946 ! FALSEEVENT
29947   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
29948      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
29949   FALSEEVENT=0;
29950   FALSENEVENT=0;
29951   TRUEEVENT=0;
29952   TRUENEVENT=0;
29953   set EMWS3.Tree9_EMEVENTREPORT;
29954   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE9_EMEVENTREPORT.
NOTE: The data set EMWS3.TREE9_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29955   proc print data=EMWS3.Tree9_EMEVENTREPORT noobs label;
29956   title9 ' ';
29957   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
29958   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
29959   run;
 
NOTE: There were 2 observations read from the data set EMWS3.TREE9_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29960   title10;
29961   options &_cn;
 
29962   proc datasets library=EMWS3 nolist;
29963   modify Tree9_EMRANK;
29964   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
29965   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
29966   run;
 
NOTE: MODIFY was successful for EMWS3.TREE9_EMRANK.DATA.
29967   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
29968   %let _cn = %sysfunc(getoption(CENTER));
29969   options nocenter;
29970   proc print data=EMWS3.Tree9_EMRANK label noobs;
29971   var
29972   decile gain lift liftc resp respc N _meanP_;
29973   by
29974   notsorted DATAROLE
29975   notsorted TARGET
29976   notsorted TARGETLABEL
29977   ;
29978   title9 ' ';
29979   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
29980   run;
 
NOTE: There were 40 observations read from the data set EMWS3.TREE9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29981   title10;
29982   options &_cn;
 
29983   proc datasets library=EMWS3 nolist;
29984   modify Tree9_EMSCOREDIST;
29985   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
29986   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
29987   run;
 
NOTE: MODIFY was successful for EMWS3.TREE9_EMSCOREDIST.DATA.
29988   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
 
 
